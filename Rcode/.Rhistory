wals <- read.csv("/home/chris/Dropbox/100LC/LangData/WALS/WALS_languages.csv", header = T)
#Glottolog information
glotto.languages <- read.csv("/home/chris/Dropbox/100LC/LangData/Glottolog3.3/glottolog3.3_languages_and_dialects_geo.csv", header = T)
glotto.languoids <- read.csv("/home/chris/Dropbox/100LC/LangData/Glottolog3.3/glottolog3.3_languoid.csv", header = T)
head(wals)
head(glotto.languages)
head(glotto.languoids)
wals.100 <- wals[wals$sample.100 == "True", ]
head(wals.100)
wals.100.short <- wals.100[, 1:8]
head(wals.100.short)
colnames(wals.100.short) <- c("wals.code", "glottocode", "name_wals", "latitude_wals", "longitude_wals",
"macroarea_wals", "genus_wals", "family_wals")
head(wals.100.short)
glotto.lang.100 <- glotto.languages[glotto.languages$glottocode %in% wals.100.short$glottocode, ]
head(glotto.lang.100)
nrow(glotto.lang.100)
head(glott.languoids)
head(glotto.languoids)
glotto.languoid.100 <- glotto.languoids[glotto.languoids$id %in% wals.100.short$glottocode, ]
head(glotto.languoid.100)
nrow(glotto.languoid.100)
glotto.languoids.100 <- glotto.languoids[glotto.languoids$id %in% wals.100.short$glottocode, ]
glotto.languoids.100 <- glotto.languoids[glotto.languoids$id %in% wals.100.short$glottocode, ]
#select particular columns of languoid data frame
keeps <- c("id", "family_id", "status")
glotto.languoids.100.short <- glotto.languoids.100[keeps]
glotto.languoids.100.short
head(glotto.lang.100)
head(glotto.languoids.100.short)
glotto.lang.languoids.100 <- merge(glotto.lang.100, glotto.languoids.100.short, by.x = "glottocode", by.y = "id")
head(glotto.lang.languoids)
head(glotto.lang.languoids.100)
head(glotto.lang.languoids.100)
glotto.lang.languoids.100
glotto.families <- glotto.languoids[glotto.languoids$level == "family" & glotto.languoids$family_id == "",]
keeps <- c("id", "name")
glotto.families.short <- glotto.families[keeps]
#rename column "name"
colnames(glotto.families.short) <- c("id", "top_level_family")
head(glotto.families.short)
glotto.langInfo.withFamID <- glotto.lang.languoids.100[glotto.lang.languoids.100$family_id != "",]
glotto.langInfo.noFamID <- glotto.lang.languoids.100[glotto.lang.languoids.100$family_id == "",]
glotto.langInfo.fam <- merge(glotto.langInfo.withFamID, glotto.families.short, by.x = "family_id", by.y ="id")
glotto.langInfo.fam
glotto.langInfo.noFamID$top_level_family <- rep("NA", nrow(glotto.langInfo.noFamID))
glotto.langInfo.noFam
glotto.langInfo.noFamID
glotto.langInfo.100 <- rbind(langInfo.fam, langInfo.noFamID)
glotto.langInfo.100 <- rbind(glotto.langInfo.fam, glotto.langInfo.noFamID)
glotto.langInfo.100
colnames(glotto.langInfo.100) <- c("family_id", "glottocode", "name_glotto", "iso_639_3", "level", "macroarea_glotto", "latitude_glotto", "longitude_glotto", "status", "top_level_family")
glotto.langInfo.100
head(wals.100.short)
head(glotto.langInfo.100)
langInfo.100 <- cbind(wals.100.short, glotto.langInfo.100)
head(langInfo.100)
langInfo.100 <- merge(wals.100.short, glotto.langInfo.100, by = "glottocode")
head(langInfo.100)
langInfo.100 <- langInfo.100[ , c(11, 1, 2, 10, 3, 12, 16, 9, 17, 7, 8, 13, 6, 14, 15, 4, 5)]
head(langInfo.100)
write.csv(file = "~/Dropbox/100LC/LangData/langInfo.100.csv", langInfo.100, row.names = F)
file.choose()
lang100 <- read.csv("~/Dropbox/100LC/LangData/langInfo_100.csv", header = T)
head(lang100)
unique(lang100$iso_639_3)
unique(lang100$glottocode)#100
unique(lang100$top_level_family)#100
unique(lang100$genus_wals)#
unique(lang100$family_wals)#
unique(lang100$macroarea_glottolog)#
unique(lang100$macroarea_glotto)#
world <- map_data("world")
lang100_map <- ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group), fill = "grey90", col = "grey") +
geom_point(data = lang100, aes(x = longitude_glotto, y = latitude_glotto), colour = "red", alpha = 0.8, size = 1) +
geom_point(data = lang100, aes(x = longitude_wals, y = latitude_wals), colour = "green", alpha = 0.8, size = 1) +
scale_y_continuous(limits = c(-65, 80)) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
geom_hline(aes(yintercept = 0), colour = "grey", size = 1, linetype = 2) +
labs(x = "longitude", y = "latitude") +
theme_bw() +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
title=element_text(size = 12),
legend.title = element_text(size = 10),
legend.position = "bottom")
lang100_map
library(ggplot2)
library(ggmap)
lang100 <- read.csv("~/Dropbox/100LC/LangData/langInfo_100.csv", header = T)
#SIMPLE STATS
unique(lang100$iso_639_3)#100
unique(lang100$glottocode)#100
unique(lang100$top_level_family)#60
unique(lang100$genus_wals)#94
unique(lang100$family_wals)#68
unique(lang100$macroarea_glotto)#6
#WORLD MAP
world <- map_data("world")
lang100_map <- ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group), fill = "grey90", col = "grey") +
geom_point(data = lang100, aes(x = longitude_glotto, y = latitude_glotto), colour = "red", alpha = 0.8, size = 1) +
geom_point(data = lang100, aes(x = longitude_wals, y = latitude_wals), colour = "green", alpha = 0.8, size = 1) +
scale_y_continuous(limits = c(-65, 80)) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
geom_hline(aes(yintercept = 0), colour = "grey", size = 1, linetype = 2) +
labs(x = "longitude", y = "latitude") +
theme_bw() +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
title=element_text(size = 12),
legend.title = element_text(size = 10),
legend.position = "bottom")
lang100_map
world <- map_data("world")
lang100_map <- ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group), fill = "grey90", col = "grey") +
geom_point(data = lang100, aes(x = longitude_glotto, y = latitude_glotto), colour = "red", alpha = 0.8, size = 2, shape = 1) +
geom_point(data = lang100, aes(x = longitude_wals, y = latitude_wals), colour = "green", alpha = 0.8, size = 2) +
scale_y_continuous(limits = c(-65, 80)) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
geom_hline(aes(yintercept = 0), colour = "grey", size = 1, linetype = 2) +
labs(x = "longitude", y = "latitude") +
theme_bw() +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
title=element_text(size = 12),
legend.title = element_text(size = 10),
legend.position = "bottom")
lang100_map
world <- map_data("world")
lang100_map <- ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group), fill = "grey90", col = "grey") +
geom_point(data = lang100, aes(x = longitude_glotto, y = latitude_glotto), colour = "red", alpha = 0.8, size = 3, shape = 1) +
geom_point(data = lang100, aes(x = longitude_wals, y = latitude_wals), colour = "green", alpha = 0.8, size = 2) +
scale_y_continuous(limits = c(-65, 80)) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
geom_hline(aes(yintercept = 0), colour = "grey", size = 1, linetype = 2) +
labs(x = "longitude", y = "latitude") +
theme_bw() +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
title=element_text(size = 12),
legend.title = element_text(size = 10),
legend.position = "bottom")
lang100_map
ggsave("~/Dropbox/100LC/Maps/worldmap_locations.pdf"", map_H, dpi = 300, scale = 1, device = cairo_pdf)
ggsave("~/Dropbox/100LC/Maps/worldmap_locations.pdf", lang100_map, dpi = 300, scale = 1, device = cairo_pdf)
head(lang100)
world <- map_data("world")
status_map <- ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group),
fill = "grey90", col = "grey") +
geom_point(data = lang100, aes(x = longitude_glotto, y = latitude_glotto, colour = status),
alpha = 0.8, size = 3, shape = 1) +
scale_y_continuous(limits = c(-65, 80)) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
geom_hline(aes(yintercept = 0), colour = "grey", size = 1, linetype = 2) +
labs(x = "longitude", y = "latitude") +
theme_bw() +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
title=element_text(size = 12),
legend.title = element_text(size = 10),
legend.position = "bottom")
status_map
world <- map_data("world")
status_map <- ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group),
fill = "grey90", col = "grey") +
geom_point(data = lang100, aes(x = longitude_glotto, y = latitude_glotto, colour = status),
alpha = 0.8, size = 3) +
scale_y_continuous(limits = c(-65, 80)) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
geom_hline(aes(yintercept = 0), colour = "grey", size = 1, linetype = 2) +
labs(x = "longitude", y = "latitude") +
theme_bw() +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
title=element_text(size = 12),
legend.title = element_text(size = 10),
legend.position = "bottom")
status_map
status_map <- ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group),
fill = "grey90", col = "grey") +
geom_point(data = lang100, aes(x = longitude_glotto, y = latitude_glotto, colour = status),
alpha = 0.8, size = 2) +
scale_y_continuous(limits = c(-65, 80)) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
geom_hline(aes(yintercept = 0), colour = "grey", size = 1, linetype = 2) +
labs(x = "longitude", y = "latitude") +
theme_bw() +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
title=element_text(size = 12),
legend.title = element_text(size = 10),
legend.position = "bottom")
status_map
world <- map_data("world")
status_map <- ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group),
fill = "grey90", col = "grey") +
geom_point(data = lang100, aes(x = longitude_glotto, y = latitude_glotto, colour = status),
alpha = 0.8, size = 2) +
scale_y_continuous(limits = c(-65, 80)) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
geom_hline(aes(yintercept = 0), colour = "grey", size = 1, linetype = 2) +
labs(x = "longitude", y = "latitude") +
theme_bw() +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
title=element_text(size = 12),
legend.title = element_text(size = 12),
legend.position = "bottom")
status_map
world <- map_data("world")
status_map <- ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group),
fill = "grey90", col = "grey") +
geom_point(data = lang100, aes(x = longitude_glotto, y = latitude_glotto, colour = status),
alpha = 0.8, size = 2) +
scale_y_continuous(limits = c(-65, 80)) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
geom_hline(aes(yintercept = 0), colour = "grey", size = 1, linetype = 2) +
labs(x = "longitude", y = "latitude") +
theme_bw() +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
title = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
legend.position = "bottom")
status_map
world <- map_data("world")
status_map <- ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group),
fill = "grey90", col = "grey") +
geom_point(data = lang100, aes(x = longitude_glotto, y = latitude_glotto, colour = status),
alpha = 0.8, size = 3) +
scale_y_continuous(limits = c(-65, 80)) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
geom_hline(aes(yintercept = 0), colour = "grey", size = 1, linetype = 2) +
labs(x = "longitude", y = "latitude") +
theme_bw() +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
title = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
legend.position = "bottom")
status_map
ggsave("~/Dropbox/100LC/Maps/worldmap_status.pdf", status_map, dpi = 300, scale = 1, device = cairo_pdf)
world <- map_data("world")
status_map <- ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group),
fill = "grey90", col = "grey") +
geom_point(data = lang100, aes(x = longitude_glotto, y = latitude_glotto, colour = top_level_family),
alpha = 0.8, size = 3) +
scale_y_continuous(limits = c(-65, 80)) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
geom_hline(aes(yintercept = 0), colour = "grey", size = 1, linetype = 2) +
labs(x = "longitude", y = "latitude") +
theme_bw() +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
title = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
legend.position = "bottom")
status_map
world <- map_data("world")
family_map <- ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group),
fill = "grey90", col = "grey") +
geom_point(data = lang100, aes(x = longitude_glotto, y = latitude_glotto, colour = top_level_family),
alpha = 0.8, size = 3) +
scale_y_continuous(limits = c(-65, 80)) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
geom_hline(aes(yintercept = 0), colour = "grey", size = 1, linetype = 2) +
labs(x = "longitude", y = "latitude") +
theme_bw() +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
title = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12))
family_map
world <- map_data("world")
macroarea_map <- ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group),
fill = "grey90", col = "grey") +
geom_point(data = lang100, aes(x = longitude_glotto, y = latitude_glotto, colour = macroarea_glotto),
alpha = 0.8, size = 3) +
scale_y_continuous(limits = c(-65, 80)) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
geom_hline(aes(yintercept = 0), colour = "grey", size = 1, linetype = 2) +
labs(x = "longitude", y = "latitude") +
theme_bw() +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
title = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12))
macroarea_map
ggsave("~/Dropbox/100LC/Maps/worldmap_family.pdf", macroarea_map, dpi = 300, scale = 1, device = cairo_pdf)
