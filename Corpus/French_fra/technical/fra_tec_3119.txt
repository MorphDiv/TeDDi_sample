# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Suivant

Identique à fgets() mais fgetcsv() analyse la ligne qu'il lit et recherche les champs CSV, qu 'il va retourner dans un tableau les contenant.
Le délimiteur de champs delimiter est la virgule, à moins que vous ne fournissiez un troisième argument.
fp doit être un pointeur valide, et avoir été correctement ouvert par fopen(), popen(), ou fsockopen().
length doit être plus grand que la plus grande ligne trouvée dans un fichier CSV (en comptant les caractères de fin de ligne).
fgetcsv() retourne FALSE en cas d 'erreur, ou en cas de fin du fichier.
Note: une ligne vide dans un fichier CSV sera retournée dans le tableau comme une chaîne vide, et ne sera pas traitée comme une erreur.
Exemple 1.
Exemple avec fgetcsv()
?php $row = 1; $fp = fopen ("test.csv" ,"r"); while ($data = fgetcsv ($fp, 1000, ",")) {$num = count ($data); print" p $num champs dans la ligne $row: br "; $row++; for ($c=0; $c $num; $c++) {print $data[$c]." br ";}} fclose ($fp);?
Précédent
Sommaire
Suivant

Niveau supérieur
