# language_name_wals:	French
# language_name_glotto:	French
# iso639_3:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Fonction
Désassembleur
Code breakpoint
Commande gdb envoyée quand le débogueur n'est pas en cours d'exécution La commande était & #160;: %1
Erreur interne
Commande de débogueur non valable %1
Commande de débogueur non valable
S'est arrêté avec le signal %1
Le programme a reçu le signal %1 (%2)
Le programme a reçu le signal %1 (%2)
Avertissement
Exécution du programme
GDB ne peut pas utiliser les périphériques « & #160; tty* & #160; » ou « & #160; pty* & #160; ». Vérifiez les paramètres de « & #160; / dev/ tty* & #160; » et « & #160; / dev/ pty* & #160; » En tant que superutilisateur, vous pouvez être amené à exécuter « & #160; chmod ug+rw & #160; » pour les périphériques « & #160; tty* & #160; » et « & #160; pty* & #160; » et/ ou ajouter l'utilisateur au groupe « & #160; tty & #160; » en saisissant la commande « & #160; usermod -G tty nom_utilisateur & #160; ».
L'application n'existe pasL'application que vous tentez de déboguer, %1 n'existe pas. Vérifiez que vous avez indiqué l'application correcte dans la configuration du débogueur.
L'application n'existe pas
Impossible de démarrer l'application « & #160; %1 & #160; ». Le bit d'exécution n'est pas défini sur l'application. Essayez de reconstruire le projet ou changez les droits d'accès à la main.
Impossible de démarrer l' application
Erreur du débogueurLe débogueur a signalé l'erreur suivante & #160;: %1
Erreur du débogueur
État du débogueur & #160;: %1
Classe de commandes actuelle & #160;: « & #160; %1 & #160; » Texte de la commande actuelle & #160;: « & #160; %2 & #160; » Texte original de la commande actuelle & #160;: « & #160; %3 & #160; »
État du débogueur
Affichage du code machineUne vue du code machine dans votre exécutable en cours, avec l'instruction actuelle surlignée. Vous pouvez exécuter les instructions pas à pas à l'aide des boutons de la barre d'outils du débogueur de l'instruction « & #160; Avancer d'une ligne & #160; » (step over) et de l'instruction « & #160; Pas à pas en rentrant & #160; » (step into).
Vue du désassemblage
Adresse
Décalage
Instruction
Impossible de trouver le shell de débogage « & #160; %1 & #160; ».
Impossible de trouver le shell de débogage Internal debugger error
Le composant de débogage a rencontré un problème interne en traitant la réponse de gdb. Veuillez envoyer un rapport de bogue.
L'exception est & #160;: %1 La réponse de MI est & #160;: %2
Erreur interne du débogueur
Le processus s'est terminé
Impossible de démarrer le débogueur. Impossible d'exécuter « & #160; %1 & #160; ». Vérifiez que le nom de l'emplacement est spécifié correctement.
Impossible de démarrer le débogueur
État du débogueur
New breakpoint
Data breakpoint
Data read breakpoint
Désassembleur
Désassembleur
Activer le traçage
Activer le traçage
Sortie de GDB
Sortie de GDB Affiche toutes les commandes « & #160; gdb & #160; » en cours d'exécution. Vous pouvez également émettre n'importe quelle autre commande « & #160; gdb & #160; » pendant le débogage.
Commande pour & GDB & #160;:
Faire une pause dans l'exécution de l'application pour saisir des commandes dans GDB
Afficher les commandes internes
Vérifie si les commandes émises en interne par KDevelop seront affichées ou non. Cette option affectera uniquement les commandes futures, elle n'ajoutera ou ne supprimera pas de la vue les commandes déjà émises.
Tout copier
Sentinelles
Récent
Attacher au processus
Afficheurs du débogueur
Évaluer & #160;: %1
Sentinelles
Tout copier
Configuration du débogueur
Exécutable de débogage & #160;:
Exécutable « & #160; gdb & #160; »
Pour lancer le binaire « & #160; gdb & #160; » à partir de $PATH, laissez ce champ vide. Pour lancer un « & #160; gdb & #160; » particulier, par exemple pour une architecture différente, saisissez ici le nom de l'exécutable. Vous pouvez soit exécuter « & #160; gdb & #160; » depuis $PATH mais avec un nom différent (par exemple « & #160; arm-gdb & #160; » en saisissant son nom ici, soit spécifier l'emplacement complet de l'exécutable « & #160; gdb & #160; ».
Lancer « & #160; gdb & #160; » dans un shell spécial (principalement pour les projets « & #160; Automake & #160; »)
Si vous voulez que « & #160; gdb & #160; » soit exécuté par un shell ou un outil spécial, indiquez -le ici. Le principal cas d'utilisation concerne les projets reposant sur « & #160; Automake & #160; », où l'application n'est en fait qu'un script, et « & #160; libtool & #160; » est nécessaire pour le faire s'exécuter dans « & #160; gdb & #160; ».
& Shell de débogage & #160;:
Si vous voulez que « & #160; gdb & #160; » soit exécuté par un shell ou un outil spécial, indiquez -le ici. Le principal cas d'utilisation concerne les projets reposant sur « & #160; Automake & #160; », où l'application n'est en fait qu'un script, et « & #160; libtool & #160; » est nécessaire pour le faire s'exécuter dans « & #160; gdb & #160; ».
Options
L'affichage des membres statiques ralentit le débogueur GDB lorsqu'il doit produire des données dans KDE et Qt. Cette option peut changer la « & #160; signature & #160; » des données sur lesquelles repose « & #160; QString & #160; » et les classes afférentes. Si devez déboguer ces valeurs, cochez cette option.
Afficher les & membres statiques
Lorsque vous affichez les noms désassemblés vous pouvez choisir d'afficher les noms correspondant aux méthodes. Cependant, ils seront plus difficiles à lire.
Afficher les noms & désassemblés
Si GDB n'a pas identifié une bibliothèque qui sera chargée via « & #160; dlopen & #160; », alors il refusera de définir un point d'arrêt dans ce code. Avec cette option, GDB s'arrêtera au chargement d'une bibliothèque et donc essaiera de définir les points d'arrêt en attente. Consultez la documentation pour plus de détails sur ce comportement. Laissez cette option décochée si vous n'ouvrez pas de bibliothèque via « & #160; dlopen & #160; ».
Essayer de définir des points d'arrêt au chargement des bibliothèques
Utiliser la barre d'outils flottante. Cette barre d'outils reste toujours visible au-dessus de toutes les fenêtres. Ainsi, si l'application couvre KDevelop, vous avez le contrôle de cette application grâce à cette petite barre d'outils. Elle peut aussi être insérée dans le tableau de bord. Cette barre d'outils complète celle de KDevelop.
Afficher la barre d'outils & flottante
Cette commande permet de saisir des entrées sur le terminal lorsque l'application contient du code d'entrée sur terminal (c'est-à-dire les fonctions « & #160; cin & #160; », « & #160; fgets & #160; », etc.). Si vous utilisez des entrées sur le terminal dans votre application, cochez cette option, sinon laissez -la décochée.
Afficher un & terminal séparé pour les E/ S de l' application
Ce script est prévu pour les commandes qui sont nécessaires pour la connexion avec l'exécutable distant. Attendre 5 secondes attendre le lancement du programme distant Cible distante... connecter au débogueur distant Continuer [optionnel] lance le débogage jusqu'au premier point d' arrêt
Débogage à distance
Script gdb de & configuration & #160;:
Script configure de gdb
Ce script est lu par « & #160; gdb & #160; » lorsque le débogage démarre. Shell script to be executed at run time
Lancer le script shell & #160;:
Script de démarrage de l'application distante
Ce script shell est exécuté après que le script de configuration de « & #160; gdb & #160; » a été lu par gdb. Lorsqu'on débogue à distance, ce script est destiné à véritablement démarrer le processus distant. [L'exécutable à déboguer est censé pouvoir être atteint sur la cible, peut-être en le téléchargeant comme étape ultime de la construction] 1) Trouver un moyen pour exécuter une commande à distance - rsh, ssh, telnet... 2a) Exécuter « & #160; gdbserver... application & #160; » sur la cible ou, si votre exécutable contient la partie de code nécessaire à « & #160; gdb & #160; » 2b) Exécuter « & #160; application & #160; » sur la cible. Gdb script to be executed at run time.
Lancer le script pour & gdb & #160;:
Script pour se connecter avec l'application distante
Ce script est lu par GDB après que les deux scripts précédents ont été exécutés. Ce script est prévu pour les commandes qui sont nécessaires pour la connexion avec l'exécutable distant. shell sleep 5 attendre le lancement du programme distant cible distante... connecter au débogueur distant continue [optionnel] lance le débogage jusqu'au premier point d'arrêt.
Configuration du traçage
Activer le traçage Le traçage est un mécanisme permettant d'afficher automatiquement la valeur des expressions choisies et de continuer l'exécution lorsqu'un point d'arrêt est rencontré. Vous pouvez le voir comme un débogage printf qui ne nécessite pas de modifier le code source.
Activer le traçage
Annuler
Format de chaîne personnalisé
Ok
Format de chaîne personnalisé Spécifiez un format de chaîne dans le style du C qui sera utilisé lors de l'affichage de l'expression choisie. Par exemple & #160;: Point de traçage & #160; 1 & #160;: g = %d Si un format de chaîne personnalisé n'est pas activé, les noms et valeurs de toutes les expressions seront affichés, à l'aide du format « & #160; %d & #160; » comme spécificateur de format pour toutes les expressions.
Expressions à afficher & #160;: @title: menu
Exécuter
Barre d'outils du débogueur
Démarrer
NAME OF TRANSLATORS
Joëlle CornavinEMAIL OF TRANSLATORS
jcornavin@laposte. net
Démarrer
Quantité
Vue de la mémoire
Modifier la plage mémoire
Recharger
Fermer cette vue
Vues de débogage particulières
Démarrer
Fonction
Configuration de GDB
Prise en charge de GDB
Prise en charge de l'exécution d'applications dans GDB
Désassembleur
GDB
Démarrer
Impossible de démarrer le débogueur
Démarrer
Exécution du programme
Débogueur
Instruction
Impossible de démarrer l' application
Instruction
Instruction
Instruction
Instruction
Afficheurs
Afficheurs du débogueur
Afficheurs du débogueurInformations diverses sur l'application en cours d'exécution. Quatre vues sont disponibles & #160;: MémoireDésassemblageRegistresBibliothèques
Examiner un fichier « & #160; core & #160; »...
Examiner un fichier « & #160; core & #160; »
Examiner un fichier « & #160; core & #160; » Cette fonction charge un fichier « & #160; core & #160; », qui est généralement créé après que l'application s'est arrêtée de façon anormale, par exemple avec une erreur de segmentation. Le fichier « & #160; core & #160; » contient une image de la mémoire du programme au moment où il s'est arrêté brutalement, ce qui permet d'effectuer une analyse post mortem de l'application.
Attacher à un processus
Attacher au processus Attache le débogueur à un processus en cours d'exécution.
& Shell de débogage & #160;:
Évaluer & #160;: %1
Évaluer l'expression Affiche la valeur de l'expression située sous le curseur.
Surveiller & #160;: %1
Surveiller l'expression Ajoute une expression sous le curseur à la liste de surveillance des variables.
GDB s'est arrêté anormalementIl s'agit probablement d'un bogue dans GDB. Examinez la fenêtre de sortie de GDB puis arrêtez le débogueur
GDB s'est arrêté anormalement
Choisir un fichier « & #160; core & #160; » à examiner...
Examen du fichier « & #160; core & #160; » %1
Choisir un processus à attacher à...
Attachement au processus %1
Débogueur
Le débogueur est arrêté
KDevelop & #160;: console de débogage de l' application