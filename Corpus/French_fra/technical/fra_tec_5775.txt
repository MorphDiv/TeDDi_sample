# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Introduction
Eric Laffoon
sequitur@kde. org
& traducteurYohannHamon;
& kommander; est un outil de construction de boîtes de dialogue qui peut être utilisé également pour créer des applications graphiques complètes. Le premier objectif est de créer autant de fonctionnalités que possible sans utiliser aucun langage de script. Ceci est possible grâce aux fonctionnalités suivantes & #160;:
Les spéciaux sont précédés d'un @ comme par exemple @widgetText. Ils donnent accès à des choses telles que la valeur d'un élément graphique, des fonctions, des alias, des variables globales et d'autres choses encore.
L'intégration de & DCOP; permet aux boîtes de dialogue de & kommander; de contrôler et d'être contrôlées en interagissant avec d'autres applications & kde;. C'est une fonctionnalité vraiment puissante & #160;!
Les signaux et les connecteurs sont moins intuitifs pour un nouvel utilisateur. Ils offrent une gestion limitée des évennements lorsqu'un bouton est préssé ou qu'un élément graphique est modifié. C 'est assez puissant lorsque c'est combiné avec la Génération de texte.
La fonctionnalité principale des boîtes de dialogue de & kommander; et que vous pouvez lier du texte (Texte & kommander;) à un élément graphique. Donc si vous avez @widget1 et @widget2 qui sont des champs d'éditions vous pouvez configurer & kommander; pour afficher leurs contenus en saisissant @widgetText dans leur champ de texte & kommander;. Saisissez par exemple Bonjour dans le @widget1 et Le monde dans le @widget2. Un bouton peut posséder la chaîne Mon premier @widget1 @widget2 dans & kommander; et si vous exécutez cette boîte de dialogue depuis un terminal le résultat dans & kommander; sera Mon premier Bonjour Le monde.
Avec un peu de chance vous commencez à percevoir une petite partie du potentiel. & kommander; permet une conception plus rapide d'applications simples parce qu'il vous évite d'avoir à trop penser au langage et de revenir à l'aspect basique et au modèle de conception classique. Le langage de programmation est un moyen de définir des concepts et de par ceci est une couche entre le concept et son implémentation qui peut empêcher de progresser avec minutie. & kommander; cherche à minimiser cette couche.
& kommander; tente également de se construire sur des standards. Il est construit sur l'infrastructure de conception & Qt; Designer et créé des fichiers *. ui qu'il renomme en *. kmdr. Il peut facilement importer n'importe quel élément graphique de & kde; et cela peut être fait sans avoir à reconfigurer & kommander; pour utiliser des greffons.
L'autre apport important de & kommander; est la manière dont il répond aux demande du langage. Les langages de programmations peuvent être des choses merveilleuse mais ils ont leurs propres dogmes et leurs fanatiques qui cherchent à fournir des outils pour la conception de & GUI; dans des environnements de développement intégrés. Ironiquement, le développement de ces & IDE; est limité par le nombre de personnes acceptant d'adopter un nouveau langage pour avoir accès aux fonctionnalités désirées. Il n'est vraiment pas raisonnable t'attendre des gens qu'ils jonglent avec une douzaine de langages pour accéder à des fonctionnalités différentes. En étant neutre au niveau du langage et en permettant à une boîte de dialogue & kommander; d'être modifiée en utilisant n'importe quel langage de script & kommander; se positionne de manière unique pour une adoption la plus large possible. De multiples langages de script peuvent être utilisés dans une même boîte de dialogue et des applications peuvent être récupérées par des gens utilisant des langages différents du développeur originel et graduellement converties et étendues. De nouveaux éléments graphiques et de nouvelles fonctionnalités peuvent être immédiatement modifiables à l'aide de n'importe lequel des langages disponibles.
Nous espérons que & kommander; va commencer à obtenir de la part des développeurs la reconnaissance et le soutient dont il a besoin pour atteindre son plein potentiel. Notre but final est de rendre & kommander; utile aux nouveaux utilisateurs pour leurs permettre d'étendre et de combiner leurs applications. En même temps il devrait devenir un bon outil de prototypage. Il ouvre également la porte aux promesses des logiciels libres d'une nouvelle manière. Nous savons que les gens peuvent modifier nos programmes sous licence GPL, mais le fait demeure que très peu d'entre eux en ont les compétences. Gràce à & kommander; ce nombre est décuplé & #160;! Certaines applications peuvent être principalement logique comme une application & kommander;. Nous l'utilisons déjà dans les dommaines où nous voulons plus d'extensibilité dans & quantaplus;.
Nous espérons que vous appréciez & kommander;. Merci de nous aider en nous envoyant vos rapports de bogues et vos exemples de boîtes de dialogue, ainsi que toutes requêtes que vous pourriez avoir. Vous pouvez rejoindre notre liste d'utilisateurs et obtenir de l'aide pour développer des applications & kommander; à http: / /mail. kdewebdev. org/ mailman/ listinfo/ kommander
Salutations de la part de l'équipe de développement de & kommander; & #160;!