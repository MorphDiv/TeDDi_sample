# language_name_wals:	French
# language_name_glotto:	French
# iso639_3:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Suivant

error_log() envoie un message d'erreur à l'historique du serveur web, à un port TCP ou un fichier. message est le message d 'erreur qui doit être enregistré. message_type indique où le message doit être envoyé:
Tableau 1.
Types de error_log()

message est envoyé à l'historique PHP, qui est basé sur l 'historique système ou un fichier, en fonction de la configuration de error_log.

message est envoyé par email à l 'adresse destination.
C 'est le seul type qui utilise le quatrième paramètre extra_headers.
Ce message utilise la même fonction interne que mail().

message est envoyé par la connexion de debuggage PHP.
Cette option n'est disponible que si l 'option remote_debugging a été désactivée.
Dans ce cas, le paramètre destination spécifie l'hôte ou l 'adresse IP, et optionnellement le numéro de port, de la socket qui recevra les informations de débuggage.

message est ajouté au fichier destination.
Avertissement
Le débuggage à distance via TCP / IP est une fonctionnalité PHP 3 qui n 'est pas disponible en PHP 4.
Exemple 1.
Exemples avec error_log()
?php / / Envoi une notification par l'historique du serveur, si la connexion à la base / / de données est impossible. if (!Ora_Logon ($username, $password)) {error_log ("Base Oracle indisponible !", 0);} / / Indiquer à l'administrateur, par email, qu'il n'y a plus de FOO if (!($foo = allocate_new_foo()) {error_log ("Aya!, Il ne reste plus de FOO disponibles !", 1, "operateur@mondomaine.com");} / / D'autres manières d'appeler error_log(): error_log ("Grosse bourde !", 2, "127.0.0.1:7000"); error_log ("Grosse bourde !", 2, "loghost"); error_log ("Grosse bourde !", 3, "/ var / tmp / my-errors.log");?
Précédent
Sommaire
Suivant
Gestion des erreurs
Niveau supérieur
