# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Suivant
(PHP 3 = 3.0.8, PHP 4 = 4.0.1)
L'écriture de fichier avec fwrite() L'écriture de fichier avec fwrite() utilise normalement un buffer de 8K.
Cela signifie que si deux processus essaient d'écrire dans le même fichier, ils font une pause tous les 8ko pour laisser le temps à l'autre d'écrire à son tour. set_file_buffer() permet de modifier la taille du buffer de sortie pour le pointeur de fichier fp à buffer Cela signifie que si deux processus essaient d'écrire dans le même fichier, ils font une pause tous les 8ko pour laisser le temps à l'autre d'écrire à son tour. set_file_buffer() permet de modifier la taille du buffer de sortie pour le pointeur de fichier fp à buffer octets.
Si buffer vaut 0, l 'écriture se fera sans buffer.
Cela force un processus à écrire toutes ses données dans un fichier avant que les autres puissent y accéder.
set_file_buffer() retourne 0 en cas de succès, ou EOF si la requête ne peut pas être honorée.
L'exemple suivant montre comment utiliser la fonction set_file_buffer() pour créer un fichier sans buffer.
Exemple 1.
Exemple avec set_file_buffer()
?php $fp=fopen( $file, "w"); if($fp) {set_file_buffer($fp, 0); fputs($fp, $output); fclose($fp);}?
Voir aussi fopen() et fwrite().
Précédent
Sommaire
Suivant

Niveau supérieur
