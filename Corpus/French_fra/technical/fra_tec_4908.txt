# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Annexe A.
Histoire de PHP
Suivant
PEAR, signifie 'PHP Extension and Application Repository' (initialement, PHP Extension and Add-on Repository) est la première version de classe de base en PHP, et deviendra à terme le moyen privilégié de distribuer PHP et les modules C.
PEAR a été conçu durant les débats tenus lors des PHP Developers'Meeting (PDM) (Rencontres de développeurs PHP), qui ont eu lieu en Janvier 2000 à Tel Aviv.
Il a été crée à l 'initiative de Stig S.
Bakken, et dédié à sa première fille, Malin Bakken.
Depuis l'an 2000, PEAR a grossi jusqu 'à devenir un projet significatif avec un groupe de développeur compétents, qui travaillent à mettre en place une librairie complète, réutilisable et commune à la communauté PHP entière.
PEAR inclus une vaste sélection de classes de bases pour réaliser une couche d 'abstraction de bases de données, du cache, des calculs mathématiques et des transactiosn de commerce électronique.
L'équipe d'assurance Qualité de PHP a été mise en place durant l'été 2000, en réponse aux critiques reçues par PHP 3.0, qui n 'était pas suffisamment testé sur des environnements de productions.
L'équipe est constitué de d 'un groupe de développeurs de haut niveau, qui ont une bonne connaissance des sources PHP.
Ces développeurs passent le plus clair de leur temps à localiser et supprimer les bugs trouvés dans PHP.
De plus, il y a bien d'autres membres du groupe PHP qui testent et fournissent un compte rendu fidèle de l 'utilisation de PHP sur différentes plate formes.
PHP-GTK est la solution PHP pour écrire des applications avec interface, coté client.
Andrei Zmievski se rappelle de la création de PHP-GTK:
La programmation d'interface GUI a toujours été une passion pour moi, et je pensais que Gtk + était une excellente librairie, hormis le fait qu 'elle était écrite en C, ce qui était plutôt laborieux.
Après avoir assisté aux implémentations de PyGtk et GTK-Perl, j 'ai décidé de voir si PHP pouvait disposer de sa propre interface avec Gtk+, même minimale.
J'ai commencé au mois d'août 2000, lorsque j'avais un peu plus de temps libre, et j 'ai réalisé les premières expérimentations.
Mon guide principal fut l 'implémentation de PyGtk, qui était plutôt complète et avait une interface orientée objet.
James Henstridge, l'auteur de PyGtk, fut d 'une aide précieuse au démarrage du projet.
Réécrire toutes les interfaces de Gtk + à la main était hors de question et j'ai pensé à réaliser un générateur de code, exactement comme PyGtk l 'avait fait.
Le générateur de code était un programme PHP qui lisait un ensemble de fichiers .defs, contenant les classes, constantes et méthodes Gtk+, puis générait le code d 'interface de PHP.
Ce qui ne pouvait pas être généré automatiquement était traités à la main, dans le fichier .overrides.
Travailler sur le générateur de code et sur l'infrastructure pris un peu de temps, car je n'avais pas beaucoup de temps à consacrer à PHP-GTK durant l 'automne 2000.
Après avoir montré PHP-GTK à Frank Kromann, il s'y intéressa, et commença à m'aider sur le générateur et l 'implémentation Win32.
Lorsque nous écrivîmes le premier programme 'Hello World', ce fut extrêmement excitant.
Cela a pris encore quelques mois pour avoir une version initiale.
Elle fut publiée en mars 2001.
Cela a encore pris quelques mois pour que le projet soit dans une forme présentable.
Ce projet fut rapidement présenté sur SlashDot.
Anticipant que PHP serait un projet à part entière, j'ai installé des listes de diffusion et un serveur CVS indépendants, de même que le site gtk.php.net, avec l 'aide de Colin Viebrock.
La documentation demandait aussi de l 'aide, et James Moore vient me porter une aide précieuse.
Depuis sa publication PHP-GTK a gagné en popularité.
Nous avons notre propre équipe de documentation, et le manuel s 'améliore de plus en plus.
Des extensions ont été écrites pour PHP-GTK et des applications de plus en plus importantes sont concues.
Précédent
Sommaire
Suivant
Histoire de PHP
Niveau supérieur
Livres traitant de PHP