# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Étendre & quantaplus;
Christopher Hornbaker
chrishornbaker@earthlink. net
Robert Nickel
& traducteurPatrickMichelon;
Ce chapitre décrit comment adapter & quantaplus; à vos besoins particuliers et comment vous pouvez aider & quantaplus; à devenir meilleur.
Paquet d'édition de type de document (DTEP;)
Des paquets d'édition de type de document (DTEP;) sont utilisés dans & quantaplus; pour ajouter la gestion des langages de balisage de script et des & CSS;. Ils permettent à & quantaplus; de fournir des fonctions comme l'autocomplètement et les nœ uds d'arborescences. Leur simplicité et leur flexibilité sont ce qui fait de & quantaplus; un & IDE; rapide, facile à utiliser par les développeurs internet. Ils sont ce qui fait de & quantaplus; un environnement de production facile à utiliser.
Les & DTEP; existent en deux variétés, la famille & #160; 1, qui sont les langages de balisage et la famille & #160; 2, qui sont les langages de script et les & CSS;. Les & DTEP; sont constitués de deux parties & #160;: le dossier de balise et les barres d'outils. Les dossiers de balise sont composés de deux types de fichiers, les fichiers description. rc et les fichiers TagXML, qui portent l'extension. tag. Les barres d'outils sont les onglets et boutons orientés icônes (au-dessus de la fenêtre d'édition) qui place le texte dans un document plus rapidement que l'utilisateur peut le saisir.
Ce document décrit comment faire des fichiers TagXML, le fichier description. rc et des barres d'outils en bref, un & DTEP;
Les fichiers TagXML (. tag) définissent à la fois les attributs spécifiques à une balise, et la présentation et le contenu de la boîte de dialogue Propriétés que & quantaplus; affiche pour la balise. Le fichier description. rc fournit les règles et les informations sur le & DTEP; lui même. Les barres d'outils fournissent un moyen rapide pour ajouter des balises dans un document sans se soucier des erreurs d'orthographe et autres erreurs.
Empaquetage
Les dossiers balise sont juste cela, des dossiers. Ils sont composés seulement des fichiers description. rc et TagXML. Les dossiers balise portent le nom du langage de balisage et la version, si elle s'applique (par exemple, html4.01-strict).
TagXML
Le tableau donné ci-dessous fournit les éléments définis dans le fichier TagXML et déclare s'ils sont requis ou non. Bien que tous ne soient pas requis, il est recommandé que vous en utilisiez le maximum de telle manière que les autres utilisateurs puissent avoir une meilleure expérience et plus d'informations pour travailler.
Élément
Utilisation par défaut
Utilisation de la casse
TAGS
requis
toujours
tag
label
optionnel
requis pour créer une boîte de dialogue propriétés
attr
requis pour définir un attribut
tooltip
requis pour que la boîte de dialogue Propriétés affiche une astuce
whatsthis
requis pour que la boîte de dialogue propriétés affiche « & #160; Qu'est ce que c'est & #160;? & #160; »
list
requis quand un attribut est du type « & #160; liste & #160; »
item
requis quand & lt; list > est utilisé
textlocation
location
requis quand un label est utilisée
text
children
liste de balises qui peuvent apparaître à l'intérieur de la balise en cours de définition
child
une entrée enfants
stoppingtags
liste de balises qui indiquent à une autre balise de s' arrêter
stoppingtag
une entrée stoppingtags
Descriptions d'élément TagXml
Les section suivantes décrivent, en détail, chaque élément. Tout est présenté d'une manière facile à suivre de l'endroit où ils vont jusqu'à ce qui va à l'intérieur.
TAGS
Ceci est l'élément racine d'un document TagXML. Il peut apparaître une seule fois dans un document. Il peut contenir la définition de plusieurs balises. Il s'agit d'un type d'élément élément seul.
Parent(s)
Enfants
AUCUN
tag
Contenant pour la balise en cours de définition. Il s'agit d'un type d'élément élément seul.
label, attr, stoppingtags
Attribut
Utilisation
Valeurs
Défaut
Utilisation
Description
name
chaîne de caractères
Spécifie le nom de la balise en cours de définition.
single
booléen
Spécifie si la balise a besoin ou non d'une balise de fermeture & lt; /(nom de balise) >.
type
xmltag
Spécifie le type de balise en cours de définition.
Le type de balise est fondé sur XML. (seulement la famille 1)
Le type de balise est fondé sur XML. (seulement la famille 1)
property
Le type de balise est en relation avec les & CSS;. (famille 2 seulement)
function
Le type de balise est une fonction de script. Quand il est utilisé, & lt; attr > devient argument de la fonction (famille 2 seulement).
class
Le type de balise est une classe de script. (famille 2 seulement).
Le type de balise est une classe de script. (famille 2 seulement).
returnType
void
Spécifie le type retour de la balise en cours de définition. (famille 2 seulement)
Le type de balise renvoie un void
int
Le type de balise renvoie un int
float
Le type de balise renvoie un réel
long
Le type de balise renvoie un long
Le type de balise renvoie une chaîne de caractères.
label
Placez une étiquette dans la boîte de dialogue. Le texte est spécifié par la balise & lt; text >. Il s'agit d'un type d'élément élément seul.
text, location
attr
Définit un attribut de la balise. Cet élément apparaît une fois pour chaque attribut. Il définit le nom et le type de l'attribut. Il contient également des balises additionelles qui spécifient comment cet attribut doit être affiché, etc. Il s'agit d'un type d'élément élément seul.
location, list, tooltip, whatsthis, textlocation
Spécifie le nom de l'attribut en cours de définition.
input
Spécifie le type de l'attribut en cours de définition.
Le champ gère les entrées en texte libre (champ texte).
check
La valeur du champ est booléenne (case à cocher).
color
La valeur du champ est une couleur
url
La valeur du champ est une & URL;. (Fichier local auquel se référer)
La valeur du champ est un article à partir d'une liste spécifiée.
status
Spécifie si oui ou non l'argument est requis. (Famille 2 seulement)
L'argument est optionnel.
L'argument est requis
implied
L'argument est implicite
text, location
Parent(s)
tooltip
Définit l'astuce d'outil pour un champ dans la boîte de dialogue. Cet élément est composé seulement de texte.
Actuellement, seul le texte seul est géré (vous ne pouvez pas utiliser de langage de balisage).
whatsthis
Défini l'aide de « & #160; qu'est ce que c'est & #160; » pour un champ dans la boîte de dialogue. Cet élément est composé seulement de texte.
list
Une balise conteneur qui regroupe ensemble les articles dans une liste. Elle peut apparaître seulement une fois pour chaque description d'attribut. Il s'agit d'un type d'élément élément seul.
item
Défini un article dans une liste. Cet élément est seulement du texte.
textlocation
Spécifie la position du texte d'un attribut de balise à l'intérieur d'une boîte de dialogue. Cette balise peut n'apparaître qu'une seule fois pour chaque attribut dans la boîte de dialogue (cad; un pour chaque balise & lt; attr >). Cet élément est vide.
row
nonNegativeInteger
Spécifie la rangée dans la disposition de la boîte de dialogue d'un champ ou d'une étiquette.
col
Spécifie la colonne dans la disposition de la boîte de dialogue d'un champ ou d'une étiquette.
rowspan
Spécifie le nombre de rangées qu'un champ doit recouvrir.
colspan
Spécifie le nombre de colonnes qu'un champ doit recouvrir.
location
Spécifie la position et la taille d'un champ dans la boîte de dialogue. Cette balise doit exister une fois pour chaque champ dans la boîte de dialogue (pex; un pour chaque balise & lt; attr > et & lt; label >). Cet élément est vide.
label, attr
text
Définit le texte pour une étiquette ou une case à cocher. Cet élément est seulement du texte.
children
Définit une liste d'éléments qui peuvent apparaître à l'intérieur de la balise en cours de spécification. Il s'agit d'un type d'élément élément seul.
child
Défini une balise enfant. Cet élément est vide.
Spécifie une balise qui peut apparaître à l'intérieur d'une balise donnée.
Spécifie le nom de la balise en cours de définition.
stoppingtags
Défini une liste d'éléments qui forcent une balise a prendre fin. Il s'agit d'un type d'élément élément seul.
stoppingtag
Défini une balise d'arrêt. Cet élément est vide.
Spécifie quelles balises forcent l'arrêt d'une autre balise.
Utilisation de TagXML
Tous les fichiers TagXML doivent commencer par la déclaration & XML; & lt; ?xmlversion="1.0"encoding="UTF-8 "? > et doivent être proprement imbriqués et fermés.
Les blancs n'affectent pas gravement quoi que ce soit, mais vous devez faire attention aux caractères & et & lt;. Ceux -ci devraient être remplacés respectivement par un & amp et un & lt dans des éléments comme & lt; tooltipl >, & lt; whatsthis > et & lt; text >. Ne pas faire ainsi ne causera pas d'incident, mais vous aurez des portions de votre travail qui disparaîtra si vous ne le faites pas.
Validation de TagXML
Pour valider vos fichiers TagXML, cliquez simplement sur « & #160; Outils & #160; » dans la boîte de dialogue contextuelle dans la partie supérieure de & quantaplus; et sélectionnez « & #160; Valider TagXML & #160; ». Une boîte de dialogue apparaît et vous n'avez qu'à suivre les indications.
Cette fonctionnalité n'est pas présente actuellement. À l'heure actuelle, la validation s'effectue quand les fichiers TagXML sont chargés dans & quantaplus;.
Exemples TagXML
Famille 1
Ce qui suit vous montre un fichier TagXML valide de famille 1. Ce fichier décrit l'élément schéma & lt; schéma > du & W3C; & XML;. Le nom de fichier pour ce TagXML serait schema. tag. Simple n'est ce pas & #160;?
& lt; ?xml version="1.0 "encoding="UTF-8"? > & lt; !DOCTYPE TAGS > & lt; TAGS > & lt; tag name="schema "> & lt; label > & lt; text > idlt; /text > & lt; location col="0" row="0"/ > & lt; /label > & lt; attr name="id "type="input" > & lt; tooltip > A unique ID for the element. lt; /tooltip > & lt; whatsthis > A unique ID for the element. lt; /whatsthis > & lt; location col="1 "row="0"/ > & lt; /attr > & lt; label > & lt; text > versionlt; /text > & lt; location col="0" row="1"/ > & lt; /label > & lt; attr name="version "type="input" > & lt; tooltip > Version of the schema. lt; /tooltip > & lt; whatsthis > Version of the schema. lt; /whatsthis > & lt; location col="1 "row="1"/ > & lt; /attr > & lt; label > & lt; text > targetNamespacelt; /text > & lt; location col="0" row="2"/ > & lt; /label > & lt; attr name="targetNamespace "type="input" > & lt; tooltip > URI; reference of the namespace of this schema. lt; /tooltip > & lt; whatsthis > URI; reference of the namespace of this schema. lt; /whatsthis > & lt; location col="1 "row="2"/ > & lt; /attr > & lt; label > & lt; text > xmlnslt; /text > & lt; location col="0" row="3"/ > & lt; /label > & lt; attr name="xmlns "type="input" > & lt; tooltip > URI; reference for one or more namespaces for use in this schema. If no prefix is used, then components of that namespace may be used unqualified. lt; /tooltip > & lt; whatsthis > URI; reference for one or more namespaces for use in this schema. If no prefix is used, then components of that namespace may be used unqualified. lt; /whatsthis > & lt; location col="1 "row="3"/ > & lt; /attr > & lt; label > & lt; text > attributeFormDefaultlt; /text > & lt; location col="0" row="4"/ > & lt; /label > & lt; attr name="attributeFormDefault "type="list" > & lt; items > & lt; item > qualifiedlt; /item > & lt; item > unqualifiedlt; /item > & lt; /items > & lt; tooltip > Default form for all attributes within this schema. lt; /tooltip > & lt; whatsthis > Default form for all attributes within this schema. lt; /whatsthis > & lt; location col="1 "row="4"/ > & lt; /attr > & lt; label > & lt; text > elementFormDefaultlt; /text > & lt; location col="0" row="5"/ > & lt; /label > & lt; attr name="elementFormDefault "type="list" > & lt; items > & lt; item > qualifiedlt; /item > & lt; item > unqualifiedlt; /item > & lt; /items > & lt; tooltip > Default form for all elements within this schema. lt; /tooltip > & lt; whatsthis > Default form for all elements within this schema. lt; /whatsthis > & lt; location col="1 "row="5"/ > & lt; /attr > & lt; label > & lt; text > blockDefaultlt; /text > & lt; location col="0" row="6"/ > & lt; /label > & lt; attr name="blockDefault "type="input" > & lt; location col="1 "row="6"/ > & lt; /attr > & lt; label > & lt; text > finalDefaultlt; /text > & lt; location col="0" row="7"/ > & lt; /label > & lt; attr name="finalDefault "type="input" > & lt; location col="1 "row="7"/ > & lt; /attr > & lt; /tag > & lt; /TAGS >
Famille 2
Ce qui suit vous montre un fichier TagXML de famille 2 valide. Ce fichier décrit la fonction de surcharge de & PHP;. Le nom de ce fichier serait surcharge. tag.
& lt; ?xml version="1.0 "encoding="UTF-8"? > & lt; !DOCTYPE tags > & lt; tags > & lt; tag name="overload "type="function" returnType="void "> & lt; attr name="class_name" type="string "status="optional"/ > & lt; /tag > & lt; /tags >
description. rc
Créer des barres d' outils
Créer des barres d' outils
Une fois que toutes les barres d'outils sont créées, vous devez ajoutez et configurer les actions. Pour faire ceci, sélectionnez Configuration Configurer les actions.
Créer des barres d' outils
textlocation
location
location
Créer des barres d' outils
Ce qui suit vous explique comment créer des barres d'outils pour un & DTEP;. Les barres d'outils sont des éléments graphiques qui sont assignés à des actions. Les actions dans & quantaplus; sont la base de quasiment toutes les extensions que possède & quantaplus; et qui seront acquises dans l'avenir. Le même mécanisme qui définit une action dans & quantaplus; active aussi l'autocomplètement et les boîtes de dialogue de balises. Avec les actions, ce que vous pouvez faire est pratiquement sans limite. À titre d'exemple, nous utiliserons HTML; tidy sur nos pages web.
En partant de zéro
Pour commencer, vous avez besoin de créer une barre d'outils utilisateur. Sélectionnez Barres d'outils Ajouter une barre d'outils utilisateur.
S'il y a beaucoup de balises pour le langage de balisage, il est recommandé de diviser les balises en groupes logiques. Vous devez créer une barre utilisateur pour chaque groupe. Dans ce cas, il n'y en a pas beaucoup, nous faisons alors une barre d'outils et nous l'appelons du nom du langage de balisage.
Une fois que toutes les barres d'outils sont créées, vous devez ajoutez et configurer les actions. Pour faire ceci, sélectionnez Configuration Configurer les actions.
Les parties de cette fenêtre sont assez évidentes. Cliquez sur le bouton Nouvelle action en bas de la fenêtre pour entrer dans le mode édition.
Remplissez tous les champs nécessaires et ajoutez la balise à la barre d'outils appropriée.
Terminez le reste, si la balise possède des attributs et que vous prevoyez de toujours les utiliser, cochez la case Lancer la boîte de dialogue « & #160; Éditer les balises & #160; » si elle est disponible de telle manière que vous soyez averti à chaque fois que l'action est utilisée.
Vous devez avoir quelque chose ressemblant à ce qui suit.
Cliquez sur le bouton Appliquer et vous devez voir l'action ajoutée à la ou aux barre(s) d'outils que vous avez sélectionnée(s).
Outch! C'est une horrible icône. Comment allez -vous vous souvenir que telle icône va avec telle action & #160;? Remplaçons -la avant que les problèmes ne surviennent.
Pour créer une icône qui décrit plus précisement cette action, nous allons utiliser & kiconedit;. Sélectionnez -le dans & menuk;, Graphisme Autres applications (ou là où votre distribution l'a placé).
& kiconedit; par défaut est reglé sur 32x32 pixels, mais nous avons besoin de 22x22. Pour changer ceci, sélectionnez Édition Redimensionner....
Gardez à l'esprit que vous êtes en train de créer une icône qui va vous aider, vous et les autres utilisateurs de la & DTEP; à vous souvenir quelle action fait quoi.
Puisque la balise pour laquelle nous créons une icône est appellée « & #160; démarrer & #160; », nous avons décidé de créer un « & #160; signal démarrer & #160; ». En utilisant la couleur verte (le vert est souvent interprété comme « & #160; débuter & #160; », « & #160; démarrer & #160; », ou « & #160; poursuivre & #160; », cela va, ou au moins devrait, transmettre le message à l'utilisateur que cliquer sur cette action va placer la balise & lt; démarrergt; dans le document courant.
Maintenant que nous avons terminé la création de cette icône, nous l'enregistrons.
Une fois que vous avez terminé la création de la ou des icônes, vous devez associer l'icône avec les actions. Pour faire ceci, ouvrez de nouveau (dans & quantaplus;) Configuration Configurer les actions et sélectionnez l'action pour laquelle vous avez créé l'icone. À coté du champ Texte, vous allez voir un bouton. Cliquez dessus.
Sélectionnez Autres icônes et cliquez alors sur le bouton Parcourir.
Déplacez -vous dans de dossier dans lequel vous avez enregistré l'icône, sélectionnez -la et cliquez sur OK.
Cliquez sur le bouton Appliquer et faites la même chose avec les autres balises, s'il y en a, ou alors cliquez sur OK pour terminer.
Supposons que vous vouliez ajouter des fonctions communes de & quantaplus; à votre barre d'outils ou peut-être pensez -vous que la barre d'outils serait mieux organisée d'une manière différente avec des séparateurs pour grouper les actions. Ouvrez la boîte de dialogue Configurer les barres d'outils en allant sur Configuration Configurer les barres d'outils. Vérifiez que votre barre d'outils est sélectionnée.
Nous allons sélectionner le séparateur (haut de la colonne de gauche) pour notre barre d'outils. Une fois que vous avez sélectionné l'élément que vous souhaitez ajouter à votre barre d'outils, cliquez sur le bouton flèche à droite. Ceci va l'ajouter à votre barre d'outils.
Nous aimerions créer un accès rapide à la Prévisualisation dans Konqueror. Nous allons la sélectionner et l'ajouter à la barre d'outils.
Notez comment le séparateur aide dans le regroupement. Quelqu'un ne connaissant pas notre barre d'outils pourrait penser que le bouton & konqueror; est l'opposé du bouton démarrer.
Appliquez vos changements et lorsque vous avez terminé, cliquez sur OK.
Regardez maintenant cette fantastique nouvelle barre d'outils. Beaucoup plus pratique maintenant.
N'oubliez pas de tester votre barre d'outils, en cliquant sur tous les boutons, de façon à vérifier que le résultat en sortie est correct.
Maintenant, pour enregistrer la barre d'outils, nous allons sélectionner Barres d'outils Enregistrer les barres d'outils Enregistrer en tant que barre d'outils locale.
Enregistrez -la dans le dossier approprié. Puisque NeXML n'existe pas, nous le placerons dans le dossier de niveau supérieur, mais votre barre d'outils doit être enregistrée dans le dossier correct. Assurez -vous d'adapter votre description. rc pour qu'il charge votre (vos) barre (s) d'outils quand un nouveau fichier de ce type est crée.
Créer votre propre documentation.
Robert Nickel
robert@artnickel. com
Probablement, les ajouts les plus notables à & quantaplus; pour l'utilisateur commun sont ceux de documentation pour le langage de balisage ou de script que vous préferez. Dans ce but, ce chapitre décrit comment créer l'arbre de documentation & PHP; pour votre usage personnel.
Avant de commencer à créer votre propre documentation, vous pouvez souhaiter visiter sur les archives de & quantaplus; pour voir si quelqu'un l'a déjà mené à bien.
Il y a deux parties à ce processus. Primo, vous devez obtenir la documentation existante pour le langage de balisage/ de script/ etc; sur lequel vous travaillez. Secundo, vous devez créer le fichier docrc. Le premier est à votre initiative, le second est ce que nous allons couvrir ici.
La forme générale du fichier docrc est comme suit & #160;:
#KDE Config File [Tree] Doc dir= chemin d'accès, relatif à ce fichier, des fichiers documentation html & pex; php42/ #top level elements Top Element= votre description pour cette documentation & pex; & PHP; 4.2 documentation Section 1=Section1. html Section 2=#Sec2.1, #Sec2.2, #Sec2.3 Sec2.1=Sec2.1. html Sec2.2=Sec2.2. html Sec2.3=Sec2.3. html... [Context] ContextList=func1, func2, tag1, tag2, tag3 func1=func1. html func2=func2. html tag1=tag1. html tag2=tag2. html tag3=tag3. html
Le fichier docrc se répartit en deux sections & #160;: Tree et Context.
La section Tree définit l'aspect de présentation de la documentation dans l'onglet documentation. Par exemple, vous voyez que dans la documentation & PHP; vous avez quelque chose qui ressemble a ceci & #160;:
En se référerant à ce qui est écrit ci-dessus, notre docrc & PHP; ressemble a ceci & #160;:
#KDE Config File [Tree] Doc dir=php42/ #top level elements Top Element=PHP 4.2 documentation PHP 4.2 documentation=Table des matières, #Démarrer, #References du Langage Table des matières=index. html Démarrer=Introduction,... Introduction=introduction. html... Références du langage=Basic syntax,... Syntaxe de base=language. basic-syntax. html...
Notez le # devant « & #160; Démarrer & #160; » et « & #160; Références du langage & #160; ». Ceci indique que ce sont des sous-conteneurs dans l'arbre et qu'ils possèdent un contenu propre.
Pour la table des matières, vous notez qu'elle est référencée directement à un fichier (et par conséquent apparaît en bas de la vue de l'arbre les dossiers en premier).
Les espaces n'affectent rien, mais faites attention aux caractères & et & lt;. Ils devraient être remplacés respectivement par & amp; et & lt dans tous les fichiers ressource de & quantaplus; fondés sur & XML;.
La section Context est la partie du fichier docrc qui est utilisée pour faciliter l'aide sensible au contexte. Par exemple, vous écrivez un script & PHP; et vous voudriez voir la documentation pour la fonction mysql_fetch_array. Vous mettez seulement la fonction en surbrillance, puis cliquez sur Ctrl; H pour l'aide contextuelle. La documentation pour mysql_fetch_array va s'afficher immédiatement. Il y a seulement deux entrées ici & #160;: la liste de contexte et les lignes d'association de fichier.
Liste de contexte
C'est très simple, il s'agit juste d'une liste séparée par des virgules des articles de contexte que vous souhaitez avoir de disponible (pour & PHP; ce sont les fonctions pour & PHP;).
Lignes d'association de fichier
Elles sont de la forme article de contexte= page de doc html. & pex; acos=fonction. acos. html
Une version réduite de la section Contexte de notre fichier docrc est comme suit & #160;:
#Mots-clés pour l'aide contextuelle [Contexte] ContextList=abs, acos, acosh, addcslashes, addslashes,... abs=fonction. abs. html acos=fonction. acos. html acosh=fonction. acosh. html addcslashes=fonction. addcslashes. html addslashes=fonction. addslashes. html...
Maintenant, vous pouvez enregistrer votre fichier docrc dans $HOME /. kde/ share/ apps/ quanta/ doc ou $KDEDIR / share/ apps/ quanta/ doc pour respectivement un usage local ou général. Puis créez un dossier (celui spécifié dans votre fichier docrc) dans le même dossier que votre fichier docrc et copiez vos pages & HTML; dedans.
Vous aurez à redémarrer & quantaplus; pour voir votre documentation.
Une fois que vous êtes sûr que vos documentations sont bonnes et valent la peine d'être partagées, envoyez le fichier docrc avec une description de toute information pertinente sur quelle documentation vous avez utilisé à l'archive & quantaplus; pour être utilisé par la communauté & quantaplus;. Vous ne deviendrez pas riche, mais vous aurez le grand sentiment d'avoir contribué à la meilleure plate-forme de développement web disponible.