# language_name_wals:	French
# language_name_glotto:	French
# iso639_3:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Suivant

pg_get_notify() reçoit le message de NOTIFY envoyé par une commande SQL NOTIFY.
Pour lire le message associé, utilisez la commande LISTEN.
Si il y a un message de notification avec cette connexion, un tableau sera retourné avec le message et le PID du serveur.
Si il n'y a pas de message, pg_get_notify() retourne FALSE.
Exemple 1.
Exemple avec pg_get_notify()
?php $conn = pg_pconnect ("dbname=publisher"); if (!$conn) {echo "Une erreur est survenue.\n"; exit;} / / ecoute le message 'author_updated 'des autres processus pq_query($conn, 'LISTEN author_updated ;'); $notify = pg_get_notify($conn); if (!$notify) print("Aucun message\n"); else print_r($notify);?
Voir aussi pg_get_pid().
Précédent
Sommaire
Suivant
pg_Free_Result
Niveau supérieur
