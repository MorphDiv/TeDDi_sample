# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Suivant

ocinlogon() crée une nouvelle connexion à un serveur Oracle et s 'authentifie.
Si l'option ORACLE_SID n'est pas spécifié, PHP utilisera la variable d 'environnement ORACLE_SID pour déterminer le serveur de connexion.
ocinlogon() force le serveur à établir une nouvelle connexion.
Cette fonction ne doit être utilisée que si vous voulez isoler un ensemble de transactions.
Par défaut, les connexions sont partagées au niveau de la page, si vous utilisez la fonction ocinlogon() ou bien au niveau du processus web, si vous utilisez ociplogon().
Si vous avez de multiples connexions ouvertes avec ocinlogon(), les validations et annulations ne s'appliquent qu 'à la connexion spécifée.
L'exemple ci-dessous montre l 'utilisation des connexions séparées.
Exemple 1. ociNLogon
?php print "HTML PRE"; $db = ""; $c1 = ocilogon("scott" ,"tiger",$db); $c2 = ocinlogon("scott" ,"tiger",$db); function create_table($conn) {$stmt = ociparse($conn ,"create table scott.hallo (test varchar2(64))"); ociexecute($stmt); echo $conn. "created table\n\n";} function drop_table($conn) {$stmt = ociparse($conn ,"drop table scott.hallo"); ociexecute($stmt); echo $conn." dropped table\n\n";} function insert_data($conn) {$stmt = ociparse($conn ,"insert into scott.hallo values('$conn '| |' '| | to_char(sysdate ,'DD-MON-YY HH24:MI:SS'))"); ociexecute($stmt,oci_DEFAULT); echo $conn. "inserted hallo\n\n";} function delete_data($conn) {$stmt = ociparse($conn ,"delete from scott.hallo"); ociexecute($stmt,oci_DEFAULT); echo $conn." deleted hallo\n\n";} function commit($conn) {ocicommit($conn); echo $conn. "commited\n\n";} function rollback($conn) {ocirollback($conn); echo $conn." rollback\n\n";} function select_data($conn) {$stmt = ociparse($conn ,"select * from scott.hallo"); ociexecute($stmt,oci_DEFAULT); echo $conn ."----selecting\n\n"; while (ocifetch($stmt)) echo $conn. "".ociresult($stmt ,"TEST")." \n\n"; echo $conn ."----done\n\n";} create_table($c1); insert_data($c1); select_data($c1); select_data($c2); rollback($c1); select_data($c1); select_data($c2); insert_data($c2); commit($c2); select_data($c1); delete_data($c1); select_data($c1); select_data($c2); commit($c1); select_data($c1); select_data($c2); drop_table($c1); print "/ PRE / HTML";?
Voir aussi ocilogon() et ociplogon().
Précédent
Sommaire
Suivant
ociNewDescriptor
Niveau supérieur
ociNumCols