# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Éléments graphiques

& traducteurYohannHamon;
Les briques de construction d'une boîte de dialogue & kommander; sont les éléments graphiques. Ils sont similaires à tout autre élément graphique des librairies & Qt; et & kde; à l'exception du fait qu'ils ont quelques fonctionnalités supplémentaires qui leurs permettent d'avoir un texte associé. Le texte est associé à l'état de l'élément graphique ou à son connecteur de population. Le nombre d'états dépend de l'élément graphique. Si un élément graphique ne possède qu'un état, cet état est appelé l'état par défaut.
Texte d'élément graphique bla bla bla
La boîte de dialogue possède deux états pour le texte & kommander;. Ces états sont « & #160; Initiate & #160; » et « & #160; Destroy & #160; ». Ils sont exécutés lorsque la boîte de dialogue est initialisée et lorsqu'elle est détruite. Ces états protègent de ce qui est connu comme les problèmes de race lors de l'ouverture et cela signifie que vous n'avez pas à faire quoi que ce soit de spécial lors de la fermeture pour conserver un état de fonctionnement propre.
ButtonGroup
C'est un conteneur pour organiser des boutons dans un groupe. Un titre optionnel peut être ajouté en utilisant la propriété titre. Le cadre peut être modifié à l'aide de la propriété « & #160; lineWidth & #160; ». Le groupe de boutons peut être paramétré à exclusif en positionnant la propriété « & #160; exclusive & #160; » à « & #160; true & #160; ». Cela signifie que lorsqu'un bouton à deux états est cliqué tous les autres boutons à deux états seront positionnés sur arrêt, exception faite des bouton radio qui sont toujours mutuellement exclusifs même si le groupe n'est pas exclusif. Les boutons radios peuvent être configurés à non-exclusif en utilisant la propriété « & #160; radioButtonExclusive & #160; » (je ne suis pas complètement certain que cette propriété soit actuellement fonctionnelle).
« & #160; ButtonGroup & #160; » possède un seul état, « & #160; default & #160; ».
Le texte de l'élément graphique pour un « & #160; ButtonGroup & #160; » est le texte associé à chaque bouton dans leur ordre d'apparition dans le « & #160; ButtonGroup & #160; ».
Case à cocher
Un bouton qui peut être mis en position marche et arrêt. Il peut également être semi-coché si la propriété « & #160; tristate & #160; » et positionnée sur « & #160; true & #160; ». Le label associé à la case à cocher est configuré dans la propriété « & #160; text & #160; ». Sélectionner la propriété « & #160; checked & #160; » provoquera un état initial coché pour la case à cocher.
Une case à cocher possède 3 états, coché (« & #160; checked & #160; »), semi-coché (« & #160; semichecked & #160; ») et non coché (« & #160; unchecked & #160; »).
Le texte de l'élément graphique pour une case à cocher est la valeur dans la propriété « & #160; text & #160; ».
CloseButton
C'est un bouton qui, quand il est coché, exécute son texte associé et ensuite ferme la boîte de dialogue. Le label sur le bouton est configuré à l'aide de la propriété « & #160; text & #160; ». La sortie du texte associé (comment nommer cela) sera répercutée à « & #160; stdout & #160; » si la propriété « & #160; writeStdout & #160; » est positionnée sur « & #160; true & #160; ». Le bouton peut-être choisi pour être l'action par défaut de la boîte de dialogue si la propriété « & #160; default & #160; » est positionnée sur « & #160; true & #160; ».
« & #160; CloseButton & #160; » possède un état, « & #160; default & #160; ».
Il n'y a aucun élément graphique de texte associé à un « & #160; CloseButton & #160; ».
ComboBox
Une liste déroulante (« & #160; ComboBox & #160; ») est un élément graphique de sélection qui combine un bouton et un menu surgissant (« & #160; pop-up & #160; »). Il présente le choix courant de l'utilisateur parmi une liste d'options dans un espace minimal. les éléments sont ajoutés à la liste en utilisant la fenêtre de modification. Si la propriété « & #160; editable & #160; » est positionnée sur « & #160; true & #160; » & #160; l'utilisateur peut saisir n'importe quelle chaîne de caractères.
Les listes déroulantes possède un état, « & #160; default & #160; ».
Le texte de l'élément graphique pour une liste déroulante est le texte de l'élément sélectionné.
ExecButton
C'est un bouton qui lorsqu'il est cliqué exécute le texte qui lui est associé. Le label sur le bouton et configuré à l'aide de la propriété « & #160; text & #160; ». La sortie du texte associé (comment nommer cela) sera répercutée à « & #160; stdout & #160; » si la propriété « & #160; writeStdout & #160; » est positionnée sur « & #160; true & #160; ». Le bouton peut-être choisi pour être l'action par défaut de la boîte de dialogue si la propriété « & #160; default & #160; » est positionnée sur « & #160; true & #160; ».
« & #160; ExecButton & #160; » possède un état, « & #160; default & #160; ».
Il n'y a pas de texte associé à un « & #160; ExecButton & #160; ».
FileChooser
L'élément graphique de choix de fichier (« & #160; FileChooser & #160; ») combine un élément « & #160; LineEdit & #160; » avec un bouton qui, lorsqu'il sera cliqué, présentera une boîte de dialogue à l'utilisateur pour sélectionner des fichier ou dossiers. Le fichier ou dossier sélectionné est conservé dans l'élément « & #160; LineEdit & #160; ». Le type du « & #160; FileChooser & #160; » est configuré à l'aide de la propriété « & #160; selectionType & #160; ». Les types disponibles sont « & #160; Open & #160; » (Ouvrir), « & #160; Save & #160; » (Enregistrer) et « & #160; Directory & #160; » (Dossier). Des fichiers ou dossiers multiples peuvent être sélectionnés si la propriété « & #160; selectionOpenMultiple & #160; » est positionnée sur « & #160; true & #160; ». Une légende pour l'élément « & #160; FileChooser & #160; » peut être configurée à l'aide de la propriété « & #160; selectionCaption & #160; ». Elle sera affichée en tant que titre de la boîte de dialogue. Si aucune légende n'est spécifiée, le type de la sélection sera affiché dans le titre. Les fichiers affichés dans la boîte de dialogue peuvent être limités en utilisant la propriété « & #160; selectionFilter & #160; ».
« & #160; FileChosser & #160; » possède un état, « & #160; default & #160; ».
Le texte de l'élément graphique pour un élément « & #160; FileChooser & #160; » est le texte contenu dans l'élément « & #160; LineEdit & #160; » (le fichier choisi par l'utilisateur).
GroupBox
C'est un élément graphique qui contient d'autres éléments graphiques. Le cadre est modifié à l'aide de la propriété « & #160; lineWidth & #160; ». Un titre peut être ajouté en donnant une valeur à la propriété « & #160; title & #160; ».
« GroupBox » possède un état, « default ».
Le texte de l'élément graphique pour un élément « & #160; GroupBox & #160; » est la combinaison des textes associés à chacun des élément graphique contenu dans le groupe. Ils seront dans l'ordre où ils apparaissent dans l'élément « & #160; GroupBox & #160; ».
LineEdit
Un élément graphique « & #160; LineEdit & #160; » est une zone d'édition d'une ligne. Il permet à l'utilisateur de saisir ou de modifier une ligne de texte unique. Une valeur initiale pour la ligne peut être paramétrée à l'aide de la propriété « & #160; text & #160; ». L'élément graphique peut être positionné en lecture seul à l'aide de la propriété « & #160; readOnly & #160; ». Il y a trois mode pour cet élément graphique, « & #160; Normal & #160; », « & #160; NoEcho & #160; » et « & #160; Password & #160; ». Le mode est sélectionné à l'aide de la propriété « & #160; echoMode & #160; ».
« & #160; LineEdit & #160; » possède un état, « & #160; default & #160; ».
Le texte de l'élément graphique pour un élément « & #160; LineEdit & #160; » est le texte contenu dans la ligne de texte.
ListBox
Un élément liste de choix (« & #160; ListBox & #160; ») donne accès à une liste d'éléments qui peuvent être sélectionnés. Normalement aucun ou un seul élément peuvent être sélectionné. Ce comportement peut être modifié en changeant la propriété « & #160; selectionMode & #160; ». Des éléments sont ajoutés à la liste de choix en utilisant la fenêtre de modification.
Une « & #160; ListBox & #160; » possède uniquement un état, « & #160; default & #160; ».
Le texte de l'élément graphique pour un élément « & #160; ListBox & #160; » est constitué des éléments contenus dans la liste de choix. @selectedWidgetText retournera uniquement l'élément qui est actuellement sélectionné.
ListView
Cet élément graphique est maintenant fonctionnel dans & kommander;. Il est fonctionnellement identique à l'élément graphique d'arborescence (« & #160; tree widget & #160; »), merci d'aller voir cet élément pour plus d'informations.
PixmapLabel
C'est un élément graphique tout simple qui contient une image ou un label. L'image (« & #160; Pixmap & #160; ») à afficher est sélectionnée à l'aide de la propriété « & #160; pixmap & #160; ». Un texte est paramétré à l'aide de la propriété « & #160; text & #160; ». Uniquement une de ces deux propriétés peut être paramétré à la fois (Je pense que je n'ai pas réussi à faire fonctionner l'éditeur pour afficher les deux en même temps). Si la propriété « & #160; scaledContents & #160; » est positionnée sur « & #160; true & #160; » l'image sera redimensionnée pour être contenu dans l'élément graphique. Le format du texte peut être configuré à l'aide de la propriété « & #160; textFormat & #160; ».
Cet élément n'est pas un élément actif de & kommander; et il ne possède ni état ni texte associé.
RadioButton
C'est un bouton qui peut être coché ou non coché, il est généralement utilisé dans un « & #160; ButtonGroup & #160; » pour produire un choix exclusif. Un label associé au bouton peut être configuré à l'aide de la propriété « & #160; text & #160; ». Un bouton peut être initialisé à la valeur coché en positionnant la propriété « & #160; checked & #160; » à « & #160; true & #160; ». Si tous les bouton radio (« & #160; RadioButton & #160; ») ont la propriété « & #160; checked & #160; » à « & #160; true & #160; », alors le dernier bouton sera celui qui sera en coché.
Les boutons radio possèdent deux états, coché (« & #160; checked & #160; ») et non-coché (« & #160; unchecked & #160; »).
Il n'y a pas de texte d'élément graphique associé avec les boutons radio.
RichTextEditor
Ces éléments graphique fournissent un éditeur de texte qui permet du formatage de texte simple.
Le « & #160; RichTextEditor & #160; » possède un état, « & #160; default & #160; ».
Le texte associé à l'élément graphique « & #160; RichTextEditors & #160; » est le texte contenu dans l'éditeur dans un format RTF (« & #160; Rich Text Format & #160; »). Un texte sélectionné dans l'éditeur peut être obtenu à l'aide du spécial @selectedWidgetText.
SpinBoxInt
C'est un élément graphique qui permet à l'utilisateur de changer une valeur entière (« & #160; integer & #160; ») soit en pressant des flèches montantes et descendantes soit en saisissant une valeur dans la boîte. Des valeurs maximum et minimum peuvent être configurés pour l'élément graphique à l'aide des propriétés « & #160; minValue & #160; » et « & #160; maxValue & #160; ». La propriété « & #160; specialValueText & #160; » est utilisé pour configurer un texte qui sera affiché à la place de la valeur minimum.
Cet élément graphique possède un état, « & #160; default & #160; ».
Le texte associé à l'élément graphique « & #160; SpinBoxInt & #160; » est la valeur entière actuellement affichée.
SubDialog
C'est un bouton qui exécute une autre boîte de dialogue & kommander; lorsqu'il est actionné. La boîte de dialogue à exécuter est configurée à l'aide de la propriété « & #160; kmdrFile & #160; ». Si la propriété « & #160; default & #160; » est positionnée sur « & #160; true & #160; » la boîte de dialogue s'exécutera si la touche entrée est actionnée pendant que la boîte de dialogue à le focus. Je pense que vous pouvez également l'utiliser en tant que container. J'ai besoin de jouer avec cela un peu plus.
« & #160; SubDialog & #160; » possède un état, « & #160; default & #160; ».
Le texte associé à l'élément graphique « & #160; SubDialog & #160; » est le texte associé à la boîte de dialogue qu'il exécute.
C'était destiné à contenir la boîte de dialogue, ce qui est maintenant déconseillé. Devrions nous laisser cela à @dialog() dans son texte & kommander; ou s'en débarasser & #160;? Dans l'état acteul ce n'est pas satisfaisant.
TabWidget
C'est un élément graphique qui donne accès à plusieurs onglets qui peuvent chacun contenir d'autres éléments graphiques.
TextEdit
C'est un éditeur simple de texte multiligne.
TextLabel
C'est un élément graphique simple qui contient un morceau de texte. Cet élément graphique vous permet d'y configurer une image également. OK, l'éditeur dit qu'ils sont tous les deux des QLabels. Pourquoi avons nous 2 éléments graphiques qui semblent être les mêmes choses, mais avec des noms différents & #160;? - Il est prévu de corriger ça dans A7.
Pour la version Alpha 6 cet élément graphique est partiellement fonctionnel et peut être configuré depuis l'extérieur à l'aide d'appels DCOP.
TreeWidget
C'est un élément graphique qui fourni une liste sous la forme d'une arborescence. Cet élément graphique est totalement opérationnel pour ajouter ou supprimer des éléments dans la verions Alpha 6. Vous pouvez ajouter des éléments enfants et des données multi-collonne. La limitation actuelle est que vous ne pouvez pas modifier les colonnes. Pour ajouter une noeud enfant utilisez / comme séparateur. Pour ajouter un colonne utilisez le caractère échapé de tabulation \ entre les colonnes.