# language_name_wals:	French
# language_name_glotto:	French
# iso639_3:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Instruction Exit [Exécution]
/text/sbasic/shared/03090412.xhp
Sun Microsystems, Inc.
converted from old format - fpe
Exit, instruction
Instruction Exit [Exécution]
Do...Loop
, une instruction
For...Next
, une fonction ou une sous-routine.
Syntaxe :
Voir Paramètres
Paramètres :
Exit Do
Do...Loop
; permet de quitter la boucle.
L'exécution du programme se poursuit par l'instruction figurant juste après l'instruction Loop.
Si des instructions
Do...Loop
sont imbriquées, le contrôle est transféré à la boucle du prochain niveau supérieur.
Exit For
For...Next
; permet de quitter cette boucle.
L'exécution du programme se poursuit par la première instruction figurant après l'instruction
Next
.
Dans des instructions imbriquées, le contrôle est transféré à la boucle du prochain niveau supérieur.
Exit Function
Function
.
L'exécution du programme se poursuit par l'instruction figurant après l'appel de
Function
.
Exit Sub
Sub
.
L'instruction Exit ne définit pas la fin d'une structure et ne doit pas être confondue avec l'instruction End.
Exemple :
Sub ExampleExit
Dim sReturn As String
Dim sListArray(10) as String
Dim siStep as Single
For siStep = 0 to 10 REM Remplir la matrice avec les données de test
sListArray(siStep) = chr(siStep + 65)
msgbox sListArray(siStep)
next siStep
sReturn = LinSearch(sListArray(), &quot; B &quot; )
Print sReturn
end sub
Function LinSearch( sList(), sItem As String ) as integer
dim iCount as Integer
REM LinSearch recherche une TextArray:sList() dansTextEntry :
REM Renvoie l'index de l'entrée ou 0 (Null)
for iCount=1 to Ubound( sList() )
if sList( iCount ) = sItem then
Exit for REM sItem trouvé
end if
next iCount
if iCount = Ubound( sList() ) then iCount = 0
LinSearch = iCount
end function