# language_name_wals:	French
# language_name_glotto:	French
# iso639_3:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Annexe B.
Migration de PHP 3.0 à PHP 4.0
Suivant
Bien que PHP 4.0 dispose de nombreuses nouvelles fonctionnalités fonctions et extensions, vous vous rencontrer des fonctions PHP 3.0 qui manquent.
Un petit nombre de fonctions de base n'ont pu être portées en PHP 4.0, maintenant que l'analyse et l 'éxécution ont été séparées.
D 'autres fonctions, et mêmes des extensions entières sont maintenant obsolètes, remplacées par de nouvelles fonctions plus puissantes ou plus efficaces.
Certaines fonctions n 'ont tout simplement pas été portées pour le moment ou pour des raisons de licences.
Comme PHP 4.0 sépare l'analyse et l'éxécution, il n'est plus possible de modifier le comportement de l'analyseur (intégré dans le moteur Zend) durant l'éxécution, puisque toute l 'analyse a eu lieu, et est terminée.
La fonction short_tags() a cessé d 'exister.
Vous pouvez toujours modifier le comportement de l 'analyseur avec le fichier php.ini.
Une autre fonctionnalité qui a disparu est le débuggeur de PHP 3.0, comme décrit dans un autre appendice.
Un nouveau débuggeur est promis par Zend, mais il n 'a pas encore montré le bout de son nez.
Les extensions Adabas et Solid n 'existent plus.
Elles sont intégrées dans les fonctions ODBC Unifié.
unset(), bient que toujours disponible, a été implémenté légèrement différemment en PHP 4.0, et elle n'est plus vraiment une 'fonction '.
Cela n'a pas de conséquence directe sur le comportement de unset(), mais utiliser cette fonction pour faire un test avec function_exists() retournera FALSE comme il se doit avec les fonction bas niveau comme echo().
Une autre application pratique disparue est qu'il n'est plus possible d'appeler unset() indirectement, c'est-à-dire que $func="unset"; $func($somevar) ne fonctionne plus.
Précédent
Sommaire
Suivant

Niveau supérieur
Extensions PHP 3.0