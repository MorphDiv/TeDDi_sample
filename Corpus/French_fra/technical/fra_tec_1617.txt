# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Instruction For...Next [Exécution]
/text/sbasic/shared/03090202.xhp
Sun Microsystems, Inc.
converted from old format - fpe
For, instruction
To, instruction
Step, instruction
Next, instruction
Instruction For...Next [Exécution]
Répète un nombre de fois spécifié les instructions comprises dans le bloc For...Next.
Syntaxe :
For compteur=début To fin [Step pas]
bloc d'instructions
[Exit For]
bloc d'instructions
Next [compteur]
Variables :
Compteur :
le compteur de boucles assigne initialement la valeur à droite du signe égal (Début).
Seules les variables numériques sont reconnues.
Le compteur de boucles augmente ou diminue en fonction de la variable Pas jusqu'à ce que Fin soit transmis.
Début :
variable numérique définissant la valeur initiale (début de la boucle).
Fin :
variable numérique définissant la valeur finale (fin de la boucle).
Pas :
définit le facteur d'augmentation ou de réduction du compteur de boucles.
Si Pas n'est pas spécifié, le compteur de boucles est incrémenté de 1.
Dans ce cas, Fin doit être supérieur à Début.
Pour réduire le compteur, Fin doit être inférieur à Début et Pas doit avoir une valeur négative.
For...Next
répète toutes les instructions comprises dans la boucle le nombre de fois spécifié par les paramètres.
%PRODUCTNAME
Basic vérifie si la valeur finale a été atteinte.
Dès que le compteur transmet la valeur finale, la boucle prend fin automatiquement.
For...Next
.
Si aucune variable n'est spécifiée après l'instruction
Next
,
Next
se réfère automatiquement à l'instruction
For
la plus récente.
For
et
Next
sont répétées en continu.
Lorsque la variable du compteur diminue, $[officename] Basic vérifie l'absence de débordement ou de soupassement de capacité.
La boucle prend fin lorsque le compteur est supérieur à End (valeur de pas positive) ou inférieur à End (valeur de pas négative).
Exit For
pour sortir de la boucle sans condition.
Cette instruction doit être insérée à l'intérieur d'une boucle
For...Next
.
Pour évaluer la condition de sortie, utilisez l'instruction
If...Then
comme suit :
For...
instructions
If condition = True Then Exit For
instructions
Next
For...Next
imbriquées, si vous quittez une boucle sans condition au moyen de
Exit For
, vous ne quittez que cette boucle.
Exemple
L'exemple suivant utilise deux boucles imbriquées pour trier une matrice de type chaîne comportant 10 éléments ( sEntry() ) au contenu varié :
Sub ExampleSort
Dim sEntry(9) As String
Dim iCount As Integer
Dim iCount2 As Integer
Dim sTemp As String
sEntry(0) = &quot; Jérémie &quot;
sEntry(1) = &quot; Patricia &quot;
sEntry(2) = &quot; Kévin &quot;
sEntry(3) = &quot; Thomas &quot;
sEntry(4) = &quot; Michel &quot;
sEntry(5) = &quot; David &quot;
sEntry(6) = &quot; Cathy &quot;
sEntry(7) = &quot; Suzanne &quot;
sEntry(8) = &quot; Ernest &quot;
sEntry(9) = &quot; Christine &quot;
For iCount = 0 To 9
For iCount2 = iCount + 1 To 9
If sEntry(iCount) > sEntry(iCount2) Then
sTemp = sEntry(iCount)
sEntry(iCount) = sEntry(iCount2)
sEntry(iCount2) = sTemp
End If
Next iCount2
Next iCount
For iCount = 0 To 9
Print sEntry(iCount)
Next iCount
End Sub