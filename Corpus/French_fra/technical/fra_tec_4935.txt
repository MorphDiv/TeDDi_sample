# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Chapitre 14.
Les classes et les objets
Suivant
Il arrive que vous ayez à écrire du code qui faire référence aux variables et fonctions des classes de base.
C 'est particulièrement vrai si votre classe dérivée est une spécialisation de votre classe de base.
Au lieu d'utiliser le nom litéral de votre classe de base dans votre code, vous pouvez utiliser le mot réservé parent, qui représente votre classe de base (celle indiqué par extends, dans la déclaration de votre classe).
En faisant cela, vous éviter d 'appeler le nom de votre classe de base directement dans votre code.
Si votre héritage change, vous n'aurez plus qu 'à modifier le nom de la classe dans la déclaration extends de votre classe.
?php class A {function example() {echo "Je suis A::example() et je fournis une fonctionnalité de base. br \n";}} class B extends A {function example() {echo "Je suis B::example() et je fournis une fonctionnalité supplémentaire. br \n"; parent::example();}} $b = new B; / / Cette syntaxe va appeler B::example(), qui, à sont tour, va appeler A::example(). $b - example();?
Précédent
Sommaire
Suivant
Opérateur::
Niveau supérieur
Sauvegarde d 'objets - cas des sessions