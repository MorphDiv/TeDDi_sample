# language_name_wals:	French
# language_name_glotto:	French
# iso639_3:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Suivant

session_register() enregistre toutes les variables de nom name dans la session courante.
Le nombre de variables enregistré est libre.
Les noms peuvent être passé comme des chaînes, ou comme des tableaux contenant des chaînes ou des tableaux.
Poru chaque nom, session_register() place la variable dans la session courante, pour la sauvegarde de fin de script.
Attention
Cette fonction enregistre une variable global.
Si vous enregistrer une variable globale dans une fonction, vous devez vous assurer de la rendre globale, avec global, ou bien utiliser un des tableaux de session ci-dessous.
Attention
Si vous utilisez $_SESSION (ou $HTTP_SESSION_VARS), n'utilisez pas session_register(), session_is_registered() et session_unregister().
session_register() retourne TRUE si toutes les variables ont été enregistrées correctement dans la session.
Si session_start() n'a pas été appelé avant cette fonction, un appel implicite à session_start() sans aucun paramètre ne sera fait.
Vous pouvez aussi créer une variable de sessio, simplement en ajoutant l 'index approprié dans la variable $_SESSION ou $HTTP_SESSION_VARS.
?php $barney = "Un gros dinosaure violet ."; session_register("barney"); $_SESSION["zim"] = "Un envahisseur d'un autre plan egrave;te ."; / / L'ancienne m eacute;thode avec $HTTP_SESSION_VARS $HTTP_SESSION_VARS["spongebob"] = "Il a un cale ccedil;on carr eacute; !";?

Il n'est actuellement pas possible d 'enregistrer des ressources dans les sessions.
Par exemple, vous ne pouvez pas créer de connexion à une base de données, et stocker la connexion dans une variable de session.
Elle ne sera pas valide lors de la prochaine page.
Les fonctions PHP qui retournent des ressources sont identifiées avec le type resource dans leur définitions.
Une liste de fonction qui retournent de3s ressources sont disponible dans l 'annexe types de ressources.
Si $_SESSION (ou $HTTP_SESSION_VARS pour les versions antérieures à PHP 4.0.6) est utilisé, assignez les variables à $_SESSION. i.e. $_SESSION['var'] = 'ABC';
Voir aussi session_is_registered() et session_unregister().
Précédent
Sommaire
Suivant

Niveau supérieur
