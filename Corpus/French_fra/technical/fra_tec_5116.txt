# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Chapitre 5.
Sécurité
Suivant
Les plus grandes faiblesses de nombreux programmes PHP ne viennent pas du langage lui-même, mais de son utilisation en omettant les caractéristiques de sécurité.
Pour cette raison, vous devez toujours prendre le temps de prendre en compte les implications d'une fonction, et de cerner toutes les applications d 'une utilisation exotiques des paramètres.
Exemple 5-11.
Utilisation dangereuse de variables
?php / / efface un fichier à la racine d'un utilisateur... ou peut être / / de quelqu'un d'autre? unlink($evil_var); / / Note l'accès de ce fichier... ou pas? fputs($fp, $evil_var); / / Exécute une commande triviale... ou ajoute une entrée dans / etc / password? system($evil_var); exec($evil_var);?
Est-ce que ce script n 'affectera que les fichiers prévus?
Est-il possible que des valeurs incohérentes soient exploitées ici?
Est-ce que ce script peut être utilisé dans un but différent?
Est-ce que ce script peut être utilisé malicieusement, en conjonction avec d 'autres?
Est-ce que toutes les actions seront notées?
Vous pouvez aussi envisager de supprimer l'acquisition automatique des variables d'environnement, les guillemets magiques (magic_quotes), ou encore toute option qui pourrait vous conduire à mésévaluer la validité, la source ou la valeur d 'une variable.
En travaillant avec error_reporting( E_ALL), vous pouvez être averti que certaines variables sont utilisées avant d'être exploitées, ou vérifiées (et donc, vous pourrez traiter des valeurs exotiques à la source).
Précédent
Sommaire
Suivant
Utilisation des variables HTTP
Niveau supérieur
Masquer PHP