# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Chapitre 12.
Les structures de contrôle
Suivant
La boucle while est le moyen le plus simple d 'implémenter une boucle en PHP.
Cette boucle se comporte de la même manière qu 'en C.
L'exemple le plus simple d 'une boucle while est le suivant:
?php while (expression) commandes?
La signification d 'une boucle while est très simple.
Le PHP exécute l'instruction tant que l 'expression de la boucle while est évaluée comme TRUE.
La valeur de l'expression est vérifiée à chaque début de boucle, et, si la valeur change durant l'exécution de l'instruction, l'exécution ne s'arrêtera qu'à la fin de l'itération (chaque fois que le PHP exécute l'instruction, on appelle cela une itération).
De temps en temps, si l'expression du while est FALSE avant la première itération, l 'instruction ne sera jamais exécutée.
Comme avec le if, vous pouvez regrouper plusieurs instructions dans la même boucle while en les regroupant à l 'intérieur de parenthèses ou en utilisant la syntaxe suivante:
?php while (expression): commandes... endwhile;?
Les exemples suivants sont identiques, et affichent tous les nombres de 1 à 10:
?php / * exemple 1 * / $i = 1; while ($i = 10) {print $i++; / * La valeur affiche est $i avant l'incr eacute;mentation (post-incr eacute;mentation) * /} / * exemple 2 * / $i = 1; while ($i = 10): print $i; $i++; endwhile;?
Précédent
Sommaire
Suivant
Syntaxe alternative
Niveau supérieur
