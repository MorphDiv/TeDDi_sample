# language_name_wals:	French
# language_name_glotto:	French
# iso639_3:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Suivant
Les fonctions d 'entrée / sorties vous permettent de contrôler quand les données ont été envoyées par le script.
Cela peut être utile dans certaines situations, notamment si vous devez envoyer des en-têtes au navigateur après avoir envoyé des données.
Ces fonctions n'affectent pas les en-têtes envoyées par la fonction header() ou les cookies envoyés par setcookie().
Seules les fonctions telles que echo() et les données entre blocs PHP sont affectées.
Exemple 1.
Exemple de gestion des sorties
?php ob_start(); echo "Bonjour\n"; setcookie ("nom_du_cookie", "valeur_du_cookie"); ob_end_flush();?
Dans l'exemple ci-dessus, la fonction echo() est stockée dans un buffer jusqu'à l'appel de la fonction ob_end_flush().
Dans le même temps, l'appel à setcookie() a réussi à créer un cookie, sans générer d'erreur. (D'habitude, vous devez envoyer les en-têtes avant les données).
Voir aussi header() et setcookie().
Précédent
Sommaire
Suivant

Niveau supérieur
