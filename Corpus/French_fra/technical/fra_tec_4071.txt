# language_name_wals:	French
# language_name_glotto:	French
# iso639_3:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Suivant

En cas de succès, les données déchiffrées sont placées dans open_data.
openssl_open() ouvre (déchiffre) les données sealed_data en utilisant la clé prviée priv_key_id et la clé d 'enveloppe env_key et remplis open_data avec les données déchiffrées.
La clé d'enveloppe est générée lorsque les données sont scellées, et ne peut être utilisée qu 'avec la clé privée spécifique.
Reportez-vous à openssl_seal() pour plus d 'informations.
Exemple 1.
Exemple avec openssl_open()
?php / / On suppose que $sealed et $env_key contiennent les données scellées / / et la clé d'enveloppe, fournies par l'expéditeur / / lecture de la clé privée dans un fichier $fp = fopen(" / src / openssl-0.9.6 / demos / sign / key.pem", "r"); $priv_key = fread($fp, 8192); fclose($fp); $pkeyid = openssl_get_privatekey($priv_key); / / déchiffrage des données: elles sont placées dans $open if (openssl_open($sealed, $open, $env_key, $pkeyid)) echo "Voici les données déchiffrées: ", $open; else echo "Impossible de déchiffrer les données"; / / libération des ressources openssl_free_key($pkeyid);?
Voir aussi openssl_seal().
Précédent
Sommaire
Suivant

Niveau supérieur
