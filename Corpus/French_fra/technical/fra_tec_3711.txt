# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Suivant

ltrim() retourne la chaîne str, après avoir supprimé les caractères invisibles de début de chaîne.
Si le second paramètre charlist a été omis, ltrim() supprimera les caractères suivants:
"" (ASCII 32 (0x20)), un espace ordinaire.
"" (ASCII 9 (0x09)), une tabulation.
"\n" (ASCII 10 (0x0A)), une nouvelle ligne (line feed).
"\r" (ASCII 13 (0x0D)), un retour chariot (carriage return).
"\0" (ASCII 0 (0x00)), le caractère NUL.
"\x0B" (ASCII 11 (0x0B)), une tabulation verticale.
Il est aussi possible de spécifier les caractères à supprimer en utilisant le paramètre charlist.
Listez simplement les caractères que vous voulez supprimer dans ce paramètre.
Avec.., vous pourrez spécifier des intervalles de caractères.
Exemple 1.
Exemple avec ltrim()
?php $text = "Voici quelques mots:)..."; $trimmed = ltrim($text); / / $trimmed = "Voici quelques mots:)... "$trimmed = ltrim($text," ."); / / $trimmed = "Voici quelques mots:)... "$clean = ltrim($binary ,"\0x00..\0x1F"); / / supprime tous les caract egrave;res de contrôle ASCII au d eacute;but de la cha icirc;ne de caract egrave;res. / / (de 0 agrave; 31 inclus)?

Le second paramètre a été ajouté en PHP 4.1.0.
Voir aussi trim() et rtrim().
Précédent
Sommaire
Suivant

Niveau supérieur
