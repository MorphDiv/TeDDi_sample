# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Suivant

pg_send_query() exécute la requête query sur la connexion connection, de manière asynchrone.
Contrairement à pg_query(), cette fonction permet d'envoyer plusieurs requêtes à un serveur PostgreSQL et de lire les résultats un par un, avec la fonction pg_get_result().
L'éxécution du script n'est pas bloquée durant l 'exécution de la requête.
Utilisez pg_connection_busy() pour vérifier si la connexion est encore occupée.
Les requêtes peuvent être annulées avec pg_cancel_query().
Bien que l'on puiss envoyer plusieurs requêtes en même temps, il n'est pas possible d 'envoyer plusieurs requêtes sur une connexion occupée.
Si une requête est envoyée alors que la connexion est occupée, elle attendra que la requête précédente soit finie.
Voir aussi pg_query(), pg_cancel_query(), pg_get_result() et pg_connection_busy().
Précédent
Sommaire
Suivant

Niveau supérieur
