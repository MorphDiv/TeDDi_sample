# language_name_wals:	French
# language_name_glotto:	French
# iso639_3:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Instruction LSet [Exécution]
/text/sbasic/shared/03120304.xhp
Sun Microsystems, Inc.
converted from old format - fpe
LSet, instruction
Instruction LSet [Exécution]
Aligne une chaîne de caractères à gauche d'une variable de chaîne de caractères ou copie une variable de type défini par l'utilisateur vers une autre variable d'un autre type défini par l'utilisateur.
Syntaxe :
LSet Var As String = Text ou LSet Var1 = Var2
Paramètres :
Var :
toute variable de chaîne de caractères contenant la chaîne de caractères à aligner à gauche.
Text :
chaîne de caractères à aligner à gauche de la variable de chaîne de caractères.
Var1 :
nom de la variable de type défini par l'utilisateur vers laquelle la copie doit être effectuée.
Var2 :
nom de la variable de type défini par l'utilisateur à partir de laquelle la copie doit être effectuée.
LSet
aligne la chaîne à gauche dans la variable de chaîne de caractères.
Toutes les positions restantes dans la variable de chaîne de caractères sont remplacées par des espaces.
Si la chaîne de caractères est plus longue que la variable de chaîne de caractères, seuls sont copiés les caractères situés le plus à gauche, et ce, dans la limite du nombre de caractères composant la variable de chaîne.
L'instruction
LSet
vous permet également de copier une variable de type défini par l'utilisateur vers une autre variable du même type.
Exemple :
Sub ExampleRLSet
Dim sVar As String
Dim sExpr As String
sVar = String(40, &quot; * &quot; )
sExpr = &quot; SBX &quot;
REM Aligner &quot; SBX &quot; dans une chaîne de référence de 40 caractères
REM Remplacer les astérisques par des espaces
RSet sVar = sExpr
Print &quot; > &quot; ; sVar; &quot; < &quot;
sVar = String(5, &quot; * &quot; )
sExpr = &quot; 123457896 &quot;
RSet sVar = sExpr
Print &quot; > &quot; ; sVar; &quot; < &quot;
sVar = String(40, &quot; * &quot; )
sExpr = &quot; SBX &quot;
REM Aligner à gauche &quot; SBX &quot; dans une chaîne de référence de 40 caractères
LSet sVar = sExpr
Print &quot; > &quot; ; sVar; &quot; < &quot;
sVar = String(5, &quot; * &quot; )
sExpr = &quot; 123456789 &quot;
LSet sVar = sExpr
Print &quot; > &quot; ; sVar; &quot; < &quot;
End Sub