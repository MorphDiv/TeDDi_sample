# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Chapitre 2.
Une introduction à PHP
Suivant
Maintenant que PHP est devenu un langage de script populaire, il existe de nombreuses ressources qui vous proposent des portions de code que vous pouvez réutiliser dans vos codes.
Pour la pluspart, les dévelopeurs de PHP ont tâché d 'assurer la compatibilité ascendante, ce qui fait que de nombreux scripts écrits pour les anciennes versions sont aussi valables pour les nouvelles versions de PHP, idéalement sans modifications.
En pratique, certaines modifications doivent être apportées.
Les deux modifications récentes les plus importantes qui affectent les anciens codes sont:
Les anciennes variables $HTTP_*_VARS (qui devaient être indiquées comme globales pour être utilisées dans une fonction ou une méthode) sont obsolètes.
Les nouveaux tableaux auto-globaux ont été introduit en PHP 4.1.0.
Ce sont les variables suivantes: $_GET, $_POST, $_COOKIE, $_SERVER, $_ENV, $_REQUEST et $_SESSION.
Les vieux tableaux $HTTP_*_VARS, tels que $HTTP_POST_VARS existent toujours depuis PHP 3.
Les variables externes ne sont plus enregistrées dans l 'environnement variable par défaut.
En d 'autres termes, depuis PHP 4.2.0, la directive PHP register_globals vaut off par défaut dans le php.ini.
La méthode recommandée pour accéder à ces valeurs, est via les tableaux auto-globaux mentionnés ci-dessus.
Les anciens scripts, livres et tutoriaux continuent de considérer que cette directive devrait être à on.
Lorsque cette directive est à on, vous pouvez utiliser la variable $id, si l 'URL http: / /www.exemple.com / foo.php?id=42 a été appelée.
Quelle que soit la valeur de la directive, $_GET[ 'id'] est toujours disponible.
Précédent
Sommaire
Suivant
Utiliser un formulaire
Niveau supérieur
Et après?