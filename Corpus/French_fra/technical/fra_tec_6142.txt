# language_name_wals:	French
# language_name_glotto:	French
# iso639_3:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Surveiller les entrées & #160; / sorties pour %1 (%2)
Le programme « & #160; %1 & #160; » (PID & #160;: %2) est surveillé au niveau des entrées & #160; / sorties à travers n'importe quel descripteur de fichier (stdin, stdout, stderr, fichiers ouverts, connexions réseau, etc.). Les données écrites par le processus sont affichées en rouge et les données qu'il lit en bleu.
& Attacher
& Pause
& Reprendre
& Détacher
Impossible d'attacher au processus %1.
Aller au processus parent
Aller au processus de débogage de celui -ci
Afficher la fenêtre de l' application
Surveiller les entrées & & sorties
Relancer le processus arrêté
Suspendre (STOP)
Continuer (CONT)
Raccrocher (HUP)
Interrompre (INT)
Terminer (TERM)
Tuer (KILL)
Utilisateur 1 (USR1)
Utilisateur 2 (USR2)
Mettre le focus sur la recherche rapide
Envoyer un signal
Aller au processus parent (%1)
Masquer la colonne « & #160; %1 & #160; »
Afficher la colonne « & #160; %1 & #160; »
Afficher les unités
Kilooctets par seconde
kilooctet
Mégaoctets par seconde
mégaoctet
Gigaoctets par seconde
gigaoctet
Pourcentage
Afficher les options de la commande
Diviser l'utilisation du processeur par le nombre de processeurs
Information affichée
Lecture/ écriture des caractères
Nombre d'opérations de lecture/ écriture
Octets réellement lus/ écrits
Afficher le taux de I/ O
Afficher les infobulles
Vous n'êtes pas habilité à régler la courtoisie du processus et la tentative en tant que superutilisateur a échouée. Erreur %1 %2
Vous devez d'abord sélectionner un processus.
Vous ne disposez pas des droits suffisants pour modifier l'ordonnanceur du processeur. Abandon.
Vous ne disposez pas des droits suffisants pour modifier la priorité processeur. Abandon.
Vous ne disposez pas des droits suffisants pour modifier l'ordonnanceur et la priorité des entrées & #160; / sorties. Abandon.
Vous n'êtes pas habilité à modifier la priorité I/ O de ce processus et la tentative en tant que superutilisateur a échoué. Erreur %1 %2
Vous n'êtes pas habilité à modifier l'outil d'ordonnancement CPU pour ce processus et la tentative en tant que superutilisateur a échoué. Erreur %1 %2
Vous n'êtes pas habilité à tuer le processus et la tentative en tant que superutilisateur a échoué. Erreur %1 %2
Tuer
Interpréter la sortie comme contenant des commandes VT100. Pour les programmes en mode console.
Si cette option est activée, les séquences d'échappement ANSI seront interprétées au lieu d'être affichées. Très pratique lorsqu'on surveille bash.
Interpréter les séquences d'échappements ANSI
Afficher la sortie des processus lancés par ce processus.
Suivre les commandes « & #160; fork & #160; » et « & #160; clone & #160; » pour surveiller les processus fils
Surveiller les processus fils
Mettre en pause le processus et ses sorties
Arrêter de lire la sortie du processus. Cela engendrera le blocage du processus, et le mettra en pause. Le processus reprendra si cela est explicitement demandé, s'il est détaché ou si vous fermez la fenêtre de dialogue.
Arrêter de surveiller le processus
Arrêter de surveiller le processus et autoriser le processus à reprendre son exécution.
Envoyer le signal SIGTERM au processus sélectionné. Référez -vous à « Qu'est -ce que c'est & #160; » pour plus d'information. Cliquez-droit sur un processus pour envoyer d'autres signaux.
Tuer le processus...
Filtrer quels processus sont affichés via le texte donné ici. Le texte peut être un chaîne partielle correspond au nom, à la commande ou à la fenêtre du processus. Il peut également être le nom d'utilisateur ou le numéro du processus. Par exemple & #160;: ksys Afficher les processus contenant « & #160; ksys & #160; » dans leur nom, comme les processus « & #160; ksysguard & #160; » et « ksysguardd & #160; ». root Afficher les processus détenus par l'utilisateur root. Par exemple init 1234 Afficher les processus dont l'identifiant (PID) ou l'identifiant du parent est 1234.
Recherche rapide
Modifie le choix des processus affichés, et comment ils sont affichés. Les processus peuvent être encore plus filtrés en utilisant filtre textuel de recherche rapide. Tous les processus Affiche tous les processus présents du système. Tous les processus, arborescence Affiche tous les processus du système, sous une forme hiérarchique en utilisant l'information ID parent (PID). Processus système Affiche les processus s'exécutant en tant que « root & #160; » ou en tant qu'un utilisateur ne pouvant pas s'identifier. Processus utilisateur Affiche les processus s'exécutant en tant qu'utilisateur non « & #160; root & #160; » pouvant s'identifier. Mes propres processus Affiche les processus détenu par le même utilisateur que celui qui exécute le présent processus. Les programmes seulement Affiche les processus s'exécutant en tant qu'un utilisateur pouvant s'identifier et sont attachés à un « & #160; TTY & #160; » ou ont au moins une fenêtre X11 d'ouverte. Information technique & #160;: Les processus disposant de plusieurs fils d'exécution (threads) sont simplement affichés comme un seul processus, et ne sont en aucune manière traités différemment. Les fils d'exécution du noyau sont affichés comme des processus normaux, mais ils s'exécutent en fait dans le noyau et ne sont pas de vrais processus. Pour cette raison, nombre de leurs champs (comme le nom d'utilisateur) n'ont pas de sens.
Tous les processus
Tous les processus, en arbre
Processus systèmes
Processus utilisateurs
Mes propres processus
Seulement les programmes
Modifier la priorité dans l'ordonnancement en & #160;:
Ordonnanceur du processeur
p, li {white-space: pre-wrap;} L'ordonnanceur standard qui gère le partage du temps des processus qui n'ont aucune exigence ou prérequis particulier.
p, li {white-space: pre-wrap;} Ordonnancement normal & #160;: partage du temps de processeur par défaut de Linux (autre) Normal est l'ordonnanceur standard qui gère le partage du temps des processus qui n'ont aucune priorité fixe liée à des mécanismes temps réel. Le processus sélectionné est choisi dans la liste des autres processus classés dans la catégorie Normal ou Batch en se basant sur un calcul dynamique de la priorité réalisé uniquement à l'intérieur de la liste. Ce calcul dynamique se base sur le niveau donné de priorité et qui augmente à chaque fois que le processus est prêt à s'exécuter mais que l'ordonnanceur décide de ne pas le laisser s'exécuter. Cela assure une progression égale de tous les processus de type Normal.
Normal
p, li {white-space: pre-wrap;} Pour les processus qui utilisent intensivement le processeur et de manière non-interactive. Le processus est moyennement défavorisé des les décisions d'ordonnancement.
p, li {white-space: pre-wrap;} Ordonnancement Batch (depuis la version 2.6.16 de Linux) Cette politique est similaire à celle du type Normal, excepté qu'elle forcera l'ordonnanceur à toujours considérer que le processus utilise intensivement le processeur. Par conséquent, l'ordonnanceur appliquera une petite pénalité de manière à moyennement le défavoriser lors des décisions. Cette politique est très utile pour les lots de travaux à gérer en mode non-interactifs, mais qui ne veulent pas abaisser leur niveau de courtoisie, et pour les lots de travaux qui souhaitent une politique d'ordonnancement déterministe sans interactivité et les aspects préemptifs supplémentaires qu'elle apporte (entre les lots).
Batch
p, li {white-space: pre-wrap;} Le processus s'exécutera dès que possible. Plus haute priorité que pour les types Normal ou Batch. Découpe le temps en tranches.
p, li {white-space: pre-wrap;} Ordonnancement Round Robin Round Robin est une simple évolution de FIFO (file). Tout ce qui est décrit ci-dessous pour FIFO (file) est aussi valable pour Round Robin, excepté que chaque processus n'est autorisé à s'exécuter que dans des laps de temps de taille limitée.
Round Robin
p, li {white-space: pre-wrap;} Le processus s'exécutera dès que possible. Plus haute priorité que pour les types Normal ou Batch. Pas de découpe du temps en tranches.
p, li {white-space: pre-wrap;} Ordonnancement FIFO (file) Quand un processus de type FIFO devient prêt à s'exécuter, il préempte immédiatement tout processus de type Normal ou Batch en cours d'exécution.
File
Ordonnanceur d'entrées & #160; / sorties
p, li {white-space: pre-wrap;} La priorité des processus s'appuie sur la priorité processeur.
p, li {white-space: pre-wrap;} Ordonnancement Normal C'est le même ordonnancement que celui nommé Best Effort, excepté que la priorité est calculée automatiquement à partir de la priorité du processeur. Les processus dont la priorité est supérieure auront la priorité pour accéder au disque dur. Les programmes s'exécutant avec la même priorité de type Best Effort & #160; / Normal sont servis à la manière Round Robin.
p, li {white-space: pre-wrap;} Le processus ne peut utiliser le disque dur que lorsqu'aucun autre processus ne l'a pas utilisé très récemment.
p, li {white-space: pre-wrap;} Ordonnancement Idle Un programme s'exécutant avec un priorité d'entrées & #160; / sorties Idle n'obtiendra du temps d'accès au disque dur que lorsqu'aucun autre programme n'en aura pas fait pas la demande depuis un temps de grâce donnée. L'impact des processus d'entrées & #160; / sorties du type Idle sur l'activité normale du système devrait être nulle. La priorité n'est pas applicable à ce type d'ordonnancement.
Inactif
p, li {white-space: pre-wrap;} Le processus se voit attribuer une priorité supérieure à celle des processus de type Normal pour accéder au disque dur.
p, li {white-space: pre-wrap;} Ordonnancement Best Effort Les processus dont la priorité est plus grande seront prioritaire pour les accès au disque dur. Les programmes s'exécutant avec le même niveau de priorité de type Best Effort & #160; / Normal sont servis à la manière Round Robin.
Meilleur effort
p, li {white-space: pre-wrap;} Dès qu'il en fait la demande, le processus obtient immédiatement l'accès au disque dur, sans tenir compte de ce qui se passe d'autre.
p, li {white-space: pre-wrap;} Ordonnancement Temps réel Le type d'ordonnancement Temps réel a toujours accès en premier au disque dur, sans tenir compte de ce qui se passe d'autre dans le système. Ainsi, le type Temps réel nécessite d'être employé avec précaution, car il peut totalement entraver le bon fonctionnement des autres processus. Tout comme pour le type Best Effort, les 8 niveaux de priorité sont définis pour indiquer la taille des tranches de temps qu'un processus donné aura à disposition pour chaque fenêtre d' ordonnancement
Temps réel
Faible priorité
Haute priorité
Erreur de script & #160;: le paramètre passé à setHtml() n'était pas de type String
Erreur de script & #160;: le paramètre passé à fileExists() n'était pas de type String
Erreur de script & #160;: le paramètre passé à readFile() n'était pas de type String
Impossible de lire le script « & #160; %1 & #160; ». Erreur « & #160; %2 & #160; »
- & #160; Le processus effectue une tâche.
- & #160; Le processus attend que quelque chose se produise.
- & #160; Le processus a été arrêté. Il ne peut répondre aux sollicitations de l'utilisateur pour le moment.
- & #160; Le processus a terminé sa travail et est mort, mais son processus parent n'a pas fait le ménage.
Le nom du processus.
L'utilisateur propriétaire du processus.
Le terminal de contrôle dans lequel s'exécute ce processus.
La priorité avec laquelle s'exécute ce processus. Située entre 19 (très courtois, priorité la moindre) et -19 (priorité maximum)
Le taux d'utilisation du processeur par le processus.
L'utilisation actuelle du processeur par le processus.
C'est la quantité d'espace mémoire virtuelle que le processus utilise, en prenant en compte les bibliothèques partagées, la mémoire graphique, les fichiers sur le disque, et d'autres choses. Ce nombre n'a presque pas de sens.
C'est la quantité de mémoire physique que le processus utilise à lui seul. Cela n'inclut pas les pages de mémoire mises sur disque, ni la taille des bibliothèques partagées entrant en jeu. C'est souvent l'indicateur le plus intéressant pour évaluer l'utilisation que fait le processus de la mémoire.
C'est la quantité de mémoire physique que les bibliothèques partagées nécessaires à l'exécution du processus utilisent. Cette quantité de mémoire n'est utilisée qu'une seule fois pour tous les processus s'appuyant sur ces bibliothèques.
La commande par laquelle le processus a été lancé
Le titre de toute fenêtre que ce processus affiche
L'identifiant unique de ce processus.
Le nombre d'octets lus. Référez -vous à « & #160; Qu'est -ce que c'est & #160;? & #160; » pour plus d'information.
Le nombre d'octets écrits. Référez -vous à « & #160; Qu'est -ce que c'est & #160;? & #160; » pour plus d'information.
Information technique & #160;: le nom du processus noyau est long d'un maximum de 8 caractères, pour que toute la commande soit examinée. Si le premier mot dans la ligne de commande complètecommence par le nom du processus, le premier mot de la ligne de commande est affiché, autrement le nom du processus est utilisé.
L'utilisateur qui détient ce processus. Si l'utilisateur effectif « & #160; setuid & #160; » etc est different, l'utilisateur qui possède ce processus sera affiché, suivi de l'utilisateur effectif. La bulle d'aide contient toutes les informations. Nom d'identification & #160; / Groupe Le nom d'utilisateur du véritable utilisateur & #160; / groupe qui a créé ce processus Utilisateur & #160; / groupe effectif Ce processus s'exécute avec les privilèges de l'utilisateur & #160; / groupe effectif. Cela s'affiche s'il est différent de l'utilisateur réel. Utilisateur & #160; / groupe setuid Le nom d'utilisateur enregistré pour le binaire. Le processus peut passer de son utilisateur & #160; / groupe effectif à son utilisateur & #160; / groupe setuid. Utilisateur & #160; / groupe du système de fichier Les accès au système de fichiers sont vérifiés avec l'utilisateur & #160; / le groupe du système de fichier. Il s'agit d'un appel spécifique à Linux. Référez -vous à setfsuid(2) pour plus d'information.
Il s'agit de l'espace d'adresse alloué & #160; - pas la mémoire, mais bien l'espace d'adresse. En pratique, cette valeur ne signifie pas grand chose. Lorsqu'un processus requiert un gros bloc de mémoire auprès du système mais n'en utilise une petite partie, l'utilisation réelle sera faible, VIRT sera haute. Information technique & #160;: il s'agit de la « & #160; VmSize & #160; » dans « & #160; / proc/ */ status & #160; » et VIRT dans « & #160; top & #160; ».
Information technique & #160;: il s'agit de l '« & #160; URSS & #160; » pour « & #160; Unique Resident Set Size & #160; » calculé comme VmRSS & #160; - partagé, depuis « & #160; / proc/ */ statm & #160; ». Cela tend à sous-estimer le « & #160; vrai & #160; » usage de la mémoire par un processus (en n'incluant pas les pages mémoire d'entrée & #160; / sortie d'arrière-plan), mais c'est la meilleure estimation aussi rapide à déterminer.
L'utilisation du processeur par un processus et tous ses fils d'exécution (threads).
Information technique & #160;: il s'agit de la mémoire partagée, appelée « & #160; SHR & #160; » dans « & #160; top & #160; ». C'est le nombre de pages mises en arrière-plan par un fichier (référez -vous à la documentation du noyau « & #160; / filesystems/ proc. txt & #160; »).
Information technique & #160;: cela provient de / proc/ */ cmdline
Information technique & #160;: pour chaque fenêtre X11, la propriété X11 « & #160; _NET_WM_PID & #160; » est utilisée pour faire correspondre la fenêtre à un « & #160; PID & #160; ». Si les fenêtres d'un processus ne sont pas affichées, alors cette application ne fixe pas comme il devrait le paramètre « & #160; _NET_WM_PID & #160; ».
Information technique & #160;: il s'agit de l'identifiant du processus. Une application « & #160; multi-thread & #160; » est considéré comme un seul processus, et tous les fils d'exécution partagent le même PID. L'utilisation du processeur etc. sera le total, l'accumulation de l'utilisation du processeur par tous les fils d'exécution.
Identifiant & #160;: %1
Cet utilisateur n'est pas reconnu pour une raison quelconque.
%1
Identifiant & #160;: %1 (uid & #160;: %2)
Numéro de chambre & #160;: %1
Téléphone professionnel & #160;: %1
Utilisateur effectif & #160;: %1
Utilisateur pour le setuid & #160;: %1
Utilisateur pour le système de fichiers & #160;: %1
Groupe & #160;: %1
Groupe effectif & #160;: %1
Groupe pour le setuid & #160;: %1
Groupe pour le système de fichiers & #160;: %1Short description of a process. PID, name, user
%1 & #160;: %2, propriété de l'utilisateur %3
%1 (gid & #160;: %2)
%1 (uid & #160;: %2)
%1 & #160; / stooltip. name, pid
Ce processus est en cours de débogage par %1 (%2)
Init est le parent de tout autre processus et ne peut être tué.
KThreadd gère les « & #160; threads & #160; » du noyau. Les processus fils s'exécutent dans le noyau, contrôlant les accès disque, etc. name column tooltip. first item is the name
%1 Id. du processus & #160;: %2 name column tooltip. first item is the name
%1 Id. du processus & #160;: %2 Parent & #160;: %3 Id. du parent & #160;: %4 name column tooltip. first item is the name
%1 Id. du processus & #160;: %2 Id. du parent & #160;: %3
Commande & #160;: %1
S'exécute sur & #160;: %1
Ce processus a été lancé avec la commande suivante & #160;: %1
S'exécute sur & #160;: %1
Niveau de courtoisie & #160;: %1 (%2)
Priorité d'ordonnancement & #160;: %1
Ordonnanceur & #160;: %1
Niveau de courtoisie pour les entrées & #160; / sorties & #160;: %1 (%2)
Classe d'entrées & #160; / sorties & #160;: %1
État du processus & #160;: %1 %2 Utilisation du processeur en mode utilisateur & #160;: %3 & #160;% Utilisation du processeur en mode système & #160;: %4 & #160;%
Nombre de fils & #160;: %1 Total de l'utilisation du processeur en mode utilisateur & #160;: %2 & #160;% Total de l'utilisation du processeur en mode système & #160;: %3 & #160;% Total de l'utilisation du processeur & #160;: %4 & #160;%
Temps du processeur dépensé en mode utilisateur & #160;: %1 seconde(s)
Temps du processeur dépensé en mode noyau & #160;: %1 seconde(s)
Niveau de courtoisie & #160;: %1 (%2)
Utilisation de la mémoire & #160;: %1 sur %2 (%3 & #160;%)
Utilisation de la mémoire & #160;: %1
Utilisation mémoire RSS & #160;: %1 sur %2 (%3 & #160;%)
Utilisation mémoire RSS & #160;: %1
Votre système ne semble pas mettre à disposition cette information.
Utilisation mémoire des bibliothèques partagées & #160;: %1 sur %2 (%3 & #160;%)
Utilisation mémoire des bibliothèques partagées & #160;: %1
Caractères lus & #160;: %1 (%2 Kio & #160; / s) Caractères écrits & #160;: %3 (%4 Kio & #160; / s) Syscalls de lecture & #160;: %5 (%6 s⁻ ¹) Syscalls d'écriture & #160;: %7 (%8 s⁻ ¹) Octets réellement lus & #160;: %9 (%10 Kio & #160; / s) Octets réellement lus & #160;: %11 (%12 Kio & #160; / s)process heading
Nomprocess heading
Utilisateurprocess heading
PIDprocess heading
TTYprocess heading
Courtoisieprocess heading
& #160;% CPUprocess heading
Lecture I/ Oprocess heading
Écriture I/ Oprocess heading
Taille virtuelleprocess heading
Mémoireprocess heading
Mém. partagéeprocess heading
Commandeprocess heading
Titre de la fenêtre
%1 k
%1 M
%1 G
%1%
Régler courtoisie
Non.
Exécutable kdesu introuvable
L'exécutable setscheduler est introuvable. Il aurait dû être installé en parallèle de l'outil de surveillance système.
Vous n'êtes pas habilité à modifier la courtoisie du processus et la tentative en tant que superutilisateur a échoué.
Vous n'êtes pas habilité à fixer la priorité des entrées & #160; / sorties et la tentative en tant que superutilisateur a échoué