# language_name_wals:	French
# language_name_glotto:	French
# iso639_3:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Suivant

Certains caractères ont des significations spéciales en HTML, et doivent être replacés par des entités HTML pour être affichés. htmlspecialchars() remplace tous ces caractères par leur équivalent dans la chaîne string.
Cette conversion est très pratique pour la programmation web.
Si vous devez remplacer tous les caractères, utilisez plutôt htmlentities() instead.
htmlspecialchars() est pratique pour éviter que des données fournies par les utilisateurs contiennent des balises HTML, comme pour un forum ou un chat.
Cette fonction prend un deuxième argument optionnel, qui indique comment doivent être traité les guillemets doubles et simples.
Vous pouvez utiliser l 'une des constantes suivantes:
ENT_COMPAT, la constante par défaut, va convertir les guillemets doubles, et ignorer les guillemets simples; ENT_QUOTES va convertir les guillemets doubles et les guillemets simples; ENT_NOQUOTES va ignorer les guillemets doubles et les guillemets simples.
Les remplacements effectués sont:
'' (ampersand) devient 'amp;'
'"' (guillemets doubles) devient 'quot;' lorsque ENT_NOQUOTES n 'est pas utilisé.
'' '(single quote) devient' #039; 'uniquement lorsque ENT_QUOTES est utilisé.
'' (supérieur à) devient 'lt;'
'' (inférieur à) devient 'gt;'
Exemple 1.
Exemple avec htmlspecialchars()
?php $new = htmlspecialchars( "a href='test 'Test / a", ENT_QUOTES);?
Notez que cette fonction ne fait aucune autre remplacement que ceux qui sont listés ci-dessus.
Pour faire un remplacement total, voyez plutôt htmlentities().
Le support pour l second argument optionnel a été ajouté en PHP 3.0.17 et PHP 4.0.3.
cette fonction prend un troisième argument optionnel qui définit le jeux de caractères utilisé durant la conversion.
Le support de cet argument a été ajouté en PHP 4.1.0.
Voir aussi htmlentities() et nl2br().
Précédent
Sommaire
Suivant

Niveau supérieur
