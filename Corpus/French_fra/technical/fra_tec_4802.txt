# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Suivant

unserialize() prend une variable linéarisée (voir serialize()) et la convertit en variable PHP.
La valeur convertie est retournée par la fonction, et peut être de type integer, double, string, array ou object.
Les objets linéarisés perdent leurs méthodes.
Exemple 1.
Exemple avec unserialize()
?php / / Ici, on utilise unserialize() pour charger les données de sessions / / depuis la base de données, dans $session_data.
Cet exemple complète / / celui fourni avec serialize(). $conn = odbc_connect ("webdb", "php", "chicken"); $stmt = odbc_prepare ($conn, "SELECT data FROM sessions WHERE id = ?"); $sqldata = array ($PHP_AUTH_USER); if (!odbc_execute ($stmt, $sqldata) | | !odbc_fetch_into ($stmt, $tmp)) {/ / si la préparation ou la lecture échoue, on crée un tableau vide $session_data = array();} else {/ / les données sauvées sont dasn $tmp[0]. $session_data = unserialize ($tmp[0]); if (!is_array ($session_data)) {/ / Erreur... initialisation à tableau vide $session_data = array();}}?
Précédent
Sommaire
Suivant

Niveau supérieur
