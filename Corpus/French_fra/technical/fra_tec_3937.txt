# language_name_wals:	French
# language_name_glotto:	French
# iso639_3:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Suivant

mysql_field_type() est similaire à la fonction mysql_field_name().
Les arguments sont identiques, mais c 'est le type du champs qui est retourné.
Il vaudra "int", "real", "string", "blob", ou d 'autres, comme détaillé dans la documentation MySQL.
Exemple 1.
Types mysql field
?php mysql_connect( "localhost:3306"); mysql_select_db("wisconsin"); $result = mysql_query("SELECT * FROM onek"); $fields = mysql_num_fields($result); $rows = mysql_num_rows($result); $i = 0; $table = mysql_field_table($result, $i); echo "Your '".$table ." 'table has ".$fields. "fields et ".$rows." records br "; echo "The table has the following fields br"; while ($i $fields) {$type = mysql_field_type($result, $i); $name = mysql_field_name($result, $i); $len = mysql_field_len($result, $i); $flags = mysql_field_flags($result, $i); echo $type. "".$name." ".$len. "".$flags." br "; $i++;} mysql_close();?
Pour des raisons de compatibilité ascendante, mysql_fieldtype() peut encore être utilisé.
Précédent
Sommaire
Suivant

Niveau supérieur
