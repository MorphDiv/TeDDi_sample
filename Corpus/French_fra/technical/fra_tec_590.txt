# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Ébauche de requête
/text/shared/explorer/database/02010100.xhp
Vues;création de vues de base de données (Base)
Requêtes;création en mode Ébauche (Base)
Ébauche;requêtes (Base)
Mode Ébauche;requêtes/vues (Base)
Jointure;tables (Base)
Tables de bases de données;jointure pour les requêtes (Base)
Requêtes;jointure de tables (Base)
Tables de bases de données;relations (Base)
Relations;jointure de tables (Base)
Requêtes;suppression de liens de table (Base)
Critères de l'ébauche de requête (Base)
Requêtes;formulation des conditions de filtre (Base)
Conditions de filtre;dans les requêtes (Base)
Paramètres;requêtes (Base)
Requêtes;paramétrables (Base)
SQL;requêtes (Base)
SQL natif (Base)
mw added &quot; (Base) &quot; to all entries
Ébauche de requête
mode Ébauche de requête
permet de créer et d'éditer une requête de base de données.
La plupart des bases de données utilisent des requêtes pour filtrer ou trier les tables de base de données, ou bien pour afficher les enregistrements à l'écran.
Les vues offrent les mêmes fonctionnalités que les requêtes, mais côté serveur.
Si votre base de données se trouve sur un serveur qui prend en charge les vues, vous pouvez utiliser ces dernières pour filtrer les enregistrements stockés sur le serveur et accélérer le temps d'affichage.
Créer une vue
dans l'onglet
Tables
d'un document de base de données permet d'afficher la fenêtre
Ébauche de vue
, similaire à la fenêtre
Ébauche de requête
décrite ici.
La mise en page de la fenêtre Ébauche de requête est enregistrée avec une requête créée mais ne peut pas être enregistrée avec une vue créée.
Mode Ébauche
Requêtes
dans un document de base de données, puis sur
Créer une requête en mode Ébauche
.
définir
la requête dans le volet inférieur de la fenêtre.
Pour définir une requête, spécifiez les
noms des champs
de la base de données que vous souhaitez inclure, ainsi que les
critères
d'affichage des champs.
Pour réorganiser les colonnes dans l'espace inférieur de la fenêtre du mode Ébauche, faites glisser un en-tête de colonne vers un autre endroit, ou sélectionnez la colonne et appuyez sur
Commande
Ctrl
+touche fléchée.
icônes
des barres
Ébauche de requête
et
Ébauche
s'affichent en haut de la fenêtre du mode Ébauche de requête.
Si vous souhaiter tester une requête, double-cliquez sur le nom de la requête dans le document de base de données.
Le résultat de la requête s'affiche dans une table similaire à la vue des sources de données.
Remarque : la table affichée est temporaire.
Touches en mode Ébauche de requête
Touche
Fonction
F4
Aperçu
F5
Exécuter la requête
F7
Ajouter une table ou une requête
Parcourir
Ajouter des tables
.
Vous obtenez alors une boîte de dialogue dans laquelle vous devez d'abord sélectionner la table constituant la base de la requête.
Double-cliquez sur les champs à ajouter à la requête.
Définissez des relations par glisser-déposer.
Lorsque vous concevez une requête, vous ne pouvez pas modifier les tables sélectionnées.
Suppression de tables
Supprimer
.
Vous pouvez également utiliser la touche Suppr.
Déplacer une table et modifier la taille de la table
Vous pouvez organiser les tables à votre gré et en modifier la taille.
Pour déplacer une table, cliquez sur le bord supérieur et faites-la glisser jusqu'à la position voulue.
Pour agrandir ou réduire l'affichage, faites glisser un bord ou un angle de la table.
Relations de table
Lorsque des données d'un champ d'une table sont liées à des données d'un champ d'une autre table, vous pouvez utiliser ces liens pour une requête.
Si, par exemple, vous disposez d'une feuille de calcul pour les articles identifiés par un numéro d'article et d'une feuille de calcul pour les clients dans laquelle vous enregistrez tous les articles qu'un client commande à l'aide des numéros d'article correspondants, une relation est alors établie entre les deux champs de données &quot; numéro d'article &quot; .
Si vous ne souhaitez pas créer une requête renvoyant tous les articles qu'un client a commandés, vous devez conserver les données des deux feuilles de calcul.
Pour cela, vous devez spécifier à $[officename] la relation existant entre les données des deux feuilles de calcul.
Pour ce faire, cliquez sur un champ de données d'une table (par exemple le champ &quot; Numéro d'article &quot; de la table Clients) et, tout en maintenant le bouton de la souris enfoncé, faites-le glisser jusqu'au champ de données de l'autre table ( &quot; Numéro d'article &quot; de la table Articles).
Lorsque vous relâchez le bouton de la souris, vous voyez un trait qui relie les deux champs des deux fenêtres.
La condition correspondante, à savoir que le contenu des deux champs de données doit être identique, est entrée dans la requête SQL résultante.
La création d'une requête basée sur plusieurs feuilles liées n'est possible que si vous utilisez $[officename] en tant qu'interface pour une base de données relationnelle telle qu'Adabas.
Vous ne pouvez pas accéder aux tables de plusieurs bases de données dans une requête.
Les requêtes impliquant plusieurs tables ne peuvent être créées que dans une seule base de données.
Définition du type de lien
Insertion - Nouvelle relation
, vous pouvez spécifier le type de lien dans la boîte de dialogue
Relations
.
Éditer les propriétés de la jointure.
Vous pouvez également appuyer sur la touche Tabulation jusqu'à ce que le vecteur de jointure soit sélectionné (il s'affiche agrandi).
Appuyez ensuite sur Maj+F10 pour afficher le menu contextuel et choisissez la commande
Éditer
.
Certaines bases de données ne support que certains sous ensembles de types de jointures possibles.
Suppression de relations
Pour supprimer un lien entre deux tables, cliquez sur le trait matérialisant ce lien à l'aide de la souris puis appuyez sur la touche (Suppr).
Champs utilisés
de la boîte de dialogue
Relations
.
Vous pouvez aussi appuyer sur la touche Tabulation jusqu'à ce que le vecteur de connexion soit mis en évidence, puis appuyer sur Maj+F10 pour ouvrir le menu contextuel et sélectionner la commande
Supprimer
.
Définir une requête
Sélectionnez les conditions de définition de votre requête.
Toutes les colonnes de la table d'ébauche acceptent des champs de données pour les requêtes.
Les conditions d'une ligne donnée sont liées par un ET logique.
Définition des champs de données
Sélectionnez d'abord tous les noms de champ dans les tables devant être ajoutées à la requête.
Pour ce faire, vous pouvez effectuer un glisser-déposer ou double-cliquer sur un nom de champ dans la fenêtre de la table.
Avec la méthode glisser-déposer, utilisez la souris pour amener un nom de champ depuis la fenêtre de table jusqu'à la zone inférieure de l'ébauche de requête.
Ce faisant, vous pouvez décider dans quelle colonne vous souhaitez ajouter le champ.
Sélectionnez un nom de champ en double-cliquant dessus.
Il est alors ajouté à la colonne libre suivante.
Suppression de champs de données
Supprimer
du menu contextuel de la colonne.
Enregistrer une requête
Enregistrer
de la barre standard pour enregistrer la requête.
Une boîte de dialogue vous invite à attribuer un nom à la requête.
Si la base de données prend en charge les schémas, vous pouvez également entrer un schéma.
Schéma
Saisissez le nom du schéma auquel doit être assignée la requête ou la vue de table.
Nom de la requête ou de la vue de table
Entrez le nom de la requête ou vue de table.
Filtrage des données
Pour filtrer les données pour la requête, définissez les préférences souhaitées dans la zone inférieure du mode Ébauche.
Les lignes suivantes sont disponibles :
Champ
Saisissez le nom du champ de données auquel vous avez fait référence dans la requête.
Tous les paramètres figurant dans les lignes inférieures se réfèrent à ce champ.
Si vous activez une cellule d'un clic de souris, vous apercevez une touche de direction permettant de sélectionner un champ.
L'option &quot; Nom de la table.* &quot; permet de sélectionner tous les champs de données et les critères sont valides pour l'ensemble des champs de la table.
Alias
Indique un alias.
Ce dernier sera répertorié dans une requête au lieu du nom de champ.
Cela permet d'utiliser les étiquettes de colonne personnalisées.
Par exemple, si le champ de données comporte &quot; n° référence &quot; et qu'à la place vous souhaitez voir apparaître &quot; Numéro de référence &quot; dans la requête, entrez &quot; Numéro de référence &quot; en tant qu'alias.
Dans une instruction SQL, les noms d'alias se définissent comme suit :
SELECT column AS alias FROM table.
Exemple :
SELECT &quot; NoArticle &quot; AS Numéro-article FROM &quot; Articles &quot;
Table
La table de base de données correspondante du champ de données sélectionné est répertoriée ici.
Si vous activez une cellule à l'aide d'un clic de souris, une flèche apparaît afin que vous puissiez sélectionner une autre table de la requête active.
Tri
Si vous cliquez sur la cellule, vous pouvez choisir parmi les options suivantes : croissant, décroissant et non trié.
Les champs de texte sont triés alphabétiquement et les champs numériques numériquement.
Pour la plupart des bases de données, les administrateurs peuvent paramétrer les options de tri.
Visible
Visible
pour un champ de données, ce champ est visible dans la requête
.
Si un champ de données est utilisé dans le seul but de formuler une condition, son affichage n'est pas indispensable.
Critères
critères
selon lesquels le contenu du champ de données doit être filtré.
ou
Sur chaque ligne vous pouvez entrer un critère supplémentaire.
Plusieurs critères d'une colonne sont liés par une relation de type OU.
En outre, vous pouvez insérer une ligne de fonction supplémentaire via le menu contextuel des en-têtes de ligne dans la partie inférieure de l'ébauche de requête :
Fonctions
Sélectionnez une fonction à exécuter dans la requête ici.
Les fonctions que vous pouvez exécuter ici dépendent de la base de données utilisée.
Fonction
propose les options suivantes :
Option
SQL
Effet
Aucune fonction
Aucune fonction n'est exécutée.
Moyenne
AVG
Calcule la moyenne arithmétique d'un champ.
Nombre
COUNT
Détermine le nombre d'enregistrements dans la table.
Les champs vides peuvent être comptés (a) ou non (b).
a) COUNT(*) :
Lorsque vous fournissez un astérisque en guise d'argument, tous les enregistrements de la table sont comptés.
b) COUNT(column) :
Lorsque vous fournissez un champ de données en guise d'argument, seules les colonnes dont le champ de données en question contient une valeur sont comptées.
Autrement dit, dans ce cas, les valeurs Null (champs vides) ne sont pas comptées.
Maximum
MAX
Renvoie la plus grande valeur d'un champ.
Minimum
MIN
Renvoie la plus petite valeur d'un champ.
Somme
SUM
Calcule la somme des valeurs du champ concerné.
Grouper
GROUP BY
Regroupe les données de la requête en fonction du nom de champ sélectionné.
Les fonctions sont exécutées selon les groupes spécifiés.
En SQL, cette commande correspond à la clause GROUP BY (grouper par).
Si un critère est ajouté, cette entrée s'affiche dans SQL HAVING.
Vous pouvez également saisir des appels de fonctions directement dans l'instruction SQL.
La syntaxe est la suivante :
SELECT FUNCTION(column) FROM table.
Par exemple, l'appel de fonction permettant de calculer une somme se présentera comme suit dans SQL :
SELECT SUM( &quot; Prix &quot; ) FROM &quot; Articles &quot; .
Groupement
, les fonctions ci-dessus sont appelées fonctions consolidées.
Ce sont des fonctions calculant les données afin de créer des récapitulatifs des résultats.
D'autres fonctions que celles listées dans la zone de liste sont également disponibles.
Elles dépendent du système de base de données spécifique utilisé et de l'état actuel du pilote Base.
Champ
.
Alias
.
Dans une instruction SQL, l'appel de fonction correspondant se présente comme suit :
SELECT FUNCTION() AS alias FROM table
Exemple :
SELECT COUNT(*) AS Nombre FROM &quot; Articles &quot;
Lorsque vous exécutez une fonction, vous ne pouvez pas insérer d'autres colonnes pour la requête que celles incluses dans la fonction &quot; Groupement &quot; .
Exemples
Dans l'exemple suivant, une requête portant sur deux tables est exécutée : une table &quot; Articles &quot; contenant le champ &quot; No_article &quot; et une table &quot; Fournisseurs &quot; contenant le champ &quot; Nom_fournisseur &quot; .
Par ailleurs, les deux tables possèdent un champ commun, en l'occurrence &quot; No_fournisseur &quot;
Pour créer une requête contenant tous les fournisseurs qui livrent plus de trois articles, les étapes suivantes sont nécessaires .
Insérer les tables &quot; Articles &quot; et &quot; Fournisseurs &quot; dans l'ébauche de requête.
Lier les champs &quot; No_fournisseur &quot; des deux tables, au cas où il n'existe pas déjà de relation de ce type entre les deux tables.
Fonction
via le menu contextuel et sélectionner la fonction Nombre.
Entrer le critère > 3 et désactiver l'option Visible.
Double-cliquer sur le champ &quot; Nom_fournisseur &quot; de la table &quot; Fournisseurs &quot; et sélectionner la fonction Groupement.
Exécutez la requête.
Si la table &quot; Articles &quot; contient les champs &quot; Prix &quot; (prix unitaire de chaque article) et &quot; No_fournisseur &quot; (désignant le fournisseur de l'article), la requête suivante vous permet de calculer le prix moyen des articles proposés par un fournisseur :
Insérer la table &quot; Articles &quot; dans l'ébauche de requête.
Double-cliquer sur les champs &quot; Prix &quot; et &quot; No_fournisseur &quot; .
Fonction
et sélectionner la fonction Moyenne pour le champ &quot; Prix &quot; .
Si vous le souhaitez, vous pouvez entrer l'alias de &quot; Moyenne &quot; sur la ligne (sans les guillemets).
Sélectionner la fonction Groupement pour le champ &quot; No_fournisseur &quot; .
Exécutez la requête.
Voici les commandes de menu contextuel et les icônes disponibles :
Fonctions
Affiche ou masque une ligne pour la sélection de fonctions.
Nom de table
Affiche ou masque la ligne pour le nom de table.
Nom d'alias
Affiche ou masque la ligne pour l'alias.
Valeurs distinctes
N'applique que des valeurs distinctes à la requête.
Ceci s'applique aux enregistrements contenant des données figurant plusieurs fois dans les champs sélectionnés.
Si la commande
Valeurs distinctes
est active, la requête contient un seul enregistrement (DISTINCT).
Dans le cas contraire, elle contient tous les enregistrements correspondant aux critères de la requête (TOUT).
Valeurs distinctes
pour indiquer dans la requête que le nom &quot; Martin &quot; ne doit s'afficher qu'une seule fois.
Valeurs distinctes
est utilisée, la requête utilise les champs &quot; nom &quot; et &quot; ville &quot; , et son résultat contient une fois &quot; Martin de Brest &quot; et une fois &quot; Martin de Paris &quot; .
En SQL, cette commande correspond au prédicat DISTINCT.
Formulation des conditions de filtrage
Lors de la formulation des conditions de filtrage, vous pouvez accéder à plusieurs opérateurs et commandes.
Outre les opérateurs relationnels, il existe des commandes SQL appelant le contenu des champs de base de données.
Si vous utilisez ces commandes dans la syntaxe $[officename], $[officename] les convertit automatiquement dans la syntaxe SQL correspondante.
Vous pouvez également saisir la commande SQL directement.
Les tableaux suivants donnent une vue générale des opérateurs et des commandes :
Opérateur
Signification
La condition est remplie si...
=
est égal à
... le contenu du champ est identique à l'expression entrée.
=
n'est pas affiché dans les champs de requête ; si vous saisissez une valeur sans opérateur, c'est l'opérateur
=
qui sera adopté.
< >
est différent de
... le contenu du champ n'est pas identique à l'expression entrée.
>
est supérieur à
... le contenu du champ est supérieur à l'expression entrée.
<
est inférieur à
... le contenu du champ est inférieur à l'expression entrée.
> =
est supérieur ou égal à
... le contenu du champ est supérieur ou égal à l'expression entrée.
< =
est inférieur ou égal à
... le contenu du champ est inférieur ou égal à l'expression entrée.
Commande $[officename]
Instruction SQL
Signification
La condition est remplie lorsque...
EST VIDE
EST NUL
is null
... le champ de données est vide.
Dans le cas de champs de type Oui/Non à trois états, cette commande interroge l'état indéterminé (ni Oui ni Non).
IS NOT EMPTY
IS NOT NUL
n'est pas vide
... le champ de données n'est pas vide.
COMME
(substituant * pour un nombre quelconque de caractères
substituant ? pour exactement un caractère)
LIKE
Substituants dans les requêtes SQL
(substituant % pour un nombre indéfini de caractères
Substituant _ pour exactement un caractère)
appartient à
... le champ de données contient l'expression spécifiée.
Dans ce cas, le substituant (*) indique que l'expression x se trouve au début (x*), à la fin (*x) ou au sein du contenu du champ (*x*).
Dans les requêtes SQL, vous pouvez saisir le caractère SQL % ; dans l'interface de $[officename] le substituant habituel du système de fichiers (*).
Le substituant * ou % représente un nombre quelconque de caractères.
Pour représenter exactement un caractère, utilisez, dans l'interface de $[officename], le point d'interrogation (?) ou, dans les requêtes SQL, le trait de soulignement (_) comme substituant.
DIFFERENT DE
DIFFÉRENT
N'appartient pas à
... le champ de données ne contient pas l'expression entrée.
COMPRIS ENTRE x ET y
BETWEEN x AND y
compris dans l'intervalle [x,y]
...
Le champ de données contient une valeur comprise entre les valeurs x et y.
NON COMPRIS ENTRE x ET y
NOT BETWEEN x AND y
Non compris dans l'intervalle [x,y]
... le champ de données contient une valeur qui n'est pas comprise entre les valeurs x et y.
IN (a ; b ; c...)
Attention au point-virgule utilisé comme séparateur dans les listes de valeurs !
IN (a, b, c...)
contient a, b, c...
... le champ de données contient l'expression a, b, c,... entrée.
Vous pouvez entrer un nombre quelconque d'expressions.
Le résultat sera fourni sous forme d'union (liaison &quot; ou &quot; ).
Les expressions a, b, c... peuvent être aussi bien des nombres que des lettres
PAS DANS (a ; b ; c...)
NOT IN (a, b, c...)
ne contient pas a, b, c...
... le champ de données ne contient pas l'une des expression spécifiées a, b, c,...
= TRUE
= TRUE
a la valeur Vrai (True)
... le champ de données contient la valeur True.
= FAUX
= FALSE
a la valeur False (faux)
... le champ de données contient la valeur False.
Exemples
='Madame'
renvoie les champs de données contenant l'expression &quot; Madame &quot;
LIKE 'g?ve'
renvoie le nom des champs ayant un contenu du type &quot; give &quot; et &quot; gave &quot; .
LIKE 'S*'
renvoie les champs de données contenant l'expression &quot; Sun &quot; .
COMPRIS ENTRE 10 ET 20
renvoie les champs de données dont le contenu est compris entre les valeurs 10 et 20 (il peut s'agir aussi bien de champs de texte que de champs numériques).
IN (1 ; 3 ; 5 ; 7)
renvoie les champs de données contenant les valeurs 1, 3, 5, 7.
Si ce champ contient par exemple un numéro d'article, vous pouvez créer une requête qui restitue l'article correspondant au numéro entré.
PAS DANS ('Martin')
renvoie des champs de données ne contenant pas &quot; Martin &quot; .
champs de date
s'affichent sous la forme #Date# pour les identifier clairement en tant que dates.
La condition de date est reproduite dans l'instruction SQL qui en résulte dans l'interface ODBC suivante - méthode conforme :
Date
{D'YYYY-MM-DD'}
Heure de date
{D'YYYY-MM-DD HH:MM:SS'}
Heure
{D'HH:MM:SS'}
séquences d'échappement
ODBC et JDBC suivantes :
Date
{d 'YYYY-MM-DD'}
Heure
{t 'HH:MI:SS[.SS]'} - [ ] optional
Heure de date
{ts 'YYYY-MM-DD HH:MI:SS[.SS]'} - [ ] optional
Exemple : select {d '1999-12-31'} from world.years
Like
Escape Sequence:
{escape 'escape-character'}
Exemple : select * from Article where NomArticle like 'The *%' {escape '*'}
L'exemple renvoie toutes les entrées dont le nom de l'article commence par 'The *'.
Ceci vous permet donc de rechercher des caractères (interprétés dans d'autres cas comme substituants) tels que *, ?, _, % ou le point.
Outer Join
Escape Sequence:
{oj outer-join}
Exemple : select Article.* from {oj Article LEFT OUTER JOIN Commandes ON NoArticle=Commandes.NOA}
Interrogation de champs de texte
Pour interroger le contenu d'un champ de texte, vous devez inclure l'expression entre apostrophes.
Le système ne fait pas de différence entre les majuscules et les minuscules.
Interrogation de champs de date
Pour interroger le contenu d'un champ de date, vous devez inclure l'expression entre apostrophes.
Les formats possibles sont les suivants :
AAAA-MM-JJ HH:MM:SS, AAAA/MM/JJ HH:MM:SS et AAAA.MM.JJ HH:MM:SS
Interrogation de champs Oui/Non
Pour lancer une requête sur des champs Oui/Non, utilisez la syntaxe suivante pour des tables dBase :
État
Critères de requête
Exemple
Oui
pour les tables dBase : différente d'une quelconque valeur donnée
=1 renvoie tous les enregistrements pour lesquels le champ Oui/Non est de statut &quot; Oui &quot; ou &quot; activé &quot; (coche noire),
Non
.
=0 renvoie tous les enregistrements pour lesquels le champ Oui/Non a l'état &quot; Non &quot; ou &quot; désactivé &quot; (aucune coche).
Vide
IS NULL ou EST VIDE
IS NULL renvoie tous les enregistrements pour lesquels le champ Oui/Non n'a ni l'état Oui ni l'état Non (coche grise).
La syntaxe dépend du système de base de données utilisé.
Notez également que les champs Oui/Non peuvent être définis différemment (deux statuts seulement au lieu de trois).
Requêtes avec paramètre
Pour créer une requête à paramètres variables, ceux-ci doivent être placés entre crochets (=[x]).
Vous pouvez aussi utiliser un signe égal suivi de deux points (=:x).
Lorsque la requête est exécutée, le programme affiche une boîte de dialogue vous invitant à indiquer l'expression à laquelle la variable x doit être assignée.
Si vous demandez plusieurs paramètres simultanément, vous apercevez un champ de liste dans la boîte de dialogue contenant tous les paramètres et une ligne de saisie en regard de chaque paramètre.
Saisissez les valeurs, de préférence de bas en haut, et appuyez sur la touche Entrée après chaque ligne.
Il est impossible d'utiliser des substituants (*, _) ou des caractères spéciaux (?, par exemple) dans les requêtes paramétrables.
Si vous formulez une requête de paramètre et que vous l'enregistrez avec les variables, vous pouvez par la suite créer une requête dans laquelle seules les variables doivent être remplacées par les expressions de votre choix. $[officename] vous demande ces variables dans une boîte de dialogue dès que vous ouvrez la requête.
Saisie de paramètre
Saisie de paramètre
vous demande d'indiquer les variables que vous avez définies dans la requête.
Saisissez une valeur pour chaque variable de requête et confirmez en cliquant sur
OK
.
sous-formulaires
.
Voici un exemple de requête avec paramètres dans une instruction SQL :
select * from 'adresses' where 'nom' = :placeholder
Mode SQL
L'abréviation SQL signifie &quot; Structured Query Language &quot; (langage de requête structuré) et désigne un ensemble d'instructions destinées à interroger, actualiser et gérer des bases de données relationnelles.
(Dés)activer le mode Ébauche
, vous pouvez afficher les instructions SQL pour une requête ayant été créée précédemment.
Vous pouvez formuler votre requête directement en code SQL.
Notez cependant que la syntaxe exacte dépend du système de base de données que vous utilisez.
ébauche de requête
.
De telles requêtes doivent être exécutées en mode SQL natif.
Exécuter directement l'instruction SQL
dans la vue SQL, vous pouvez formuler une requête n'étant pas traitée par $[officename].