# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	2014
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	GNOME
# source:	https://object.pouta.csc.fi/OPUS-GNOME/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/GNOME.php
# copyright_long:	http://opus.nlpl.eu/GNOME.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Claude Paroz <claude\@2xlibre\.net>, 2007-2010
Vincent Untz <vuntz\@gnome\.org>, 2008
Frederic Peters <fpeters\@0d\.be>, 2008-2009
Luc Pionchon <pionchon\.luc\@gmail\.com>, 2011
Bruno Brouard <annoa\.b\@gmail\.com>, 2012
La puissance du HTML5 et du Web dans votre application
Modules applicatifs
Claude Paroz <claude\@2xlibre\.net>, 2007-2010
Vincent Untz <vuntz\@gnome\.org>, 2008
Frederic Peters <fpeters\@0d\.be>, 2008-2009
Luc Pionchon <pionchon\.luc\@gmail\.com>, 2011
Bruno Brouard <annoa\.b\@gmail\.com>, 2012
Shaun McCance
Germán Póo-Caamaño
Fondation GNOME
http://foundation.gnome.org/
GNOME
Modules applicatifs
Plate-forme de développement GNOME : vue d'ensemble
_
link:trail
Telepathy est un puissant cadre applicatif de communication particulièrement adapté pour interagir avec les contacts de l'utilisateur. Telepathy gère tous les comptes et connections à travers un service de session D-Bus qui est profondément intégré à GNOME. Une application peut souscrire à ce service et ainsi communiquer avec les autres applications souscrites, y compris les applications de vos contacts.
_
Modules graphiques et multimédia
Référence des objets réseau de bas niveau
La technologie de base des outils d'accessibilité, comme les lecteurs d'écran
ATK
L'accessibilité est le processus qui consiste à s'assurer qu'une application est utilisable par des personnes ayant différents handicaps. Ceux-ci peuvent être de différentes natures : déficiences visuelles, handicaps moteurs, problèmes d'ouïe, handicaps mentaux et du langage, épilepsies. Beaucoup de gens souffrent d'une forme de handicap. Rendre accessible une application, c'est permettre à plus de gens de l'utiliser efficacement.
GNOME prend en charge les périphériques d'accessibilité au travers du cadre applicatif ATK. Celui-ci définit un ensemble d'interfaces auxquelles les composants des interfaces graphiques peuvent se conformer. Cela permet par exemple aux lecteurs d'écran de lire le texte d'une interface et d'interagir avec ses contrôles. La prise en charge d'ATK est intégrée dans GTK+ et le reste de la plate-forme GNOME, afin que chaque application utilisant GTK+ dispose automatiquement d'une gestion correcte de l'accessibilité.
Néanmoins, il faut être conscient des problématiques d'accessibilité lors du développement d'applications. Même si les interfaces GTK+ fournissent par défaut une accessibilité correcte, vous pouvez souvent améliorer la collaboration entre votre programme et les outils d'accessibilité en fournissant des informations supplémentaires à ATK. Si vous développez des composants personnalisés, il faut vous assurer qu'ils exposent leurs propriétés à ATK. Il s'agit aussi d'éviter d'utiliser des sons, des graphismes ou de la couleur comme seul moyen de transmettre une information aux utilisateurs.
Le bureau GNOME contient plusieurs outils d'accessibilité permettant aux utilisateurs handicapés de faire un usage optimal du bureau et des applications. Les applications qui implémentent entièrement ATK vont bien fonctionner avec les outils d'accessibilité. Ces outils comprennent un lecteur d'écran, une loupe, un clavier virtuel et
Cairo
Cairo est une bibliothèque graphique 2D offrant une interface de programmation avancée pour le dessin de graphismes vectoriels, la composition d'images et le rendu de texte anti-crénelé. Cairo offre une prise en charge de plusieurs périphériques de sortie, dont le système X Window, Microsoft Windows et les tampons d'images, permettant d'écrire du code indépendant de la plate-forme pour le dessin de graphismes sur différents supports.
Le modèle de dessin de Cairo est semblable à ceux utilisés par PostScript et PDF. L'interface de programmation de Cairo contient des opérations de dessin telles que le traçage et le remplissage de courbes de Bézier, la composition d'images et les transformations affines. Ces opérations vectorielles permettent d'intégrer dans les applications des graphismes riches et anti-crénelés sans faire appel à de coûteuses fonctions basées sur des pixels.
Le riche modèle de dessin de Cairo permet des rendus de haute qualité sur différents supports. La même interface de programmation peut être utilisée pour créer de superbes textes et graphismes à l'écran, pour effectuer du rendu d'images ou pour créer des sorties bien nettes adaptées à l'impression.
À chaque fois qu'une application à besoin de produire des graphismes qui vont au-delà des composants offerts par GTK+, elle devrait faire appel à Cairo. La plupart des graphismes produits par GTK+ sont réalisés avec Cairo. L'utilisation de Cairo pour le dessin personnalisé permet à l'application de produire des graphismes de haute qualité, anti-crénelés et indépendants de la résolution.
Le moyen le plus simple d'émettre un son, pour une alerte ou pour réagir à un évènement
Canberra
Canberra est une petite bibliothèque qui permet d'émettre un son, pour une alerte système ou pour réagir à une action de l'utilisateur, par exemple lorsque l'utilisateur a reçu un message ou qu'une erreur est apparue. En outre Canberra est intégrée au système d'accessibilité et permet une notification alternative pour les sourds et malentendants.
Clutter
Clutter utilise
Clutter ne force aucun style visuel, et ne fourni aucun élément d'interface graphique. Il permet au développeur de définir ses éléments (ou « acteurs ») en les disposant librement sur une scène. La scène est structurée par un graphe.
Clutter définit des acteurs génériques pour afficher des couleurs, une image, du texte et un dessin vectoriel 2D de haute précision géré par
Clutter fournit un cadre applicatif extensible d'animations et des effets graphiques. Une animation est associée à un axe temporel et modifie une ou plusieurs propriétés d'un ou plusieurs acteurs au cours du temps, par exemple leur rotation dans un certain sens, l'échelle, la taille, l'opacité, etc.
Des bibliothèques additionnelles permettent de combiner Clutter avec d'autres technologies. Par exemple, Clutter-GTK permet d'intégrer une scène Clutter dans une interface construite avec GTK+. Clutter-GStreamer permet d'ajouter un flux vidéo ou audio sur la scène de Clutter. Clutter-Box2D et Clutter-Bullet permettent de simuler des interactions physiques, comme l'action de l'apesanteur ou les collisions, entre les acteurs, ceci en 2D et en 3D.
D-Bus
D-Bus est un bus de messages multi-bureaux pour l'envoi d'événements entre diverses applications, le bureau et des composants bas niveau du système. D-Bus offre une interface de programmation simple pour envoyer des messages à des services particuliers et pour la diffusion de messages à tous les services intéressés. D-Bus permet à différentes sortes d'applications de communiquer et d'interagir entre elles et avec le bureau, favorisant ainsi une meilleure interaction et une meilleure prise en compte des besoins de l'utilisateur.
D-Bus met à disposition un bus de session et un bus système. Le bus de session est utilisé par les applications dans une session d'un seul utilisateur, leur permettant de partager des données et des notifications d'événements et de s'intégrer dans le bureau de l'utilisateur. Par exemple, un lecteur vidéo peut envoyer un message D-Bus pour empêcher l'économiseur d'écran de s'activer lorsque l'utilisateur regarde un film.
Le bus système est un bus de messages unique fonctionnant indépendamment de toute session utilisateur. Il peut communiquer avec des applications de n'importe quelle session, permettant à ces applications d'interagir avec des composants du système sans se préoccuper des détails de bas niveau du système. Le bus système est utile pour fournir des fonctionnalités essentielles aux utilisateurs. Par exemple, le bus système est utilisé pour détecter l'activation ou la désactivation d'interfaces réseau, la connexion de lecteurs externes ou encore l'épuisement des batteries d'un ordinateur portable.
D-Bus est développé conjointement sur
GNOME fournit un support complet de D-Bus à travers les API GDBus de
Accès généralisé au carnet d'adresses et au calendrier
Evolution Data Server
Avec Evolution Data Server, GNOME dispose d'un carnet d'adresses et d'un calendrier uniques utilisables par toutes les applications pour enregistrer et récupérer des informations. L'utilisation de Evolution Data Server permet aux utilisateurs de ne pas devoir maintenir des listes de contacts distinctes dans chaque application, ni de copier manuellement des événements dans plusieurs calendriers.
Les gens utilisent de plus en plus les ordinateurs pour interagir avec leurs amis et leurs collègues. Des applications telles que la messagerie, la messagerie instantanée et les applications de téléphonie et de vidéo-conférence sont exploitées pour communiquer. Ces applications disposent fréquemment des listes de contacts pour faciliter leur usage. En utilisant Evolution Data Server, les applications peuvent enregistrer les informations de contact à un seul endroit, permettant ainsi à toutes les applications d'avoir accès aux données pertinentes en lien avec les contacts de l'utilisateur.
Les applications peuvent également utiliser Evolution Data Server pour enregistrer et récupérer des rendez-vous dans le calendrier des utilisateurs. Par exemple, l'horloge du tableau de bord affiche un simple calendrier lorsqu'on clique dessus. Si des rendez-vous ont été agendés, ils apparaissent sous le calendrier. Cela permet d'avoir accès plus facilement aux rendez-vous à venir sans devoir ouvrir une application de gestion de calendrier.
Accès transparent aux bases de données relationnelles populaires
Manuel utilisateur de GDA
GDA, pour « GNOME Data Access », est une sur-couche aux bases de données relationnelles. Elle permet d'enregistrer ou d'accéder aux données de la plupart des bases de données relationnelles populaires.
GDK
GDK est la bibliothèque de bas niveau utilisée par GTK+ pour interagir avec le système en ce qui concerne le graphisme et les périphériques d'entrée. Même s'il est rare de devoir utiliser GDK directement dans le code d'une application, elle contient toutes les fonctionnalités nécessaires pour dessiner des objets et du texte à l'écran et pour interagir avec les utilisateurs avec différents périphériques d'entrée.
GDK permet d'accéder aux événements du clavier, de la souris et d'autres périphériques d'entrée, sans devoir se connecter aux signaux de haut niveau utilisés dans GTK+. GDK offre aussi des routines de bas niveau pour accéder aux données de glisser-déposer et du presse-papiers du système. Lorsque vous programmez des composants personnalisés, il se peut que vous ayez besoin d'accéder à ces fonctionnalités pour implémenter un comportement correct concernant les interactions avec l'utilisateur.
GDK fournit d'autres fonctionnalités indispensables pour l'implémentation d'une boîte à outils graphique complète telle que GTK+. Comme GDK joue le rôle d'une abstraction de plate-forme, permettant à GTK+ de fonctionner sous plusieurs environnements, il fournit une interface de programmation pour toutes les fonctionnalités du système dont GTK+ a besoin. Cela comprend les informations sur les affichages à plusieurs sorties, la résolution et la profondeur de couleur, les cartes de couleur et les curseurs.
GDK doit être utilisé chaque fois qu'un accès bas niveau au système de fenêtrage sous-jacent s'impose, y compris les accès bas niveau aux événements, aux fenêtres et au presse-papiers. L'utilisation de GDK pour ces tâches garantit que le code est portable et s'intègre avec le reste du code GTK+. Les routines de dessin de base de GDK ne devraient généralement pas être utilisées. Cairo est plus indiqué, grâce à ses fonctionnalités étendues.
GIO Networking
GIO fourni une API réseau de haut niveau, pour communiquer par TCP/IP et les sockets UNIX. Elle est construite en sur-couche de la même API de flux, utilisée par GIO Files. Cette API réseau permet de se connecter à un serveur, d'écouter des évènements, et de lire des ressources. La conception asynchrone de l'API fait que votre application ne se bloque pas en attendant une réponse.
Accès asynchrone à tout fichier référencé par une URI
GIO Files
GIO est une API pour accéder, en lecture ou en écriture, aux fichiers et autres flux de données. Les fichiers sont référencés par une URI. Avec GNOME, GIO s'appuie sur GVFS pour fournir un accès transparent aux fichiers accessibles par SFTP, FTP, WebDAV, SMB, entre autres. En utilisant GIO, aucune connaissance de ces protocoles n'est nécessaire.
L'API GIO Files est conçue pour être utilisée par des applications qui réagissent aux actions de l'utilisateur. Les accès sont asynchrones et non bloquants. Ainsi votre application ne va pas se geler en attendant la fin de l'opération. Cependant GIO a aussi une API synchrone, qui peut être nécessaire dans certains cas.
GIO a aussi une API pour gérer les disques et volumes, les types de fichiers, leur icône associé, et les applications qui permettent de les ouvrir.
Faire jouer, créer et manipuler du son, des vidéos et d'autres média
GStreamer
GStreamer est une bibliothèque multimédia puissante pour la lecture, la création et la manipulation de sons, de vidéos et d'autres médias. Vous pouvez utiliser GStreamer pour permettre la lecture de son et de vidéos, pour l'enregistrement à partir de plusieurs sources et pour l'édition de contenu multimédia. Par défaut, GStreamer gère le codage et le décodage dans de nombreux formats, et il peut prendre en charge des formats supplémentaires par des greffons.
GStreamer offre une architecture flexible dans laquelle les médias subissent un enchaînement de traitements. Chaque élément de la chaîne peut appliquer des filtres au contenu, comme un codage ou un décodage, une combinaison de plusieurs sources ou une transformation du contenu multimédia. Cette architecture permet d'arranger arbitrairement une suite de traitements afin de pouvoir effectuer quasiment tous les traitements imaginables avec GStreamer. De plus, GStreamer est conçu pour minimiser le surcoût de son utilisation, ce qui permet de l'utiliser dans des applications ayant des exigences élevées concernant les temps de latence.
Même si GStreamer fournit une interface de programmation puissante pour la manipulation de contenu multimédia, il fournit également des routines appropriées pour une simple lecture. GStreamer peut construire automatiquement un traitement (pipeline) pour la lecture de fichiers de n'importe quel format pris en charge, ce qui permet d'utiliser le son et la vidéo très simplement dans une application.
L'architecture de GStreamer permet à des greffons d'ajouter des codeurs, des décodeurs et toutes sortes de filtres de contenu. Des développeurs tierce-partie peuvent offrir des greffons GStreamer qui seront automatiquement mis à disposition des autres applications au travers de GStreamer. Les greffons peuvent fournir une prise en charge d'autres formats multimédias ou des fonctionnalités et des effets supplémentaires.
GStreamer doit être utilisé dès qu'une application a besoin de lire ou de manipuler du contenu multimédia. L'utilisation de GStreamer facilite le développement d'une application et fournit des éléments bien testés pour de nombreux besoins.
Présentation de la riche boîte à outils pour la création d'interfaces utilisateur graphique
GTK+
GTK+ est la principale bibliothèque utilisée pour construire des interfaces utilisateur dans GNOME. Elle contient tous les composants (widgets) d'interface utilisés habituellement dans une application graphique. Son interface de programmation moderne orientée objet permet de construire des interfaces utilisateur attrayantes et avancées sans avoir à se préoccuper des détails de bas niveau de dessin et d'interaction entre périphériques.
En plus des composants de base, comme les boutons, les cases à cocher et les zones de saisie de texte, GTK+ offre également des interfaces de programmation puissantes sur le principe MVC (modèle-vue-contrôleur) pour les arborescences, les champs de texte à plusieurs lignes et les actions des menus et des barres d'outils.
Les composants dans GTK+ sont placés dans les fenêtres selon un modèle de remplissage de boîtes. Les programmeurs ne doivent spécifier que la manière de placer les composants dans les boîtes conteneurs, sans avoir à les positionner directement à l'aide de coordonnées absolues. GTK+ s'assure que les fenêtres sont correctement dimensionnées pour présenter leur contenu, et il gère de façon automatique le redimensionnement des fenêtres.
GUPnP
GUPnP DLNA : une petite bibliothèque utilitaire qui facilite la gestion des tâches liées à DLNA, comme par exemple découvrir le profil du média, transcoder pour un certain profil, etc.
Un système d'aide thématique
Assistance
Parfois, les utilisateurs ont besoin d'un peu d'aide, même pour les applications les mieux conçues. GNOME utilise un système d'aide thématique basé sur le langages à balises
Pour les documents plus linéaire, GNOME prend aussi en charge le format
GIO Networking
Un système de notifications interactives dans le tiroir de messagerie
Notifymessaging tray
La bibliothèque libnotify permet de créer des notifications à destination de l'utilisateur. Une notification peut être un simple message, ou bien elle peut gérer une réponse de l'utilisateur. Chaque environnement définit son style de notification. Libnotify gère ces différences de façon transparente pour le développeur. Ainsi, avec GNOME 3, les notifications sont affichées en bas de l'écran, puis placées dans le tiroir de messagerie.
GIO Networking
Modules fondamentaux
Un système simple de communication inter-processus
Pango
Pango est la bibliothèque de base pour l'affichage du texte et la gestion des polices. Elle est responsable du rendu des caractères et de leur disposition. Tout le texte visible de GTK+ est géré par Pango.
Le moteur de mise en page Pango peut être utilisé avec différents moteurs de polices et de dessin. Sur la plupart des systèmes GNOME, Pango utilise FreeType, fontconfig et Cairo pour accéder aux polices et produire du texte. Sur d'autres systèmes, Pango utilise les systèmes de polices natifs, tels que Uniscribe sur Microsoft Windows et ATSUI sur MacOS.
Pango dispose d'une prise en charge étendue des différents systèmes d'écriture du monde entier. Dans de nombreuses langues, les systèmes d'écriture ont des règles complexes de disposition des glyphes et de composition des caractères. Avec Pango, presque toutes les langues peuvent être écrites et affichées correctement, permettant à tous d'afficher du texte dans leur propre langue. La prise en charge par Pango de plusieurs systèmes d'écriture est automatique ; les développeurs d'applications n'ont pas besoin d'écrire du code spécial pour prendre en charge d'autres langues.
Pango gère les styles de texte utilisés habituellement dans les documents et les interfaces, y compris l'italique, la graisse et le soulignement. Pango utilise un vocabulaire de type XML simple appelé PangoMarkup qui permet de définir la taille de police, la couleur, les styles et d'autres attributs de texte. À l'aide de PangoMarkup, vous pouvez définir des styles en ligne sans devoir passer les blocs de texte en boucle. PangoMarkup peut être directement utilisé à partir de GTK+, ce qui permet de mettre en forme le texte facilement dans les interfaces graphiques.
Il est indiqué d'utiliser directement Pango lorsqu'il s'agit de mettre en page du texte à l'écran ou sur un support différent. L'utilisation de Pango garantit que la mise en forme de texte fonctionne de manière identique avec GTK+ et le reste de la plate-forme GNOME. C'est une aide pour créer du code portable et, plus important encore, cela permet de s'assurer que l'application peut produire correctement du texte dans des centaines de langues.
Enregistrement sécurisé des mots de passe et autres données sensibles
GNOME contient un gestionnaire de trousseaux de clés moderne et sécurisé afin de conserver les mots de passe et les autres données sensibles des utilisateurs. Les application peuvent exploiter la bibliothèque du gestionnaire de trousseaux pour sauvegarder et accéder aux mots de passe. Les utilisateurs peuvent gérer leurs mots de passe au moyen de l'application
Le gestionnaire de trousseaux peut gérer plusieurs trousseaux, et chaque trousseau peut contenir autant d'éléments que nécessaire. Un élément de trousseau contient une donnée quelconque, souvent un mot de passe. Chaque trousseau est verrouillé individuellement et il est obligatoire de fournir un mot de passe pour le déverrouiller. Lorsque le trousseau est déverrouillé, l'utilisateur peut accéder à tous les éléments qu'il contient.
Le gestionnaire de trousseaux dispose de listes de contrôle d'accès pour chaque élément d'un trousseau, afin de contrôler quelle application peut accéder à un élément. Si une application inconnue tente d'accéder à un élément d'un trousseau, le gestionnaire de trousseaux demande à l'utilisateur s'il doit autoriser ou refuser l'accès par cette application. Cela empêche des programmes malicieux ou mal écrits d'accéder aux données sensibles des utilisateurs.
Les données d'un trousseau enregistrées sur le système de fichiers sont chiffrées par l'algorithme AES block et les attributs de l'élément sont hachés avec SHA1. Grâce au hachage des attributs, le gestionnaire de trousseaux est capable de rechercher des éléments demandés par les applications même sans déverrouiller le trousseau. Le déverrouillage intervient au moment où un élément correspondant est trouvé et qu'il doit être récupéré.
Le gestionnaire de trousseaux gère également un trousseau de session. Les éléments de ce trousseau de session ne sont jamais enregistrés sur le disque, et ils sont effacés dès que la session de l'utilisateur prend fin. Ce trousseau peut être utilisé pour stocker des mots de passe qui ne doivent être utilisés que dans la session actuelle.
Si vous utilisez GIO pour accéder à des serveurs distants, vous profitez automatiquement du gestionnaire de trousseaux. Chaque fois que GVFS doit authentifier l'utilisateur, il offre l'option d'enregistrer le mot de passe, soit dans le trousseau par défaut, soit dans le trousseau de session.
Vous devriez utiliser le gestionnaire de trousseaux chaque fois que votre application a besoin d'enregistrer des mots de passe ou d'autres données sensibles pour les utilisateurs. Cela permet d'améliorer la cohérence générale de l'interface tout en conservant les données de manière sûre.
Faites interagir vos utilisateurs avec un système d'applications communicantes unifié et intégré
Telepathy
Telepathy est un puissant cadre applicatif de communication particulièrement adapté pour interagir avec les contacts de l'utilisateur. Telepathy gère tous les comptes et connections à travers un service de session D-Bus qui est profondément intégré à GNOME. Une application peut souscrire à ce service et ainsi communiquer avec les autres applications souscrites, y compris les applications de vos contacts.
L'API Tubes de Telepathy permet de créer des applications interactives en réseau en créant un tunnel via un protocole arbitraire. De nombreux protocoles réseau de communication instantanée, comme Jabber par exemple, peuvent être utilisés. Ainsi on pourra créer un jeu multijoueurs, ou encore un éditeur de texte collaboratif.
WebKit
WebKit est un puissant moteur de rendu HTML. Il est multiplate-forme et est utilisé autant par des logiciels libres que par des produits commerciaux. WebKitGTK+ est l'adaptation de WebKit reconstruit avec
WebKitGTK+ permet d'ajouter facilement les fonctionnalités du Web à votre application. En mettant à disposition les technologies du Web comme le HTML5 ou les CSS, il permet aussi de créer rapidement des interfaces utilisateur dynamiques.
_
_
Tutoriel d'introduction à WebKitGTK+
Manuel de référence de WebKitGTK+
Le site Web de WebKitGTK+
Manuel du développeur sur Telepathy
Le site Web de Telepathy
Le rendu de texte pour toutes les langues du monde
Manuel de référence de Pango
Le site Web de Pango
Manuel de référence de libnotify
Keyring
Manuel de référence de gnome-keyring
Manuel de référence de libseahorse
Une vue d'ensemble des technologies de la plate-forme de développement GNOME.
shaunm@gnome.org
gpoo@gnome.org
GNOME est un environnement de bureau puissant et simple à la fois qui place un accent particulier sur l'ergonomie, l'accessibilité et l'internationalisation. GNOME est conçu pour être utilisé par tous, quels que soient le niveau d'expertise technique, les handicaps ou la langue maternelle de l'utilisateur. GNOME simplifie l'utilisation d'un ordinateur personnel.
GNOME offre une plate-forme de développement complète pour créer des logiciels de haute qualité, simples et agréables à utiliser. Les technologies développées répondront aux besoins des développeurs les plus exigeants. Ce document est une vue d'ensemble de la plate-forme de développement GNOME et il fournit des liens vers la documentation détaillée de chaque module.
Sous le capot
Découvrir Mallard en dix minutes
Le site Web de Mallard
Le site Web de DocBook
Un environnement applicatif UPnP efficace, flexible et facile à utiliser
GUPnP est un environnement applicatif libre orienté objet pour la création de périphériques et de points de contrôle UPnP. Il est écrit en C avec GObject et libsoup. L'API de GUPnP se veut efficace, flexible et facile à utiliser.
L'environnement applicatif GUPnP comprend les composants suivants :
GSSDP : la bibliothèque de bas niveau implémentant la découverte et l'annonce de ressources sur le réseau, suivant le protocole SSDP.
GUPnP : la bibliothèque principale qui implémente les spécifications de UPnP : annonce et découverte de ressources, description, contrôle, notification d'événements et présentation (GUPnP inclut la fonctionnalité d'un serveur Web de base, à travers libsoup). GUPnP ne comprends pas de routines d'assistance pour la construction ou le contrôle de ressources spécifiques standardisées (par exemple MediaServer); cette tâche est laissée à des éléments de plus haut niveau, basés sur GUPnP.
GUPnP A/V : une petite bibliothèque utilitaire qui facilite la création et la gestion de profils UPnP A/V.
GUPnP IGD : une bibliothèque pour gérer le mappage de ports « Internet Gateway Device » (passerelle internet).
GUPnP Vala : l'interface Vala des bibliothèques GUPnP.
GUPnP Tools : un remplacement libre des outils UPnP de Intel, basé sur GUPnP. Ces outils permettent de tester et déboguer facilement des périphériques UPnP et leurs points de contrôle. Les outils pour client et serveur suivants sont disponibles :
Universal Control Point : un outil qui permet de découvrir des périphériques UPnP et leurs services, de récupérer leurs informations, de s'abonner aux événements et d'invoquer des actions.
Network Light : une ampoule virtuelle qui peut être contrôlée par un point de contrôle. On peut l'allumer, l'éteindre, changer son intensité et interroger son état. L'outil contient aussi une interface graphique simple qui permet de contrôler toutes les ampoules virtuelles disponibles sur le réseau.
AV Control Point : une interface utilisateur de lecteur multimédia très simple, qui permet de découvrir et de jouer du contenu multimédia disponible sur le réseau. C'est en réalité juste un point de contrôle et par conséquent il n'est pas capable de lire lui-même un média. Il s'en remet à des périphériques UPnP externes de type MediaRenderer pour effectivement jouer le contenu.
Upload : un simple utilitaire en ligne de commande qui télécharge des fichiers vers des MediaServers connus. Il utilise « Universal Control Point » pour découvrir les serveurs MediaServers.
L'environnement applicatif GUPnP est né d'une frustration à l'usage de libupnp et de sa gestion des threads hasardeuse. GUPnP utilise un unique thread, bien qu'il soit asynchrone. Il s'intègre avec la boucle principale de GLib. Il fournit les mêmes fonctionnalités que libupnp, tandis qu'il masque les fonctionnements internes de UPnP derrière une élégante conception orientée objet.
GUPnP est un logiciel libre. Toutes ses bibliothèques sont fournies sous la licence GNU LGPL. Les outils GUPnP sont fournis sous la licence GNU GPL.
Vous devriez utiliser GUPnP dès que votre logiciel a besoin de communiquer avec des périphériques UPnP ou DLNA. Par exemple la Playstation 3 de Sony, des télévisions et des téléphones de Samsung, la XBox de Microsoft ou encore tout routeur moderne. La liste est longue et continue de s'agrandir.
Outre l'interaction avec les appareils UPnP existants, GUPnP pourrait aussi être utilisé, avec avantage, pour créer une solution sur réseau local où des périphériques et services peuvent être découverts et interagir entre-eux, ceci sans la moindre configuration de l'utilisateur.
Pour une information complète sur GUPnP, consultez le
Grâce à la souplesse de l'interface de programmation de GTK+, le développement de composants supplémentaires à destination des applications GTK+ est simple. De nombreuses bibliothèques tierces fournissent des composants supplémentaires, et beaucoup de développeurs ont créé des composants personnalisés et spécialisés pour leurs applications.
GTK+ est chargé des détails complexes des interfaces utilisateur et des interactions avec l'utilisateur. Il offre une interface de programmation simple mais puissante permettant aux développeurs de se concentrer sur les détails de leur application. Les applications développées avec GTK+ respectent automatiquement les réglages de thème et de police de l'utilisateur, interagissent correctement avec les technologies d'accessibilité et leur comportement correspond aux attentes des utilisateurs.
Tutoriel d'introduction à GTK+
Manuel de référence de GTK+
Le site Web de GTK+
Manuel de développement d'application GStreamer
Le manuel de référence des fondamentaux de GStreamer 0.10
La page de documentation de GStreamer
Le site Web de GStreamer
Manuel de référence de GIO
Une puissante API basée sur les classes de flux GIO
Référence des objets réseau de haut niveau
Gestion de base des éléments graphiques et des évènements utilisateurs
Manuel de référence de GDK
GDA
Manuel de référence du carnet d'adresse Evolution : libebook
Manuel de référence du calendrier Evolution : libecal
Tutoriel d'introduction à D-Bus
Spécifications de D-Bus
Des graphiques et des animations époustouflantes
Clutter est une bibliothèque qui permet de créer des interfaces utilisateur attractives, dynamiques et réactives.
Manuel du développeur Clutter
Manuel de référence de Clutter
Le site Web de Clutter
Manuel de référence de Canberra
Le rendu vectoriel 2D de précision sur tout support
Manuel de référence de Cairo
Le site Web de Cairo
Manuel du développeur - GNOME accessibilité
Manuel de référence de ATK