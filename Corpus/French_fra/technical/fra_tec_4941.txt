# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Chapitre 9.
Les constantes
Suivant
Les constantes prédéfinies sont toujours disponibles.
En voici la liste:
Le nom du fichier qui est actuellement exécuté.
Si cette constante est utilisée dans le cadre d'un fichier "inclus "(après utilisation de require()), alors le nom du fichier inclus est renvoyée, et non le nom du fichier parent.
Le numéro de la ligne qui est actuellement exécutée.
Si cette constante est utilisée dans le cadre d'un fichier "inclus "(après utilisation de require()), c 'est la position dans le fichier inclus qui est renvoyé.
La chaîne de caractères de présentation de la version du PHP qui est actuellement utilisée.
Par exemple '4.1.0'.
Nom du système d 'exploitation qui est utilisé par la machine qui fait tourner le PHP.
Parmi les valeurs possibles: "AIX", "Darwin" (MacOS), "Linux", "SunOS", "WIN32", "WINNT ".
Note: cette liste n 'est pas exhaustive.
La valeur vraie booléenne, TRUE.
La valeur faux booléenne, FALSE.
Dénote une erreur autre qu'une erreur d'analyse ("parse error") qu'il n 'est pas possible de corriger.
Dénote un contexte dans lequel le PHP trouve que quelque chose ne va pas.
Mais l 'exécution se poursuit tout de même.
Ces alertes-là peuvent être récupérées par le script lui-même.
Un exemple serait une expression régulière (regexp) invalide dans la fonction ereg().
L 'analyseur a rencontré une forme syntaxique invalide dans le script.
Correction de l 'erreur impossible.
Quelque chose s 'est produit, qui peut être ou non une erreur.
L 'exécution continue.
Par exemple, le cas de guillemets doubles (") non refermés, ou bien la tentative d'accéder à une variable qui n 'est pas encore affectée.
Toutes les constantes E_* rassemblées en une seule.
Si vous l'utilisez avec error_reporting(), toutes les erreurs et les problèmes que PHP rencontrera seront notifiés.
Les constantes E_* sont généralement utilisées avec la fonction error_reporting().
Vous pouvez définir d'autres constantes en utilisant la fonction define().
Il est à noter que ce sont des constantes, et non pas des macros comme en C.
Seulement les données scalaires peuvent être représentées par des constantes.
Exemple 9-2.
Définition de constantes
?php define( "CONSTANTE", "Bonjour le monde ."); echo CONSTANTE; / / affiche "Bonjour le monde. "?
Exemple 9-3.
Utilisation des constantes __FILE__ et __LINE__
?php function rapport_erreur( $file, $line, $message) {echo "Une erreur est survenue dans le fichier $file à la ligne $line: $message .";} rapport_erreur(__FILE__, __LINE__, "Il y a un problème !");?
Précédent
Sommaire
Suivant
Les constantes
Niveau supérieur
Les expressions