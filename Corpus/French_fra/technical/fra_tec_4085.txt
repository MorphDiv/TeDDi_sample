# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Suivant

ora_bind() retourne TRUE si la liaison a pu se faire, et sinon FALSE.
Les erreurs sont accessibles avec les fonctions ora_error() et ora_errorcode().
Cette fonction lie une variable PHP avec un paramètre SQL.
Le paramètre SQL doit être de la forme ":name".
Avec l'option, vous pouvez choisir si le paramètre SQL est de type entrée / sortie (0, valeur par défaut), entrée seulement (1) ou sortie seulement (2).
Comme dans PHP 3.0.1, vous pouvez respectivement utiliser les constantes ORA_BIND_INOUT, ORA_BIND_IN et ORA_BIND_OUT plutôt que des nombres.
ora_bind() doit être appelée après la fonction ora_parse() et avant ora_exec().
Les valeurs d 'entrées peuvent alors être fournies par assignation des variables PHP.
Après la fonction ora_exec() les variables liées contiennent les valeurs de sortie, si elles sont disponibles.
Par exemple:
?php ora_parse( $curs, "declare tmp INTEGER; begin tmp := :in; :out := tmp; :x := 7.77; end ;"); ora_bind($curs, "result", ":x", $len, 2); ora_bind($curs, "input", ":in", 5, 1); ora_bind($curs, "output", ":out", 5, 2); $input = 765; ora_exec($curs); echo "Résultat: $result br Sortie: $output br Entrée: $input";?
Précédent
Sommaire
Suivant
Oracle
Niveau supérieur
