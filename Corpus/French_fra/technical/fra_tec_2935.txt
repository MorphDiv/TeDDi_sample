# language_name_wals:	French
# language_name_glotto:	French
# iso639_3:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Suivant

Avertissement
Ce module est EXPERIMENTAL.
Cela signifie que le comportement de ces fonctions, leurs noms et concrètement, TOUT ce qui est documenté ici peut changer dans un futur proche, SANS PREAVIS!
Soyez-en conscient, et utiliser ce module à vos risques et périls.
dbx_connect() retourne une resource dbx_link_object en cas de succès, FALSE sinon.
Si la connexion a put être établie, mais que la base de données n 'a pas pu être sélectionnée, la fonction retournera quand même une ressource.
Le paramètre persistent peut prendre la valeur DBX_PERSISTENT, pour créer une connexion persitante.
Le paramètre module Le paramètre module peut être soit une chaîne, soit une constante.
Les valeurs possibles de module sont listées ci-dessous (n'oubliez pas que cela fonctionnera que si le module associé est chargé):
module DBX_MYSQL: "mysql"
module DBX_ODBC: "odbc"
module DBX_PGSQL: "pgsql"
module DBX_MSSQL: "mssql"
module DBX_FBSQL: "fbsql" (CVS uniquement)
Le support de pgsql était au stade expérimental jusqu 'en avril 2001, et vous devez compiler vous-même le module pgsql après avoir modifié un des fichiers sources.
Sinon, vous aurez une alerte affichée à chaque requête.
La ressource dbx_link_object a trois membres: 'handle', 'module' et 'database '.
Le membre 'database' contient le nom de la base de données actuellement sélectionnée.
Le membre 'module' est à usage interne à dbx, et contient le numéro de module sus-cité.
Le membre 'handle' est une ressource valide de connexion à la base de données, et peut être utilisé en tant que tel dans les autres fonctions spécifiques à cette base de données.
Le message d'erreur pour Microsoft SQL server est actuellement le résultat direct de la fonction mssql_get_last_message().
?php $link = dbx_connect( "mysql", "localhost", "base de données", "utilisateur", "mot de passe"); mysql_close($link - handle); / / dbx_close($link) est beaucoup plus adapté ici?
Les paramètres host, database, username et password sont attendus, mais ne sont pas toujours utiles, suivant la fonction de connexion de la base de données utilisée.
Exemple 1.
Exemple avec dbx_connect()
?php $link = dbx_connect( "odbc", "", "base de données", "utilisateur", "mot de passe", DBX_PERSISTENT) or die ("Impossible de se connecter"); print ("Connexion réussie"); dbx_close($link);?

Reportez-vous aussi à la documentation de la base de données que vous utilisez.
Voir aussi dbx_close().
Précédent
Sommaire
Suivant

Niveau supérieur
