# language_name_wals:	French
# language_name_glotto:	French
# iso639_3:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Suivant

assert() va vérifier l 'assertion assertion et prendre la mesure appropriée si le résultat est FALSE.
Si assertion est donnée sous la forme d'une chaîne, elle sera évaluée comme un code PHP par la fonction assert().
Les avantages de ce type d'assertion sont d'être moins lourd si la vérification d'assertion est désactivée, et le contenu des messages lorsque l 'assertion échoue.
Il est recommandé de n 'utiliser les assertions que comme outil de débuggage.
Vous pouvez les utiliser pour les vérifications d'usage: ces conditions doivent normalement être vraies, et indiquer une erreur de programmation si ce n 'est pas le cas.
Vous pouvez aussi vérifier la présence de certaines extensions ou limitations du système.
Les assertions ne doivent pas être utilisées pour faire des opérations de vérifications en production, comme par exemple des vérifications de valeur d 'argument.
En conditions normales, votre code doit être en état de fonctionner si la vérification d 'assertion est désactivée.
Le comportement de assert() peut être configuré par assert_options() ou par .ini-settings.
Précédent
Sommaire
Suivant
assert-options
Niveau supérieur
