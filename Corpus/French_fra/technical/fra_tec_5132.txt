# language_name_wals:	French
# language_name_glotto:	French
# iso639_3:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Chapitre 2.
Une introduction à PHP
Suivant
L 'un des points forts de PHP est sa capacité à gérer les formulaires.
Le concept de base qui est important à comprendre est que tous les champs d'un formulaire seront automatiquement disponibles dans le script PHP d 'action.
Lisez le chapitre du manuel concernant les variables d'origine externe à PHP pour plus d'informations et d 'examples sur comment utiliser les formulaires.
Voici un exemple de formulaire HTML:
Exemple 2-6.
U*n simple formulaire HTML
form action=" action.php "method="POST" Votre nom: input type="text "name="nom" / Votre age: input type="text "name="age" / input type="submit "value="OK" / form
Il n 'y rien de particulier dans ce formulaire.
Il est en HTML pur, sans aucune configuration particulière.
Lorsque le visiteur remplit le formulaire, et clique sur le bouton d 'envoi, le fichier action.php est appelé.
Dans ce fichier, vous pouvez écrire le script suivant:
Exemple 2-7.
Afficher des données issues d 'un formulaire
Bonjour, ?php echo $_POST[ "nom"];?.
Tu as ?php echo $_POST[ "age"];? ans.
Voici le résultat que vous pourriez obtenir, dépendemment des valeurs que vous avez saisies:
Bonjour Jean.
Tu as 29 ans.
Le fonctionnement du script devrait être évident.
Il n 'y a rien de plus compliqué.
Les variables $_POST[ "nom"] et $_POST["age"] Les variables $_POST["nom"] et $_POST["age"] sont automatiquement créés par PHP.
Un peut plus tôt dans ce tutorial, nous avons utilisé la variable $_SERVER, une auto-globale.
Maintenant, nous avons introduit une autre auto-globale $_POST qui contient toutes les données envoyées par la méthode POST.
Notez que dans notre formulaire, nous avons choisi la méthode POST. method.
Si vous avions utilisé la méthode GET alors notre formulaire aurait placé ses informations dans la variable $_GET, une autre auto-globale.
Vous pouvez aussi utiliser la variable $_REQUEST, si vous ne souhaitez pas vous embarrasser de la méthode utilisée.
Elle contient un mélange des données de GET, POST, COOKIE et FILE.
Voyez aussi la fonction import_request_variables().
Précédent
Sommaire
Suivant
Trucs pratiques
Niveau supérieur
Utiliser des codes anciens avec les nouvelles versions de PHP