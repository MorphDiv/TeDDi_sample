# language_name_wals:	French
# language_name_glotto:	French
# ISO_6393:	fra
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manuel PHP
Précédent
Suivant
Ces fonctions vous permettent de travailler avec des nombres de taille arbitraire, en utilisant la librairie GNU MP.
Pour pouvoir y accéder, vous devez compiler PHP avec le support GMP en utilisant l 'option --with-gmp.
Vous pouvez télécharger GMP sur le site de http: / /www.swox.com / gmp /.
Ce site propose aussi un manuel GMP.
Vous devez utiliser GMP version 2 ou plus récent pour utiliser ces fonctions.
Certaines d 'entre elles peuvent requérir une version encore plus récente de GMP.
Ces fonctions ont été ajoutées en PHP 4.0.4.

La majorité des fonctions GMP acceptent des nombres GMP comme arguments, définis ci-dessous comme resource.
Cependant, la plupart de ces fonctions acceptent aussi des nombres et des chaînes à partir du moment où on peut les convertir en nombre.
Si une fonction utilisant les entiers est plus rapide, elle sera automatiquement appelée si les arguments fournis sont des entiers.
Cela se fait de manière transparente: vous pouvez donc utiliser des entiers avec les fonctions GMP sans perte de vitesse.
Voir aussi gmp_init().
Exemple 1.
Factorielle avec GMP
?php function fact( $x) {if($x = 1) return 1; else return gmp_mul($x,fact($x-1));} print gmp_strval(fact(1000)) ."\n";?
Précédent
Sommaire
Suivant

Niveau supérieur
