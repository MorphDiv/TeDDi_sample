# language_name_wals:	Mandarin
# language_name_glotto:	Mandarin Chinese
# ISO_6393:	cmn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Hans
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/zh_CN.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

括号和组合
/text/smath/01/03091100.xhp
$[officename] Math 中的括号和组合
$[officename] Math 中的组合和括号
括号和组合
示例中的引号仅是用来突出文字，并不属于示例和命令的内容。
命令
窗口内时要注意，为保证结构正确，空格是必不可少的。
花括号 &quot; {} &quot; 用于将表达式组合在一起以组成新的表达式。例如， &quot; sqrt {x * y} &quot; 是整个 x*y 乘积的平方根，而 &quot; sqrt x * y &quot; 是 x 的平方根乘以 y。花括号不需要占额外的空间。
一对括号以前是在“公式元素”窗口中插入的或是直接在“命令”窗口中输入 &quot; left lbrace < ? > right rbrace &quot; 插入的。现在，还可以使用 &quot; lbrace &quot; 和 &quot; rbrace &quot; （带或不带通配符）分别插入左括号和右括号。
一共有八种不同类型的括号可供使用。 &quot; ceil &quot; 和 &quot; floor &quot; 括号通常用于将参数四舍五入至下一个整数： &quot; lceil -3.7 rceil = -3 &quot; 或 &quot; lfloor -3.7 rfloor = -4 &quot; 。
尖括号之间加上一条垂直线的用法在物理学中相当普遍： &quot; langle a mline b rangle &quot; 或 &quot; langle a mline b mline c over d mline e rangle &quot; 。垂直线的高度和位置总是与括号相一致。
所有括号均须成对使用。括号都有几个共同点：
所有类型的括号作用都是组合，正如 &quot; {} &quot; 括号的说明那样。
所有类型的括号，也包括可见的，均允许定义空组。中间包含的表达式可以空缺。
括号不会根据所包含的表达式调整自身大小。例如，如果要得到表达式 &quot; ( a over b ) &quot; ，并且其中的括号大小根据 a 和 b 进行调整，则必须插入 &quot; left &quot; 和 &quot; right &quot; 。输入 &quot; left(a over b right) &quot; 会进行相应的大小调整。但是，如果括号本身就是大小经过更改的表达式中的一部分，则还将包括这些括号的大小更改： &quot; size 3(a over b) &quot; 和 &quot; size 12(a over b) &quot; 。“括号对表达式”比例的大小调整始终都不会变化。
由于 &quot; left &quot; 和 &quot; right &quot; 保证了括号间的明确对应关系，每个括号都可以用作这两者的自变量，包括可以将右括号放在左边或把左括号放在右边。也可用 &quot; none &quot; 取代括号位置，这就意味着，在该位置不显示括号，并且也没有为括号预留位置。这样便会构成如下表达式：
left lbrace x right none
left [ x right
left ] x right [
left rangle x right lfloor
适用于其他括号的规则同样适用于 &quot; left &quot; 和 &quot; right &quot; ，尤其是其组合作用和允许包含空表达式。
不同括号的组合使用以及只在一侧使用括号或将括号位置左右调换的情况会经常出现。以下是一个数学例子，虽然在数学中不能这么输入，但却可以用来说明问题：
[2, 3)- 右边为开区间
使用 &quot; left &quot; 和 &quot; right &quot; 使上述表达式在 $[officename] Math 中有效： &quot; left [2, 3 right ) &quot; 。然而，括号不具有任何固定尺寸，因为它们会根据变量进行调整。设置单括号有些困难。因此，您可以通过在普通括号前放置 &quot; \ &quot; （反斜杠），以固定大小显示单括号。然后，这些括号就与其他任何符号作用相同并且不再具有括号的特殊功能，也就是说它们不再作为组生成器，并且其方向与其他符号的方向一致。例如 &quot; size *2 \langle x \rangle &quot; 和 &quot; size *2 langle x rangle &quot; 。
完整概述如下所示
\{或\lbrace, \}或\rbrace
\(, \)
\[, \]
\langle, \rangle
\lceil, \rceil
\lfloor, \rfloor
\lline, \rline
\ldline, \rdline
$[officename] Math
毫无问题地表达了：\[2 &quot; , &quot; 3\) 或 &quot; \]2 &quot; , &quot; 3\[（注意：这些引号属于输入内容。）
Shift+2
获得，而不能使用印刷引号。通常，标点符号（例如本例中的逗号）被设置为文本。尽管也可以输入 &quot; \[2,~3\) &quot; ，但最好使用上面的选项。在上一个示例中，“固定大小”通常表示取决于所用字体的括号大小。
将组彼此进行嵌套，相对而言不容易出现问题。对于公式 hat &quot; {a + b} &quot; ，其中的 &quot; hat &quot; 会显示在 &quot; {a + b} &quot; 中央的正上方。此外， &quot; color red lceil a rceil &quot; 和 &quot; grave hat langle x * y rangle &quot; 也会达到预期效果。后者的结果相当于 &quot; grave {hat langle x * y rangle} &quot; 。这些属性不会冲突，而且可以进行组合。
这与冲突或相互影响的属性略有不同。这是字体属性通常具有的情况。例如，在 &quot; color yellow color red (a + color green b) &quot; 中，b 是什么颜色，或者在 &quot; size *4 (a + size /2 b) &quot; 中其大小是多少？假设基本大小是 12，则其大小是 48 、6 或者甚至为 24（可将其看作一项组合）？下面是基本的解析规则，以后将始终遵循这些规则。通常，这些规则适用于所有的组合操作。它对于字体属性只具有视觉上的影响，像 &quot; bold &quot; 、 &quot; ital &quot; 、 &quot; phantom &quot; 、 &quot; size &quot; 、 &quot; color &quot; 和 &quot; font &quot; ：
将序列中的组合运算视为：每个单一运算前后均加上花括号。它们是嵌套的，并且在每一层级中不能有一项以上的运算。以下是一个具有多项组合运算的公式示例： &quot; size 12 color red font sans size -5 (a + size 8 b) &quot; 类似于 &quot; {size 12{color red{font sans{size -5 (a + {size 8 b})}}}} &quot; 。
然后从左向右解释此示例公式。运算只影响与其相对应的组（或表达式）。逐步向右进行的运算将会“替代”先前运算或将其本身与先前运算相结合。
组合操作并不作用于其上一层的组合，而只是针对其下层的组合和表达式，其中也包括它们的括号和上/下标，参见 &quot; a + size *2 (b * size -8 c_1)^2 &quot;
&quot; color ... &quot; 和 &quot; font ... &quot; 以及 &quot; size n &quot; （n 为十进制数）有时可代替以前的同类操作
&quot; size +n &quot; 、 &quot; size -n &quot; 、 &quot; size *n &quot; 和 &quot; size /n &quot; 则具有综合操作效果，
&quot; size *2 size -5 a &quot; 为两倍的初始大小减去 5
&quot; font sans ( a + font serif b) &quot;
&quot; size *2 ( a + size /2 b ) &quot;
UFI: no more StarSymbol font.
Removed the following paras
id= &quot; par_id3151327 &quot; l10n= &quot; U &quot; oldref= &quot; 45 &quot; For the StarSymbol Unicode font there are 2 exceptions to these rules: id= &quot; par_id3148998 &quot; l10n= &quot; U &quot; oldref= &quot; 46 &quot; It ignores &quot; font &quot; commands.
Otherwise, there would often be different characters from the ones desired, for example, &quot; font sans (a oplus b) &quot; would then neither have brackets nor an &quot; oplus &quot; . id= &quot; par_id3143281 &quot; l10n= &quot; U &quot; oldref= &quot; 47 &quot; The &quot; ital &quot; command is ignored, for example, &quot; ital (a + b) &quot; .
This happens because italicized mathematical symbols are uncommon, even in combination with text in italics.
要修改公式的大小，请使用 &quot; size + &quot; 、 &quot; size - &quot; 、 &quot; size * &quot; 或 &quot; size / &quot; 。请勿使用 &quot; size n &quot; 。这些命令可以在任何上下文中方便地使用。这使您可以使用“复制”和“粘贴”复制到其他区域，并且保持结果相同。另外，对于此类表达式，菜单中的基本大小不会被修改，因此比使用 &quot; size n &quot; 更好。如果您只使用 &quot; size * &quot; 和 &quot; size / &quot; （例如， &quot; size *1.24 a &quot; 或 &quot; size /0.86 a &quot; ），则比例保持完整。
示例（基本字号为 12，索引为 50%）：
在使用 &quot; size 18 a_n &quot; 和 &quot; size *1.5 a_n &quot; 时，比例完全一致。
在不同环境下则不同： &quot; x^{size 18 a_n} &quot; 和 &quot; x^{size *1.5 a_n} &quot;
使用 size +n 的实例作为比较。它们的外观完全一致：
a_{size 8 n}
a_{size +2 n}
a_{size *1.333 n}
以下实例则外观不一致：
x^{a_{size 8 n}}
x^{a_{size +2 n}}
x^{a_{size *1.333 n}}
请注意，此处所有的 n 大小都不同。大小 1.333 由 8/6 得出，这是由默认标志字号 6 始发的所希望的字图标。（标志字图标为基本字图标 12 的 50%）