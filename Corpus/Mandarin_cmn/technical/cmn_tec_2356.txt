# language_name_wals:	Mandarin
# language_name_glotto:	Mandarin Chinese
# iso639_3:	cmn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Hans
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/zh_CN.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

取消
设置自定义包含路径
保存自定义包含路径到目录失败 ：% 1
添加自定义包含路径
打开工程
未找到 ：% 1
私有类实现选项
重构是个实验性特性， 它可能破坏您的代码。 在使用它之前， 确保做好了备份 。
重命名% 1
创建% 1 的分离定义
创建类
未选择任何事物， 不添加到目标 。
光标下无声明
没有% 1 可用的源文件 。
更新% 1 的定义使用链失败 。
无法创建此声明的定义 。
插入失败
应用更改失败
没有% 1 的文档
更新时丢失了声明
新名称 ：
重命名
注意： 所有的被重载的函数、 重载、 前向声明等都会被重命名
使用
重命名 “% 1” 为 “% 2 ”
应用更改失败 ：% 1
生成代码出错
从% 1 (% 2) 更新定义为 (% 3)
应用更改失败 ：% 1
在另一个处理仍然运行时尝试包含路径解析
目录 “% 1” 中缺少 Makefile
试图解析% 1 包含路径时发生问题
已缓存 ：% 1
文件名% 1 似乎格式无效
Make 进程失败
输出 ：% 1
递归 Make 调用失败
参数字符串 “% 1” 似乎无效。 输出为 ：% 2 。
目录 “% 1” 不存在。 输出为 ：% 2 。
无效的递归 Make 调用
输出为 ：% 1
无法从 make 的输出中展开包含路径
文件夹 ： “% 1 ” 命令 ： “% 2 ” 输出 ： “% 3 ”
添加包含指令
添加前向声明
前向声明
未包含
覆盖
实现
创建槽
来自% 1
初始化
未包含的容器Here, overload is used as a programming term. This string is used to display how many overloaded versions there are of the function whose name is the second argument. The numeric argument is always greater than one, so translation of the singular case is only necessary in languages where the singular form is used for 21, 31 etc.
连接到% 1 (% 2)
信号/ 槽
虚覆盖
实现函数
C++ 内建
无法解析基类， 间接添加 ：% 1
无效的基类 ：% 1
函数宏
宏
预处理实体 ：
实体： Headers included into this header
已包含Count of files this header was included into
包含者Count of macros defined in this header
定义的宏
未找到声明 ：% 1
创建局部声明% 1% 2
声明% 1% 2% 3
文件递归包含自身 ：% 1
包含文件未找到 ：% 1
已搜索的包含路径 ：% 1
无法打开文件 “% 1 ”
无法读取文件于 。
无法打开文件 。
文件权限阻止打开读取 。
工程% 1 的构建管理器没有返回一个构建目录
包含路径解析器需要构建目录以解析其它的包含路径。 如果您尚未在工程管理器中设置好构建目录， 请完成该设置 。
构建管理器没有返回包含路径
构建管理器没有返回包含路径解析器所能解析的包含路径% 1
包含路径解析器 ：% 1
使用构建目录 ： “% 1 ” 包含路径解析器 ：% 2
文件导入当前打开的文档
在包含路径% 1
通过% 1 包含
目录% 1
在第% 1 个包含路径
包含
包含路径
包含者
C++ 支持
C++ 语言支持
文件
切换定义/ 声明( S)
创建新类( N)
重命名声明
移入源文件
由预处理器清空
正在分析包含文件
正在分析真实文件
未更新% 1 的定义使用链
正在构建使用
就绪
宏错误
调用宏% 1 缺少实参数% 2
形参 ：% 1
未终止的 # if 语句
字符% 1
需要 "标识符" ， 找到 ：% 1
令牌文字% 1 输入% 2
需要 ")" ， 找到 ：% 1
除数为零
输入文字 ：% 1
需要 ``: ''=% 1
# else 没有对应的 # if
在输出行% 1 处 # endif 没有对应的 # if
KDE 前向头文件生成器
一个从源代码创建前向头文件( 如 Qt 头文件) 的应用程序 。
(c) 2006， Hamish Rodda
KDE 包含目录 - 头文件将进入 includes / KDE
根据 cmake XML 生成器构建信息
无效输入 ：% 1@ title: menu
导航@ title: menu
代码NAME OF TRANSLATORS
Ni HuiEMAIL OF TRANSLATORS
shuizhuyuanluo@ 126. com
公有
受保护
私有
槽
信号
C++ 选项
导出( E) ：
宏( M) ：
私有结构体名称 ：
选项
使用类而不是结构体
将变量初始化移到私有结构体
将目前全部已声明的私有方法移到私有实现结构体 。
移动私有方法
指针名称 ：
指向私有实现指针的成员变量名称
d
存储目录
存储目录 ：
自动解析
如果您的工程使用简单的 Makefile 文件， 可使用 make 工具自动解析包含路径 。 为此， 请在这里设置一个从源代码目录到构建目录的映射 。
源代码目录 ：
构建目录 ：
自定义包含路径
您可以在此添加一系列自定义包含路径 。
注意： 这些设置不会影响到编译器或工程本身 ， 它们只会用于 KDevelop 内部查找包含的头文件 。