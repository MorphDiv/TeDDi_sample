# language_name_wals:	Mandarin
# language_name_glotto:	Mandarin Chinese
# ISO_6393:	cmn
# year_composed:	NA
# year_published:	2013
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Hans
# special_characters:	NA
# short_description:	GNOME
# source:	https://object.pouta.csc.fi/OPUS-GNOME/v1/raw/zh_CN.zip
# copyright_short:	http://opus.nlpl.eu/GNOME.php
# copyright_long:	http://opus.nlpl.eu/GNOME.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

无法打开输出文件：%s
执行“%s”失败：%s
MemProf
无法找到“%s”的可执行文件
MemProf 错误
MemProf 警告
函数
自身进程
总和
派生
积累
调用者
地址
大小
调用者
函数
行数
文件
真的从已完成的进程中脱离？
真的从正在运行的进程中脱离？
真的要杀死正在运行的进程？
为 fork 出的进程创建新窗口
在进程执行了 exec() 后保留窗口
要收集的信息的类型
每秒钟取样数(1k=1000)
正在申请内存的函数
--profile 的参数必须是“memory”、“cycles”和“time”之一
无法找到 memprof.glade
添加要忽略的函数
输入在计算内存使用情况时要忽略的函数名
运行可执行文件
输入可执行文件的路径名
选择可执行文件
MemProf - 进程
添加要忽略的正则表达式
输入在计算内存使用情况时要忽略的函数名的正则表达式
首选项
要忽略的函数：
默认
要忽略的函数名正则表达式：
内存使用分析选项
在堆栈追踪中双击时执行的命令：
探测内存泄漏选项
文件(_F)
进程(_P)
脱离(_D)
进程树(_T)
帮助(_H)
运行程序
运行
杀死程序
杀死
创建内存使用分析
内存使用
检查内存泄漏
内存泄漏
保存报告
保存
记录
绘制内存映射
重置
0k
32k
分配内存序号：
字节数 / 分配：
总字节数：
堆栈追踪
时间图像
内存使用图
初始化
正在开始
正在运行
正在退出
僵尸进程
无法找到 %s
显示
隐藏
脱离
进程号
命令行
状态
目前禁用保存
*

版权所有(C) 1999, 2000, 2001, Red Hat, Inc.
版权所有(C) 2002, Kristian Rietveld
跟随 _exec()
跟随 _fork()
生成内存泄漏报告(_L)
生成内存使用分析(_P)
内存使用分析工具
保存内存泄漏信息(_L)...
保存内存使用分析(_P)...
杀死(_K)
运行程序(_R)...
设置(_S)
He Qiangqiang <carton\@linux\.net\.cn>
真的要退出 MemProf？
字节数
子进程
找不到 libmemintercept.so
添加...
删除
运行(_R)...
版权所有 Red Hat, Inc., 1999-2000
label37
添加