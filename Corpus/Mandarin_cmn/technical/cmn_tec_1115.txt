# language_name_wals:	Mandarin
# language_name_glotto:	Mandarin Chinese
# ISO_6393:	cmn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Hans
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/zh_CN.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

正则表达式列表
/text/shared/01/02100001.xhp
正则表达式; 列表
列表;正则表达式
替换;制表符（正则表达式）
制表符;正则表达式
连接, 请参见 & 符号
& 符号, 另请参见运算符
mw added &quot; replacing; &quot; and &quot; tab stops; &quot;
正则表达式列表
字符
结果/使用
任何字符
如果没有其他指定则代表给定的字符。
.
代表除换行符和分段符之外的任意单个字符。例如，查找 &quot; sh.rt &quot; 将同时返回 &quot; shirt &quot; 和 &quot; short &quot; 。
^
仅查找位于段首的查找项。段首的特殊对象（例如，空白间隔和与字符锁定在一起的框架）将被忽略。例如 '^Peter'。
$
仅查找位于段尾的查找项。段尾的空白区间或与字符锁定的框架等特殊对象将被忽略，例如 &quot; Peter$ &quot; 。
*
查找 '*' 前的一个字符出现N（N≥0）次的情况。例如，'Ab*c' 将查找 'Ac'、'Abc'、'Abbc'、'Abbbc' 等。
+
查找 &quot; + &quot; 前的一个字符出现N（N≥1）次的情况。例如输入 'AX.+4' 将找到 'AXx4'，而不是 'AX4'。
始终查找段落中匹配此查找模式的最长的可能字符串。如果段落包含字符串 &quot; AX 4 AX4 &quot; ，则突出显示整个段落。
?
查找 &quot; ? &quot; 前的一个字符出现N（N=0 或 N=1）次的情况。例如， &quot; Texts? &quot; 将查找 &quot; Text &quot; 和 &quot; Texts &quot; ，而 &quot; (ab|c)?y &quot; 将查找 &quot; xy &quot; 、 &quot; xaby &quot; 或 &quot; xcy &quot; 。
\
查找将在 &quot; \ &quot; 之后的特殊字符视为普通字符而非正则表达式（组合 \n、 、\ > 和 \ < 除外）。例如， &quot; tree\. &quot; 查找 &quot; tree. &quot; ，而非 &quot; treed &quot; 或 &quot; trees &quot; 。
\n
查找内容
替换为
\n
，然后执行查找并进行替换。
查找内容
文字框中的 \n 表示一个用 Shift+Enter 组合键插入的换行符。
替换为
文字框中的 \n 表示一个能用 Enter 或 Return 键输入的段落换行符。
 
替换成
框中使用此表达式。
\ >
仅查找位于词尾的查找条目。例如， &quot; book\ > &quot; 可以查到 &quot; checkbook &quot; ，而不会查到 &quot; bookmark &quot; 。
\ <
仅查找位于词首的查找条目。例如， &quot; \ < book &quot; 可查找到 &quot; bookmark &quot; ，而不会查找到 &quot; checkbook &quot; 。
^$
查找空段落。
^.
查找段落的首字符。
& 或 $0
查找内容
替换为
框的内容中。
查找内容
框中输入 &quot; window &quot; ，在
替换为
框中输入 &quot; & frame &quot; ，则将使用 &quot; windowframe &quot; 替换 &quot; window &quot; 。
替换为
框中输入 &quot; & &quot; ，修改按查找条件查找的字符串的
属性
格式
。
[abc123]
代表括号中的某个字符。
[a-e]
代表 a 到 e 之间的任意字符。
[a-eh-x]
表示 a-e 和 h-x 之间的任意字符。
[^a-s]
代表非 a 到 s 之间的任意字符。
\xXXXX
代表一个基于四位十六进制代码 (XXXX) 的特殊字符。
插入 - 特殊字符
，可以查看这些代码。
|
查找 &quot; | &quot; 两边出现的内容。例如，对于 &quot; this|that &quot; 将找到 &quot; this &quot; 和 &quot; that &quot; 。
{2}
定义左括号前面的字符的出现次数。例如， &quot; tre{2} &quot; 可以查找到 &quot; tree &quot; 。
{1,2}
定义左括号前面的字符出现的次数。例如， &quot; tre{1,2} &quot; 可以查找到 &quot; tree &quot; 和 &quot; treated &quot; 。
{1,}
定义左括号前面的字符出现的最小次数。例如， &quot; tre{2,} &quot; 可以找到 &quot; tree &quot; 、 &quot; treee &quot; 以及 &quot; treeeee &quot; 。
( )
查找内容
框中：
将括号中的字符定义为一个引用。然后可在当前表达式中，使用 '\1' 指向第一个引用，使用 '\2' 指向第二个引用，以此类推。
例如，如果文本中包含数字 13487889，并使用正则表达式 (8)7\1\1 进行查找，则查找结果为 &quot; 8788 &quot; 。
可以用 () 组合某些字母或词，例如， &quot; a(bc)?d &quot; 可以找到 &quot; ad &quot; 或 &quot; abcd &quot; 。
替换为
框中：
使用 $（美元符号）而非 \（反斜杠）来替换引用。使用 $0 来替换查找到的整个字符串。
[:alpha:]
代表某字母字符。使用 [:alpha:]+ 来查找它们中的某个。
[:digit:]
代表某十进制数字。使用 [:digit:]+ 来查找它们中的某个。
[:alnum:]
代表一个字母数字字符（字母和数字）。
[:space:]
代表空格字符（但不代表其他空白字符）。
[:print:]
代表一个可打印字符。
[:cntrl:]
代表一个非打印字符。
[:lower:]
选项
区分大小写
，则显示小写字符。
[:upper:]
选项
区分大小写
，则代表一个大写字符。
示例
您可以组合搜索条目来构成复杂搜索。
在段落中查找单独的三位数。
^[:digit:]{3}$
^ 表示匹配必须在段落起始处，
[:digit:] 与任何十进制数字匹配，
{3} 表示必须精确地有三个“数字”副本，
$ 表示匹配必须结束段落。
Writer 中有关正则表达式的 Wiki 页
Calc 中有关正则表达式的 Wiki 页