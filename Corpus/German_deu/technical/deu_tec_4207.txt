# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne
(PHP 4 = 4.0.4)
shmop_open() Kann einen gemeinsamen Speicherbereich erstellen oder öffnen.
shmop_open() benötigt 4 Parameter: key, die System-ID des gemeinsam genutzten Speicherblocks, dieser Parameter kann als Dezimal - oder Hexadezimalzahl übergeben werden.
Der zweite Parameter bezeichnet die Flags, die man benutzen kann:
"a" zum Zugriff (access) auf einen gemeinsamen Speicherblock (setzt SHM_RDONLY für shmat).
Benutzen Sie dieses Flag, wenn Sie einen bestehenden gemeinsamen Speicherblock zum Lesen öffnen wollen.
"c" zum Erstellen (create) eines gemeinsamen Speicherblocks (setzt IPC_CREATE).
Benutzen Sie dieses Flag, wenn Sie einen neuen gemeinsamen Speicherblock erstellen wollen oder, falls bereits ein Segment mit derselben ID existiert, zum Öffnen dieses Segments für Lese - und Schreibzugriffe.
"w" für Lese - und Schreibzugriffe.
Benutzen Sie dieses Flag wenn Sie in einen gemeinsamen Speicherbereich schreiben oder daraus lesen müssen.
Das wird meistens der Fall sein.
"n" zum Erzeugen eines neuen gemeinsamen Speichersegments (setzt IPC_CREATE|IPC_EXCL).
Benutzen Sie dieses Flag, wenn Sie ein neues gemeinsames Speichersegment erzeugen wollen.
Falls schon ein Segment mit diesem Flag existiert, schlägt die Funktion fehl.
Dies ist aus Sicherheitsgründen nützlich, denn damit können Sie Sicherheitslöcher vermeiden.
Anmerkung:
Beachten Sie:
Der dritte und vierte Parameter muss als 0 angegeben werden, wenn Sie ein existierendes gemeinsames Speichersegment öffnen wollen.
Bei Erfolg liefert die Funktion shmop_open() eine ID zurück, die Sie zum Zugriff auf den erstellten gemeinsamen Speicher benutzen können.
Beispiel 1.
Einen neuen gemeinsamen Speicherblock erstellen
?php $shm_id = shmop_open( 0x0fff, "c", 0644, 100);?
In diesem Beispiel wurde ein gemeinsamer Speicherblock mit der System-ID 0x0fff erstellt.
Zurück
Zum Anfang
Nach vorne
shmop_delete
Nach oben
shmop_read