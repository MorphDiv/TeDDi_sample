# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

result_id ist eine gültige Ergebniskennung, die von ifx_query() oder ifx_prepare() zurückgegeben wurde.
Diese Funktion gibt nach einer Abfrage, die mit result_id verknüpft ist, eine Pseudo-Zeile (assoziatives Array) mit sqlca.sqlerrd[0]... sqlca.sqlerrd[5] zurück.
Bei INSERTs, UPDATEs und DELETEs sind die zurückgegebenen Werte die, die der Server nach dem Ausführen der Abfrage setzt.
Dadurch bekommt man Zugriff auf die Anzahl der betroffenen Zeilen und auf den Eingabewert eines Serial-Feldes.
Bei SELECTs sind das die Werte, die nach einem PREPARE-Kommando gespeichert wurden.
Hier hat man Zugriff auf die *geschätzte* Anzahl der betroffenen Zeilen.
Der Gebrauch dieser Funktion erspart den Overhead für die Ausführung einer "select dbinfo('sqlca.sqlerrdx') "-Abfrage, weil hier die Werte gelesen werden, die der ifx-Treiber im passenden Moment gespeichert hat.
Beispiel 1.
Informix sqlca.sqlerrd[ x] Werte ermitteln
/* angenommen, das erste Feld von 'sometable' ist vom Typ SERIAL * / $qid = ifx_query("insert into sometable values (0, '2nd column', 'another column') ", $connid); if (! $qid) {... error...} $sqlca = ifx_getsqlca ($qid); $serial_value = $sqlca["sqlerrd1"]; echo "Der Wert des SERIAL-Feldes der eingefügten Zeile ist:". $serial_value br \n";
Zurück
Zum Anfang
Nach vorne

Nach oben
