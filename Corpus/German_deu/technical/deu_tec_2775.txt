# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

Ruft die durch method_name angegebene Methode des benutzerdefinierten Objektes obj auf.
Ein Anwendungsbeispiel sehen Sie unten, wo wir eine Klasse definieren, ein Objekt instantiieren und call_user_method() benutzen, um seine Methode zeige_info indirekt aufzurufen.
?php class Land {var $NAME; var $TLD; function Land($name, $tld) {$this - NAME = $name; $this - TLD = $tld;} function zeige_info($prestr="") {echo $prestr ."Land: ".$this - NAME ."\n"; echo $prestr ."Top-Level-Domain: ".$this - TLD ."\n";}} $cntry = new Land("Peru" ,"pe"); echo "* Direkter Aufruf der Methode\n"; $cntry - zeige_info(); echo "\n* Indirekter Aufruf derselben Methode\n"; call_user_method ("zeige_info", $cntry, " ");?
Siehe auch call_user_func().
Zurück
Zum Anfang
Nach vorne

Nach oben
