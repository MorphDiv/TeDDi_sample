# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne
PHP unterstützt acht primitive Typen.
Vier skalare Typen:
Boolean
Integer
Fließkomma-Zahl (float)
String / Zeichenkette
Array
Object
Resource

Anmerkung:
In diesem Manual werden Sie oft mixed Parameter finden.
Diese Pseudo-Typen weisen darauf hin, dass es mehrere Möglichkeiten für diesen Parameter gibt.
Der Typ einer Variabalen wird normalerweise nicht vom Programmierer bestimmt.
Zur Laufzeit von PHP wird entschieden, welchen Typs eine Variable ist, abhängig vom Zusammenhang in dem die Variable benutzt wird.
Anmerkung:
Um den Typ und den Wert eines bestimmten Ausdrucks (Expression) zu überprüfen, können Sie var_dump() benutzen.
Wenn Sie zur Fehlersuche einfach nur eine lesbare Darstellung eines Typs benötigen, benutzen Sie gettype().
Um auf einen bestimmten Typ zu prüfen, sollten Sie nicht gettype() benutzen.
Stattdessen sollten Sie die is_ type Funktionen verwenden.
Wenn sie die Umwandlung in einen bestimmten Variablen-Typ erzwingen wollen, erreichen Sie dies entweder durch cast oder durch Gebrauch der Funktion settype().
Beachten Sie, dass sich eine Variable in bestimmten Situationen unterschiedlich verhalten kann, abhängig vom Typ dem die Variable zu dem Zeitpunkt entspricht.
Weitere Informationen entnehmen Sie dem Abschnitt zur Typ-Veränderung.
Zurück
Zum Anfang
Nach vorne
Kommentare
Nach oben
Boolscher Typ