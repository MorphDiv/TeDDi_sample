# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

Gibt nach erfolgter Bindung TRUE, andernfalls FALSE zurück.
Einzelheiten über den Fehler bekommen Sie mit den Funktionen ora_error() und ora_errorcode().
Diese Funktion bindet die genannte PHP-Variable an einen SQL-Parameter.
Der SQL-Parameter muss von der Form ":name" sein.
Mit dem optionalen Parameter Typ können sie definieren, ob der SQL-Parameter ein in / out - (0, Grundeinstellung), in - (1) oder out - (2) Parameter ist.
Ab PHP 3.0.1 können Sie statt der Zahlen die Konstanten ORA-BIND_INOUT, ORA_BIND_IN und ORA_BIND_OUT verwenden.
ora_bind() muss nach ora_parse() und vor ora_exec() aufgerufen werden.
Die Eingabewerte können durch Zuweisung an die gebundenen PHP-Variablen angegeben werden.
Nach dem Aufruf von ora_exec() enthalten die gebunden PHP-Variablen die Ausgabewerte, falls diese verfügbar sind.
?php ora_parse( $curs, "declare tmp INTEGER; begin tmp := :in; :out := tmp; :x := 7.77; end ;"); ora_bind($curs, "ergebnis", ":x", $len, 2); ora_bind($curs, "eingabe", ":in", 5, 1); ora_bind($curs, "ausgabe", ":out", 5, 2); $eingabe = 765; ora_exec($curs); echo "Ergebnis: $ergebnis BR Ausgabe: $ausgabe BR Eingabe: $eingabe";?
Zurück
Zum Anfang
Nach vorne
Oracle Funktionen
Nach oben
ora_close