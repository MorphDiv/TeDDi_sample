# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDEdoc
# source:	https://object.pouta.csc.fi/OPUS-KDEdoc/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/KDEdoc.php
# copyright_long:	http://opus.nlpl.eu/KDEdoc.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

MIDI
\xDCberblick
Die MIDI -Unterst\xFCtzung in aRts hat verschiedene Aufgaben.
Erstens erm\xF6glicht sie die Kommunikation von verschiedenen Programmteilen, die MIDI -Ereignisse erzeugen oder verarbeiten.
Wenn Sie z.B. \xFCber einen Sequenzer und einen Sampler verf\xFCgen, die beide aRts unterst\xFCtzen, kann aRts MIDI -Ereignisse vom Sequenzer zum Sampler senden.
Auf der anderen Seite kann aRts f\xFCr ein Programm die Interaktion mit Ger\xE4ten \xFCbernehmen.
Wenn ein Programm (z.B. ein Sampler) aRts unterst\xFCtzt, kann es genau so gut MIDI -Ereignisse von einem externen MIDI -Keyboard empfangen.
Schlie\xDFlich ist aRts ein hervorragender modularer Synthesizer.
Er ist genau daf\xFCr entworfen worden.
Sie k\xF6nnen mit artsbuilder aus den kleinen Modulen Instrumente zusammenstellen und diese Instrumente dann f\xFCr Kompositionen oder zum Abspielen von Musik verwenden.
Synthese hei\xDFt nicht notwendigerweise reine Synthese, es gibt Module, die Sie zum Abspielen von Samples verwenden k\xF6nnen.
Also kann aRts ein Sampler, ein Synthesizer und mehr sein; aRts ist vollst\xE4ndig modular, also leicht zum Erweitern und Experimentieren geeignet, m\xE4chtig und flexibel.
Der MIDI -Manager
Die zentrale Komponente f\xFCr Midi-Ereignisse innerhalb von aRts ist der Midi-Manager.
Er kontrolliert, welche Anwendungen verbunden sind und wie Midi-Ereignisse zwischen ihnen \xFCbertragen und verarbeitet werden sollen.
Der Midi-Manager wird durch artscontrol gesteuert.
Auf der linken Seite sehen Sieh Midi-Eing\xE4nge.
Hier werden alle Ger\xE4te aufgelistet, die MIDI -Ereignisse produzieren.
Das k\xF6nnen externe MIDI -Kan\xE4le sein, die mit einem externen Keyboard verbunden sind, ein Sequenzer, der ein Musikst\xFCck abspielt, oder eine andere MIDI -Quelle.
Alle Ger\xE4te oder Programme, die MIDI -Ereignisse verarbeiten, sind hier aufgelistet.
Das k\xF6nnen simulierte Sampler (als Programme) oder externe MIDI -Kan\xE4le, an denen ein Hardware-Sampler angeschlossen ist, sein.
Neue Programme, wie z.B.
Sequenzer, registrieren sich bei dem Midi-Manager, daher kann sich der Listeninhalt von Zeit zu Zeit \xE4ndern.
Sie k\xF6nnen Ein- und Ausg\xE4nge verbinden, indem Sie den gew\xFCnschten Eingang auf der linken und den Ausgang auf der rechten Seite markieren und auf Verbinden klicken.
Eine Trennung erreichen Sie mit dem Knopf Trennen.
Die bestehenden Verbindungen werden durch g\xFCnne Linien zwischen den Listen angezeigt.
Sie k\xF6nnen einen Midi-Eingang mit mehreren Midi-Ausg\xE4ngen verbinden und umgekehrt.
Programme (wie der Sequenzer Brahms) f\xFCgen sich beim Start selbstst\xE4ndig zur entsprechenden Liste hinzu und entfernen sich beim Beenden selbstst\xE4ndig.
Sie k\xF6nnen aber auch von Hand Eintr\xE4ge hinzuf\xFCgen, indem Sie im Men\xFC Hinzuf\xFCgen w\xE4hlen.
System-Midi-Kanal (OSS)
Dadurch wird ein neues aRts -Objekt erzeugt, das einen externen Midi-Kanal repr\xE4sentiert.
Da externe Midi-Kan\xE4le sowohl senden als auch empfangen k\xF6nnen, wird zu beiden Listen ein Eintrag hinzugef\xFCgt.
Unter Linux ben\xF6tigen Sie entweder einen OSS - (OSS/Free liegt Ihrem Linux -Kernel bei) oder einen ALSA -Treiber f\xFCr Ihre Soundkarte installiert haben.
Sie werden nach dem Ger\xE4tenamen gefragt.
Er lautet normalerweise /dev/midi oder /dev/midi00.
Wenn Sie allerdings mehr als ein MIDI -Ger\xE4t oder einen MIDI -Loopback-Treiber installiert haben, ist die Auswahl gr\xF6\xDFer.
aRts Synthese Midi-Ausgang
F\xFCgt einen neuen MIDI -Ausgang mit einem aRts -Synthese-Instrument hinzu.
Wenn Sie diesen Men\xFCeintrag w\xE4hlen, erscheint ein Dialog, der Ihnen die Wahl eines Instrumentes erm\xF6glicht.
Mit artsbuilder k\xF6nnen Sie neue Instrumente erstellen.
Alle .arts -Dateien, die mit instrument_ beginnen, werden hier aufgelistet.
Verwendung von aRts & Brahms
Zuerst ben\xF6tigen Sie eine KDE 2.1-taugliche Version von Brahms.
Sie finden Sie im kmusic CVS -Modul.
Weitere Informationen zu Brahms finden Sie auf der aRts-Internetseite im Bereich Download.
Wenn man die Anwendung startet, wird zun\xE4chst der MIDI -Manager angezeigt.
Man w\xE4hlt ein Instrument (zum Beispiel organ2).
Man verbindet das Instrument \xFCber den Knopf Verbinden.
Danach kann man mit Brahms komponieren und die Ausgabe wird durch aRts synthetisiert.
Man sollte das artscontrol -Fenster ge\xF6ffnet lassen und die Lautst\xE4rkeeinstellung kontrollieren (die Qualit\xE4t wird schlecht, wenn die Lautst\xE4rkeanzeige an die obere Grenze st\xF6sst).
Nun kann man einneues Demolied f\xFCr aRts erstellen und es, wenn es fertig ist, unter aRts-project.org ver\xF6ffentlichen ;-).
midisend
midisend ist ein kleines Programm, das MIDI -Ereignisse von der Kommandozeile senden kann.
Es registriert sich als MIDI -Eingang wie alle anderen Anwendungen.
Damit wird etwa das gleiche erreicht, wie durch das Hinzuf\xFCgen eines System-Midikanals in artscontrol (nicht ganz, da midisend nur MIDI -Ereignisse senden aber nicht empfangen kann).
Der Unterschied ist, das midisend auf unterschiedlichen Computern gestartet werden kann (und damit Netzwerktransparenz erm\xF6glicht).
Sie k\xF6nnen midisend auch Daten von stdin senden lassen.
Instrumente erstellen
aRts synthetisiert Midi-Kl\xE4nge auf folgende Weise.
Es gibt eine Struktur, die einige Eingabekan\xE4le, aus denen Frequenz und Lautst\xE4rke (velocity) und ein Parameter gelesen wird.
Der Parameter zeigt an, ob die Taste noch heruntergedr\xFCckt ist.
Die Struktur soll nun diese eine Note mit dieser Lautst\xE4rke und Frequenz erzeugen.
Au\xDFerdem soll die Struktur auf den Wert des Parameters gedr\xFCckt reagieren (dabei bedeutet gedr\xFCckt=1 der Benutzer dr\xFCckt die Taste immer noch herunter und gedr\xFCckt=0 die Taste wurde losgelassen).
Eingehende MIDI -Ereignisse veranlassen aRts, neue Strukturen f\xFCr jede gedr\xFCckte Taste zu generieren, ihnen die entsprechenden Parameter mitzugeben und sie wieder zu entfernen, sobald sie nicht mehr ben\xF6tigt werden.
Eine Struktur wird auf folgende Art erzeugt und verwendet:
Zum Beginn ist es am einfachsten, ein template_Instrument.arts in aRts-builder zu \xF6ffnen.
Damit haben Sie eine leere Struktur mit den erforderlichen Parametern erzeugt, die Sie nur noch "ausf\xFCllen" m\xFCssen.
F\xFCr den Parameter pressed(gedr\xFCckt) benutzen Sie entweder Synth_ENVELOPE_ADSR oder, f\xFCr eine Schlagzeug wav-Datei, spielen sie einfach ab und ignorieren den Parameter.
Die Struktur sollte am Ausgang done anzeigen, das Sie nicht mehr ben\xF6tigt wird.
Wenn doneauf 1 gesetzt wird, nimmt aRts an, das er die Struktur l\xF6schen kann.
Angenehmerweise stellt das ADSR-H\xFCllkurven-Modul einen Parameter bereit, der anzeigt, wenn das Modul fertig ist.
Sie m\xFCssen diesen Ausgang lediglich mit dem done-Ausgang Ihrer Struktur verbinden.
Schlie\xDFlich, nachdem die Struktur gespeichert ist, k\xF6nnen Sie sie im MIDI -Manager von artscontrol verwenden.
Und Sie m\xFCssen nat\xFCrlich die Struktur so einrichten, das Sie ihre Audiodaten an den linken und rechten Ausgangskanal sendet, so dass sie schlie\xDFlich durch den Audio-Manager (ein Teil von artscontrol) h\xF6rbar werden (oder sie mit Effekten weiterverarbeiten).
gemappte Instrumente
Gemappte Instrumente sind Instrumente, die sich abh\xE4ngig von der Tonh\xF6he (pitch), dem Programm, dem Kanal und der Lautst\xE4rke (velocity) unterschiedlich verhalten.
Sie k\xF6nnten z.B. einen Klavierklang von 5 Oktaven bilden, indem Sie ein Sample f\xFCr jede Oktave verwenden (entsprechende H\xF6henverschiebungen (pitchshifting) vorausgesetzt).
Dieser Klang wird besser klingen als ein Sample f\xFCr alle Oktaven.
Sie k\xF6nnen auch eine Schlagzeug-Map bilden, die jeder Taste ein bestimmtes Schlaginstrument zuordnet.
Es ist sehr n\xFCtzlich, wenn Sie einige unterschiedliche Kl\xE4nge in ein gemapptes Instrument f\xFCr verschiedene Programme zusammenf\xFCgen.
Auf diese Weise k\xF6nnen Sie Ihren Sequenzer, externes Keyboard oder andere MIDI -Quelle verwenden, um zwischen den Kl\xE4ngen umzuschalten, ohne das Sie aRts um\xE4ndern m\xFCssen.
Ein gutes Beispiel daf\xFCr ist das Instrument arts_all.
Es f\xFCgt alle Instrumente in einer Map zusammen.
Auf diese Weise m\xFCssen Sie lediglich einmal in artscontrol dieses instrument registrieren und schon k\xF6nnen Sie ein komplettes Musikst\xFCck in einem Sequenzer komponieren, ohne aRts umzuschalten.
Wenn Sie einen anderen Klang ben\xF6tigen, wechseln Sie einfach im Sequenzer das Programm und aRts erzeugt einen anderen Klang.
Solche Maps k\xF6nnen Sie auf einfache Weise erstellen.
Sie m\xFCssen lediglich eine Textdatei anlegen, die einige Regeln enth\xE4lt:
Die Bedingungen k\xF6nnen eine oder mehrere der folgenden sein:
pitch (Tonh\xF6he)
Beim pitch handelt es sich um die gespielte Tonh\xF6he.
Diese Bedingung verwenden Sie, wenn Sie den Instrumentenklang abh\xE4ngig von der Tonh\xF6he aufteilen wollen.
Von den Anfangsbeispielen w\xFCrde ein Piano, das verschiedene Kl\xE4nge f\xFCr verschiedene Oktaven verwendet, mit einer solchen Bedingung erstellt.
Sie k\xF6nnen eine bestimmte Tonh\xF6he angeben, wie z.B. pitch= 62 oder einen Bereich wie pitch= 60 - 72.
Die m\xF6glichen Tonh\xF6hen liegen zwischen 0 und 127.
program (Programm)
Das Programm, das auf dem Midi-Kanal aktiv ist, auf dem die Note gesendet wird.
\xDCblicherweise kann man bei einem Sequenzer das Instrument \xFCber die Programmeinstellung ausw\xE4hlen.
Die m\xF6glichen Programmeinstellungen reichen von 0 bis 127.
channel (Kanal)
Der Kanal, auf dem die Note gesendet wird.
Die m\xF6glichen Werte liegen zwischen 0 und 15.
velocity (Lautst\xE4rke)
Die Lautst\xE4rke, die die Note hat.
Die m\xF6glichen Werte liegen zwischen 0 und 127.
Ein komplettes Beispiel f\xFCr eine Map sieht folgenderma\xDFen aus (das Beispiel stammt aus instrument_arts_all.arts-map):
Wie Sie sehen, wird die Struktur abh\xE4ngig vom Programm ausgew\xE4hlt, beispielsweise sehen Sie als Programm 11 eine Schlagzeug-Map (mit zwei Eintr\xE4gen), die eine tiefe Trommel auf C-5 (pitch=60) und eine Snare-Trommel auf C#-5 (pitch=61) spielt.
Strukturen, die von dieser Map verwendet werden, k\xF6nnen mit einem absoluten Pfad oder relativ zur Position der Map-Datei angegeben werden.
Es ist eine gute Ide, die arts_all.map zu erweitern oder vielleicht sogar eine General- MIDI -Map f\xFCr aRts zu erstellen.
Das w\xFCrde die Verwendung von aRts vereinfachen.
Bitte denken Sie dar\xFCber nach, ob Sie nicht interessante Instrumente f\xFCr zuk\xFCnftige Versionen von aRts zur Verf\xFCgung stellen k\xF6nnen.