# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	2014
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	GNOME
# source:	https://object.pouta.csc.fi/OPUS-GNOME/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/GNOME.php
# copyright_long:	http://opus.nlpl.eu/GNOME.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Mario Blättermann <mariobl\@freenet\.de>, 2009, 2011
Max Orxy <maxorxy\@googlemail\.com>, 2012, 2013
Christian Kirbach <christian\.kirbach\@gmail\.com>, 2012, 2013_
external ref='figures/api_browser.png' md5='47cae67d29c708139b9740d06fd2521e'sort
1. API-Browser-Plugin
Prüfen von Ansichten, Funktionen und Eigenschaften
Eitan Isaacson
Peter Parente
Aline Bessa
Creative Commons Share Alike 3.0
API-Browser-Plugin
Wenn man ein barrierefreies Widget in der Anwendungs-Baumansicht auswählt, zeigt das API-Browser-Plugin ihre AT-SPI-Oberflächen sowie ihre Funktionen und Eigenschaften an.
Mit dem API-Browser-Plugin können Sie Oberflächen, Funktionen und auch Eigenschaften eines barrierefreien Widgets einer Anwendung prüfen.
Das Schnittstellenbrowser-Plugin ausführen
Um das API-Browser-Plugin zu starten, wählen Sie ein barrierefreies Widget in der Anwendungs-Baumansicht aus. Durch einen Doppelklick darauf wird das Widget in der Oberfläche der Anwendung hervorgehoben, sodass Sie sicher sagen können, ob ein bestimmtes Widget jenes ist, nach dem Sie suchen.
Danach können Sie eine der Widget-Oberflächen in der Auswahlbox auswählen. Alle öffentlichen Methoden der ausgewählten Oberfläche werden dann in der Spalte ganz links beim Plugin angezeigt. Alle öffentlichen Eigenschaften, mit ihren dazugehörigen Werten, werden dann in der Spalte ganz rechts beim Plugin gelistet.
Standardmäßig verbirgt das API-Browser-Plugin private Funktionen und Eigenschaften. Um sie angezeigt zu bekommen, müssen Sie das Ankreuzfeld
sort
1. Anwendungs-Baumansicht
Erkunden der barrierefreien Hierarchie der Arbeitsumgebung
Anwendungs-Baumansicht
Die Oberfläche von
Die Anwendungs-Baumansicht von
Der erste Knoten einer jeden Anwendung in dieser Baumansicht stellt die Anwendung selbst dar. Wenn Sie einen Knoten erweitern, können Sie alle ihre Widgets sehen, was eine hierarchische Ansicht der Oberfläche einer Anwendung ermöglicht. Für jeden Knoten stellt
Beachten Sie, dass Knoten mit vielen Unterelementen viel Zeit zum Erweitern brauchen.
Lesezeichen für Objekte in der Anwendungs-Baumansicht anlegen

Lesezeichen für Accessibles in
originalsort
4. Ereignisüberwachung-Plugin
Überwachung von barrierefreien Ereignissen in Echtzeit
Ereignisüberwachung-Plugin
Mit dem Ereignisüberwachung-Plugin können Sie
Mit dem Ereignisüberwachung-Plugin können Sie AT-SPI-Ereignisse beobachten und diese mit einem barrierefreien Widget verknüpfen.
Das Ereignisüberwachung-Plugin ausführen
Wenn Sie das Ereignisüberwachung-Plugin starten, sehen Sie ein Liste mit Ankreuzfeldern, welche für alle verschiedenen AT-SPI Ereignisklassen stehen, die das Plugin zur Verfügung stellt.
document
focus
mouse
object
terminal
window
Wenn Sie eine Klasse wählen, werden alle ihre Ereignistypen durch das Plugin überwacht. Die Klassen sind als Baumansicht dargestellt, d.h. Sie können Ihre Auswahl durch Erweiterung und Auswahl relevanter Ereignistypen verfeinern, welche Sie interessieren.
Wenn Sie alle möglichen Typen von AT-SPI-Ereignissen überwachen möchten, klicken Sie auf
Wenn Sie nur wenige Ereignistypen zur Überwachung auswählen, erhalten Sie eine übersichtlichere Ausgabe.
Ein anderer Weg, um die Ereignisüberwachung zu verfeinern, geht über die Ereignisquelle. Standardmäßig ist die Quelloption
Nach dem Auswählen des Ereignistyps und der Festlegung einer Quelloption beginnt das Ereignisüberwachungs-Plugin automatisch die AT-SPI Ereignisse zu überwachen. Dies liegt daran, dass
Für jedes auftretende Ereignis zeigt das Ereignisüberwachung-Plugin Quelle und Anwendung an. Durch das Aktivieren des Links von einem der Objekte wird es in der Anwendungs-Baumansicht ausgewählen.
Wenn Sie die Ausgabe des Ereignisüberwachung-Plugins speichern wollen, müssen Sie nur auf
2.


Prüfen Sie, ob Ihre Distribution

Um
Wenn Sie nicht GNOME 3 verwenden, sind Version 3 und alle nachfolgenden Versionen von
Nachdem Sie




Wennn Sie irgendwelche Probleme beim Installieren von

Um
Danach können Sie
3. Neue Plugins schreiben

Plugins für
Das Erweitern von

Basis-Plugins - Diese Plugins stammen von der Basis-Plugin-Klasse. Sie stellen keine sichtbare Oberfläche zur Verfügung, aber können
Konsolen-Plugins - Diese Plugins stellen eine einfache Konsolenausgabe in ein Textfeld in einem Plugin-Reiter zur Verfügung. Verwechseln Sie es nicht mit dem Paket
Ansichtsplugins - Das ist der Mehrheit der Standardplugins von
Erstellen eines Basis-Plugins
Wir werden noch eine einfachere Version des
Zunächst verwenden wir folgende Import-Zeilen:
from accerciser.plugin import Plugin
 import gtk
 import pyatspi
Anschließend leiten wir eine neue Klasse aus der Basis-Plugin-Klasse ab und ordnen einige obligatorische Klassenattribute zu:
class FocusSelect(Plugin):
 plugin_name = 'Focus Select'
 plugin_description = 'Allows selecting last focused accessible.'
Wir überschreiben nun die Anfangsmethode, und setzen ein globales Tastenkürzel, um das zuletzt angewählte barrierefreie Objekt auszuwählen, wir setzen einen Event-Listener für das »focus«-Ereignis und setzen die Instanzvariable
def init(self):
 pyatspi.Registry.registerEventListener(self.accEventFocusChanged, 'focus')
 self.global_hotkeys = [('Inspect last focused accessible',
 self.inspectLastFocused,
 gtk.keysyms.e,
 gtk.gdk.CONTROL_MASK | gtk.gdk.MOD1_MASK)]
 self.last_focused = None
Hierbei werden Sie feststellen, dass die Instanzvariable
In der Callback-Funktion des »focus«-Ereignisses setzen wir die Variable
def accEventFocusChanged(self, event):
 if not self.isMyApp(event.source):
 self.last_focused = event.source
def inspectLastFocused(self):
 if self.last_focused:
 self.node.update(self.last_focused)
Erstellen eines Konsolen-Plugins
Wir erstellen nun ein Konsolen-Plugin, um die Veränderungen des Fokus anzuzeigen, welche durch ein barrierefreies Objekt durch den »push button« ausgelöst werden - vergessen Sie dabei nicht, dass es mithilfe von
Folgende Import-Zeilen werden benötigt:
from accerciser.plugin import ConsolePlugin
 import pyatspi
Dann definieren wir eine Klasse, mit dem Namen des Plugins und einer Beschreibung:
class PushButtonFocus(ConsolePlugin):
 plugin_name = 'Push Button Focus'
 plugin_description = 'Print event when pushbutton get\\'s focus.'
def init(self):
 pyatspi.Registry.registerEventListener(self.accEventFocusChanged, 'focus')
def accEventFocusChanged(self, event):
 if event.source.getRole() == pyatspi.ROLE_PUSH_BUTTON:
 self.appendText(str(event)+'\
')
Erstellen eines Ansicht-Plugins
import gtk
 from accerciser.plugin import ViewportPlugin
Danach folgt eine Klassendefinition mit Name und Beschreibung:
class Clicker(ViewportPlugin):
 plugin_name = 'Clicker'
 plugin_description = 'Test the "click" action in relevant accessibles.'
def init(self):
 alignment = gtk.Alignment(0.5,0.5,0,0)
 self.click_button = gtk.Button('Click me!')
 alignment.add(self.click_button)
 self.plugin_area.add(alignment)

 self.click_button.connect('clicked', self.onClick)

 self.show_all()
def accSupportedActions(self):
 try:
 ai = self.node.acc.queryAction()
 except NotImplementedError:
 action_names = []
 else:
 action_names = [ai.getName(i) for i in xrange(ai.nActions)]
 return action_names
def onAccChanged(self, acc):
 has_click = 'click' in self.accSupportedActions()
 self.click_button.set_sensitive(has_click)
def onClick(self, button):
 ai = self.node.acc.queryAction()
 action_names = [ai.getName(i) for i in xrange(ai.nActions)]
 ai.doAction(action_names.index('click'))
 text
Accerciserlink
Einführung in


Bevor Sie beginnen
Lesen Sie die
Erste Schritte
Prüfen der Barrierefreiheit einer Anwendung
Themen für Fortgeschrittene_
sort
2. Schnittstellenanzeige-Plugin
Untersuchen Ihrer Umsetzung der Barrierefreiheit
Schnittstellenanzeige-Plugin
Das Schnittstellenanzeige-Plugin zeigt Informationen und die Kontrolle, welche von der AT-SPI-Schnittstelle zur Verfügung gestellt werden, für jedes barrierefreie Objekt der
Ein Menü mit dem Schnittstellenanzeige-Plugin untersuchen
Indem Sie ein Objekt in der Anwendungsbaumansicht auswählen, werden alle ihre AT-SPI-Schnittstellen im Schnittstellenanzeige-Plugin anklickbar angezeigt. Nicht unterstützte Schnittstellen werden grau dargestellt, z.B. die Anwendungs- und Zeichensatzschnittstelle im Bild oben.
Das Schnittstellenanzeige-Plugin ausführen
Der erste Schritt, um das Schnittstellenanzeige-Plugin auszuführen, ist ein Objekt in der
_
sort
1. Was ist Accerciser?
Ein Untersucher für interaktive Barrierfreiheit
Was ist

Standardmäßig ist die Hauptoberfläche von
Stellen Sie sicher, dass die Unterstützung für Hilfstechnologien in Ihrer Arbeitsumgebung aktiviert ist. Falls nicht, wird

Die Standard-Benutzeroberfläche von
Beabsichtigte Nutzer von

Die Plugin-Architektur von







Informationen über Barrierefreiheit
Barrierefreiheit ist einer der Grundwerte, welche alle Aspekte einer Arbeitsumgebung betreffen sollte. Um das in GNOME zu erreichen, wurden einige Bibliotheken entwickelt, wie z.B. ATK und AT-SPI. Obwohl eigentlich in GNOME beheimatet, werden diese Bibliotheken nun auch bei anderen Arbeitsumgebungen verwendet. Um mehr über die Barrierefreiheitsbibliotheken für GNU/UNIX-Systeme zu erfahren, können Sie folgende Seite besuchen:
_
sort
2. IPython-Plugin
Falls alles andere scheitert
IPython-Konsole-Plugin
Das IPython-Konsolen-Plugin macht Echtzeit-Interaktion mit einem ausgewählten Objekt in der
Das IPython-Konsole-Plugin ausführen
Um das IPyton-Konsolen-Plugin zu starten, wählen Sie eines der barrierefreien Objekte in der Anwendungsbaumansicht aus - entweder eine Anwendung oder ein Widget. Im Plugin ist das ausgewählte Objekt dann über die Variable »acc« erreichbar.
Drücken Sie
Ausgewählte Objekte mit dem IPyton-Konsolen-Plugin untersuchen
Mit dem IPyton-Konsolen-Plugin können Sie Funktionen, Konstanten und Eigenschaften eines ausgewählten Objekts in der Anwendungsbaumansicht erforschen.
Tippen Sie
_
_
_
sort
4. Einstellungen
Anpassen der Einstellungen von

Um Plugins, Tastenkürzel und die Hervorhebung zu konfigurieren, drücken Sie entweder


Einrichten von Plugins
Nachdem Sie die Einstellungen geöffnet haben, finden Sie eine Liste aller vorhandenen Plugins, mit den dazugehörigen Ankreuzfeldern, unter dem Reiter »Plugins«. Um ein Plugin zu aktivieren oder zu deaktivieren, schalten Sie das Ankreuzfeld um. Nur aktive Plugins können Sie über die Oberfläche von
Indem Sie auf ein Plugin mit der rechten Maustaste klicken, können Sie seine Position festlegen: »Oberes Fenster«,»Unteres Fenster« und »Neues Fenster«. Wenn Sie »Neues Fenster« auswählen, erstellen Sie ein neues Fenster für das Plugin.
Einstellungen für Plugins

Sie können den Einstellungsdialog umgehen, indem Sie ein Plugin von einem an einen anderen Ort ziehen.
Einrichten globaler Tastenkürzel
Ein paar der Elemente von
Einstellungen für globale Tastenkürzel


Einstellungen für Widget-Hervorhebungen
Ein paar von den Elementen von
Einstellungen für Hervorhebungen

5. Schnellauswahl-Plugin
Das gewünschte Objekt lokalisieren
Schnellauswahl-Plugin
Das Schnellauswahl-Plugin stellt keine sichtbare Oberfläche wie die anderen Standard-
Das Schnellauswahl-Plugin stellt 2 globale Tastenkürzel zur Verfügung. Durch das Drücken von
sort
3. Das Standardüberprüfungs-Plugin
So prüfen Sie die Barrierefreiheit einer Anwendung
Das AT-SPI-Überprüfung-Plugin
Das AT-SPI Überprüfung-Plugin erstellt einen Bericht Problem der Barrierefreiheit in Bezug auf die Zielanwendung. Zu jedem Fehler stellt der Bericht den Schweregrad des Fehlers sowie eine kurze Beschreibung zur Verfügung.
Das AT-SPI Überprüfung-Plugin erstellt nützliche Berichte, um die Barrierefreiheit einer Zielanwendung zu überprüfen.
Das AT-SPI Überprüfung-Plugin ausführen
Um das AT-SPI Überprüfung-Plugin auszuführen, wählen Sie ein Objekt in der Anwendungsbaumansicht. Das Plugin wird einen Bericht erstellen, in welchem es das ausgewählte Objekt und alle seiner Unteranwendungen in der Baumhierarchie beachtet.
Nachdem Sie ein Objekt ausgewählt haben, wählen Sie noch ein Überprüfungsschema in dem Auswahlfeld und klicken Sie auf
Der erstellte Bericht ist interaktiv. Deshalb können Sie auf jeden gefundenen Fehler doppelklicken, um festzustellen, welche Widgets der Zielanwendung für den Fehler verantwortlich sind. Das dazugehörige Widget wird dann automatisch in der
Wenn Sie den erstellten Bericht auf ihrem System speichern wollen, klicken Sie einfach auf
Um mehr Informationen über einen Fehler in dem erstellten Bericht zu erhalten, stellen Sie sicher, dass das dazugehörige Objekt ausgewählt ist und klicken Sie auf
original

eitan@ascender.com
pparent@us.ibm.com
alibezz@gmail.com

make

2006
2007
2008
IBM Corporation
GNOME-Dokumentationsprojekt
Eitan
Accerciser-Team
Peter
Accerciser-Handbuch v0.2.0
29. Juni 2007
Eitan Isaacson
Dieses Handbuch beschreibt Version 0.1.5 von Accerciser.
Dieses Handbuch beschreibt die Benutzung von
Rückmeldungen
Um Fehler zu melden oder einen Vorschlag zur Anwendung
Einführung
Im Wesentlichen ist
Sie können
Menü
Wählen Sie
Befehlszeile
Geben Sie den folgenden Befehl in einem Konsolenfenster ein und drücken Sie die
Wenn Sie
Zeigt das
Menüleiste
Die Menüleiste enthält Befehle zum Verwalten von Plugins, zum Verwalten und Benutzen von Lesezeichen, zum Aktualisieren der Barrierefreiheits-Baumansicht und für den Zugriff auf vorliegendes Hilfesystem.
Barrierefreiheits-Baumansicht
Die Barrierefreiheits-Baumansicht ermöglicht Ihnen die Ansicht aller Accesibles, beginnend auf Desktop-Ebene. Die Auswahl eines Accessibles aktiviert es für die weitere Inspektion unter Verwendung der geladenen Plugins.
Rechte Plugin-Ansicht
Dies ist eine der beiden vorgegebenen Plugin-Ansichten. Wenn
Untere Plugin-Ansicht
Sie können Plugins aus diesem oder in diesen Bereich ziehen, wie beispielsweise in die rechte Plugin-Ansicht.
Verwaltung der Plugin-Ansicht

Benutzung
Sie können
Wählen Sie ein Accessible in der Baumansicht aus.
Verwenden Sie die Baumansicht, um sich durch die Hierarchie der Accessible-Objekte zu bewegen, beginnend auf Desktop-Ebene. Ausklappen eines Knotens macht die direkten Kind-Objekte sichtbar, während Einklappen diese wieder verbirgt. Jeder Knoten zeigt ein Symbol für die zugehörige Anwendung oder die zugehörige Widget-Funktion sowie den Accessible-Namen, falls verfügbar. Die zweite Spalte zeigt an, wie viele Knoten angezeigt werden, wenn das Objekt ausgeklappt wird.
Verwendung von Lesezeichen
Lesezeichen können im Lesezeichendialog bearbeitet werden, den Sie über

Dieses Plugin zeigt Informationen über die verfügbaren Schnittstellen für das in der Baumansicht ausgewählte Accessible an. Nicht unterstützte Schnittstellen werden ausgegraut dargestellt. Verschiedene Werkzeuge für die Ansicht und Steuerung einer Schnittstelle sind durch Ausklappen des jeweiligen Expanders verfügbar.
Schnittstellen, die von dem ausgewählten Accessible unterstütz werden, sind anklickbar dargestellt.
Dieses Plugin überwacht die ausgewählten Ereignistypen aus dem in der Baumansicht gewählten Accessible, der in der Baumansicht gewählten Anwendung oder dem gesamten Desktop.
Der untere Teil der Ereignisüberwachung ermöglicht Ihnen die Auswahl des Typs und der Quelle von Ereignissen.
Durch Drücken von
Dieses Plugin ist eine ausgewachsene
Der API-Browser.
Skript-Aufzeichner
Der Skript-Aufzeichner von
Skript-Aufzeichner
Der Skript-Aufzeichner.
Dieses Plugin stellt globale Tastenkürzel bereit, über die Sie Accessibles einfach über die Benutzeroberfläche der Zielanwendung auswählen können. Durch Drücken von
Validierung
Dieses Plugin überprüft Anwendungen auf Barrierefreiheits-Probleme und erzeugt einen Report, der die Wichtigkeit und die Beschreibung der Probleme enthält. Der Report verknüpft Fehler, um zu dokumentieren, wie häufige Probleme behoben werden können. Dieses Plugin ist mit Test-Schemata erweiterbar, welche Regeln für die Überprüfung definieren.
Um die Validierung zu starten, wählen Sie zunächst ein Objekt im Barrierefreiheits-Baum aus. Das Plugin überprüft das ausgewählte Accessible sowie alle seine Abkömmlinge. Klicken Sie dann auf den Knopf
Wenn der Test abgeschlossen ist, zeigt die Report-Tabelle die Wichtigkeit und Beschreibung aller Fehler an. Doppelklicken Sie auf eine Zeile in der Tabelle, um das zugehörige Accessible in der Baumansicht anzuzeigen. Wenn das Objekt ausgewählt ist, dann klicken Sie auf
Einige Elemente in
Plugin-Layout
Es gibt zwei Methoden zur Konfiguration des Plugin-Layouts in
Sie können den Dialog
Globale Konfiguration der Tastenkürzel
Einige Elemente in

Um Fehler zu melden oder einen Vorschlag zur Anwendung
Weiterverbreitung und Benutzung im Binär- oder Quellcodeformat, mit oder ohne Änderungen, sind unter den Bedingungen der BSD-Lizenzt erlaubt.