# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

Diese Funktion implementiert einen Sortieralgorithmus, welcher alphanumerische Zeichenketten reiht, wie es auch ein Mensch tun würde.
Hier ein Beispiel für den Unterschied zwischen diesem und dem normalen Sortieralgorithmus für Strings eines Computers (verwendet in sort()):
Beispiel 1. natsort()
?php $array1 = $array2 = array ("img12.png", "img10.png", "img2.png", "img1.png"); sort ($array1); echo "Standardsortierung\n"; print_r ($array1); natsort ($array2); echo "\nSortieren mit natürlicher Reihenfolge\n"; print_r ($array2);?
Der obige Code wird folgendes anzeigen:
Standardsortierung Array ([0] = img1.png [1] = img10.png [2] = img12.png [3] = img2.png) Sortieren mit natürlicher Reihenfolge Array ([3] = img1.png [2] = img2.png [1] = img10.png [0] = img12.png)
Anmerkung:
Wenn Sie die Index / Wert Assoziationen beibehalten wollen, denken Sie an die Verwendung von usort( $arr, 'strnatcmp').
Siehe auch natcasesort(), strnatcmp() und strnatcasecmp().
Zurück
Zum Anfang
Nach vorne

Nach oben
