# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

Die Funktion fscanf() ist sscanf() ähnlich, wobei sie ihren Input aus der mit handle angegebenen Datei nimmt, und entsprechend dem angegebenen format interpretiert.
Sind nur 2 Parameter angegeben, werden die analysierten Werte als Array zurückgegeben.
Werden auch optionale Parameter übergeben, gibt die Funktion die Anzahl der ermittelten Werte zurück.
Die optionalen Parameter müssen referenziert übergeben werden.
Irgendwelche Whitespace-Zeichen (z.B.
Leerzeichen, Tabulator, etc.) im Format String gelten mit irgendwelchen Whitespace-Zeichen des Input-Streams als übereinstimmend.
Das heißt, dass auch ein Tabulator im Format String mit einem einzigen Leerzeichen im Input-Stream als übereinstimmend gelten kann.
Beispiel 1. fscanf()
$handle = fopen ("users.txt" ,"r"); while ($userinfo = fscanf ($handle, "%s %s %s\n")) {list ($name, $profession, $countrycode) = $userinfo; / /...
Tue etwas mit den Werten} fclose($handle);
Beispiel 2. users.txt

Anmerkung:
Vor PHP 4.3.0 war die maximale Anzahl der von der Datei eingelesenen Zeichen 512 (oder bis zu dem ersten \n, was zuerst eintrat).
Seit PHP 4.3.0 werden beliebig lange Zeilen gelesen und interprtiert.
Siehe auch fread(), fgets(), fgetss(), sscanf(), printf(), und sprintf().
Zurück
Zum Anfang
Nach vorne

Nach oben
