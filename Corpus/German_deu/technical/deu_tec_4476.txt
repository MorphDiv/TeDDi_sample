# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne
Die Operator-Rangfolge legt fest, wie "eng" ein Operator zwei Ausdrücke miteinander verbindet.
Zum Beispiel ist das Ergebnis des Ausdruckes 1 + 5 * 3 16 und nicht 18, da der Mulitiplikations-Operator ("*") in der Rangfolge höher steht als der Additions-Operator ("+").
Wenn nötig, können Sie Klammern setzen, um die Rangfolge der Operatoren zu beeinflussen.
Zum Beispiel: (1 + 5) * 3 ergibt 18.
Die folgende Tabelle zeigt die Rangfolge der Operatoren, oben steht der Operator mit dem niedrigsten Rang.
Tabelle 11-1.
Operator-Rangfolge

Operator
links

links

links

links

rechts

links

links

links

links
links

links

links
keine Richtung
== != ===
keine Richtung

links
links

links

rechts

rechts

keine Richtung

Anmerkung:
Obwohl! einen höheren Rang gegenüber = hat, erlaubt es Ihnen PHP immer noch ähnliche Ausdrücke wie den folgenden zu schreiben: if (!$a =foo()) .In diesem Ausdruck wird die Ausgabe von foo() der Variablen $a zugewiesen.
Zurück
Zum Anfang
Nach vorne
Ausdrücke
Nach oben
Arithmetische Operatoren