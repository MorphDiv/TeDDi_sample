# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Matrixfunktionen
/text/scalc/01/04060107.xhp
Matrizen; Funktionen
Funktionsassistent; Matrizen
Matrix-Formeln
Formeln; Matrizen
Funktionen; Matrix-Funktionen
Bearbeiten; Matrix-Formeln
Kopieren; Matrix-Formeln
Matrixbereiche anpassen
Berechnen; Bedingungsberechnungen
Matrizen; Berechnungen
Bedingungsberechnungen mit Matrizen
Implizite Matrixbearbeitung
Erzwungene Matrixbearbeitung
mw deleted &quot; creating; &quot;
Matrixfunktionen
Diese Kategorie enthält Matrixfunktionen.
Was ist eine Matrix?
Eine Matrix ist ein verknüpfter Bereich von Zellen in einer Tabelle mit Werten.
Bei einem Bereich, der drei Zeilen und drei Spalten abdeckt, sprechen wir von einer 3x3-Matrix:
A
B
C
1
7
31
33
2
95
17
2
3
5
10
50
Die kleinste denkbare Matrix ist eine 1x2- oder 2x1-Matrix mit zwei benachbarten Zellen.
Was ist eine Matrixformel?
Eine Formel, die mit den verschiedenen Einzelwerten eines Zellbereichs Berechnungen anstellt, nennt man eine Matrixformel.
Von anderen Formeln unterscheidet sich eine Matrixformel dadurch, dass sie mit mehreren Werten gleichzeitig operiert.
Matrixformeln verarbeiten aber nicht nur mehrere Werte, sie können auch mehrere Werte ausgeben.
Das Ergebnis einer Matrixformel ist ebenso eine Matrix.
=10*A1:C3
ein, und bestätigen Sie diesen Eintrag mit der Tastenkombination
Befehl
Strg
+Umschalt+Eingabetaste.
Das Ergebnis ist eine 3x3-Matrix, in der die einzelnen Werte im Zellbereich (A1:C3) mit dem Faktor 10 multipliziert werden.
Außer der Multiplikation können verschiedene andere Operatoren auf den Bezugsbereich (die Matrix) angewendet werden.
In $[officename] Calc können Sie Werte addieren (+), subtrahieren (-), multiplizieren (*), dividieren (/) und Exponenten (^), Verkettungen ( & ) sowie Vergleiche (=, < > , < , > , < =, > =) einsetzen.
Die Operatoren können auf jeden Einzelwert im Zellbereich angewendet werden und liefern das Ergebnis als Matrix, sofern die Matrixformel eingegeben wurde.
{=A1:A2= &quot; &quot; }
und
{=A1:A2=0}
eine Matrix von Zellen zurück, deren Bereich aus 1 Spalte und 2 Zeilen besteht und deren Inhalt WAHR ist.
Wann empfiehlt es sich, mit Matrixformeln zu arbeiten?
nehmen die erforderlichen Änderungen an der Matrixformel vor
.
Da Matrixformeln den Arbeitsspeicher nicht sonderlich belasten, können sie auch als Platz sparende Alternative eingesetzt werden, wenn mehrere Werte zu berechnen sind.
Darüber hinaus stellen Matrizen ein unverzichtbares Hilfsmittel für komplexe Berechnungen dar, denn sie erlauben es, mehrere Zellbereiche einzubeziehen. $[officename] bietet verschiedene mathematische Funktionen für Matrizen wie z.
B.
MMULT zur Multiplikation zweier Matrizen oder SUMMENPRODUKT zur Ermittlung des skalaren Produkts zweier Matrizen.
Arbeiten mit Matrixformeln in $[officename] Calc
Außerdem besteht die Möglichkeit, &quot; normale &quot; Formeln zu erstellen, deren Bezugsbereiche (z.
B.
Parameter) auf eine Matrixformel verweist.
Das Ergebnis wird am Schnittpunkt zwischen dem Bezugsbereich und den Zeilen oder Spalten ermittelt, in welchen sich die Formel befindet.
Wenn es keinen Schnittpunkt gibt oder der Bereich am Schnittpunkt mehrere Reihen oder Spalten abdeckt, so wird der Fehler #WERT! geliefert.
Das folgende Beispiel verdeutlicht dieses Prinzip:
Erstellen von Matrixformeln
Funktions-Assistent
müssen Sie jedes Mal das Markierfeld
Matrix
aktivieren, damit die Ergebnisse in einer Matrix ausgegeben werden.
Anderenfalls wird nur der Wert der oberen linken Zelle der zu berechnenden Matrix geliefert.
Befehl
Strg
+Eingabetaste verwenden.
Erst dadurch wird die Formel zur Matrixformel.
$[officename] Calc stellt Matrixformeln in geschweiften Klammern dar.
Es ist nicht möglich, durch manuelle Eingabe der geschweiften Klammern Matrixformeln zu erzeugen.
Die Zellen in Ergebnismatrizen werden automatisch vor Änderungen geschützt.
Sie können aber die Matrixformel selbst bearbeiten oder kopieren, wenn Sie den gesamten Zellbereich der Matrix auswählen.
Benutzung von inline Matrizen Konstanten in Fomeln
Calc unterstützt inline Matrizen/Vektoren in Formeln.
Eine inline Matrix wird in geschwungenen Klammern '{' und '}' eingeschlossen.
Elemente können entweder eine Zahl (einschließlich negativer), eine logische Konstante (WAHR, FALSCH), oder eine Zeichenkette sein.
Variable Ausdrucke sind nicht erlaubt .
Matrizen können eine oder mehrere Zeilen und eine oder mehrere Spalten enthalten.
Alle Zeilen müssen dieselbe Anzahl von Elementen enthalten, alle Spalten dieselbe Anzahl von Elementen.
Der Spaltentrenner (er separiert die Elemente einer Zeile) und der Zeilentrenner sind abhängig von Sprache und gewähltem Zeichensatz..
In dieser Hilfe werden das ';' Semikolon und das '|' Pipesymbol benutzt, Spalten und Zeilen zu verdeutlichen.
Beispielsweise wird im englischen Zeichensatz das ',' Komma als Spaltentrenner, und das ';' Semikolon als Zeilentrenner benutzt.
Matrizen dürfen nicht verschachtelt sein.
Beispiele:
={1;2;3}
Eine Matrix mit einer Zeile bestehend aus den 3 Zahlen 1, 2, und 3.
={1;2;3}
ein.
Benutzen Sie die geschweiften Klammern und das Semikolon.
Danach drücken Sie
Befehl
Strg
+Umschalt+Eingabe
={1;2;3|4;5;6}
Eine Matrix mit 2 Spalten und 3 Werten in jeder Spalte.
={0;1;2|FALSCH;WAHR; &quot; zwei &quot; }
Eine gemischte Matrix.
=SIN({1;2;3})
Eingegeben als eine Matrixformel, liefert das Ergebnis der 3 Sinuswerte von 1, 2 und 3.
Bearbeiten von Matrixformeln
Befehl
Strg
+ /, wobei / das Divisionszeichen auf der nummerischen Tastatur ist.
Drücken Sie entweder (F2) oder setzen Sie den Cursor in die Eingabezeile.
Beides hat den gleichen Effekt:
Sie können die Formel bearbeiten.
Befehl
Strg
+Umschalt+Eingabe.
Die einzelnen Teile einer Matrix lassen sich separat formatieren.
Sie können beispielsweise die Schriftfarbe ändern.
Wählen Sie einen Zellbereich aus, und ändern Sie dann das gewünschte Attribut.
Kopieren von Matrixformeln
Wählen Sie den Zellbereich oder die Matrix mit der Matrixformel aus.
Drücken Sie entweder (F2) oder setzen Sie den Cursor in die Eingabezeile.
Befehl
Strg
+C.
Wählen Sie den Zellbereich aus, in den die Matrixformel eingefügt werden soll.
Drücken Sie dann entweder F2, oder setzen Sie den Cursor in die Eingabezeile.
Befehl
Strg
+V in den markierten Bereich ein und bestätigen Sie mit
Befehl
Strg
+Umschalt+Eingabe.
Der ausgewählte Bereich enthält nun die Matrixformel.
Anpassen von Matrixbereichen
Gehen Sie wie folgt vor, wenn Sie die Ausgabematrix bearbeiten möchten:
Wählen Sie den Zellbereich oder die Matrix mit der Matrixformel aus.
Rechts unten an der Selektion befindet sich eine kleine Markierung, an der Sie den Bereich mit der Maus größer oder kleiner ziehen können.
Durch die Anpassung des Matrixbereichs wird nicht auch automatisch die Matrixformel angepasst.
Sie ändern damit lediglich den Bereich, in dem das Ergebnis angezeigt wird.
Befehl
Strg
-Taste drücken, können Sie eine Kopie der Matrixformeln in einen gegebenen Bereich erzeugen.
Konditionale Matrix-Berechnungen
Eine konditionale Matrix-Berechnung ist eine Matrix-Formel, in der eine WENN()- oder WAHL()-Funktion enthalten ist.
Das konditionale Argument in der Formel ist ein Referenzbereich oder eine Ergebnismatrix.
In dem folgenden Beispiel wird der > 0-Test der Formel {=WENN(A1:A3 > 0; &quot; ja &quot; ; &quot; nein &quot; )} an jeder Zelle im Bereich A1:A3 angewendet und das Ergebnis in die entsprechende Zelle kopiert.
A
B (Formel)
B (Ergebnis)
1
1
{=WENN(A1:A3 > 0; &quot; ja &quot; ; &quot; nein &quot; }
Ja
2
0
{=WENN(A1:A3 > 0; &quot; ja &quot; ; &quot; nein &quot; }
nein
3
1
{=WENN(A1:A3 > 0; &quot; ja &quot; ; &quot; nein &quot; }
Ja
Die folgenden Funktionen bieten eine erzwungene Matrixbearbeitung:
KORREL, KOVAR, SCHÄTZER, FTEST, ACHSENABSCHNITT, MDET, MINV, MMULT, MODALWERT, PEARSON, WAHRSCHBEREICH, BESTIMMTHEITSMASS, STEIGUNG, STFEHLERYX, SUMMENPRODUKT, SUMMEX2MY2, SUMMEX2PY2, SUMMEXMY2, TTEST.
Wenn Sie Flächenbezüge als Argumente beim Aufruf einer dieser Funktionen verwenden, verhalten sich die Funktionen wie Matrixfunktionen.
Die folgende Tabelle bietet ein Beispiel für eine erzwungene Matrixbearbeitung:
A
B (Formel)
B (Ergebnis)
C (erzwungene Matrixformel)
C (Ergebnis)
1
1
=A1:A2+1
2
=SUMMENPRODUKT(A1:A2+1)
5
2
2
=A1:A2+1
3
=SUMMENPRODUKT(A1:A2+1)
5
3
=A1:A2+1
#WERT!
=SUMMENPRODUKT(A1:A2+1)
5
EINHEITSMATRIX (Funktion)
EINHEITSMATRIX
Liefert die quadratische Einheitsmatrix einer bestimmten Größe.
Bei der Einheitsmatrix handelt es sich um eine quadratische Matrix, in der die Elemente auf der Hauptdiagonalen 1 und alle anderen Matrixelemente 0 ergeben.
Syntax
EINHEITSMATRIX(Dimension)
Dimension
ist die Größe der Matrixeinheit.
Oben auf dieser Seite finden Sie eine allgemeine Einführung in die Verwendung der Matrix-Funktionen.
Beispiel
Ziehen Sie in der Tabelle einen quadratischen Bereich auf, z.
B. von A1 bis E5.
Matrix
.
Geben Sie die gewünschten Dimensionen für die Matrixeinheit ein, in diesem Fall
5
, und klicken Sie auf
OK
.
=Einheitsmatrix(5)
in die letzte Zelle des ausgewählten Bereichs (E5) eingeben und
Umschalt+Befehl+Eingabetaste
Umschalt+Strg+Eingabetaste
drücken.
Es wird nun eine Einheitsmatrix mit dem Bereich A1:E5 angezeigt.
HÄUFIGKEIT (Funktion)
HÄUFIGKEIT
Gibt die Häufigkeitsverteilung in einem einspaltigen Array an.
Die Funktion zählt die Anzahl der Werte im Array &quot; Daten &quot; , die innerhalb der vom Array &quot; Klassen &quot; vorgegebenen Werte liegen.
Syntax
HÄUFIGKEIT(Daten; Klassen)
Daten
stellt die Referenz auf die zu zählenden Werte dar.
Klassen
stellt das Array der Grenzwerte dar.
Oben auf dieser Seite finden Sie eine allgemeine Einführung in die Verwendung der Matrix-Funktionen.
Beispiel
In Spalte A der folgenden Tabelle sind unsortierte Messwerte aufgeführt.
Spalte B enthält die von Ihnen angegebenen oberen Grenzen für die Klassen, in die Sie die Daten in Spalte A verteilen möchten.
Gemäß der in B1 eingegebenen Grenze gibt die Funktion HÄUFIGKEIT die Anzahl der Messwerte kleiner als oder gleich 5 zurück.
Gemäß der Grenze von 10 in B2 gibt HÄUFIGKEIT als zweites Ergebnis die Anzahl der Messwerte größer als 5 und größer als oder gleich 10 zurück.
Der in B6 eingegebene Text &quot; > 25 &quot; dient lediglich zu Referenzzwecken.
UFI: replace table by picture
A
B
C
1
12
5
1
2
8
10
3
3
24
15
2
4
11
20
3
5
5
25
1
6
20
> 25
1
7
16
8
9
9
7
10
16
11
33
Funktions-Assistenten
auf.
Wählen Sie den Bereich
Daten
als (A1:A11) und den Bereich
Klassen
, in den Sie die Klassengrenzen eingegeben haben als (B1:B6).
Aktivieren Sie das Kontrollkästchen
Matrix
und klicken Sie auf
OK
.
Die Häufigkeitszählung erscheint im Bereich C1:C6.
MDET (Funktion)
Determinanten
MDET
Bestimmt die Determinante einer Matrix.
Diese Funktion gibt als Ergebnis einen Wert an die aktuelle Zelle aus.
Sie müssen keinen Bereich für die Ausgabe des Ergebnisses definieren.
Syntax
MDET(Matrix)
Matrix
stellt die quadratische Matrix dar, deren Determinanten bestimmt werden.
Oben auf dieser Seite finden Sie allgemeine Informationen zur Verwendung der Matrix-Funktionen.
MINV (Funktion)
Inverse Arrays
MINV
Bestimmt die Inverse einer Matrix.
Syntax
MINV(Matrix)
Matrix
stellt die quadratische Matrix dar, die invertiert wird.
Beispiel
Matrix
, und klicken Sie auf
OK
.
MMULT (Funktion)
MMULT
Bildet das Produkt zweier Matrizen.
Die Spaltenanzahl in Matrix 1 muss mit der Zeilenanzahl in Matrix 2 übereinstimmen.
Quadratische Matrizen weisen gleich viele Spalten wie Zeilen auf.
Syntax
MMULT(Matrix; Matrix)
Matrix
stellt die erste Matrix für die Bildung des Matrixprodukts dar.
Matrix
stellt die zweite Matrix mit derselben Zeilenanzahl dar.
Beispiel
Matrix
.
Bei Verwendung des
Funktions-Assistenten
aktivieren Sie das Markierfeld
Matrix
.
Betätigen Sie die Schaltfläche
OK
.
Die Ausgabematrix wird im ersten ausgewählten Bereich angezeigt.
MTRANS (Funktion)
MTRANS
Tauscht die Zeilen und Spalten einer Matrix gegeneinander aus.
Syntax
MTRANS(Matrix)
Matrix
steht für die Matrix im Tabellendokument, deren Zeilen und Spalten gegeneinander ausgetauscht werden sollen.
Beispiel
Umschalt+Befehl+Eingabetaste
Umschalt+Strg+Eingabetaste
.
Anderenfalls, wenn Sie mit dem
Funktions-Assistenten
arbeiten, aktivieren Sie das Markierfeld
Matrix
.
Die transponierte Matrix erscheint im ausgewählten Zielbereich und ist automatisch vor Änderungen geschützt.
RGP (Funktion)
RGP
Liefert eine Tabelle von Statistiken für eine gerade Linie, die am besten zu einer Datenmenge passen.
Syntax
RGP(DatenY; DatenX; LinearerTyp; Kenngrößen)
DatenY
ist ein einfacher Zeilen- oder Spaltenbereich, der die Y-Koordinaten in einer Menge von Punkten enthält.
DatenX
ist eine Zeile oder Spalte, die die X-Koordinaten bestimmt.
Wenn
DatenX
fehlt, ist es per Standard
1, 2, 3, ..., n
Wenn es mehr als eine Menge von Variablen gibt, kann
DatenX
ein Bereich von mehreren Zeilen oder Spalten sein.
y = a + bx
, die am Besten die Daten approximiert.
Es wird eine lineare Regression (Methode &quot; der kleinsten Quadrate &quot; ) benutzt.
Werden mehr als eine Menge von Variablen benutzt, ist die Gerade von der Form
y = a + b1x1 + b2x2 ... + bnxn
.
LinearerType
FALSCH ist, wird eine Gerade durch den Ursprung erzwungen (die Konstante a =0, y=bx).
LinearerTyp
ist standardmäßig WAHR (die Gerade geht nicht durch den Ursprung),
Kenngrößen
fehlt, oder FALSCH ist, wird nur die erste Zeile der Statistiktabelle zurückgegeben.
Wenn wahr, wird die ganze Tabelle zurückgegeben.
Befehl
Strg
+Umschalt+Eingabe anstatt einfach Eingabe)
Beispiel
DatenY
.
Sie können auch andere Parameter eingeben.
Wählen Sie
Matrix
und klicken Sie auf
OK
.
Kenngrößen
= 0) zeigen mindestens die Steigung der Regressionslinie und ihren Schnittpunkt mit der Y-Achse.
Wenn
Kenngrößen
ungleich 0 ist, werden weitere Ergebnisse angezeigt.
Weitere Ergebnisse der RGP Funktion:
Betrachten Sie das folgende Beispiel:
A
B
C
D
E
F
G
1
x1
x2
y
R
GP-Wert
2
4
7
100
4,17
3,48
82,33
3
5
9
105
5,46
10,96
9,35
4
6
11
104
0,87
5,06
#NV
5
7
12
108
13,21
4
#NV
6
8
15
111
675,45
102,26
#NV
7
9
17
120
8
10
19
133
Funktions-Assistenten
aktiviert.
Damit RGP funktioniert, müssen Sie außerdem das Markierfeld
Matrix
im Fenster
Funktions-Assistent
aktivieren.
Nun wählen Sie die folgenden Werte im Tabellendokument aus (oder geben sie über die Tastatur ein):
DatenY
ist C2:C8
DatenX
ist A2:B8
LinearerTyp
und
Kenngrößen
werden auf 1 gesetzt.
OK
klicken, füllt $[officename] Calc die Matrix, wie im Beispiel gezeigt, mit den RGP-Werten aus.
Rechenleiste
entspricht jeder Zelle der RGP-Matrix
{=RGP(C2:C8;A2:B8;1;1)}
Dies sind die Bedeutungen der errechneten RGP-Werte:
Steigungen, siehe auch Regressionslinien
Regressionslinien;RGP (Funktion)
mw made &quot; regression lines &quot; a two level entry
E2 und F2:
Steigung m der Regressionslinie y=b+m*x für die Werte x1 und x2.
Die Werte werden in umgekehrter Reihenfolge angegeben; d. h. die Steigung für x2 in E2 und die Steigung für x1 in F2.
G2:
Der Schnittpunkt b mit der y-Achse.
Standardfehler;Matrix-Funktionen
MW changed &quot; standard errors &quot;
E3 und F3:
Der Standardfehler des Steigungswerts.
G3:
Der Standardschätzfehler des Achsenabschnitts.
BESTIMMTHEITSMASS-Berechnungen
E4:
BESTIMMTHEITSMASS
F4:
Der Standardschätzfehler der aus der Regression berechneten y-Werte.
E5:
Der F-Wert aus der Varianzanalyse.
F5:
Die Freiheitsgrade aus der Varianzanalyse.
E6:
Die Summe der quadratischen Abweichungen der geschätzten y-Werte von ihrem arithmetischen Mittel.
F6:
Die Summe der quadratischen Abweichungen der geschätzten y-Werte von den gegebenen y-Werten.
LOGEST (Funktion)
RKP
Diese Funktion berechnet eine Anpassung der angegebenen Daten als Exponentialkurve (exponentielle Regression, y=b*m^x).
Syntax
LOGEST(DatenY; DatenX; Funktionstyp; Kenngrößen)
DatenY
stellt die Y-Datenmatrix dar.
DatenX
(optional) stellt die X-Datenmatrix dar.
Funktionstyp
(optional).
Wenn Funktionstyp = 0, werden Funktionen in der Form y = m^x berechnet.
Anderenfalls werden Funktionen in der Form y = b*m^x berechnet.
Kenngrößen
(optional).
Ist Kenngrößen = 0, so werden nur die Regressionskoeffizienten berechnet.
Beispiel
Siehe RGP.
Als Ergebnis werden jedoch keine Quadratsummen ausgegeben.
SUMMENPRODUKT (Funktion)
Skalare Produkte
Punkt-Produkte
Innere Produkte
SUMMENPRODUKT
Die Produkte der Elemente von Matrizen werden addiert und die Summe dieser Produkte zurückgegeben.
Syntax
SUMMENPRODUKT(Matrix1; Matrix2...Matrix30)
Matrix1, Matrix2...Matrix30
stellen Matrizen dar, deren entsprechende Elemente multipliziert werden sollen.
Mindestens eine Matrix muss Teil der Argumentliste sein.
Wenn nur eine Matrix angegeben wird, werden alle Matrixelemente summiert.
Beispiel
A
B
C
D
1
2
3
4
5
2
6
7
8
9
3
10
11
12
13
=SUMMENPRODUKT(A1:B3;C1:D3)
ergibt 397.
Berechnung:
A1*C1 + B1*D1 + A2*C2 + B2*D2 + A3*C3 + B3*D3
Sie können die Funktion SUMMENPRODUKT zum Berechnen des skalaren Produkts zweier Vektoren verwenden.
SUMMENPRODUKT liefert eine einzelne Zahl.
Es ist nicht erforderlich, die Funktion als eine Matrixfunktion einzugeben.
SUMMEX2MY2 (Funktion)
SUMMEX2MY2
Es handelt sich also um eine Summe der Unterschiede der Quadrate.
Syntax
SUMMEX2MY2(MatrixX; MatrixY)
MatrixX
stellt die erste Matrix dar, deren Elemente quadriert und addiert werden sollen.
MatrixY
stellt die zweite Matrix dar, deren Elemente quadriert und subtrahiert werden sollen.
SUMMEX2PY2 (Funktion)
SUMMEX2PY2
Die Quadratsummen aus zwei Matrizen werden addiert.
Syntax
SUMMEX2PY2(MatrixX; MatrixY)
MatrixX
stellt die erste Matrix dar, deren Argumente quadriert und addiert werden sollen.
MatrixY
stellt die zweite Matrix dar, deren Elemente quadriert und addiert werden sollen.
SUMMEXMY2 (Funktion)
SUMMEXMY2
Die Quadrate der Differenzen von zwei Matrizen werden summiert.
Syntax
SUMMEXMY2(MatrixX; MatrixY)
MatrixX
stellt die erste Matrix dar, deren Elemente subtrahiert und quadriert werden sollen.
MatrixY
stellt die zweite Matrix dar, deren Elemente subtrahiert und quadriert werden sollen.
TREND (Funktion)
TREND
Berechnet die Werte, die sich aus einem linearen Trend ergeben.
Syntax
TREND(DatenY; DatenX; NeueDatenX; LinearerTyp)
DatenY
stellt die Y-Datenmatrix dar.
DatenX
(optional) stellt die X-Datenmatrix dar.
NeueDatenX
(optional) stellt die Matrix der X-Daten dar, die zur Neuberechnung von Werten verwendet werden.
LinearerTyp
(optional).
Ist LinearerTyp = 0, werden die Linien über den Nullpunkt berechnet.
Anderenfalls werden Verschiebungslinien ebenfalls berechnet.
Die Standardeinstellung ist LinearerTyp < > 0.
Beispiel
Matrix
, und klicken Sie auf
OK
.
Es werden die aus den Ausgangsdaten berechneten Trenddaten angezeigt.
VARIATION (Funktion)
Exponentialtrends in Arrays
VARIATION
Berechnet die Punkte eines exponentiellen Trends in einer Matrix.
Syntax
VARIATION(DatenY; DatenX; NeueDatenX; Funktionstyp)
DatenY
stellt die Y-Datenmatrix dar.
DatenX
(optional) stellt die X-Datenmatrix dar.
NeueDatenX
(optional) stellt die X-Datenmatrix dar, in der die Werte neu berechnet werden.
Funktionstyp
(optional).
Wenn Funktionstyp = 0, werden Funktionen in der Form y = m^x berechnet.
Anderenfalls werden Funktionen in der Form y = b*m^x berechnet.
Beispiel
Matrix
, und klicken Sie auf
OK
.