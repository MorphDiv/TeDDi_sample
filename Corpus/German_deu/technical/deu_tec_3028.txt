# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

Anmerkung:
Die Funktion preg_match(), die eine zu Perl kompatible Syntax regulärer Ausdrücke verwendet, ist häufig die schnellere Alternative zu ereg().
Sucht in Zeichenkette nach Übereinstimmungen mit dem regulären Ausdruck, der in Suchmuster angegeben wurde.
Wenn Übereinstimmungen mit eingeklammerten Teilzeichenketten von Suchmuster gefunden werden und die Funktion mit dem dritten Argument regs aufgerufen wurde, werden die Übereinstimmungen in den Elementen des Arrays regs gespeichert. $regs[ 1] enthält dann die Teilzeichenkette der ersten Klammer, $regs[2] die Teilzeichenkette der zweiten usw. $regs[0] enthält bei Übereinstimmung mit Zeichenkette eine Kopie der kompletten Zeichenkette.
Bis (und inklusive) PHP 4.1.0 wird $regs mit genau zehn Elementen gefüllt, auch wenn es tatsächlich mehr oder weniger Übereinstimmungen mit den eingeklammerten Teilzeichenketten gibt.
Dies wirkt sich aber nicht auf ereg() s Fähigkeit aus, mehr übereinstimmende Teilzeichenketten zu finden.
Falls keine Übereinstimmungen gefunden werden, wird $regs nicht von ereg() verändert.
Die Suche unterscheidet zwischen Groß und Kleinschreibung.
Gibt TRUE zurück, wenn in Zeichenkette eine Übereinstimmung mit Suchmuster gefunden wurde oder FALSE, wenn keine Übereinstimmung gefunden wurde oder wenn ein Fehler aufgetreten ist.
Der folgende Code-Schnipsel mimmt ein Datum im ISO-Format (JJJJ-MM-TT) und gibt es im Format TT.MM.JJJJ aus:
Beispiel 1. ereg() Beispiel
if (ereg ("([0-9]{4}) -([0-9]{1,2}) -([0-9]{1,2})", $date, $regs)) {echo "$regs[3].$regs[2].$regs[1]";} else {echo "Ungültiges Datumsformat: $date";}
Siehe auch: eregi(), ereg_replace(), eregi_replace() und preg_match().
Zurück
Zum Anfang
Nach vorne

Nach oben
