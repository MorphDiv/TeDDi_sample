# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

Warnung
Diese Funktion ist EXPERIMENTELL.
Das Verhalten, der Funktionsname und alles Andere was hier dokumentiert ist, kann sich in zukünftigen PHP-Versionen ohne Ankündigung ändern.
Seien Sie gewarnt und verwenden Sie diese Funktion auf eigenes Risiko.
Nachdem der Socket socket mit der socket_create() erzeugt wurde, mit socket_bind() mit einem Namen verknuepft wurde und mit socket_listen() angewiesen wurde, nach hereinkommenden Verbindungsanforderungen zu horchen, wird der Socket mit dieser Funktion angewiesen, diese Verbindungsanforderungen zuzulassen.
Wenn ein Verbindungsaufbau erfolgreich war, wird ein neuer Socket-Deskriptor zurückgegeben, welcher zur Kommunikation benutzt werden kann.
Wenn es mehrere Verbindungsanforderungen an diesem Socket gibt, werden diese in eine Warteschlange gestellt und die erste Verbindungsanforderung wird bedient.
Falls es keine wartenden Verbindungsanforderungen gibt, blockiert die Funktion socket_accept() so lange, bis eine Verbindungsanforderung kommt.
Falls socket mit der Funktion socket_set_blocking() oder mit socket_set_nonblock() auf 'nicht blockieren 'gesetzt wurde, wird FALSE zurückgegeben.
Der Socket-Deskriptor, der von socket_accept() zurückgegeben wird, soll nicht dazu benutzt werden, um neue Verbindungsanforderungen zu benutzen.
Der ursprüngliche wartende Socket socket bleibt geöffnet und kann wiederbenutzt werden.
Gibt bei Erfolg einen neuen Socket-Deskriptor zurück oder FALSE, falls ein Fehler auftritt.
Der aktuelle Fehlercode kann mit der Funktion socket_last_error() ermittelt werden.
Dieser Fehlercode kann an die Funktion strerror() übergeben werden, um eine textuelle Beschreibung des Fehlers zu erhalten.
Siehe auch: socket_bind(), socket_connect(), socket_listen(), socket_create() und socket_strerror().
Zurück
Zum Anfang
Nach vorne
Socket Funktionen
Nach oben
