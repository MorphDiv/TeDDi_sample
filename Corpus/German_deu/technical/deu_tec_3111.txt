# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

Gibt eine Zeile bis zu length -1 Bytes Länge zurück, welche aus der Datei von der aktuellen Position des Dateizeigers handle aus ausgelesen wird.
Die Zeile endet an einem Zeilenumbruch (welcher im Rückgabewert enthalten ist), EOF (Ende der Datei) oder bei length - 1 Bytes (je nachdem, was eher auftritt).
Ist keine Länge angegeben, wird diese auf 1k bzw.
1024 Bytes gesetzt.
Wenn ein Fehler auftritt, wird FALSE zurückgegeben.
Häufig auftretende Fehler:
Wenn Sie an die C-Semantik von fgets() gewöhnt sind, sollten Sie auf die unterschiedliche Behandlung von EOF (genauer: wie EOF zurückgegeben wird) achten.
Der Datei-Zeiger fp muss gültig sein, d.h. die Datei, auf die gezeigt wird, muss zuvor mit fopen(), popen(), oder fsockopen() geöffnet worden sein.
Ein einfaches Beispiel:
Beispiel 1.
Eine Datei Zeile für Zeile einlesen
$handle = fopen ("/ tmp / inputfile.txt", "r"); while (!feof($handle)) {$buffer = fgets($handle, 4096); echo $buffer;} fclose ($handle);
Anmerkung:
Der Parameter length wurde in PHP 4.2.0 optional.
Ist er nicht angegeben, wird als Zeilenlänge 1024 angenommen.
Seit PHP 4.3 wird bei einem fehlenden Parameter length so lange gelesen, bis das Ende der Zeile erreicht ist.
Ist der Großteil der Zeilen in der Datei größer als 8 kB, ist es effizienter, wenn Sie die maximale Zeilenlänge spezifizieren.
Anmerkung:
Diese Funktion ist seit PHP 4.3 "binary safe", was aus frühere Versionen nicht zutrifft.
Anmerkung:
Wenn Sie Probleme damit haben, dass PHP Zeilenendezeichen nicht erkennt, entweder beim Lesen von Dateien auf einem Macintosh oder bei Dateien die auf einem Macintosh erstellt wurden, können Sie die Option auto_detect_line_endings aktivieren.
Siehe auch fread(), fopen(), popen(), fgetc(), fsockopen() und socket_set_timeout().
Zurück
Zum Anfang
Nach vorne

Nach oben
