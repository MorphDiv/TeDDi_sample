# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

array_diff() gibt ein Array mit allen Werten von array1, welche in keinem der anderen Argumente enthalten sind, zurück.
Beachten Sie, dass Schlüssel erhalten bleiben.
Beispiel 1. array_diff()
$array1 = array ("a "= "grün", "rot", "blau", "rot"); $array2 = array ("b" = "grün", "gelb", "rot"); $result = array_diff ($array1, $array2);
Dies speichert array( "blau"); in $result.
Mehrfache Vorkommen in $array1 werden auf die gleiche Weise behandelt.
Anmerkung:
Zwei Elemente werden nur dann als gleich angesehen, wenn (string) $elem1 === (string) $elem2.
In Worten:
Wenn die String-Repräsentation die gleiche ist.
Anmerkung:
Beachten Sie, dass diese Funktion nur eine Dimension eines n-dimensionalen Arrays prüft.
Natürlich können Sie tiefere Dimensionen prüfen, indem Sie z.B. array_diff( $array1[0], $array2[0]); benutzen.
Warnung
Dies war in PHP 4.0.4 fehlerhaft!
Siehe auch array_diff_assoc(), array_intersect() und array_intersect_assoc().
Zurück
Zum Anfang
Nach vorne

Nach oben
