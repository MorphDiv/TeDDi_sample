# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

serialize() gibt eine Zeichenkette (String) zurück, die eine Byte-Stream entsprechende Wiedergabe von value enthält und beliebig abgespeichert werden kann.
Diese Funktion dient der Speicherung oder Übergabe von PHP-Werten, ohne dass diese ihren Wert oder ihre Struktur verlieren.
Um eine serialisierte Zeichenkette wieder als PHP-Wert verfügbar zu machen steht die unserialize() -Funktion zur Verfügung. serialize() kann mit den Typen integer, double, string, array (mehrdimensional) und object Um eine serialisierte Zeichenkette wieder als PHP-Wert verfügbar zu machen steht die unserialize() -Funktion zur Verfügung. serialize() kann mit den Typen integer, double, string, array (mehrdimensional) und object umgehen.
Beim Objekt werden die Eigenschaften serialisiert, die Methoden gehen aber verloren.
Beispiel 1. serialize() -Beispiel:
/ / $session_data enthält ein mehrdimensionales Array mit / / Session-Informationen des aktuellen Benutzers.
Wir benutzen / / serialize() um diese Infos am Ende der Anfrage in eine / / Datenbank zu speichern. $conn = odbc_connect ("webdb", "php", "moorhuhn"); $stmt = odbc_prepare ($conn, "UPDATE sessions SET data =?
WHERE id = ?"); $sqldata = array (serialize($session_data), $PHP_AUTH_USER); if (!odbc_execute ($stmt, $sqldata)) {$stmt = odbc_prepare ($conn, "INSERT INTO sessions (id, data) VALUES(?, ?)"); if (!odbc_execute($stmt, $sqldata)) {/ * Etwas lief schief.
Fluche, heule und stöhne. * /}}
Zurück
Zum Anfang
Nach vorne

Nach oben
