# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Kapitel 1.
Einleitung
Nach vorne
Alles.
PHP ist hauptsächlich auf serverseitige Skripte fokussiert, weshalb Sie alles tun können, was auch ein anderes CGI Programm kann, wie z.B.
Formulardaten sammeln, dynamische Inhalte für Websites generieren oder Cookies senden und empfangen.
Aber PHP kann noch viel mehr.
Es gibt drei Hauptgebiete, in denen PHP Skripte genutzt werden.
Serverseitige Skripte.
Dies ist traditionelle und auch Hauptfeld von PHP.
Sie benötigen dazu drei Dinge.
Den PHP Parser (CGI oder Server-Modul), einen Webserver und einen Webbrowser.
Sie müssen den Webserver, verbunden mit einer PHP Installation laufen lassen.
Sie können Sich Ausgabe der PHP Programme über den Server mit einem Webbrowser ansehen.
Für weitere Informationen lesen Sie bitte im Abschnitt Installation weiter.
Skripte auf der Kommandozeile.
Sie können auch PHP Skripte schreiben, um sie ohne einen Server oder einen Browser laufen zu lassen.
Hierfür benötigen Sie nur den PHP Parser.
Diese Art der Verwendung ist für die regelmäßig auszuführende Skripte mittels cron (unter *nix oder Linux) oder dem Task Scheduler (unter Windows).
Diese Skripte können auch für einfache Aufgaben zur Verarbeitung von Text verwendet werden.
Weitere Informationen dazu finden Sie im Abschnitt Using PHP from the command line.
Schreiben clientseitiger GUI Applikationen.
PHP ist wahrscheinlich nicht die allerbeste Sprache um GUI-Applikationen zu schreiben, aber wenn Sie PHP sehr gut kennen und einige weiterführende Funktionen in Ihren clientseitigen Applikationen nutzen möchten, können Sie PHP-GTK nutzen, um derartige Programme zu schreiben.
Auf diese Art haben Sie auch die Möglichkeit, Plattformübergreifende Applikationen zu schreiben.
PHP-GTK ist eine Erweiterung von PHP, welche in der Hauptdistribution nicht enthalten ist.
Sollten Sie daran interessiert sein, besuchen Sie die PHP-GTK Website.
PHP kann auf allen gängigen Betriebssystemen verwendet werden, inkl.
Linux, vielen Unix-Varianten (inkl.
HP-UX, Solaris und OpenBSD), Microsoft Windows, Mac OS X, RISC OS, und wahrscheinlich anderen.
PHP unterstützt auch die meisten der heute gebräuchlichen Webserver.
Dies umfasst Apache, Microsoft Internet Information Server, Personal Web Server, Netscape und iPlanet Server, Oreilly Website Pro Server, Caudium, Xitami, OmniHTTPd, und viele andere.
Für den Großteil der Server bietet PHP ein eigenes Modul, für die anderen, welche den CGI Standard unterstützen, kann PHP als CGI Prozessor arbeiten.
So haben Sie Freiheit, PHP auf dem Betriebssystem und dem Webserver Ihrer Wahl laufen zu lassen.
Weiters können Sie je nach Vorliebe prozedural, objektorientiert, oder gemischt programmieren.
Auch wenn in der derzeitigen Version von PHP nicht jedes Standard OOP Feature realisiert ist, sind viele Bibliotheken und große Applikationen (inklusive der PEAR Bibliothek) exklusiv unter Verwendung von OOP Code geschrieben worden.
Mit PHP sind Sie nicht auf die Ausgabe von HTML beschränkt.
Seine Fähigkeiten umfassen auch das dynamische Generieren von Bildern, PDF Dateien und Flash Animationen (mittels libswf und Ming).
Sie können auch leicht jede Art von Text, wie XHTML oder irgendeine andere XML Datei ausgeben.
PHP kann diese Dateien automatisch generieren und im Dateisystem speichern, anstatt diese nur auszugeben bzw. auszudrucken, und formt auch serverseitigen Zwischenspeicher Ihrer dynamischen Inhalte.
Vielleicht die größte und bemerkenswerteste Stärke von PHP ist seine Unterstützung für eine breite Masse von Datenbanken.
Eine datenbankgestützte Website zu erstellen ist unglaublich einfach.
Die folgenden Datenbanken werden zur Zeit unterstützt:


Oracle (OCI7 und OCI8)






FilePro (nur Lesezugriff)











PHP unterstützt auch die Kommunikation mit anderen Services, welche Protokolle wie LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (auf Windows) und unzählige andere unterstützen.
Sie können auch einfache Netzwerk Sockets öffnen, und unter Verwendung irgendeines Protokolls kommunizieren.
PHP unterstützt auch WDDX (Web Distributed Data Exchange) zum Austausch komplexer Daten zwischen Programmiersprachen.
Da wir gerade vom Zusammenwirken sprechen:
PHP bietet auch Unterstützung zur Instantiierung von Java Objekten, und deren transparente Verwendung als PHP Objekte.
Sie können auch unsere CORBA Erweiterung verwenden, um auf entfernte Objekte zuzugreifen.
PHP verfügt über äußerst hilfreiche Textverarbeitungsfunktionen, von den regulären Ausdrücken (POSIX erweitert oder Perl) bis zum Parsen von XML Dokumenten.
Für den Zugriff und das Parsen von XML Dokumenten unterstützen wir die Standards SAX und DOM.
Sie können unsere XSLT Erweiterung verwenden, um XML Dokumente zu transformieren.
Wenn Sie PHP im Bereich des E-Commerce nutzen, werden Sie Funktionen für Cybercash Payment, CyberMUT, VeriSign Payflow Pro und CCVS für Ihre Onlineprogramme zur Zahlungsabwicklung zu schätzen lernen.
Wir haben viele andere interessante Erweiterungen, wie mnoGoSearch für Suchmaschinen, die IRC Gateway Funktionen, viele Komprimierungswerkzeuge (gzip, bz2), Kalenderumrechnung, Übersetzung...
Wie Sie sehen können, reicht diese Seite nicht aus, um alle Möglichkeiten und Vorteile von PHP aufzulisten.
Lesen Sie im Abschnitt Installation weiter, und konsultieren Sie auch die Funktionsreferenz für weitere Erläuterungen der einzelnen hier erwähnten Erweiterungen.
Zurück
Zum Anfang
Nach vorne
Einleitung
Nach oben
Kleines Tutorial