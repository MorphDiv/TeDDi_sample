# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Überwachung der Ein-/Ausgaben von %1 (%2)
Das Programm‚ %1‘ (PID: %2) wird auf Ein- und Ausgaben an allen Übergabeschnittstellen (stdin, stdout, stderr, offene Dateien, Netzwerkverbindungen usw.) überwacht. Daten, die das Programm schreibt, werden rot dargestellt; gelesene Daten in blau.
Anhängen
Anhalten
& Fortfahren
& Loslösen
Fehler beim Anhängen an Prozess %1
Zum Elternprozess gehen
Zum Prozess wechseln, der für diesen Debugging ausführt
Programmfenster anzeigen
Ein-/Ausgaben überwachen
Angehaltenen Prozess fortsetzen
Aussetzen (STOP)
Fortsetzen (CONT)
Auflegen (HUP)
Unterbrechen (INT)
Beenden (TERM)
Töten (KILL)
Benutzer 1 (USR1)
Benutzer 2 (USR2)
Fokus auf Schnellsuche
Signal senden
Zum Elternprozess wechseln (%1)
Spalte„ %1“ ausblenden
Spalte„ %1“ anzeigen
Einheiten
Kilobytes pro Sekunde
Kilobyte
Megabytes pro Sekunde
Megabyte
Gigabytes pro Sekunde
Gigabyte
Prozent
Befehlszeilenoptionen anzeigen
CPU-Nutzung auf die Anzahl der Prozessoren aufteilen
Angezeigte Informationen
Zeichen gelesen/geschrieben
Anzahl Schreib-/Leseoperationen
Tatsächlich gelesene/geschriebene Bytes
E/A-Rate anzeigen
Kurzinfos anzeigen
Sie sind nicht berechtigt, die Prozesspriorität zu ändern, und es gab ein Problem, diesen Vorgang als Systemverwalter durchzuführen. Fehler: %1 %2
Sie müssen zuerst einen Prozess auswählen.
Ihre Rechte reichen nicht aus, um den CPU-Planer zu ändern. Abbruch.
Ihre Rechte reichen nicht aus, um die CPU-Priorität zu ändern. Abbruch.
Ihre Rechte reichen nicht aus, um den E/A-Planer und die -Priorität zu ändern. Abbruch.
Sie sind nicht berechtigt, die E/A-Priorität zu ändern, und es gab ein Problem, diesen Vorgang als Systemverwalter durchzuführen. Fehler: %1 %2
Sie sind nicht berechtigt, den CPU-Planer zu ändern, und es gab ein Problem, diesen Vorgang als Systemverwalter durchzuführen. Fehler: %1 %2
Sie sind nicht berechtigt, den Prozess zu beenden, und es gab ein Problem, diesen Vorgang als Systemverwalter durchzuführen. Fehler: %1 %2
Beenden (kill)
VT100-Sequenzen in der Ausgabe interpretieren. Für Befehlszeilenprogramme.
Wenn diese Einstellung aktiviert ist, werden ANSI-Kontrollsequenzen nicht angezeigt, sondern interpretiert. Nützlich, wenn bash überwacht wird.
ANSI-Escape-Sequenzen interpretieren
Ausgabe der Prozesse anzeigen, die von diesem gestartet wurden.
Den Befehlen‚ fork‘ und‚ clone‘ folgen (um Kindprozesse zu überwachen)
Kindprozesse überwachen
Prozess und seine Ausgaben anhalten
Hält das Auslesen der Prozessausgaben an. Dadurch wird der Prozess blockiert und muss warten. Der Prozess kann fortgesetzt werden, indem Sie fortsetzen, ablösen oder das Fenster schließen.
Prozess-Überwachung beenden
Beendet die Überwachung des Prozesses und lässt ihn weiter laufen.
Das Signal SIGTERM an den gewählten Prozess senden. Lesen Sie die„ Was ist das ?“ -Hilfe für weitere Informationen. Mit einem Rechtsklick auf einen Prozess können weitere Signale gesendet werden.
< !DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd" > p, li {white-space: pre-wrap;} Versuchen, den ausgewählten Prozess durch Senden des Signals SIGTERM zu beenden. Technische Informationen: Das Signal SIGTERM wird an den gewählten Prozess gesendet. Falls Ihre Rechte dazu nicht ausreichen, werden Sie nach einem Passwort gefragt. Durch Verwenden des Programms polkit-kde-authorization können Sie bestimmten oder allen Benutzern das Recht erteilen, jeden Prozess zu beenden, ohne ein Passwort zu benötigen.
Prozess & beenden...
Filtert die angezeigten Prozesse nach dem hier eingegebenen Text. Der Text kann eine teilweise Übereinstimmung mit einem Prozessnamen, einem Befehl oder Fenstertitel sein. Auch nach einem Benutzernamen oder einer Prozess-ID kann gefiltert werden. Beispiele: ksysZeigt Prozesse an, die„ ksys“ im Namen enthalten. Zum Beispiel den Prozess„ ksysguard“ und„ ksysguardd“. rootZeigt Prozesse an, die dem Benutzer root gehören. Zum Beispiel init 1234Zeigt Prozesse mit der PID oder Parent-PID 1234 an.
Schnellsuche
Legt fest, welche Prozesskategorien angezeigt und wie sie dargestellt werden. Die einzelnen Prozesse können mit Hilfe der Schnellsuche weiter gefiltert werden. Alle ProzesseZeigt alle Prozesse des Systems an. Alle Prozesse (Baum)Zeigt alle Prozesse des Systems an und gliedert sie in einer hierarchischen Baumansicht, wobei die Parent-ID als Hierarchie-Kriterium herangezogen wird. SystemprozesseZeigt Prozesse an, die entweder als Systemverwalter ausgeführt werden oder als Benutzer, der sich nicht anmelden kann. BenutzerprozesseZeigt Prozesse an, die von Nicht-Systemverwaltern ausgeführt werden und deren Benutzer sich am System anmelden können. Eigene ProzesseZeigt Prozesse an, die dem gleichen Benutzer gehören, der auch dieses Programm ausführt. Nur ProgrammeZeigt Prozesse an, die als Benutzer ausgeführt werden, der sich anmelden kann und denen entweder ein Terminal oder zumindest ein X11-Fenster zugeordnet ist. Technische Informationen: Prozesse mit mehreren Threads werden nur als einzelner Prozess angezeigt und nicht anders behandelt. Kernel-Threads werden wie normale Prozesse angezeigt, laufen aber in Wirklichkeit im Kernel und sind keine eigentlichen Prozesse. Auf solche Prozesse treffen daher einige Eigenschaften (wie z. B. Benutzername) nicht zu.
Alle Prozesse
Alle Prozesse (Baum)
Systemprozesse
Benutzerprozesse
Eigene Prozesse
Nur Programme
Planer-Priorität ändern für:
CPU-Planer
p, li {white-space: pre-wrap;} Der Standard-CPU-Planer für Prozesse ohne besondere Anforderungen.
p, li {white-space: pre-wrap;} Normale Planung: Standard-Zeitplanung in Linux Normal ist die voreingestellte Zeitplanung in Linux für alle Prozesse, die keine besonderen Anforderungen an die Reaktionszeit (Echtzeit) haben. Der auszuführende Prozess wird aus der Liste der Prozesse gewählt, die ebenfalls die Zeitplanung Normal oder Stapel verwenden. Die dynamische Priorität des Prozesses basiert auf der festgelegten Priorität, die mit der Anzahl der Gelegenheiten multipliziert wird, zu denen der Prozess hätte ausgeführt werden können, aber aufgrund des Zeitplaners nicht durfte. Diese Regelung garantiert eine faire Zeitverteilung zwischen den Prozessen mit normaler Zeitplanung.
Normal
p, li {white-space: pre-wrap;} Für CPU-Intensive und nicht-interaktive Programme. Der Prozess wird in der Zeitverteilung leicht benachteiligt.
p, li {white-space: pre-wrap;} Stapel-Planung (Seit Linux 2.6.16.) Diese Planung ist der Normal -Planung sehr ähnlich, außer dass hier angenommen wird, dass ein Prozess sehr viel Prozessorlast erzeugt. Aus diesem Grund wird der Planer dem Prozess etwas weniger Zeit zur Verfügung stellen und damit bei Planungsentscheidungen weniger priorisiert behandeln. Dieser Planer ist für nicht-interaktive Prozesse sinnvoll, die keine niedrigere Prozesspriorität zugewiesen bekommen sollen, und für Prozesse, die gute planbare Zeitscheiben benötigen und nicht durch Bevorzugung interaktiver Prozesse beeinträchtigt werden sollen.
Stapel
p, li {white-space: pre-wrap;} Der Prozess läuft wann immer möglich. Hat eine höhere Priorität als bei der Stapel-Planung. Unterstützt Zeitversetzung.
p, li {white-space: pre-wrap;} Round-Robin Round-Robin ist eine einfache Erweiterung von FIFO. Alle Eigenschaften von FIFO gelten auch für Round-Robin, außer das jeder Prozess nur für eine bestimmte Zeit laufen darf.
Round-Robin
p, li {white-space: pre-wrap;} Der Prozess läuft wann immer möglich. Hat eine höhere Priorität als bei Normal oder Stapel. Unterstützt keine Zeitversetzung.
p, li {white-space: pre-wrap;} FIFO Wenn ein FIFO -Prozess zur Ausführung bereitsteht, wird er automatisch sofort jedem Normal - oder Stapel -Prozess vorgezogen.
FIFO
E/A-Planer
p, li {white-space: pre-wrap;} Prozesspriorität ist der CPU-Priorität angeglichen.
p, li {white-space: pre-wrap;} Normal Dieser Planungsmodus gleicht dem Verfahren Beste Leistung, außer dass die Prozesspriorität aus der Prozessorpriorität errechnet wird. Prozesse mit höherer Priorität haben schneller Zugriff auf die Festplatte. Programme, die mit der gleichen Priorität nach dem Schema Beste Leistung/Normal laufen, werden nach dem Round-Robin -Verfahren bedient.
p, li {white-space: pre-wrap;} Der Prozess kann nur auf die Festplatte zugreifen, wenn nicht kurz vorher schon ein anderer Prozess darauf zugegriffen hat.
p, li {white-space: pre-wrap;} Inaktiv Wenn ein Programm mit dem Planer Inaktiv läuft, erhält es nur E/A-Zugriff auf die Festplatte, wenn kein anderes Programm für eine bestimmte Zeitspanne Zugriff auf darauf angefragt hat. Prozesse mit dem Inaktiv -Planer sollten keinerlei Einfluss auf die normale Systemleistung haben. Dieser Planer kennt keine Prioritäten.
Inaktiv
p, li {white-space: pre-wrap;} Der Prozess erhält eine höhere Priorität für den Zugriff auf die Festplatte als bei dem Normal-Planer.
p, li {white-space: pre-wrap;} Beste Leistung Prozesse mit erhöhter Priorität erhalten schneller Zugriff auf die Festplatte als die anderen. Prozesse mit gleicher Beste Leistung -Priorität werden nach dem Round-Robin -Verfahren bedient.
Beste Leistung
p, li {white-space: pre-wrap;} Prozesse erhalten bei Bedarf sofortigen Zugriff auf die Festplatte, unabhängig vom restlichen Systemstatus.
p, li {white-space: pre-wrap;} Echtzeit Der Echtzeit -Planer erhält immer sofortigen Zugriff auf die Festplatte, unabhängig vom Status anderer Prozesse. Aus diesem Grund sollte man den Echtzeit -Planer mit Bedacht einsetzen, weil dadurch andere Prozesse behindert werden können. Ähnlich wie bei Beste Leistung gibt es auch hier 8 Prioritätsklassen, die bestimmen, wie große Zeitscheiben ein Prozess jeweils zugewiesen bekommt.
Echtzeit
Niedrige Priorität
Hohe Priorität
Skriptfehler: Das Argument zu setHtml() ist keine Zeichenkette.
Skriptfehler: Das Argument zu fileExists() ist keine Zeichenkette.
Skriptfehler: Das Argument zu readFile() ist keine Zeichenkette.
Das Skript‚ %1‘ kann nicht gelesen werden: Fehler %2
- Der Prozess ist beschäftigt.
- Der Prozess ist im Wartezustand.
- Der Prozess wurde angehalten. Er reagiert derzeit nicht auf Benutzereingaben.
- Der Prozess ist beendet und tot, aber der Mutterprozess hat noch nicht aufgeräumt.
Der Prozessname.
Der Eigentümer des Prozesses.
Das zuständige Terminal, unter dem dieser Prozess läuft.
Die Priorität, mit der der Prozess ausgeführt wird. Werte von 19 (niedrigste Priorität) bis -19 (höchste Priorität) sind möglich.
Die derzeitige CPU-Verwendung des Prozesses.
Die derzeitige gesamte CPU-Verwendung des Prozesses.
Dies ist die Menge virtueller Speicher, den der Prozess verwendet, einschließlich gemeinsamer Bibliotheken, Grafikspeicher, Dateien auf der Festplatte usw.. Dieser Wert ist beinahe bedeutungslos.
Dies ist die Menge physischen Speichers, den der Prozess verwendet. Dies schließt ausgelagerten Speicher und die Code-Größe der benutzten gemeinsamen Bibliotheken nicht mit ein. Dieser Wert ist am ehesten sinnvoll, die Speicherverwendung eines Prozesses zu ermitteln.
Dies ist die Menge physischen Speichers, die der Prozess und seine gemeinsamen Bibliotheken verwenden. Dieser Speicher wird gemeinsam von allen Prozessen genutzt, die diese Bibliothek verwenden.
Der Befehl, mit dem der Prozess gestartet wurde.
Der Titel des Fensters, das dieser Prozess möglicherweise anzeigt.
Die einmalige Kennung, durch die dieser Prozess identifiziert wird.
Die Anzahl der gelesenen Bytes. Lesen Sie die„ Was ist das ?“ -Hilfe für mehr Informationen.
Die Anzahl der geschriebenen Bytes. Lesen Sie die„ Was ist das ?“ -Hilfe für mehr Informationen.
Technische Informationen: Der Name eines Kernel-Prozesses ist auf 8 Zeichen beschränkt, daher wird der gesamte Befehl untersucht. Wenn das erste Wort der gesamten Befehlszeile mit dem Prozessnamen beginnt, wird das erste Wort der Befehlszeile angezeigt. Ansonsten wird der Prozessname angezeigt.
Der Eigentümer dieses Prozesses. Falls sich der Eigentümer vom effektiven Benutzer unterscheidet (z. B. setuid), wird der Eigentümer gefolgt vom effektiven Benutzer angezeigt. Die Kurzhilfe enthält die vollständigen Informationen. Anmeldename/GruppeDer Benutzername des tatsächlichen Benutzers/der Gruppe, der dieser Prozess gehört.Effektiver Benutzer/GruppeDies wird nur angezeigt, wenn der effektive Benutzer sich vom Eigentümer unterscheidet.Setuid-Benutzer/GruppeDer gespeicherte Benutzername/die gespeicherte Gruppe der zugehörigen Programmdatei. Der Prozess kann seine Rechte auf die des Setuid-Benutzers bzw. der Setuid-Gruppe erweitern.Dateisystem-Benutzer/GruppeZugriffe auf das Dateisystem werden mit dem Dateisystem-Benutzer bzw. der -Gruppe geprüft. Es handelt sich hierbei um eine Linux-spezifische Funktion. Siehe auch setfsuid(2) für mehr Informationen.
Dies ist die Größe des zugewiesenen Adressbereiches; nicht des Arbeitsspeichers. In der Praxis ist dieser Wert kaum von Bedeutung. Wenn ein Prozess einen großen Adressbereich anfordert aber nur einen kleinen Teil davon tatsächlich verwendet, so wird die tatsächliche Speicherverwendung niedrig sein und VIRT dagegen hoch.Technische Informationen: Dies ist der Wert„ VmSize“ aus proc/*/status bzw. VIRT im Programm„ top“.
Technische Informationen: Die ist die URSS (Unique Resident Set Size), berechnet als VmRSS - Gemeinsam, aus /proc/*/statm. Tendenziell ist dieser Wert kleiner als der tatsächliche Speicherverbrauch eines Prozesses (da keine E/A-Speicherbereiche einberechnet werden). Allerdings ist dieser Wert der beste, den man schnell ermitteln kann.
Die derzeitige CPU-Verwendung des Prozesses sowie all seiner Threads.
Technische Informationen: Dies ist der gemeinsame Speicher, in„ top“ auch SHR genannt. Dies ist die Anzahl der Speicherseiten, die von einer Datei belegt wird (siehe auch die Kernel-Dokumentation unter Documentation/filesystems/proc.txt).
Technische Informationen: Diese Daten kommen aus /proc/*/cmdline.
Technische Informationen: Für jedes X11-Fenster wird die Eigenschaft _NET_WM_PID verwendet, um die Assoziation zur Prozess-PID herzustellen. Wenn die Fenster eines Prozesses nicht angezeigt werden, setzt das Programm wahrscheinlich fälschlicherweise diese Eigenschaft nicht.
Technische Informationen: Dies ist die Prozess-ID. Eine Multi-Thread-Anwendung wird als einzelner Prozess behandelt; alle Threads teilen sich eine gemeinsame PID. Die angezeigte CPU-Verwendung usw. ist die zusammengezählte CPU-Verwendung aller Threads.
Diese Spalte zeigt die E/A-Statistiken für jeden Prozess an. Die Kurzhilfe gibt Ihnen weiterführende Informationen:Gelesene ZeichenDie Anzahl Bytes, die der Prozess aus dem Speichersystem gelesen hat. Dies ist die einfache Summe an Bytes, die der Prozess über die Aufrufe read() sowie pread() angefordert hat. Dazu zählen auch Ein- und Ausgaben über TTYs. Ob tatsächlich ein physikalischer Leseprozess auf einem Datenträger stattgefunden hat ist für die Rechnung unerheblich (der Lesevorgang kann z. B. auch aus dem Pagecache erfolgt sein).Geschriebene ZeichenDie Anzahl Bytes, die der Prozess in das Speichersystem geschrieben hat bzw. sollte. Es gelten die gleichen Regeln wie für die Berechnung der gelesenen Bytes.Gelesene SystemaufrufeDie Anzahl der E/A-Leseoperationen, z. B. Systemaufrufe wie read() und pread().Geschriebene SystemaufrufeDie Anzahl der E/A-Schreiboperationen, z. B. Systemaufrufe wie write() und pwrite().Gelesene BytesDie Anzahl Bytes, die der Prozess tatsächlich aus dem Speichersystem angefordert hat. Dies wird auf der Ebene von submit_bio() gezählt und ist somit akkurat für Blockbasierte Dateisysteme. Für NFS- oder CIFS-Dateisysteme sind die so gezählten Werte nicht aussagekräftig.Geschriebene BytesEs wird versucht, die Anzahl der geschriebenen Bytes zu ermitteln, die der Prozess an das Speichersystem übermittelt hat. Gezählt wird zum Zeitpunkt des page-dirtying.Die Zahl in Klammern zeigt die Rate an, wie sich jeder Wert derzeit ändert, berechnet anhand der Aktualisierungsrate.Technische Informationen: Diese Daten werden aus /proc/*/io bezogen und sind im Detail dokumentiert unter Documentation/accounting sowie Documentation/filesystems/proc.txt in den Kernelquellen.
Anmeldename: %1
Der Benutzer wird aus unbekanntem Grund nicht erkannt.
%1
Anmeldename: %1 (uid: %2)
Raumnummer: %1
Telefon (dienstl.): %1
Effektiver Benutzer: %1
Setuid-Benutzer: %1
Dateisystembenutzer: %1
Gruppe: %1
Effektive Gruppe: %1
Setuid-Gruppe: %1
Dateisystemgruppe: %1Short description of a process. PID, name, user
%1: %2, ausgeführt von %3
%1 (gid: %2)
%1 (uid: %2)
%1/stooltip. name,pid
Der Prozess läuft im Debugger %1 (%2)
Init ist die Mutter aller anderen Prozesse und kann nicht beendet werden.
KThread verwaltet Kernel-Threads. Die Kind-Prozesse laufen im Kernel, kontrollieren Festplattenzugriffe usw. name column tooltip. first item is the name
%1 Prozess-ID: %2 name column tooltip. first item is the name
%1 Prozess-ID: %2 Mutter-Prozess: %3 Mutter-ID: %4 name column tooltip. first item is the name
%1 Prozess-ID: %2 Mutter-ID: %3
Befehl: %1
Läuft auf: %1
Dieser Prozess wurde mit folgendem Befehl gestartet:%1
Läuft auf: %1
Nice-Stufe: %1 (%2)
Planer-Priorität: %1
Planer: %1
E/A-Nice-Stufe: %1 (%2)
E/A-Klasse: %1
Prozess-Status: %1 %2Nutzer-CPU-Verwendung: %3 %System-CPU-Verwendung: %4%
Anzahl Kindprozesse: %1 Nutzer-CPU-Verwendung (gesamt): %2% System-CPU-Verwendung (gesamt): %3% CPU-Verwendung (gesamt): %4%
CPU-Zeit in Nutzer-Prozessen: %1 Sekunden
CPU-Zeit in System-Prozessen: %1 Sekunden
Nice-Stufe: %1 (%2)
Speichernutzung: %1 von %2 (%3%)
Speichernutzung: %1
RSS-Speichernutzung: %1 von %2 (%3%)
RSS-Speichernutzung: %1
Ihr System scheint die nötige Information leider nicht zur Verfügung zu stellen.
Speichernutzung gemeinsamer Bibliotheken: %1 von %2 (%3%)
Speichernutzung gemeinsamer Bibliotheken: %1
Zeichen gelesen: %1 (%2 KiB/s) Zeichen geschrieben: %3 (%4 KiB/s) Gelesene Systemaufrufe: %5 (%6 s⁻ ¹) Geschriebene Systemaufrufe: %7 (%8 s⁻ ¹) Gelesene Byte: %9 (%10 KiB/s) Geschriebene Byte: %11 (%12 KiB/s)process heading
Nameprocess heading
Benutzernameprocess heading
PIDprocess heading
TTYprocess heading
Prozessprioritätprocess heading
CPU %process heading
E/A Gelesenprocess heading
E/A Geschriebenprocess heading
Virtuelle Größeprocess heading
Speicherprocess heading
Gemeinsamer Speicherprocess heading
Befehlprocess heading
Fenstertitel
%1 K
%1 M
%1 G
%1%
Prozesspriorität ändern
Nr.
Das ausführbare Programm‚ kdesu‘ ist nicht auffindbar.
Die ausführbare Datei‚ setscheduler‘ ist nicht auffindbar. Diese sollte zusammen mit dem Systemmonitor installiert worden sein.
Sie sind nicht berechtigt, die Priorität dieses Prozesses zu ändern, und es gab ein Problem, diesen Vorgang als Systemverwalter durchzuführen.
Sie sind nicht berechtigt, die Priorität dieses Prozesses festzulegen, und es gab ein Problem, diesen Vorgang als Systemverwalter durchzuführen.