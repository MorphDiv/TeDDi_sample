# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

pg_fetch_array() gibt ein Array zurück, das die gelesene Zeile (Tupel, Datensatz) enthält.
Falls keine Zeile mehr gelesen werden konnte, wird FALSE zurückgegeben.
pg_fetch_array() ist eine erweiterte Version von pg_fetch_row().
Zusätzlich zur Speicherung der Daten in einem nummerischen Array (mit den Feldindizes) speichert diese Funktion die Daten standrardmäßig in einem assoziativen Array mit den Feldnamen als Indizes.
row ist die Zeilennummer des Datensatzes, der gelesen werden soll.
Die Zählung beginnt bei 0.
result_type ist ein optionaler Parameter, der angibt, wie der Rückgabewert initialisiert wird. result_type ist eine Konstante, die die folgenden Werte annehmen kann:
PGSQL_ASSOC, PGSQL_NUM, und PGSQL_BOTH. pg_fetch_array() gibt mit PGSQL_ASSOC ein assoziatives Array mit Feldnamen als Schlüssel zurück, mit PGSQL_NUM wird ein nummerisches Array mit den Feldnummern zurückgegeben und mit PGSQL_BOTH wird ein Array mit beiden Indizes zurückgegeben.
PGSQL_BOTH ist die Standardeinstellung.
pg_fetch_array() ist NICHT wesentlich langsamer als pg_fetch_row(), obwohl eine umfassendere Funktion zur Verfügung gestellt wird.
Siehe auch pg_fetch_row(), pg_fetch_object() und pg_fetch_result().
Beispiel 1.

?php $conn = pg_pconnect ("dbname=publisher"); if (!$conn) {echo "Ein Fehler ist aufgetreten.\n"; exit;} $result = pg_query ($conn, "SELECT * FROM authors"); if (!$result) {echo "Ein Fehler ist aufgetreten.\n"; exit;} $arr = pg_fetch_array ($result, 0, PGSQL_NUM); echo $arr[0]. "- array\n"; $arr = pg_fetch_array ($result, 1, PGSQL_ASSOC); echo $arr["autor"]." - array\n";?
Anmerkung:
Ab der Version 4.1.0 ist der Parameter row optional.
Ein Aufruf von pg_fetch_array() inkrementiert den internen Datensatzzähler um 1.
Zurück
Zum Anfang
Nach vorne

Nach oben
