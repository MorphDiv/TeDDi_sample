# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

Liefert das aktuelle Schlüssel - Wertepaar des Arrays array, und erhöht den Array Cursor.
Dieses Paar wird als Array mit 4 Elementen zurückgegeben, und zwar mit den Schlüsseln 0, 1, key, und value.
Die Elemente 0 und key enthalten den Namen des Schlüssels, 1 und value den Wert.
Zeigt der interne Zeiger hinter das Ende der Array-Inhalte, gibt each() FALSE zurück.
Beispiel 1. each() Beispiele

$bar enthält nun die folgenden Schlüssel / Wert Paare:
$bar enthält nun die folgenden Schlüssel / Wert Paare:
each() wird typischerweise in Verbindung mit list() verwendet, um ein Array durchzugehen; zum Beispiel $_POST:
Beispiel 2.
Durchgehen von $_POST mit each()
echo "Werte, die mit der POST Methode übertragen wurden: br /"; reset ($_POST); while (list ($key, $val) = each ($_POST)) {echo "$key = $val br / \n";}
Nachdem each() ausgeführt wurde, bleibt der Array Cursor beim nächsten Element des Arrays, oder wenn am Ende des Arrays angelangt, bei dem letzten Element.
Sie müssen reset() verwenden, wenn Sie das Array erneut mittels each durchgehen wollen.
Siehe auch key(), list(), current(), reset(), next(), prev() und foreach.
Zurück
Zum Anfang
Nach vorne

Nach oben
