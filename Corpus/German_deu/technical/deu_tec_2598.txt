# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDEdoc
# source:	https://object.pouta.csc.fi/OPUS-KDEdoc/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/KDEdoc.php
# copyright_long:	http://opus.nlpl.eu/KDEdoc.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Das Kpm -Handbuch
Kpm ist ein Dienstprogramm, das Informationen \xFCber Prozesse liefert und sie verwalten kann.
Einf\xFChrung
Das Dienstprogramm Kpm zeigt unter Linux die Prozesse an und erlaubt, deren Parameter zu ver\xE4ndern.
Weiterhin werden genaue Angaben \xFCber die laufenden Prozesse und die Systemressourcen angezeigt (z.B. die Auslastung des Prozessors, des Speichers, der Auslagerungsdatei oder die Gesamtlaufzeit des Systems, etc.).
Mit Kpm k\xF6nnen Sie Prozesse beenden und ihre Priorit\xE4t bei der Zuteilung von Prozessorzeit anpassen.
Der Super-User (root) kann zus\xE4tzlich \xC4nderungen des Prozess-Ablaufplans (scheduling) vornehmen.
Benutzung von Kpm
Kpm Programmstart
Erl\xE4uterungen zu den Anzeigefeldern
Auslastungsanzeige
Die Auslastungsanzeige zeigt die durchschnittliche Systemauslastung grafisch an.
Genaue Zahlen erscheinen, wenn auf das Feld Auslastungsanzeige geklickt wird.
Prozessoranzeige
Speicheranzeige
Die Speicher -Anzeige zeigt den genutzten Speicher an.
Die Anzeige ist unterteilt in verw (gebraucht), Puffe(r) -, zwi (zwischengespeicherter) und frei en Speicher.
Klicken Sie auf Spei, um die Anzeige auf exakte Zahlen (in Megabyte) einschlie\xDFlich der Gesamtspeichermenge umzuschalten.
Auslagerungsspeicheranzeige
Gesamtlaufzeit des Systems
Die l\xE4uft-seit -Anzeige zeigt an, wie lange das System bereits l\xE4uft.
Prozessliste
In der Standardeinstellung zeigt die Prozessliste die Benutzerfelder aller Prozesse an.
Sie kann auch so eingestellt werden, dass sie nur eigene Prozesse, Nicht-Root-Prozesse oder alle laufenden Prozesse anzeigt.
Au\xDFer den Benutzerfeldern k\xF6nnen auch die Programm- oder Speicherfelder angezeigt werden.
Schlie\xDFlich ist es auch m\xF6glich, eine selbst zusammengestellte Felderliste anzeigen zu lassen.
Ein Klick auf einen Spaltenkopf sortiert die Prozessliste nach dieser Spalte.
Ein zweiter Klick auf die gleiche Spalte kehrt die Sortierreihenfolge um.
Benutzerfelder
PID
Prozess-ID.
Jedem Prozess wird eine eigene Prozess-Identifikations-Nummer (PID) zugeordnet.
Diese Nummer ist 1 oder gr\xF6\xDFer.
Wird ein neuer Prozess gestartet, so erh\xE4lt dieser die n\xE4chst h\xF6here, unbenutzte PID -Nummer.
PID -Nummern sind (momentan) "16bit signed" Integer-Werte und haben einen Wert von 0 bis 32767.
Dies als Information f\xFCr technisch Interessierte.
USER
Prozess-Benutzer.
Hierbei handelt es sich um den (wirklichen) Benutzer, der den jeweiligen Prozess gestartet hat.
Falls die tats\xE4chliche Benutzer-ID eines Prozesses sich von der wirklichen Benutzer-ID unterscheidet, wird dies von Kpm durch ein angeh\xE4ngtes * oder + gekennzeichnet.
Der Stern zeigt an, dass der tats\xE4chliche Benutzer der Super-User ist (genaugenommen zeigt er an, dass das Programm setuid root ist).
PRI
L\xE4nge des n\xE4chsten Prozessor-Zeitintervalls.
Dies ist die maximale Zeit, die einem Prozess beim n\xE4chsten Aktivieren zugewiesen werden kann. (oder die maximale Restzeit des laufenden Zeitintervalls, falls der Prozess zur Zeit bearbeitet wird).
Die Zahl entspricht einem Wert innerhalb einer Skala von -20 bis +20, wobei kleinere Zahlen einem l\xE4ngeren Zeitintervall entsprechen.
NICE
Der Prozesspriorit\xE4tswert.
Der nice -Wert bestimmt, wie h\xE4ufig und wie lange ein Prozess laufen darf.
Der Wert selbst liegt zwischen -20 und +20, wobei 0 den Standardwert darstellt.
Niedrigere Zahlen weisen einem Prozess mehr Prozessorzeit zu.
Das Heruntersetzen von nice -Werten ist ausschlie\xDFlich dem Super-User vorbehalten.
SIZE
Virtuelle Gr\xF6\xDFe des Prozesses (KBytes).
Dies ist die Gesamtgr\xF6\xDFe des Prozesses.
Dazu geh\xF6ren der gesamte Prozesscode, die Daten und die gemeinsam genutzten Bibliotheken ("shared libraries") einschlie\xDFlich der Seiten, die ausgelagert sind.
RSS
"resident set size" (Gr\xF6\xDFe in KBytes).
Hierbei handelt es sich um die Gr\xF6\xDFe des Prozessteils (Code, Daten und die gemeinsam genutzte Bibliotheken), der sich tats\xE4chlich im Hauptspeicher befindet.
Dieser Wert ergibt eine gute Absch\xE4tzung der Hauptspeicher-Menge, die ein Prozess verwendet.
SHARE
Gemeinsam genutzter Speicher (Gr\xF6\xDFe in KByte).
Dieser Wert gibt die Speichermenge an, die sich ein Prozess mit anderen Prozessen teilt oder teilen k\xF6nnte.
Dabei sagt dies nicht aus, dass von dieser Speichermenge auch tats\xE4chlich irgendein Teil von anderen Prozessen verwendet wird.
Der Wert gibt lediglich an, wieviel Speicher mit anderen Prozessen geteilt werden kann.
STAT
Zustand eines Prozesses.
Ein Prozess befindet sich immer in einem der folgenden Zust\xE4nde:
R
(running):
Der Prozess l\xE4uft auf dem Prozessor oder ist bereit f\xFCr die Ausf\xFChrung.
S
(sleeping):
Der Prozess wartet auf ein Ereignis (etwa auf eine Ein-/Ausgabe oder auf den Zeitgeber).
D
(uninterruptable sleep):
Der Prozess wartet auf ein Ereignis, ohne dass er hierbei unterbrochen werden kann (z.B. der Wartezustand eines Ger\xE4tetreibers).
T
(stopped):
Der Prozess wurde beendet oder wird durch einen anderen Prozess verfolgt ("traced").
Z
(zombie):
Der Prozess wurde beendet, ohne dass der \xFCbergeordnete "parent"-Prozess hiervon bislang Kenntnis genommen hat.
W
Der Prozess wurde komplett auf die Festplatte ausgelagert (er besitzt keine im Speicher befindlichen Seiten mehr).
Dies erfolgt auch bei Kernel-Prozessen, z.B. kswapd.
%CPU
Prozentuale Prozessorlast seit der letzten Aktualisierung.
Dieser Wert gibt an, wieviel Prozessorzeit (in Prozent) ein Prozess seit der letzten Aktualisierung der Prozessliste verwendet hat.
%MEM
Prozentsatz des benutzten Speichers.
Dieser Wert gibt an, welcher prozentuale Anteil des gesamten Hauptspeichers von einem Prozess verwendet wird (ausgehend vom Wert unter rss.
Da gemeinsam genutzte Bibliotheken ebenfalls zu der Berechnung hinzugez\xE4hlt werden, handelt es sich m\xF6glicherweise um einen zu hohen Wert.
TIME
Verwendete Gesamtprozessorzeit.
Dies gibt an, wieviel Prozessorzeit ein Prozess seit seinem Start gebraucht hat.
CMDLINE
Befehlszeile, die den Prozess aufgerufen hat.
Dies ist die Befehlszeile inklusive eventueller Argumente, mit der ein Prozess erzeugt wurde.
Ausgelagerte Prozesse werden mitunter nur durch den in Klammern gesetzten Befehlsnamen aufgef\xFChrt (dies gilt auch f\xFCr Kernel-Prozesse).
Programmfelder
PID
Prozess-ID.
Jedem Prozess wird eine eigene Prozess-ID-Nummer (PID) zugeordnet.
Diese Nummer ist 1 oder gr\xF6\xDFer.
Wird ein neuer Prozess gestartet, so erh\xE4lt dieser die n\xE4chst h\xF6here, unbenutzte PID -Nummer.
PID -Nummern sind (momentan) "16bit signed" Integer-Werte und haben einen Wert von 0 bis 32767.
Dies als Information f\xFCr technisch Interessierte.
PPID
"Parent"-Prozess ID.
Jeder Prozess wird einem \xFCbergeordneten Prozess, dem Eltern- oder "Parent"-Prozess zugeordnet.
Die einzige Ausnahme ist hierbei der allererste Prozess init mit der PID-Nummer 1.
Dieser Prozess stellt quasi die Wurzel des Prozessbaumes dar und besitzt daher keinen "Parent"-Prozess.
PGID
Prozess-Gruppen ID.
Jeder Prozess geh\xF6rt zu einer Gruppe von Prozessen.
Diese Gruppen werden f\xFCr die Verteilung von Prozesssignalen verwendet.
Sie werden ebenfalls von Terminals eingesetzt, um \xFCber ihre Eingabeaufforderungen zu entscheiden.
Prozesse, die derselben Prozessgruppe angeh\xF6ren, dem auch das Terminal zugeordnet ist, befinden sich im Vordergrund und besitzen somit das Recht, Lesezugriffe zu t\xE4tigen.
Prozesse, die einer anderen Gruppe angeh\xF6ren, werden blockiert und erzeugen ein Signal, falls sie dennoch versuchen, einen Lesezugriff zu unternehmen.
SID
Sitzungs-ID.
Sitzungs-IDs werden haupts\xE4chlich eingesetzt, um festzulegen, was bei einem Absturz des Terminals geschehen ist.
TTY
Verwaltendes Terminal( tty).
Das verwaltende Terminal ist \xFCblicherweise das Ger\xE4t (serielle Schnittstelle, pty, etc..), von dem aus Prozesse gestartet werden.
Dieses Terminal wird gleichzeitig f\xFCr Ein- und Ausgaben verwendet.
Kpm durchsucht das /dev -Verzeichnis, um den Namen des Terminals herauszufinden.
Es sind jedoch nicht alle Prozesse einem verwaltenden Terminal zugeordnet.
Daher kann diese Suche erfolglos verlaufen.
Um Platz zu sparen, werden nur die letzten beiden Zeichen des tty-Namens angezeigt.
Das Terminal /dev/ttyp6 wird beispielsweise als p6 angezeigt.
TPGID
Prozess-Gruppen ID des tty -Prozesses.
Jedes benutzte Terminal tty ist einem Prozess zugeordnet.
Die Prozess-Gruppen ID dieses Prozesses wird unter TPGID angezeigt.
STAT
Zustand eines Prozesses.
Ein Prozess befindet sich immer in einem der folgenden Zust\xE4nde:
R
(running):
Der Prozess l\xE4uft auf dem Prozessor oder ist bereit f\xFCr die Ausf\xFChrung.
S
(sleeping):
Der Prozess wartet auf ein Ereignis (etwa auf eine Ein-/Ausgabe oder auf den Zeitgeber).
D
(uninterruptable sleep):
Der Prozess wartet auf ein Ereignis, ohne dass er hierbei unterbrochen werden kann (z.B. der Wartezustand eines Ger\xE4tetreibers).
T
(stopped):
Der Prozess wurde beendet oder wird durch einen anderen Prozess verfolgt ("traced").
Z
(zombie):
Der Prozess wurde beendet, ohne dass der \xFCbergeordnete "parent"-Prozess hiervon bislang Kenntnis genommen hat.
W
Der Prozess wurde komplett auf die Festplatte ausgelagert (er besitzt keine im Speicher befindlichen Seiten mehr).
Dies erfolgt auch bei Kernel-Prozessen, z.B. kswapd.
UID
Numerische Benutzer-ID.
Dies ist die ID des (wirklichen) Benutzers, dem der Prozess geh\xF6rt.
TIME
Verwendete Gesamtprozessorzeit.
Dies gibt an, wieviel Prozessorzeit ein Prozess seit seinem Start gebraucht hat.
CMDLINE
Befehlszeile, die den Prozess aufgerufen hat.
Dies ist die Befehlszeile inklusive eventueller Argumente, mit der ein Prozess erzeugt wurde.
Ausgelagerte Prozesse werden mitunter nur durch den in Klammern gesetzten Befehlsnamen aufgef\xFChrt (dies gilt auch f\xFCr Kernel-Prozesse).
Speicherfelder
PID
Prozess- ID.
Jedem Prozess wird eine eigene Prozess-Identifikations-Nummer (PID) zugeordnet.
Diese Nummer ist 1 oder gr\xF6\xDFer.
Wird ein neuer Prozess gestartet, so erh\xE4lt dieser die n\xE4chst h\xF6here, unbenutzte PID -Nummer.
PID -Nummern sind (momentan) 16bit signed Integer-Werte und haben einen Wert von 0 bis 32767.
Dies als Information f\xFCr technisch Interessierte.
TTY
Verwaltendes Terminal (tty).
Das aktive Terminal (tty) ist \xFCblicherweise das Ger\xE4t (seriell Schnittstelle, pty, etc..), von dem aus Prozesse gestartet werden.
Dieses Terminal wird gleichzeitig f\xFCr Ein- und Ausgaben verwendet.
Kpm durchsucht das /dev Verzeichnis, um den Namen des Terminals herauszufinden.
Es sind jedoch nicht alle Prozesse einem aktiven Terminal zugeordnet.
Daher kann diese Suche erfolglos verlaufen.
Um Platz zu sparen, werden nur die letzten beiden Zeichen des tty -Namens angezeigt.
Das Terminal /dev/ttyp6 wird beispielsweise als p6 angezeigt.
MAJFLT
Anzahl der aufgetretenen schwerwiegenden Fehler (major faults).
Ein Seitenfehler (page fault) tritt auf, wenn ein Prozess versucht, entweder lesend oder schreibend auf eine Speicherseite zuzugreifen, die sich nicht im Hauptspeicher befindet.
Es handelt sich um einen schwerwiegenden Seitenfehler, wenn ein Zugriff auf die Festplatte ben\xF6tigt wird, z.B. f\xFCr Auslagerungen oder das Einlesen von Speicherseiten.
MINFLT
Anzahl der aufgetretenen leichten Fehler (minor faults).
Ein Seitenfehler (page fault) tritt auf, wenn ein Prozess versucht, entweder lesend oder schreibend auf eine Speicherseite zuzugreifen, die sich nicht im Hauptspeicher befindet oder versucht, auf eine Seite zu schreiben, auf die kein Schreibzugriff m\xF6glich ist.
Es handelt sich um einen leichten Fehler, wenn hierbei kein Zugriff auf die Festplatte erfolgen muss, z.B. ein Schreibzugriff auf eine mit copy-on-write gemeinsam benutzte Seite (shared page).
TRS
Text resident set size (Gr\xF6\xDFe in KByte).
Hierbei handelt es sich um die Gr\xF6\xDFe des Prozesstextes (der ausf\xFChrbare Programmcode), der sich momentan im Hauptspeicher befindet.
DRS
Data resident set size (Gr\xF6\xDFe in KByte).
Hierbei handelt es sich um die Gr\xF6\xDFe der Prozessdaten (nicht ausf\xFChrbarer Programmcode), der sich momentan im Hauptspeicher befindet.
SIZE
Virtuelle Gr\xF6\xDFe des Prozesses (KBytes).
Dies ist die Gesamtgr\xF6\xDFe des Prozesses.
Dazu geh\xF6ren der gesamte Prozesscode, die Daten und die gemeinsam genutzten Bibliotheken ("shared libraries") einschlie\xDFlich der Seiten, die ausgelagert sind.
SWAP
Umfang der Auslagerung (in KByte).
Dies ist die Differenz zwischen SIZE und RSS.
Mit anderen Worten sagt dieser Wert, in welchem Umfang Teile des Prozesses auf die Festplatte ausgelagert wurden.
RSS
"resident set size" (Gr\xF6\xDFe in KBytes).
Hierbei handelt es sich um die Gr\xF6\xDFe des Prozessteils (Code, Daten und die gemeinsam genutzte Bibliotheken), der sich tats\xE4chlich im Hauptspeicher befindet.
Dieser Wert ergibt eine gute Absch\xE4tzung der Hauptspeicher-Menge, die ein Prozess verwendet.
SHARE
Gemeinsam genutzter Speicher (Gr\xF6\xDFe in KByte).
Dieser Wert gibt die Speichermenge an, die sich ein Prozess mit anderen Prozessen teilt oder teilen k\xF6nnte.
Dabei sagt dies nicht aus, dass von dieser Speichermenge auch tats\xE4chlich irgendein Teil von anderen Prozessen verwendet wird.
Der Wert gibt lediglich an, wieviel Speicher mit anderen Prozessen geteilt werden kann.
DT
Anzahl an dirty pages.
Hierbei ist die Anzahl an Hauptspeicher-Seiten (nicht die Anzahl Bytes!) gemeint, die seit dem letzten Zugriff auf die Festplatte ver\xE4ndert wurden.
Dirty pages m\xFCssen zuerst auf die Festplatte geschrieben werden, bevor sie wieder f\xFCr andere Dinge freigegeben werden k\xF6nnen.
CMDLINE
Befehlszeile, die den Prozess aufgerufen hat.
Dies ist die Befehlszeile inklusive eventueller Argumente, mit der ein Prozess erzeugt wurde.
Ausgelagerte Prozesse werden mitunter nur durch den in Klammern gesetzten Befehlsnamen aufgef\xFChrt (dies gilt auch f\xFCr Kernel-Prozesse).
Andere Felder
PLCY
Prozess-Ablaufplan (Scheduling policy).
FIFO (F) und Round-Robin (R) sind Echtzeit-Ablaufpl\xE4ne; OTHER (O) ist der bei UNIX \xFCbliche Ablaufplan zur Verteilung der Prozessorzeit.
F - und R -Prozesse haben eine Echtzeitpriorit\xE4t zwischen 1 und 99.
Nachdem Round-Robin Prozesse f\xFCr die Dauer einer Zeitscheibe (time-slice) gelaufen sind, werden sie auf die letzte Position innerhalb der Warteschlange ihres Priorit\xE4tslevels gesetzt.
FIFO Prozesse laufen solange, bis sie den Prozessor freigeben (durch das Versetzen in den Ruhezustand oder durch Blockierung) oder durch einen Prozess mit einem h\xF6heren Priorit\xE4tslevel an der weiteren Bearbeitung gehindert werden.
Nur der Super-User (root) darf den Ablaufplan (scheduling policy) ver\xE4ndern.
RPRI
Echtzeit-Priorit\xE4tsstufen.
Echtzeit-Prozesse (FIFO und Round-Robin) werden Priorit\xE4tswerte zwischen 1 und 99 zugeordnet.
Ein Prozess mit einer h\xF6heren Priorit\xE4tsstufe als ein anderer wird bei der Zuteilung der Prozessorzeit bevorzugt.
Normale Prozesse, die Prozessorzeit mit anderen Prozessen teilen (policy -Wert O) besitzen alle den Priorit\xE4tslevel 0.
Nur der Super-User (root) darf die Echtzeit-Priorit\xE4tsstufen \xE4ndern.
FLAGS
Prozess-Flags (hexadezimal).
Diese enthalten zus\xE4tzliche Informationen \xFCber den Zustand des Prozesses.
Bitte sehen Sie wegen Details im Programmcode des Linux -Kernels nach.
WCHAN
Art des Schlafens eines Prozesses.
Wenn ein Prozess auf ein Ereignis wartet, so wird die Art des Wartens hier angezeigt (Um den Namen abzuk\xFCrzen sind die Pr\xE4fixe "do_" oder "sys_" entfernt).
%WCPU
Durchschnittliche, prozentuale Prozessorlast.
Hierbei handelt es sich um den \xFCber die letzten 30 Sekunden gemittelten Prozentsatz der Prozessorzeit, die ein Prozess verwendet hat (exponentiell abnehmender Durchschnitt).
START
Anfangszeit des Prozesses.
Dieser Wert gibt an, wann der Prozess erzeugt wurde.
COMM
Befehl, der den Prozess aufgerufen hat.
In diesem Feld wird der Befehl (Dateiname) angezeigt, der den Prozess erzeugt hat.
Zu lange Namen werden abgeschnitten.
\xDCberwachen der Ressourcen
In der Standardeinstellung zeigt Kpm die Ressourcennutzung, einschlie\xDFlich durchschnittlicher Auslastung, Prozessornutzung, Speichernutzung, Nutzung der Auslagerungsdatei und Gesamtlaufzeit des Systems.
Diese Daten werden in mehreren Feldern oberhalb der Prozessliste im Hauptfenster von Kpm angezeigt.
Prozesse \xFCberwachen
Kpm zeigt zu jedem Prozess verschiedene Informationen an.
Standardm\xE4\xDFig handelt es sich um die wichtigsten Prozessfelder.
Im Men\xFC Ansicht kann die Anzeige auch umgeschaltet werden auf eine Feldmenge, die f\xFCr die Ausf\xFChrungsplanung oder die Speicherbenutzung wichtig ist oder auf eine selbst zusammengestellte Feldmenge.
Eine genauere Beschreibung findet sich unter Prozessfelder.
Prozesse verwalten
Kpm beherrscht drei Arten der Prozessverwaltung:
Priorit\xE4tswert setzen...
Durch das Setzen des Priorit\xE4tswertes kann der Besitzer eines Prozesses dessen Priorit\xE4t \xE4ndern.
Eine genauere Beschreibung findet sich hier.
Der Super-User kann zus\xE4tzlich die Priorit\xE4t aller Prozesse herauf- und heruntersetzen.
Ablaufplan \xE4ndern
Der Super-User kann wie unter Ablaufplan \xE4ndern beschrieben, den Ablaufplan von Prozessen \xE4ndern.
Signale
Sie k\xF6nnen eines der unter POSIX Signale beschriebenen Signale an einen Ihrer Prozesse senden.
Der Super-User kann zus\xE4tzlich jedes dieser Signale zu jedem Prozess senden.
Sie senden ein Signal, indem Sie es aus dem Men\xFC Signal ausw\xE4hlen, wie unter Men\xFC Signal beschrieben.
Befehlsreferenz
Das Kpm Hauptfenster
Das Men\xFC Datei
Minimiert das Hauptfenster.
In diesem Modus ben\xF6tigt Kpm deutlich weniger Prozessorzeit da die Prozessliste nicht aktualisiert werden muss.
Falls Sie KWin als Windowmanager verwenden und die Option "An Kontrolleiste andocken" gew\xE4hlt haben, sehen Sie ein kleines Symbol in der Kicker, das die durchschnittliche Systemauslastung darstellt.
Bei anderen Windowmanagern wie fvwm zeigt das Symbol von Kpm selbst die Systemauslastung an.
Diese Darstellung h\xE4ngt jedoch davon ab, wie der Windowmanager konfiguriert wurde.
Beendet Kpm (das Schlie\xDFen des Hauptfensters f\xFChrt ebenfalls zum Beenden von Kpm).
Das Men\xFC Ansicht
Dieser Men\xFCpunkt f\xFChrt zu einer sofortigen Aktualisierung der Proze\xDFliste.
Dies ist besonders hilfreich, wenn Sie lange Zeitintervalle zwischen den automatischen Aktualisierungen ausgew\xE4hlt haben.
Eine sofortige Aktualisierung wird ebenfalls durch Dr\xFCcken des Knopfes Prozessliste auffrischen in der Werkzeugleiste oder durch das Dr\xFCcken der Leertaste erreicht.
Ansicht Alle Prozesse
Zeigt alle Prozesse an.
Ansicht Eigene Prozesse
Zeigt die vom aktuellen Benutzer gestarteten Prozesse an.
Das schlie\xDFt die Prozesse ein, die unter einer anderen Benutzerkennung ausgef\xFChrt werden (z.B. setuid root -Programme, die vom aktuellen Benutzer aufgerufen wurden).
Ansicht Nicht-Root Prozesse
Zeigt alle Prozesse au\xDFer denen des Super-Users an.
Ansicht Laufende Prozesse
Zeigt nur laufende Prozesse an (laufende oder solche, die sich in der Warteschlange f\xFCr laufende Prozesse befinden).
Ansicht Benutzerfelder
Diese Prozessliste zeigt die wichtigsten Prozessfelder an, wie sie auch vom Programm top angezeigt werden.
Ansicht Programmfelder
Zeigt die wichtigsten Felder f\xFCr die Prozessverwaltung("Job-Control ") an.
Ansicht Speicherfelder
Zeigt Informationen \xFCber die Auslastung des Speichers, aufgetretene Seitenfehler (page faults) etc. an.
Ansicht Felder ausw\xE4hlen...
Sie k\xF6nnen hier eine eigene Auswahl von Feldern zur Anzeige festlegen.
Das Men\xFC Prozess
Hiermit kann die Priorit\xE4t eines oder mehrerer ausgew\xE4hlter Prozesse ver\xE4ndert werden.
Unter Linux wird jedem Prozess ein Priorit\xE4tswert (der "nice"-Wert) von -20 (h\xF6chste Priorit\xE4t) bis +20 (geringste Priorit\xE4t) zugeordnet.
Somit f\xFChrt ein gr\xF6\xDFerer Priorit\xE4tslevel dazu, dass ein Prozess weniger Prozessorzeit zugeteilt bekommt.
Sie d\xFCrfen jedoch nur als Super-User die Priorit\xE4tswerte verringern, um die Priorit\xE4t eines Prozesses zu erh\xF6hen.
Das bedeutet, dass Sie als normaler Benutzer die Prozesspriorit\xE4t nicht erh\xF6hen d\xFCrfen - selbst, wenn Sie sie zuvor gesenkt hatten Nat\xFCrlich haben Sie nur die M\xF6glichkeit, die Priorit\xE4t Ihrer eigenen Prozesse zu ver\xE4ndern.
Als Super-User d\xFCrfen Sie die Priorit\xE4t jedes Prozesses modifizieren und auch die Priorit\xE4t eines Prozesses heraufsetzen.
Diese M\xF6glichkeit besitzt nur der Super-User.
Mit Hilfe dieses Men\xFCpunktes kann der Super-User den Ablaufplan (Scheduling) der ausgew\xE4hlten Prozesse ver\xE4ndern.
Dazu werden die POSIX 1b Real-Time-Erweiterungen eingesetzt, die in Linux -Kerneln ab Version 2.0.x vorhanden sind.
Normale Prozesse werden auf den Wert SCHED_OTHER gesetzt und erhalten die statische Priorit\xE4t 0; Soft-Real-Time Prozesse haben den Wert SCHED_FIFO oder SCHED_RR und eine statische Priorit\xE4t zwischen 1 und 99.
Zeigt eine Liste der TCP und UDP Sockets an, die von den ausgew\xE4hlten Prozessen verwendet werden.
Das Men\xFC Signal
\xDCber die einzelnen Men\xFCpunkte des Signal-Men\xFCs k\xF6nnen Sie Signale an alle ausgew\xE4hlten Prozesse senden.
Seien Sie jedoch vorsichtig hierbei - besonders, wenn Sie mehrere Prozesse ausgew\xE4hlt haben.
Eine Erkl\xE4rung der Standard-POSIX-Signale finden sich hier.
Sendet das Signal SIGTERM an die ausgew\xE4hlten Prozesse.
Sendet das Signal SIGHUP an die ausgew\xE4hlten Prozesse.
Signal Unterbrechen
Sendet das Signal SIGINT an die ausgew\xE4hlten Prozesse.
Sendet das Signal SIGKILL zu den ausgew\xE4hlten Prozessen.
Signal Andere
Zeigt eine Liste weiterer Signale, die Sie an die ausgew\xE4hlten Prozesse senden k\xF6nnen.
Das Einstellungenmen\xFC
Einstellungen Werkzeugleiste anzeigen
Blendet die Werkzeugleiste ein und aus.
Einstellungen Befehlspfad anzeigen
Blendet den Befehlspfad im CMDLINE -Feld der Prozessliste ein und aus.
Einstellungen Ressourcen-Informationen anzeigen
Blendet die Ressourcenanzeigen ein und aus.
Einstellungen Einstellungen speichern
Speichert die aktuellen Einstellungen.
Diese werden jedesmal beim Start von Kpm angewandt, bis sie von neuen Einstellungen \xFCberschrieben werden.
Einstellungen Pers\xF6nliche Einstellungen...
\xD6ffnet einen Dialog, der die \xC4nderung der Einstellungen von Kpm erlaubt.
Einstellungen Auffrischrate...
\xD6ffnet einen Dialog zur Einstellung der Auffrischrate.
Das Men\xFC Hilfe
F1 Hilfe Inhalt...
Startet das Hilfe-System von KDE mit der Kpm -Hilfe (diesem Dokument).
\xC4ndert den Mauscursor zu einer Kombination von Zeiger und Fragezeichen.
Das Klicken auf ein Element innerhalb von Kpm \xF6ffnet ein Hilfefenster, das die Funktion des Elementes beschreibt (wenn es denn Hilfe f\xFCr das bestimmte Element gibt).
Hilfe Berichten Sie Probleme oder W\xFCnsche...
\xD6ffnet den Dialog f\xFCr Problemberichte, in dem man Fehler und W\xFCnsche berichten kann.
Zeigt Versions- und Autoreninformationen an.
Hilfe \xDCber KDE
Zeigt Versionsinformation und Grunds\xE4tzliches zu KDE an.
Signale
POSIX-Signale
SIGHUP
Entweder wurde durch das verwaltende Terminal ein Absturz erkannt oder der aktive Prozess wurde unvorhergesehenerweise beendet.
SIGINT
"Unterbrechung", durch die Tastatur aufgerufen.
SIGQUIT
"Beenden", durch die Tastatur aufgerufen.
SIGILL
Unberechtigt aufgerufener Prozessorbefehl.
SIGABRT
"Abbrechen"-Signal von" abort(3) ".
SIGFPE
Gleitkomma-Fehler.
SIGKILL
"Kill"-Signal.
SIGSEG
Ung\xFCltige Speicherreferenz.
SIGPIPE
Unterbrechung des Signalflusses: "Broken pipe: write to pipe with no readers".
SIGALRM
Zeitgebersignal des Alarms (1).
SIGTERM
Terminationssignal.
SIGUSR1
Benutzer-definiertes Signal 1.
SIGUSR2
Benutzer-definiertes Signal 2.
SIGCHLD
Untergeordneter "Child"-Prozess wurde angehalten oder beendet.
SIGCONT
Fortsetzen, falls angehalten.
SIGSTOP
Prozess anhalten.
SIGTSTP
Aufforderung zum Anhalten wurde am Terminal tty eingegeben.
SIGTTIN
Eingabe f\xFCr einen Hintergrundprozess vom Terminal tty.
SIGTTOU
Ausgabe f\xFCr einen Hintergrundprozess vom Terminal tty.
Andere Signale
Die folgenden Signale sind weder durch POSIX definiert noch bislang durch Kpm verf\xFCgbar:
SIGTRAP
"Trace/breakpoint trap" - Die Falle zum Aufsp\xFCren oder f\xFCr Unterbrechungen.
SIGIOT
"IOT trap".
Diese Falle ist ein Synonym f\xFCr SIGABRT.
SIGBUS
Bus-Fehler.
SIGSYS
Ung\xFCltiges Argument wurde an die Routine (SVID) \xFCbergeben.
SIGSTKFLT
Stackfehler des Koprozessors.
SIGURG
Dringende Bedingung/Situation am Socket (4.2 BSD).
SIGIO
I/O ist jetzt m\xF6glich (4.2 BSD).
SIGPOLL
Synonym f\xFCr SIGIO (System V).
SIGCLD
Synonym f\xFCr SIGCHLD.
SIGXCPU
Zeitbegrenzung des Prozessors \xFCberschritten (4.2 BSD).
SIGXFSZ
Gr\xF6\xDFenbegrenzung f\xFCr die Datei \xFCberschritten (4.2 BSD).
SIGVTALRM
Virtueller Wecker (4.2 BSD).
SIGPROF
Profil-Wecker.
SIGPWR
Fehler in der Stromversorgung (System V).
SIGINFO
Synonym f\xFCr SIGPWR.
SIGLOST
Datei-Sperre verloren.
SIGWINCH
Signal f\xFCr die Ver\xE4nderung der Fenstergr\xF6\xDFe (4.3 BSD, Sun).
SIGUNUSED
Nicht verwendetes Signal.
Fragen und Antworten
Warum st\xFCrzt Kpm gelegentlich mit einem Segmentverletzungsfehler ab?
Dies geschieht, wenn mehr als ein Prozess gew\xE4hlt wurde und die Tabelle aktualisiert wird.
Der Grund f\xFCr diesen Absturz ist bislang nicht bekannt.
Warum ben\xF6tigt Kpm so viel Prozessorzeit?
Wenn Sie Kpm so einstellen, dass die Prozessliste h\xE4ufig aktualisiert wird, so kann das Programm die Belastung des Prozessors erheblich erh\xF6hen.
Beispielsweise wird auf einem Rechner mit einem AMD K6PR200-Prozessor dieser zu ca.
5 Prozent ausgelastet, wenn die Zeitspanne zwischen den Aktualisierungen auf eine Sekunde gestellt wird.
Die tats\xE4chliche Belastung h\xE4ngt jedoch stark von der Anzahl aller Prozesse ab (nicht nur der angezeigten) und kann mitunter deutlich h\xF6her ausfallen.
Warum zeigt die %Prozessoranzeige falsche Daten?
Der "%CPU"-Wert ist bei sehr kurzen Aktualisierungsintervallen nicht pr\xE4zise, da der Zeitgeber zu ungenau ist.
Warum zeigt das WCHAN -Feld falsche Werte?
Das WCHAN -Feld ist fehlerhaft, falls ein ruhender Prozess sich an einer Stelle ausserhalb der in der Datei System.map definierten befindet.
In diesen F\xE4llen wird der letzte Eintrag in der Datei System.map angezeigt (meistens so etwas wie _end).
Warum erscheinen geklonte PIDs nicht in Kpm?
Kpm kann nicht mehr als einen Prozess mit der gleichen PID verwalten.
Dieser Zustand tritt ein, wenn CLONE_PID mit dem Systemaufruf clone() verwendet wird.
Mitwirkende und Lizenz
Deutsche \xDCbersetzung der Dokumentation Frank Sch\xFCtte F.Schuette@t-online.de.
Installation
Woher Sie Kpm erhalten
Kpm ist Teil des KDE -Projekts http://www.kde.org /.
Kpm k\xF6nnen Sie im kdeutils-Paket finden auf ftp://ftp.kde.org/pub/kde /, der Haupt- FTP -Site des KDE -Projekts.
Voraussetzungen f\xFCr Kpm
Folgende Voraussetzungen sind n\xF6tig, um Kpm zu kompilieren:
Das Betriebssystem Linux mit Kernel Version 2.0 oder h\xF6her.
Kpm basiert auf dem proc Dateisystem von Linux.
Leider ist dieses System nicht auf andere Betriebssysteme \xFCbertragbar, da jedes UNIX -System einen eigenen Weg geht, um Informationen \xFCber Prozesse zu sammeln.
Kompilierung und Installation
Um Kpm auf Ihrem System zu kompilieren und zu installieren, schreiben Sie das Folgende in das Hauptverzeichnis in der Kpm -Distribution:
Da Kpm autoconf und automake benutzt, sollte es dabei keine Schwierigkeiten geben.
Sollten dennoch Probleme auftauchen, wenden Sie sich bitte an die KDE -Mailinglisten.