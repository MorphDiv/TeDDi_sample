# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

Gibt einen an Hand des Formatierungs-Strings format gebildeten String zurück.
Der Formatierungs-String wird aus keiner oder mehreren Anweisungen gebildet:
Gewöhnliche Zeichen (ausser%), die direkt in das Ergebnis übertragen werden und Umsetzungs-Anweisungen.
Jede dieser Anweisungen holt sich als Resultat ihre eigenen Parameter.
Diese Anweisungen gelten sowohl für die sprintf() - als auch für die printf() -Funktion.
Jede der Formatierugs-Anweisungen besteht aus einem Prozent-Zeichen (%), gefolgt von einem oder mehrereren der folgenden Elemente:
Einem optionalen Füll-Zeichen, das den String bis rechts auffüllt.
Dies kann ein Leerzeichen oder eine 0 (das Null-Zeichen) sein.
Standardmäßig wird mit dem Leerzeichen gefüllt.
Andere Füllzeichen können durch Voranstellen eines einfachen Anführungszeichens (') definiert werden.
Beachten Sie die nachstehenden Beispiele.
Einer optionalen Angabe der Ausrichtung, ob die Ausgabe nach links oder nach rechts (default) ausgerichtet werden soll.
Standardmäßig ist die Ausrichtung rechtsbündig.
Um den Text linksbündig auszurichten müssen Sie das Zeichen - angeben.
Einer optionalen Zahl für die Längen-Angabe, welche die mindestens zurückzugebende Anzahl Zeichen spezifiziert.
Einem optionalen Wert für die Anzahl der auszugebenden Dezimalstellen für Fließkommazahlen.
Dieser Wert hat nur Einfluss auf Werte vom Typ float (eine weitere hilfreiche Funktion zur Formatierung von Zahlen ist number_format()).
Einer Typ-Angabe welche den Typ enthält, als der das Argument angesehen werden soll.
Mögliche Angaben sind:
% - ein Prozent-Zeichen ("%").
Es ist kein Argument erforderlich.
b - das Argument wird als Integer angesehen und als Binär-Wert ausgegeben.
c - das Argument wird als Integer angesehen und das entsprechende ASCII-Zeichen wird ausgegeben.
d - das Argument wird als Integer angesehen und ein Dezimalwert (signed) ausgegeben.
u - das Argument wird als Integer angesehen und ein Dezimalwert (unsigned) ausgegeben.
f - das Argument wird als float angesehen und eine Fließkomma-Zahl ausgegeben.
o - das Argument wird als Integer angesehen und und als Oktalzahl ausgegeben.
s - das Argument wird als String angesehen und auch als solcher ausgegeben.
x - das Argument wird als Integer angesehen und als Hexadezimal-Wert ausgegeben (mit Kleinbuchstaben).
X - das Argument wird als Integer angesehen und als Hexadezimal-Wert ausgegeben (mit Großbuchstaben).
Seit PHP 4.0.6 unterstützt der Formatstring auch Argumente zu numerieren / tauschen.
Hier ein Beispiel:
Beispiel 1.
Argumente tauschen

Beispiel 2.
Argumente tauschen

Beispiel 3.
Argumente tauschen

Beispiel 4.
Argumente tauschen


Siehe auch: printf(), sscanf(), fscanf() und number_format().
Beispiel 5. sprintf():
Null-gefüllte Integer-Werte
$isodatum = sprintf ("%04d-%02d-%02d", $jahr, $monat, $tag);
Beispiel 6. sprintf():
Währung formatieren
$money1 = 68.75; $money2 = 54.35; $money = $money1 + $money2; / / echo $money wird ausgeben "123.1"; $formatted = sprintf("%01.2f", $money); / / echo $formatted wird ausgeben "123.10 "
Zurück
Zum Anfang
Nach vorne

Nach oben
