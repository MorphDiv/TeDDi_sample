# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	2014
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	GNOME
# source:	https://object.pouta.csc.fi/OPUS-GNOME/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/GNOME.php
# copyright_long:	http://opus.nlpl.eu/GNOME.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Bildschirmfoto erstellt
Bildschirmfoto erstellt
Bildschirmfoto erstellt
Bildschirmfoto erstellt
Bildschirmfoto erstellt
Bildschirmfoto erstellt
Handbuch für das Genius Mathematikwerkzeug.
Genius-Handbuch
1997-2011
Jiří (George) Lebl
2004
Kai Willadsen
Das vorliegende Dokument kann gemäß den Bedingungen der GNU Free Documentation License (GFDL), Version 1.1 oder jeder späteren, von der Free Software Foundation veröffentlichten Version ohne unveränderbare Abschnitte sowie ohne Texte auf dem vorderen und hinteren Buchdeckel kopiert, verteilt und/oder modifiziert werden. Eine Kopie der GFDL finden Sie unter diesem
Dieses Handbuch ist Teil einer Sammlung von GNOME-Handbüchern, die unter der GFDL veröffentlicht werden. Wenn Sie dieses Handbuch getrennt von der Sammlung weiterverbreiten möchten, können Sie das tun, indem Sie eine Kopie der Lizenz zum Handbuch hinzufügen, wie es in Abschnitt 6 der Lizenz beschrieben ist.
Viele der Namen, die von Unternehmen verwendet werden, um ihre Produkte und Dienstleistungen von anderen zu unterscheiden, sind eingetragene Warenzeichen. An den Stellen, an denen diese Namen in einer GNOME-Dokumentation erscheinen, werden die Namen in Großbuchstaben oder mit einem großen Anfangsbuchstaben geschrieben, wenn das GNOME-Dokumentationsprojekt auf diese Warenzeichen hingewiesen wird.
DIESES DOKUMENT WIRD »WIE VORLIEGEND« GELIEFERT, OHNE GARANTIEN IRGENDEINER ART, SOWOHL AUSDRÜCKLICH GENANNTE ALS AUCH ANGEDEUTETE. DIES BEZIEHT SICH AUCH OHNE EINSCHRÄNKUNG AUF GARANTIEN, DASS DIESES DOKUMENT ODER VERÄNDERTE FASSUNGEN DIESES DOKUMENTS FREI VON HANDELSDEFEKTEN, FÜR EINEN BESTIMMTEN ZWECK GEEIGNET IST ODER DASS ES KEINE RECHTE DRITTER VERLETZT. DAS VOLLE RISIKO WAS QUALITÄT, GENAUIGKEIT UND LEISTUNG DES DOKUMENTS ODER VERÄNDERTE FASSUNGEN DES DOKUMENTS LIEGT BEI IHNEN. SOLLTE EIN DOKUMENT ODER EINE VERÄNDERTE FASSUNG DAVON FEHLER IRGENDEINER ART BEINHALTEN, TRAGEN SIE (NICHT DER URSPRUNGSAUTOR, DER AUTOR ODER EIN MITWIRKENDER) DIE KOSTEN FÜR NOTWENDIGE DIENSTLEISTUNGEN, REPARATUREN ODER FEHLERKORREKTUREN. DIESER HAFTUNGSAUSSCHLUSS IST EIN ESSENZIELLER TEIL DIESER LIZENZ. DIE VERWENDUNG EINES DOKUMENTS ODER EINER VERÄNDERTEN VERSION DES DOKUMENTS IST NICHT GESTATTET AUßER UNTER BEACHTUNG DIESES HAFTUNGSAUSSCHLUSSES UND
UNTER KEINEN UMSTÄNDEN UND AUF BASIS KEINER RECHTSGRUNDLAGE, EGAL OB DURCH UNERLAUBTEN HANDLUNGEN (EINSCHLIEßLICH FAHRLÄSSIGKEIT), VERTRAG ODER ANDERWEITIG KANN DER AUTOR, URSPRUNGSAUTOR, EIN MITWIRKENDER ODER EIN VERTRIEBSPARTNER DIESES DOKUMENTS ODER EINER VERÄNDERTEN FASSUNG DES DOKUMENTS ODER EIN ZULIEFERER EINER DIESER PARTEIEN, HAFTBAR GEMACHT WERDEN FÜR DIREKTE, INDIREKTE, SPEZIELLE, VERSEHENTLICHE ODER FOLGESCHÄDEN JEGLICHER ART, EINSCHLIEßLICH UND OHNE EINSCHRÄNKUNGEN SCHÄDEN DURCH VERLUST VON KULANZ, ARBEITSAUSFALL, COMPUTERVERSAGEN ODER COMPUTERFEHLFUNKTIONEN ODER ALLE ANDEREN SCHÄDEN ODER VERLUSTE, DIE SICH AUS ODER IN VERBINDUNG MIT DER VERWENDUNG DES DOKUMENTS UND VERÄNDERTER FASSUNGEN DES DOKUMENTS ERGEBEN, AUCH WENN DIE OBEN GENANNTEN PARTEIEN ÜBER DIE MÖGLICHKEIT SOLCHER SCHÄDEN INFORMIERT WAREN.
DAS DOKUMENT UND VERÄNDERTE FASSUNGEN DES DOKUMENTS WERDEN UNTER DEN BEDINGUNGEN DER GNU FREE DOCUMENTATION LICENSE ZUR VERFÜGUNG GESTELLT MIT DEM WEITERGEHENDEN VERSTÄNDNIS, DASS:
Jiří
Lebl
jirka@5z.com
Kai
Willadsen
University of Queensland, Australien
kaiw@itee.uq.edu.au
0.2
Jiri (George) Lebl
Dieses Handbuch beschreibt Version 1.0.13 von Genius.
Rückmeldungen
Um einen Fehler zu melden oder einen Vorschlag zur Anwendung
Einführung
Die Anwendung
Es gibt zwei Versionen von
Dieses Handbuch beschreibt hauptsächlich die graphische Version des Rechners, wobei die Sprache natürlich für beide dieselbe ist. In der Befehlszeilenversion fehlen die graphischen Möglichkeiten und andere Funktionalitäten, die eine graphische Schnittstelle benötigen.
Erste Schritte

Sie können
Menü
Abhängig von Ihrem Betriebssystem und dessen Version kann sich der Menüeintrag für

Es kann auch vorkommen, dass der Menüeintrag bei Ihrem System nicht vorhanden ist. In diesem Fall können Sie das Dialogfeld zum Ausführen von Programmen öffnen und den Befehl
Befehlszeile
Um die GNOME-Version des
Zum Starten der Befehlszeilen-Version führen Sie folgenden Befehl aus:
Beim Start von
Wenn Sie die GNOME-Ausgabe von

Genius Mathematikwerkzeug
Datei
Bearbeiten
Taschenrechner
Einstellungen
Hilfe
Zeigt das Hauptfenster von
Das Fenster von
Menüleiste.
Die Menüleiste beinhaltet alle Befehle, die Sie benötigen, um mit dem
Das
Die anderen Menüs beinhalten ähnliche Funktionen wie in anderen Anwendungen.
Werkzeugleiste.
Die Werkzeugleiste enthält eine Auswahl der Befehle, die Sie über die Menüleiste erreichen.
Arbeitsplatz
Der Arbeitsplatz stellt die vorrangige Methode zur Interaktion mit der Anwendung dar.
Der Arbeitsplatz beinhaltet zu Beginn nur den Reiter
Alternativ können Sie längere Programme schreiben, wobei sich diese in unterschiedlichen Reitern befinden können. Eine Speicherung der Programme für die spätere Verwendung ist möglich.
Grundlagen der Benutzung
Benutzung des Arbeitsplatzes
Normalerweise interagieren Sie mit dem Rechenprogramm im Reiter
Geben Sie Ihren Ausdruck in den Arbeitsbereich der
So erhalten Sie eine Liste mit Funktionen und Befehlen:
Angenommen, Sie haben zuvor einige GEL-Befehle als Programm in einer Datei abgespeichert und möchten diese nun ausführen. Um dieses Programm aus der Datei
Erstellen eines neuen Programms
Um ein neues Programm zu erstellen, wählen Sie
Um das soeben geschriebene Programm zu speichern, wählen Sie
Öffnen und Ausführen eines Programms
Um eine Datei zu öffnen, wählen Sie
Wählen Sie
Darstellung
Die Darstellung von Funktionen steht nur in der graphischen GNOME-Version zur Verfügung. Alle Darstellungen mittels graphischer Schnittstelle können über das Fenster
Kurvendarstellungen
Um Funktionen einer Variablen mit reellen Zahlen darzustellen, öffnen Sie das Fenster
Sobald Sie auf den
Fenster »Darstellung erstellen«
Anzeige des Kurven-Darstellungsfensters.
Geben Sie die Ausdrücke in die Textfelder ein, wobei
Fenster »Darstellen«
Erstellter Graph.
Von hier aus können Sie die Darstellung ausdrucken, PostScript-, EPS- oder PNG-Versionen davon erstellen und die Vergrößerungsstufe verändern.
Um Darstellungen von der Befehlszeile aus zu erstellen, lesen Sie bitte die Dokumentation der
Parametrische Darstellungen
Im Fenster »Darstellung erstellen« können Sie den Reiter
Reiter »Parametrische Darstellung«
Darstellung erstellen
Reiter »Parametrische Darstellung« im
Ein Beispiel für eine parametrische Darstellung ist im
Parametrische Darstellung
Erstellte parametrische Darstellung
Richtungsfeld-Darstellungen
Im Fenster »Darstellung erstellen« können Sie den Reiter
Wenn ein Richtungsfeld dargestellt wird, so steht ein zusätzlicher Menüeintrag
Der Löser verwendet das klassische Runge-Kutta-Verfahren. Die Darstellungen bleiben so lange am Bildschirm erhalten, bis sie gelöscht werden. Der Löser stoppt, sobald er die Grenzen des Darstellungsfensters erreicht hat. Durch Ändern der Vergrößerungsstufe werden die Grenzen der Parameter der Lösungen nicht verändert, dazu müssen Sie die Lösungen löschen und mit den gewünschten Parametern neu darstellen. Sie können auch die Funktion
Vektorfeld-Darstellungen
Im Fenster »Darstellung erstellen« können Sie den Reiter
Standardmäßig werden Richtung und Größe des Vektorfelds angezeigt. Sie können das Ankreuzfeld
Wenn ein Vektorfeld dargestellt wird, so steht ein zusätzlicher Menüeintrag
Der Löser verwendet das klassische Runge-Kutta-Verfahren. Die Darstellungen bleiben so lange am Bildschirm erhalten, bis sie gelöscht werden. Durch Ändern der Vergrößerungsstufe werden die Grenzen der Parameter der Lösungen nicht verändert, dazu müssen Sie die Lösungen löschen und mit den gewünschten Parametern neu darstellen. Sie können auch die Funktion
2D-Darstellungen
Genius kann auch 2D-Darstellungen erzeugen. Wählen Sie den Reiter
2D-Darstellung
Modulus der komplexen Kosinus-Funktion.
GEL-Grundlagen
Werte
Werte in GEL können
Zahlen
1234
0x123ABC
01234
23\\1234ABCD
3/4
1 3/10
1.315
7.887e77
7.887e-77
.3
0.3
77e5
1+2i
8.01i
77*e^(1.3i)
Wahrheitswerte
( (1 + true) - false ) * true
1 == true
Strings
a=2+3;"Das Ergebnis ist: "+a
Das Ergebnis ist: 5
string(22)
"22"
Null
x=5;.
x=5;
Beispiel:
Verwendung von Variablen
VariableName
Syntax:
Vervollständigung mit der Tabulatortaste
Groß-/Kleinschreibung für Variablennamen
Bei Variablennamen wird zwischen Groß- und Kleinschreibung unterschieden. Das bedeutet, dass die Variablennamen
Setzen von Variablen
x = 3
x := 3
Syntax:
a = b = 5
Eingebaute Variablen
Vorherige Ergebnisvariable
Ans+389
Verwendung von Funktionen
FunctionName(argument1, argument2, ...)
Factorial(5)
cos(2*pi)
gcd(921,317)
Groß-/Kleinschreibung für Funktionsnamen
Definieren von Funktionen
function addup(a,b,c) = a+b+c
function f(a,b...) = b
Übergabe von Funktionen an Funktionen
function f(a,b) = a(b)+1;
function b(x) = x*x;
f(b,2)
function f(a,b) = a(b)+1;
f(`(x) = x*x,2)
Operationen mit Funktionen
exp(sin*cos+4)
`(x) = exp(sin(x)*cos(x)+4)
f = exp(sin*cos+4)
LinePlot(sin^2)
Absoluter Wert / Modulus
|a-b|
Trenner
3 ; 5
Befehle
Modulare Auswertung
2^(5!) * 3^(6!) mod 5
10^-1 mod 101
1/10 mod 101
A = [1,2;3,4]
B = A^-1 mod 5
A*B mod 5
geniusgt; sqrt(4) mod 7
=
[2, 5]
geniusgt; 2*2 mod 7
= 4
Liste der GEL-Operatoren
a;b
a=b
a:=b
|a|
a^b
a.^b
a+b
a-b
a*b
a.*b
a/b
a./b
a\\b
a.\\b
a%b
a.%b
a mod b
a!
a!!
a==b
a!=b
alt;gt;b
alt;=b
agt;=b
alt;=b
agt;=b
alt;=gt;b
a and b
a or b
a xor b
not a
-a
&a
*a
a'
a.'
a@(b,c)
a@(b,)
a@(b,:)
Gleiches wie oben.
a@(,c)
a@(:,c)
a@(b)
a:b
A@(2:4,)
 
a:b:c
geniusgt; 1:2:9
=
`[1, 3, 5, 7, 9]
(a)i
(a)*1i
 
`a
Programmierung mit GEL
Bedingungen
if a=5 then a=a-1
if a==5 then a:=a-1
Schleifen
While-Schleifen
For-Schleifen
for i = 1 to 20 by 2 do print(i)
for i = 1 to 20 by 2 do print(i)
for i = 1 to 20 by 2 do print(i)
Foreach-Schleifen
for n in [1,2:3,4] do print(n)
for n in RowsOf ([1,2:3,4]) do print(n)
Summen und Produkte
Vergleichsoperatoren
if a=b then c
if a==b then c
Globale Variablen und Variablenbereiche
function f() = (a:=5; g());
function g() = print(a);
f();
function f() = (a:=5; g());
function g() = print(a);
a:=10;
f();
a=6;
function f() = (a:=5);
f();
set(`a,3)
set("a",3)
Parametervariablen
Rückgabewerte
Lvalues (linke Werte)
a
a@(lt;regiongt;)
a:=4
*tmp := 89
a@(1,1) := 5
a@(4:8,3) := [1,2,3,4,5]'
Fortgeschrittene Programmierung mit GEL
Fehlerbehandlung
function f(M) = (
 if not IsMatrix (M) then (
 error ("M not a matrix!");
 bailout
 );
 ...
)
Übergeordnete Syntax
Funktionen als Rückgabe
function f() = (
 k = 5;
 `(x) = (x+k)
)
g = f();
g(5)
function f() = (
 k := 5;
 function r(x) = (x+k);
 k := 10;
 r
)
function f() = (
 k := 5;
 function r(x) [k] = (x+k);
 k := 10;
 r
)
function f() = (
 k := 5;
 function r(x) [] = (x+k);
 r
);
k := 10;
g = f();
g(10)
Echte lokale Variablen
k := 10;
function r(x) = (x+k);
function f(g,x) = (
 k := 5;
 g(x)
);
f(r,1)
function f(g,x) = (
 local g,x,k;
 k := 5;
 g(x)
);
function f(g,x) = (
 local *;
 k := 5;
 g(x)
);
GEL Startprozedur
Laden von Programmen
Matrizen in GEL
Matrizen eingeben
[1,2,3;4,5,6;7,8,9]
[1, 2, 3
 4, 5, 6
 7, 8, 9]
a = [ 1, 2, 3
 4, 5, 6
 7, 8, 9]
b = [ a, 10
 11, 12]
[1, 2, 3, 10
 4, 5, 6, 10
 7, 8, 9, 10
 11, 11, 11, 12]
[1, 2, 3
 4, 5
 6]
[1, 2, 3
 4, 5, 0
 6, 0, 0]
Operatoren für konjugierte Transposition und Transposition
[1,2,3]*[4,5,6]'
[1,2,3]*[4,5,6i].'
Lineare Algebra
Polynome in GEL
Verwendung von Polynomen
[1,2,3]
1 + 2*x + 3*x^2
PolyToString([1,2,3],"y")
3*y^2 + 2*y + 1
f = PolyToFunction([0,1,1])
f(2)
Mengenlehre in GEL
Mengen verwenden
Liste der GEL-Funktionen
help FunctionName
So erhalten Sie Hilfe zu einer bestimmten Konsolenfunktion:
Befehle
help
help FunctionName
load "file.gel"
Lädt eine Datei in den Interpreter. Die Datei wird ausgeführt, als wäre sie in der Befehlszeile eingegeben worden.
cd /Ordner/Name
Wechselt den Arbeitsordner zu
pwd
ls
Listet die Dateien im aktuellen Ordner auf.
plugin plugin_name
Lädt ein Plugin. Ein Plugin dieses Namens muss auf Ihrem System vorhanden und im richtigen Ordner installiert sein.
Grundlegendes
AskButtons (query)
AskString (query)
AskString (query, default)
Compose (f,g)
ComposePower (f,n,x)
Evaluate (str)
GetCurrentModulo
Identity (x)
IntegerFromBoolean (bval)
IsBoolean (arg)
IsDefined (id)
IsFunction (arg)
IsFunctionOrIdentifier (arg)
IsFunctionRef (arg)
IsMatrix (arg)
IsNull (arg)
IsString (arg)
IsValue (arg)
Parse (str)
SetFunctionFlags (id,flags...)
SetHelp (id,category,desc)
SetHelpAlias (id,alias)
chdir (dir)
display (str,expr)
UserVariables ()
error (str)
exit
Aliase:
Beendet das Programm.
false
manual
Zeigt das Benutzerhandbuch an.
print (str)
printn (str)
IsDifferentiable (f,x0)
protect (id)
ProtectAll ()
set (id,val)
set(`x,1)
 
string (s)
true
undefine (id)
Aliase:
UndefineAll ()
unprotect (id)
UserVariables ()
wait (secs)
version
warranty
Parameter
ChopTolerance = Zahl
ContinuousNumberOfTries = Zahl
ContinuousSFS = Zahl
ContinuousTolerance = Zahl
DerivativeNumberOfTries = Zahl
DerivativeSFS = Zahl
DerivativeTolerance = Zahl
ErrorFunctionTolerance = Zahl
Um Darstellungen von der Befehlszeile aus zu erstellen, lesen Sie bitte die Dokumentation der
FloatPrecision = Zahl
Gleitkommagenauigkeit
GaussDistributionTolerance = Zahl
Um Darstellungen von der Befehlszeile aus zu erstellen, lesen Sie bitte die Dokumentation der
IntegerOutputBase = Zahl
IsPrimeMillerRabinReps = Zahl
LinePlotDrawLegends = true
LinePlotDrawLegends = true
LinePlotVariableNames = ["x","y","z","t"]
LinePlotWindow = [x1,x2,y1,y2]
MaxDigits = Zahl
Maximal anzuzeigende Stellen.
MaxErrors = Zahl
Maximal anzuzeigende Fehler.
MixedFractions = boolean
NumericalIntegralFunction = Funktion
Um Darstellungen von der Befehlszeile aus zu erstellen, lesen Sie bitte die Dokumentation der
NumericalIntegralSteps = Zahl
Um Darstellungen von der Befehlszeile aus zu erstellen, lesen Sie bitte die Dokumentation der
OutputChopExponent = Zahl
OutputChopWhenExponent = Zahl
OutputStyle = String
OutputStyle = "latex"
ResultsAsFloats = boolean
Wandelt alle Ergebnisse vor der Ausgabe in Gleitkommazahlen um.
ScientificNotation = boolean
Wissenschaftliche Notation verwenden.
SlopefieldTicks = [vertical,horizontal]
SumProductNumberOfTries = Zahl
SumProductSFS = Zahl
SumProductTolerance = Zahl
LinePlotDrawLegends = true
SurfacePlotVariableNames = ["x","y","z"]
SurfacePlotWindow = [x1,x2,y1,y2,z1,z2]
VectorfieldNormalized = true
VectorfieldTicks = [vertical,horizontal]
Konstanten
CatalanConstant
EulerConstant
Aliase:
GoldenRatio
Der »Goldene Schnitt«.
Gravity
Beschleunigung im freien Fall auf Meeresspiegelhöhe.
e
pi
Numerik
AbsoluteValue (x)
Chop (x)
Ersetzung sehr kleiner Zahlen durch Null.
ComplexConjugate (z)
Denominator (x)
FractionalPart (x)
Im (z)
IntegerQuotient (m,n)
Division ohne Rest.
IsComplex (num)
IsComplexRational (num)
IsFloat (num)
IsGaussInteger (num)
IsInteger (num)
IsNonNegativeInteger (num)
IsPositiveInteger (num)
IsRational (num)
IsReal (num)
Numerator (x)
Re (z)
Sign (x)
ceil (x)
exp (x)
float (x)
floor (x)
ln (x)
log (x)
log (x,b)
log10 (x)
log2 (x)
max (a,args...)
min (a,args...)
rand (size...)
randint (max,size...)
round (x)
sqrt (x)
trunc (x)
Trigonometrie
acos (x)
acosh (x)
acot (x)
acoth (x)
acsc (x)
acsch (x)
asec (x)
asech (x)
asin (x)
asinh (x)
atan (x)
atanh (x)
atan2 (y, x)
cos (x)
cosh (x)
cot (x)
coth (x)
csc (x)
csch (x)
sec (x)
sech (x)
sin (x)
sinh (x)
tan (x)
tanh (x)
Zahlentheorie
AreRelativelyPrime (a,b)
BernoulliNumber (n)
ChineseRemainder (a,m)
CombineFactorizations (a,b)
ConvertFromBase (v,b)
ConvertToBase (n,b)
DiscreteLog (n,b,q)
Divides (m,n)
EulerPhi (n)
ExactDivision (n,d)
Factorize (n)
Factors (n)
for n=1 to 1000 do (
 if MatrixSum (Factors(n)) == 2*n then
 print(n)
)
FermatFactorization (n,tries)
FindPrimitiveElementMod (q)
FindRandomPrimitiveElementMod (q)
IndexCalculus (n,b,q,S)
IndexCalculusPrecalculation (b,q,S)
IsEven (n)
Überprüft, ob eine Ganzzahl gerade ist.
IsMersennePrimeExponent (p)
IsNthPower (m,n)
IsOdd (n)
Überprüft, ob eine Ganzzahl ungerade ist.
IsPerfectPower (n)
IsPerfectSquare (n)
IsPrime (n)
IsPrimitiveMod (g,q)
IsPrimitiveModWithPrimeFactors (g,q,f)
IsPseudoprime (n,b)
IsStrongPseudoprime (n,b)
Jacobi (a,b)
JacobiKronecker (a,b)
LeastAbsoluteResidue (a,n)
Legendre (a,p)
LucasLehmer (p)
LucasNumber (n)
MaximalPrimePowerFactors (n)
MersennePrimeExponents
MillerRabinTest (n,reps)
MillerRabinTestSure (n)
ModInvert (n,m)
MoebiusMu (n)
NextPrime (n)
PadicValuation (n,p)
PowerMod (a,b,m)
Prime (n)
PrimeFactors (n)
PseudoprimeTest (n,b)
RemoveFactor (n,m)
SilverPohligHellmanWithFactorization (n,b,q,f)
SqrtModPrime (n,p)
StrongPseudoprimeTest (n,b)
gcd (a,args...)
lcm (a,args...)
Matrixoperationen
ApplyOverMatrix (a,func)
ApplyOverMatrix2 (a,b,func)
ColumnsOf (M)
ComplementSubmatrix (m,r,c)
CompoundMatrix (k,A)
CountZeroColumns (M)
DeleteColumn (M,col)
Löscht eine Spalte einer Matrix.
DeleteRow (M,row)
Löscht eine Zeile einer Matrix.
DiagonalOf (M)
DotProduct (u,v)
ExpandMatrix (M)
HermitianProduct (u,v)
I (n)
IndexComplement (vec,msize)
IsDiagonal (M)
IsIdentity (x)
IsLowerTriangular (M)
IsMatrixInteger (M)
IsMatrixNonnegative (M)
IsMatrixPositive (M)
IsMatrixRational (M)
IsMatrixReal (M)
IsMatrixSquare (M)
IsUpperTriangular (M)
IsValueOnly (M)
IsVector (v)
IsZero (x)
LowerTriangular (M)
MakeDiagonal (v,arg...)
MakeVector (A)
MatrixProduct (A)
MatrixSum (A)
MatrixSumSquares (A)
CountZeroColumns (M)
elements (M)
OuterProduct (u,v)
ReverseVector (v)
RowSum (m)
RowSumSquares (m)
RowsOf (M)
SetMatrixSize (M,rows,columns)
ShuffleVector (v)
SortVector (v)
StripZeroColumns (M)
StripZeroRows (M)
Submatrix (m,r,c)
SwapRows (m,row1,row2)
UpperTriangular (M)
columns (M)
elements (M)
ones (rows,columns...)
rows (M)
zeros (rows,columns...)
AuxiliaryUnitMatrix (n)
BilinearForm (v,A,w)
BilinearFormFunction (A)
CharacteristicPolynomial (M)
CharacteristicPolynomialFunction (M)
ColumnSpace (M)
CommutationMatrix (m, n)
CompanionMatrix (p)
ConjugateTranspose (M)
Convolution (a,b)
ConvolutionVector (a,b)
CrossProduct (v,w)
DeterminantalDivisorsInteger (M)
DirectSum (M,N...)
DirectSumMatrixVector (v)
Eigenvalues (M)
Eigenvectors (M)
Eigenvectors (M, &eigenvalues)
Eigenvectors (M, &eigenvalues, &multiplicities)
GramSchmidt (v,B...)
HankelMatrix (c,r)
HilbertMatrix (n)
Image (T)
InfNorm (v)
InvariantFactorsInteger (M)
InverseHilbertMatrix (n)
IsHermitian (M)
IsInSubspace (v,W)
IsInvertible (n)
IsInvertibleField (n)
IsNormal (M)
IsPositiveDefinite (M)
IsPositiveSemidefinite (M)
IsSkewHermitian (M)
IsUnitary (M)
JordanBlock (n,lambda)
Kernel (T)
OuterProduct (u,v)
Aliase:
LUDecomposition (A, L, U)
Minor (M,i,j)
NonPivotColumns (M)
Norm (v,p...)
NullSpace (T)
Nullity (M)
OrthogonalComplement (M)
PivotColumns (M)
Projection (v,W,B...)
QRDecomposition (A, Q)
RayleighQuotient (A,x)
RayleighQuotientIteration (A,x,epsilon,maxiter,vecref)
Rank (M)
RosserMatrix ()
Rotation2D (angle)
Rotation3DX (angle)
Rotation3DY (angle)
Rotation3DZ (angle)
RowSpace (M)
SesquilinearForm (v,A,w)
SesquilinearFormFunction (A)
SmithNormalFormField (A)
SmithNormalFormInteger (M)
SolveLinearSystem (M,V,args...)
ToeplitzMatrix (c, r...)
Trace (M)
Transpose (M)
VandermondeMatrix (v)
VectorAngle (v,w,B...)
VectorSpaceDirectSum (M,N)
VectorSubspaceIntersection (M,N)
VectorSubspaceSum (M,N)
adj (m)
cref (M)
det (M)
ref (M)
rref (M)
Kombinatorik
Catalan (n)
Combinations (k,n)
DoubleFactorial (n)
Factorial (n)
FallingFactorial (n,k)
Fibonacci (x)
FrobeniusNumber (v,arg...)
GaloisMatrix (combining_rule)
FrobeniusNumber (n,v)
HarmonicNumber (n,r)
Hofstadter (n)
LinearRecursiveSequence (seed_values,combining_rule,n)
Multinomial (v,arg...)
(a+b+c)! / (a!b!c!)
NextCombination (v,n)
Pascal (i)
Permutations (k,n)
RisingFactorial (n,k)
StirlingNumberFirst (n,m)
StirlingNumberSecond (n,m)
Subfactorial (n)
Triangular (nth)
nCr (n,r)
nPr (n,r)
Analysis
CompositeSimpsonsRule (f,a,b,n)
CompositeSimpsonsRuleTolerance (f,a,b,FourthDerivativeBound,Tolerance)
Derivative (f,x0)
FourierSeriesFunction (a,b,L)
InfiniteProduct (func,start,inc)
InfiniteProduct2 (func,arg,start,inc)
InfiniteSum (func,start,inc)
InfiniteSum2 (func,arg,start,inc)
IsContinuous (f,x0)
IsDifferentiable (f,x0)
LeftLimit (f,x0)
Limit (f,x0)
MidpointRule (f,a,b,n)
NumericalDerivative (f,x0)
NumericalFourierSeriesFunction (f,L,N)
NumericalIntegral (f,a,b)
NumericalLeftDerivative (f,x0)
NumericalLimitAtInfinity (_f,step_fun,tolerance,successive_for_success,N)
NumericalRightDerivative (f,x0)
OneSidedFivePointFormula (f,x0,h)
OneSidedThreePointFormula (f,x0,h)
RightLimit (f,x0)
TwoSidedFivePointFormula (f,x0,h)
TwoSidedThreePointFormula (f,x0,h)
Funktionen
Argument (z)
sec (x)
sec (x)
sec (x)
sec (x)
DirichletKernel (n,t)
DiscreteDelta (v)
ErrorFunction (x)
FejerKernel (n,t)
GammaFunction (x)
KroneckerDelta (v)
LucasNumber (n)
LucasNumber (n)
MinimizeFunction (func,x,incr)
MoebiusDiskMapping (a,z)
MoebiusMapping (z,z2,z3,z4)
MoebiusMappingInftyToInfty (z,z2,z3)
MoebiusMappingInftyToOne (z,z3,z4)
MoebiusMappingInftyToZero (z,z2,z4)
PoissonKernel (r,sigma)
PoissonKernelRadius (r,sigma)
RiemannZeta (x)
UnitStep (x)
cis (x)
deg2rad (x)
Wandelt Grad in Radiant um.
rad2deg (x)
Wandelt Grad in Radiant um.
sin (x)
Gleichungen lösen
CubicFormula (p)
EulersMethod (f,x0,y0,x1,n)
EulersMethodFull (f,x0,y0,x1,n)
FindRootBisection (f,a,b,TOL,N)
FindRootFalsePosition (f,a,b,TOL,N)
FindRootMullersMethod (f,x1,x2,x3,TOL,N)
FindRootSecant (f,a,b,TOL,N)
NewtonsMethodPoly (poly,guess,epsilon,maxn)
NewtonsMethodPoly (poly,guess,epsilon,maxn)
PolynomialRoots (p)
QuadraticFormula (p)
QuarticFormula (p)
RungeKutta (f,x0,y0,x1,n)
RungeKuttaFull (f,x0,y0,x1,n)
Statistik
Average (m)
GaussDistribution (x,sigma)
GaussFunction (x,sigma)
Median (m)
PopulationStandardDeviation (m)
RowAverage (m)
RowMedian (m)
RowPopulationStandardDeviation (m)
RowStandardDeviation (m)
StandardDeviation (m)
AddPoly (p1,p2)
DividePoly (p,q,amp;r)
IsPoly (p)
MultiplyPoly (p1,p2)
NewtonsMethodPoly (poly,guess,epsilon,maxn)
Syntax:
Poly2ndDerivative (p)
PolyDerivative (p)
PolyToFunction (p)
PolyToString (p,var...)
SubtractPoly (p1,p2)
TrimPoly (p)
Mengenlehre
Intersection (X,Y)
IsIn (x,X)
IsSubset (X, Y)
MakeSet (X)
SetMinus (X,Y)
Union (X,Y)
Lineare Algebra
Verschiedenes
ASCIIToString (vec)
AlphabetToString (vec,alphabet)
StringToASCII (str)
StringToAlphabet (str,alphabet)
Symbolische Operationen
SymbolicDerivative (f)
SymbolicDerivativeTry (f)
SymbolicNthDerivative (f,n)
SymbolicNthDerivativeTry (f,n)
SymbolicTaylorApproximationFunction (f,x0,n)
LinePlot (func1,func2,func3,...)
LinePlot (func1,func2,func3,x1,x2,y1,y2)
LinePlot (func1,func2,func3,x1,x2,y1,y2)
LinePlot (func1,func2,func3,x1,x2,y1,y2)
LinePlot (func1,func2,func3,x1,x2,y1,y2)
LinePlotClear ()
LinePlotDrawLine (x1,y1,x2,y2,...)
LinePlotDrawLine (v,...)
LinePlotParametric (xfunc,yfunc,...)
LinePlotParametric (xfunc,yfunc,t1,t2,tinc)
LinePlotParametric (xfunc,yfunc,t1,t2,tinc,x1,x2,y1,y2)
LinePlotParametric (xfunc,yfunc,t1,t2,tinc,x1,x2,y1,y2)
LinePlotParametric (xfunc,yfunc,t1,t2,tinc)
LinePlotCParametric (func,...)
LinePlotCParametric (func,t1,t2,tinc)
LinePlotCParametric (func,t1,t2,tinc,x1,x2,y1,y2)
SlopefieldClearSolutions ()
SlopefieldDrawSolution (x, y, dx)
SlopefieldPlot (func)
SlopefieldPlot (func,x1,x2,y1,y2)
SurfacePlot (func)
SurfacePlot (func,x1,x2,y1,y2,z1,z2)
SurfacePlot (func,x1,x2,y1,y2,z1,z2)
SurfacePlot (func,x1,x2,y1,y2,z1,z2)
SurfacePlot (func,x1,x2,y1,y2,z1,z2)
SurfacePlot (func)
SurfacePlotVariableNames
SurfacePlot (func,x1,x2,y1,y2,z1,z2)
SurfacePlot (func,x1,x2,y1,y2,z1,z2)
SurfacePlot (func,x1,x2,y1,y2,z1,z2)
SurfacePlot (func,x1,x2,y1,y2,z1,z2)
SurfacePlot (func,x1,x2,y1,y2,z1,z2)
SurfacePlot (func,x1,x2,y1,y2,z1,z2)
SurfacePlot (func,x1,x2,y1,y2,z1,z2)
SurfacePlot (func,x1,x2,y1,y2,z1,z2)
VectorfieldClearSolutions ()
VectorfieldDrawSolution (x, y, dt, tlen)
VectorfieldPlot (funcx, funcy)
VectorfieldPlot (funcx, funcy, x1, x2, y1, y2)
Beispielprogramme in GEL
function f(x) = prod k=1 to x do k
MaxDigits = 12
Ausgabe
Um Darstellungen von der Befehlszeile aus zu erstellen, lesen Sie bitte die Dokumentation der
Um Darstellungen von der Befehlszeile aus zu erstellen, lesen Sie bitte die Dokumentation der
IntegerOutputBase
OutputStyle
Genauigkeit
Gleitkommagenauigkeit
Genauigkeitseinstellungen für folgende Sitzungen merken
Terminal
»Terminal« bezieht sich auf die Konsole im Arbeitsplatz.
Zeilen an Scrollback
Durch Zurückrollen sichtbare Zeilen im Terminal.
Schrift
Die im Terminal zu verwendende Schrift.
Schwarz auf Weiß
Blinkender Cursor
Speicher
Maximale Anzahl zuzuweisender Knoten
Info zu
Um Fehler zu melden oder einen Vorschlag zur dieser Anwendung oder zu diesem Handbuch zu machen, folgen Sie den Anweisungen in diesem
Dieses Programm ist freie Software. Sie können es unter den Bedingungen der
Jiří Lebl wurde im Rahmen verschiedener Teile der Entwicklung für die Arbeit durch die NSF Förderung DMS 0900885 und die Universität von Illinois in Urbana-Champaign unterstützt. Das Programm ist sowohl für Lehre als auch für Forschung in Verwendung.
Mario Blättermann <mariobl\@freenet\.de>, 2009, 2011
translated
University of Illinois, Urbana-Champaign
Juli 2011
Division.
Logisches UND.
Logisches ODER.
Logisches XOR.
Logisches NICHT.
Negationsoperator.
load
cd
plugin
AskString
Compose
ComposePower
Evaluate
Identity
IntegerFromBoolean
IsBoolean
IsDefined
IsFunction
IsFunctionOrIdentifier
IsFunctionRef
IsMatrix
IsNull
IsString
IsValue
Parse
SetFunctionFlags
SetHelp
SetHelpAlias
chdir
display
error
print
printn
protect
ProtectAll
set
string
undefine
UndefineAll
unprotect
UserVariables
wait
ChopTolerance
ContinuousNumberOfTries
ContinuousSFS
ContinuousTolerance
DerivativeNumberOfTries
DerivativeSFS
DerivativeTolerance
ErrorFunctionTolerance
FloatPrecision
FullExpressions
GaussDistributionTolerance
IsPrimeMillerRabinReps
LinePlotDrawLegends
LinePlotVariableNames
LinePlotWindow
MaxDigits
MaxErrors
MixedFractions
NumericalIntegralFunction
NumericalIntegralSteps
OutputChopExponent
OutputChopWhenExponent
ResultsAsFloats
ScientificNotation
SlopefieldTicks
SumProductNumberOfTries
SumProductSFS
SumProductTolerance
SurfacePlotWindow
VectorfieldNormalized
VectorfieldTicks
AbsoluteValue
Chop
ComplexConjugate
Denominator
FractionalPart
Im
IntegerQuotient
IsComplex
IsComplexRational
IsFloat
IsGaussInteger
IsInteger
IsNonNegativeInteger
IsPositiveInteger
IsRational
IsReal
Numerator
Re
Sign
ceil
exp
float
floor
ln
log
log10
log2
max
min
rand
randint
round
sqrt
trunc
acos
acosh
acot
acoth
acsc
acsch
asec
asech
asin
asinh
atan
atanh
atan2
cos
cosh
cot
coth
csc
csch
sec
sech
sin
sinh
tan
tanh
AreRelativelyPrime
BernoulliNumber
ChineseRemainder
CombineFactorizations
ConvertFromBase
ConvertToBase
DiscreteLog
Divides
EulerPhi
ExactDivision
Factorize
Factors
FermatFactorization
FindPrimitiveElementMod
FindRandomPrimitiveElementMod
IndexCalculus
IndexCalculusPrecalculation
IsEven
IsMersennePrimeExponent
IsNthPower
IsOdd
IsPerfectPower
IsPerfectSquare
IsPrime
IsPrimitiveMod
IsPrimitiveModWithPrimeFactors
IsPseudoprime
IsStrongPseudoprime
Jacobi
JacobiKronecker
LeastAbsoluteResidue
Legendre
LucasLehmer
LucasNumber
MaximalPrimePowerFactors
MillerRabinTest
MillerRabinTestSure
ModInvert
MoebiusMu
NextPrime
PadicValuation
PowerMod
Prime
PrimeFactors
PseudoprimeTest
RemoveFactor
SilverPohligHellmanWithFactorization
SqrtModPrime
StrongPseudoprimeTest
gcd
lcm
ApplyOverMatrix
ApplyOverMatrix2
ColumnsOf
ComplementSubmatrix
CompoundMatrix
CountZeroColumns
DeleteColumn
DeleteRow
DiagonalOf
DotProduct
ExpandMatrix
HermitianProduct
I
IndexComplement
IsDiagonal
IsIdentity
IsLowerTriangular
IsMatrixInteger
IsMatrixNonnegative
IsMatrixPositive
IsMatrixRational
IsMatrixReal
IsMatrixSquare
IsUpperTriangular
IsValueOnly
IsVector
IsZero
LowerTriangular
MakeDiagonal
MakeVector
MatrixProduct
MatrixSum
MatrixSumSquares
OuterProduct
ReverseVector
RowSum
RowSumSquares
RowsOf
SetMatrixSize
ShuffleVector
SortVector
StripZeroColumns
StripZeroRows
Submatrix
SwapRows
UpperTriangular
columns
elements
ones
rows
zeros
AuxiliaryUnitMatrix
BilinearForm
BilinearFormFunction
CharacteristicPolynomial
CharacteristicPolynomialFunction
ColumnSpace
CommutationMatrix
CompanionMatrix
ConjugateTranspose
Convolution
ConvolutionVector
CrossProduct
DeterminantalDivisorsInteger
DirectSum
DirectSumMatrixVector
Eigenvalues
Eigenvectors
GramSchmidt
HankelMatrix
HilbertMatrix
Image
InfNorm
InvariantFactorsInteger
InverseHilbertMatrix
IsHermitian
IsInSubspace
IsInvertible
IsInvertibleField
IsNormal
IsPositiveDefinite
IsPositiveSemidefinite
IsSkewHermitian
IsUnitary
JordanBlock
Kernel
LUDecomposition
Minor
NonPivotColumns
Norm
NullSpace
Nullity
OrthogonalComplement
PivotColumns
Projection
QRDecomposition
RayleighQuotient
RayleighQuotientIteration
Rank
RosserMatrix
Rotation2D
Rotation3DX
Rotation3DY
Rotation3DZ
RowSpace
SesquilinearForm
SesquilinearFormFunction
SmithNormalFormField
SmithNormalFormInteger
SolveLinearSystem
ToeplitzMatrix
Trace
Transpose
VandermondeMatrix
VectorAngle
VectorSpaceDirectSum
VectorSubspaceIntersection
VectorSubspaceSum
adj
cref
det
ref
rref
Catalan
Combinations
DoubleFactorial
Factorial
FallingFactorial
Fibonacci
FrobeniusNumber
GaloisMatrix
GreedyAlgorithm
HarmonicNumber
Hofstadter
LinearRecursiveSequence
Multinomial
NextCombination
Pascal
Permutations
RisingFactorial
StirlingNumberFirst
StirlingNumberSecond
Subfactorial
Triangular
nCr
nPr
CompositeSimpsonsRule
CompositeSimpsonsRuleTolerance
Derivative
FourierSeriesFunction
InfiniteProduct
InfiniteProduct2
InfiniteSum
InfiniteSum2
IsContinuous
IsDifferentiable
LeftLimit
Limit
MidpointRule
NumericalDerivative
NumericalFourierSeriesFunction
NumericalFourierCosineSeriesFunction
NumericalFourierSineSeriesFunction
NumericalIntegral
NumericalLeftDerivative
NumericalLimitAtInfinity
NumericalRightDerivative
OneSidedFivePointFormula
OneSidedThreePointFormula
RightLimit
TwoSidedFivePointFormula
TwoSidedThreePointFormula
Argument
DirichletKernel
DiscreteDelta
ErrorFunction
FejerKernel
GammaFunction
KroneckerDelta
MinimizeFunction
MoebiusDiskMapping
MoebiusMapping
MoebiusMappingInftyToInfty
MoebiusMappingInftyToOne
MoebiusMappingInftyToZero
PoissonKernel
PoissonKernelRadius
RiemannZeta
UnitStep
cis
deg2rad
rad2deg
CubicFormula
EulersMethod
EulersMethodFull
FindRootBisection
FindRootFalsePosition
FindRootMullersMethod
FindRootSecant
PolynomialRoots
QuadraticFormula
QuarticFormula
RungeKutta
RungeKuttaFull
Average
GaussDistribution
GaussFunction
Median
PopulationStandardDeviation
RowAverage
RowMedian
RowPopulationStandardDeviation
RowStandardDeviation
StandardDeviation
AddPoly
DividePoly
IsPoly
MultiplyPoly
NewtonsMethodPoly
Poly2ndDerivative
PolyDerivative
PolyToFunction
PolyToString
SubtractPoly
TrimPoly
Intersection
IsIn
IsSubset
MakeSet
SetMinus
Union
ASCIIToString
AlphabetToString
StringToASCII
StringToAlphabet
SymbolicDerivative
SymbolicDerivativeTry
SymbolicNthDerivative
SymbolicNthDerivativeTry
SymbolicTaylorApproximationFunction
LinePlot
LinePlotClear
LinePlotDrawLine
LinePlotParametric
LinePlotCParametric
SlopefieldClearSolutions
SlopefieldDrawSolution
SlopefieldPlot
SurfacePlot
VectorfieldClearSolutions
VectorfieldDrawSolution
VectorfieldPlot