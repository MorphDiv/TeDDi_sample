# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	2014
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	GNOME
# source:	https://object.pouta.csc.fi/OPUS-GNOME/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/GNOME.php
# copyright_long:	http://opus.nlpl.eu/GNOME.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Plattform-Überblick
Die GNOME-Plattform stellt eine umfassende Entwicklungsumgebung für grafische Anwendungen und andere Software bereit. Wenn Sie GNOME-Technologien verwenden, sind Sie in der Lage, qualitativ hochwertige Anwendungen zu entwerfen, die die Erwartungen ihrer Benutzer erfüllen und diese noch übertreffen. Dieser Abschnitt gibt einen kurzen Überblick über die in diesem Dokument behandelten Komponenten.
Kerntechnologien
GNOME stellt eine Reihe von Bibliotheken für die Konstruktion attraktiver grafischer Benutzerschnittstellen bereit. Darin eingeschlossen sind Bibliotheken zur Anzeige und Manipulation allgemeiner Bedienelemente der Benutzeroberfläche, zum Darstellen von Text der meisten Schriftsysteme der Welt und für das Zeichnen von hochentwickelten Vektorgrafiken auf dem Bildschirm. Die grafischen Technologien in GNOME werden in
Die GIO-Bibliothek in GLib stellt zusammen mit dem GVFS-Backend eine Dateisystem-Abstraktion bereit, die dem Benutzer die Arbeit mit Dateien sowohl auf entfernten Servern wie auch auf lokalen Dateisystemen ermöglicht. GIO stellt eine hochentwickelte Schnittstelle für Dateioperationen bereit, was schnelle und leichte Anwendungsentwicklung erlaubt. Durch die Verwendung von GIO unterstützt Ihre Anwendung entfernte Dateien und Ordner automatisch. GIO und GVFS werden in
GNOME stellt die GConf-Bibliothek und den GConf-Dienst zum Speichern und Auslesen von Benutzereinstellungen bereit. GConf verfügt über eine einfach zu handhabende Schnittstelle, um Einstellungsänderungen in Ihrer Anwendung unmittelbar wirksam werden zu lassen. Durch GConf können Systemverwalter vorgegebene und obligatorische Anwendungseinstellungen ihren Benutzern zur Verfügung stellen. GConf wird in
GNOME stellt Möglichkeiten für Internationalisierung und Barrierefreiheit bereit, was Ihnen dabei hilft, die größtmögliche Zahl an Benutzern zu erreichen. Die Unterstützung für Internationalisierung und Barrierefreiheit ist bereits eingebaut, doch gibt es zahlreiche Punkte, auf die Sie bei der Entwicklung von Anwendungen achten sollten. Die Internationalisierung wird in
GNOME wird mit GStreamer geliefert, einem extrem mächtigen Multimedia-Framework zur Erzeugung, Bearbeitung und Wiedergabe von Audio- und Video-Inhalten. GStreamer wird in
GNOME verfügt auch über eine vollständige Druckumgebung, die CUPS verwendet, wo immer es möglich ist. Die Druckumgebung in GNOME ermöglicht Ihnen die Bereitstellung einer konsistenten Schnittstelle für hochwertige Ausdrucke. Die Druckumgebung wird in
IPC und Netzwerk
Der GNOME-Desktop verfügt über eine vollständige Unterstützung für die Datenübertragung unter Verwendung der Zwischenablage oder durch Ziehen-und-Ablegen. Die Schnittstellen in GTK+ unterstützen Sie beim Entwurf von Anwendungen, die reibungslos mit dem übrigen Desktop zusammenarbeiten. Die Zwischenablage und Ziehen-und-Ablegen werden in
Zusammen mit
GNOME enthält das Bonobo-Komponentensystem, welches auf CORBA aufsetzt. Bonobo ermöglicht Programmierern, komplexe einbettbare Komponenten zu entwickeln, die in anderen Programmen wiederverwendet werden können. Beachten Sie, dass Bonobo als veraltet markiert wurde. Bonobo wird in
Um Netzwerke für Benutzer besser beherrschbar zu machen, unterstützt GNOME »DNS Service Discovery«. Dies ermöglicht Anwendungen, Dienste automatisch in einem lokalen Netzwerk zu finden, ohne dass der Benutzer Netzwerkadressen bereitstellen muss. »DNS Service Discovery« wird in
Nicht zuletzt enthält GNOME auch eine Reihe von Bibliotheken für den Umgang mit XML und Webdiensten. Diese Technologien werden immer bedeutsamer für Anwendungsentwickler. XML und Webdienste werden in
Desktop-Technologien
Der GNOME-Desktop bietet eine Reihe von Stellen, an denen Anwendungen eine bessere Integration ermöglichen können, wie durch das Bereitstellen von Panel-Applets oder Plugins für den Dateimanager. Viele dieser Funktionsmerkmale werden in
GNOME stellt umfassende »Human Interface Guidelines« bereit, die Ihnen beim Entwurf benutzerfreundlicherer Anwendungen helfen können. Die GNOME-Standards zur Benutzerfreundlichkeit waren die Ersten unter den freien Arbeitsumgebungen und werden kontinuierlich durch GNOMEs Engagement für Benutzerfreundlichkeit verbessert. Die Benutzerfreundlichkeit wird in
GNOME verfügt sowohl über ein vollständiges Hilfesystem als auch über Stilvorlagen zum Schreiben von Dokumentationen. Obwohl sie oft unterbewertet wird, kann eine gute Benutzerhilfe Ihre Software bedeutend verbessern. Dokumentationen werden in
Das vorliegende Dokument kann gemäß den Bedingungen der GNU Free Documentation License (GFDL), Version 1.1 oder jeder späteren, von der Free Software Foundation veröffentlichten Version ohne unveränderbare Abschnitte sowie ohne Texte auf dem vorderen und hinteren Buchdeckel kopiert, verteilt und/oder modifiziert werden. Eine Kopie der GFDL finden Sie unter diesem
Dieses Handbuch ist Teil einer Sammlung von GNOME-Handbüchern, die unter der GFDL veröffentlicht werden. Wenn Sie dieses Handbuch getrennt von der Sammlung weiterverbreiten möchten, können Sie das tun, indem Sie eine Kopie der Lizenz zum Handbuch hinzufügen, wie es in Abschnitt 6 der Lizenz beschrieben ist.
Viele der Namen, die von Unternehmen verwendet werden, um ihre Produkte und Dienstleistungen von anderen zu unterscheiden, sind eingetragene Warenzeichen. An den Stellen, an denen diese Namen in einer GNOME-Dokumentation erscheinen, werden die Namen in Großbuchstaben oder mit einem großen Anfangsbuchstaben geschrieben, wenn das GNOME-Dokumentationsprojekt auf diese Warenzeichen hingewiesen wird.
DIESES DOKUMENT WIRD »WIE VORLIEGEND« GELIEFERT, OHNE GARANTIEN IRGENDEINER ART, SOWOHL AUSDRÜCKLICH GENANNTE ALS AUCH ANGEDEUTETE. DIES BEZIEHT SICH AUCH OHNE EINSCHRÄNKUNG AUF GARANTIEN, DASS DIESES DOKUMENT ODER VERÄNDERTE FASSUNGEN DIESES DOKUMENTS FREI VON HANDELSDEFEKTEN, FÜR EINEN BESTIMMTEN ZWECK GEEIGNET IST ODER DASS ES KEINE RECHTE DRITTER VERLETZT. DAS VOLLE RISIKO WAS QUALITÄT, GENAUIGKEIT UND LEISTUNG DES DOKUMENTS ODER VERÄNDERTE FASSUNGEN DES DOKUMENTS LIEGT BEI IHNEN. SOLLTE EIN DOKUMENT ODER EINE VERÄNDERTE FASSUNG DAVON FEHLER IRGENDEINER ART BEINHALTEN, TRAGEN SIE (NICHT DER URSPRUNGSAUTOR, DER AUTOR ODER EIN MITWIRKENDER) DIE KOSTEN FÜR NOTWENDIGE DIENSTLEISTUNGEN, REPARATUREN ODER FEHLERKORREKTUREN. DIESER HAFTUNGSAUSSCHLUSS IST EIN ESSENZIELLER TEIL DIESER LIZENZ. DIE VERWENDUNG EINES DOKUMENTS ODER EINER VERÄNDERTEN VERSION DES DOKUMENTS IST NICHT GESTATTET AUßER UNTER BEACHTUNG DIESES HAFTUNGSAUSSCHLUSSES UND
UNTER KEINEN UMSTÄNDEN UND AUF BASIS KEINER RECHTSGRUNDLAGE, EGAL OB DURCH UNERLAUBTEN HANDLUNGEN (EINSCHLIEßLICH FAHRLÄSSIGKEIT), VERTRAG ODER ANDERWEITIG KANN DER AUTOR, URSPRUNGSAUTOR, EIN MITWIRKENDER ODER EIN VERTRIEBSPARTNER DIESES DOKUMENTS ODER EINER VERÄNDERTEN FASSUNG DES DOKUMENTS ODER EIN ZULIEFERER EINER DIESER PARTEIEN, HAFTBAR GEMACHT WERDEN FÜR DIREKTE, INDIREKTE, SPEZIELLE, VERSEHENTLICHE ODER FOLGESCHÄDEN JEGLICHER ART, EINSCHLIEßLICH UND OHNE EINSCHRÄNKUNGEN SCHÄDEN DURCH VERLUST VON KULANZ, ARBEITSAUSFALL, COMPUTERVERSAGEN ODER COMPUTERFEHLFUNKTIONEN ODER ALLE ANDEREN SCHÄDEN ODER VERLUSTE, DIE SICH AUS ODER IN VERBINDUNG MIT DER VERWENDUNG DES DOKUMENTS UND VERÄNDERTER FASSUNGEN DES DOKUMENTS ERGEBEN, AUCH WENN DIE OBEN GENANNTEN PARTEIEN ÜBER DIE MÖGLICHKEIT SOLCHER SCHÄDEN INFORMIERT WAREN.
DAS DOKUMENT UND VERÄNDERTE FASSUNGEN DES DOKUMENTS WERDEN UNTER DEN BEDINGUNGEN DER GNU FREE DOCUMENTATION LICENSE ZUR VERFÜGUNG GESTELLT MIT DEM WEITERGEHENDEN VERSTÄNDNIS, DASS:
Zwischenablagen und Ziehen-und-Ablegen
Wenn Benutzer mit immer mehr Datentypen in verschiedenen Anwendungen arbeiten, entwickelt sich häufig Bedarf an Möglichkeiten zum Austausch von Daten und Objekten zwischen ihren Anwendungen. GNOME unterstützt zwei Methoden für die Datenübertragung zwischen Anwendungen: Zum einen das Ziehen-und-Ablegen, zum anderen das Kopieren in eine un d Einfügen aus einer systemweiten Zwischenablage. Sowohl die Zwischenablage als auch Ziehen-und-Ablegen funktionieren über Anwendungsgrenzen hinweg, einschließlich mit Anwendungen, die nicht mit GNOME entwickelt wurden.
Die Zwischenablage wird verwendet, wenn der Benutzer explizit Daten in einer Anwendung kopiert. Die Anwendung nimmt die Zwischenablage dann »in Beschlag«. Wenn der Benutzer Daten aus der Zwischenablage in eine andere Anwendung einfügt, erfragt diese die Daten aus der Zwischenablage, die von der ersten Anwendung stammen. Die Operationen der Zwischenablage werden durch GTK+ vollständig untertsützt.
Ziehen-und-Ablegen funktioniert ähnlich. Allerdings ist es nötig, dass der Mauszeiger seine Form ändert, sobald er über mögliche Ablageziele bewegt wird. Wenn eine Anwendung erkennt, dass während einer Aktion zum Ablegen sich der Mauszeiger über ihr befindet, muss sie die Form des Mauszeigers entsprechend aktualisieren, um anzugeben, ob das Ablegen an der jeweiligen Stelle möglich ist oder nicht. GTK+ stellt Unterstützung für Ziehen-und-Ablegen über eine hochentwickelte Schnittstelle bereit und erleichtert die Verwaltung von Ablagezielen in Ihrer Anwendung dadurch wesentlich.
Sowohl die Zwischenablage als auch das Ziehen-und-Ablegen erfordern Verhandlungen über die Inhalte. Wenn eine Anwendung Daten anbietet, zeigt sie an, welche Formate für diese Daten verfügbar sind. Die empfangenden Anwendungen können die verwertbaren Formate abfragen. Wenn beispielsweise ein Benutzer Text aus einem Webbrowser kopiert, dann bittet eine Textverarbeitung um den Empfang der Daten in HTML, während ein gewöhnlicher Texteditor dir Daten als reinen Text ohne Formatierung empfangen kann.
Sie sollten die Funktionalität zum Ziehen-und-Ablegen für jegliche Daten anbieten, mit denen Ihre Anwendung umgehen kann. Die Zwischenablage und das Ziehen-und-Ablegen sind für weitaus mehr als nur für reinen Text zu gebrauchen. Auch Dateien, Grafiken und Klänge sind Beispiele für mögliche zwischen Anwendungen übertragbare Daten. Wenn Sie GTK+ verwenden, erhalten Sie automatisch Unterstützung für das Ziehen-und-Ablegen in Textdarstellungen, Farbknöpfen, Dateiwählern und anderen in der Schnittstelle eingebauten Bedienelementen. Sie sollten die Schnittstellen in GTK+ verwenden, um Unterstützung für alle Daten in Ihrer Anwendung anzubieten.
Weitere Informationen finden Sie in
D-BUS-Benachrichtigung
D-BUS ist ein plattformübergreifendes Nachrichtensystem zum Senden von Ereignismeldungen zwischen verschiedenen Anwendungen sowie den eingebauten Komponenten des Systems. D-BUS stellt eine einfache Schnittstelle zum Senden von Nachrichten zu bestimmten Diensten und für die Verbreitung von Meldungen an alle interessierten Dienste dar. D-BUS ermöglicht die Kommunikation zwischen verschiedenen Anwendungstypen und deren gemeinsame Integration in den Desktop, wobei eine bessere Interaktion durch den Benutzer erreicht wird.
D-Bus stellt einen Sitzungs- und einen Systembus bereit. Der Sitzungsbus wird von Anwendungen in einer einzelnen Benutzersitzung verwendet, was den Anwendungen die Freigabe von Daten und Benachrichtigungen über Ereignisse sowie die Integration in die Arbeitsumgebung des Benutzers ermöglicht. Beispielsweise können Video-Wiedergabeprogramme eine D-Bus-Meldung senden, um die Aktivierung des Bildschirmschoners zu verhindern, wenn der Benutzer ein Video abspielt.
Der Systembus ist ein einzelner Nachrichtenbus, der unabhängig von einer Benutzersitzung läuft. Er kann mit Anwendungen in einer beliebigen Sitzung kommunizieren, wobei diesen Anwendungen die Interaktion mit Systemkomponenten ermöglicht wird, ohne auf Low-Level-Details des Systems zurückgreifen zu müssen. Der Systembus wird verwendet, um wichtige Funktionalitäten bereitzustellen, die der Benutzer erwartet. Beispielsweise überwacht der Systembus Vorgänge wie das Aktivieren oder Deaktivieren von Netzwerkschnittstellen, das Anschließen externer Laufwerke oder die Kapazität der Laptop-Akkus.
D-Bus wird plattformübergreifend auf
Weitere Informationen über D-Bus finden Sie im
Bonobo und CORBA
Beachten Sie, dass Bonobo, libIDL und ORBit als veraltet markiert wurden und durch D-Bus und andere Technologien abgelöst wurden. Siehe oben.
Bonobo ist ein Framework zur Erzeugung wiederverwendbarer Komponenten für Anwendungen. Aufsetzend auf dem Industriestandard »Common Object Request Broker Architecture« (CORBA), stellt Bonobo alle gemeinsamen Schnittstellen zur Erzeugung und einfachen Verarbeitung von Komponenten in GNOME-Anwendungen zur Verfügung.
Bonobo-Komponenten können in einer Vielzahl von Situationen verwendet werden und helfen Ihnen bei der Erstellung flexibler und erweiterbarer Software. Wenn beispielsweise eine Komponente zur Darstellung von Multimedia-Inhalten in einer Textverarbeitung entwickelt e'wird, so kann die Textverarbeitung nun auch mit solchen Inhalten umgehen, ohne dass die Textverarbeitung direkt damit arbeiten muss. Bonobo-Komponenten werden auch zur Einbettung von Applets in das GNOME-Panel verwendet. Die Verwendung von Bonobo erlaubt die effektive Kommunikation der Applets mit dem Panel, was einer konsistenten Benutzeroberfläche zugute kommt.
Bonobo-Komponenten sind nicht auf grafische Bedienelemente beschränkt. Bonobo wurde von Evolution, der E-Mail- und Groupware-Suite von GNOME verwendet, um den Benutzerzugriff auf Adressbuch und Kalender zu ermöglichen. Dadurch kann der Benutzer alle seine Informationen an einer zentralen Stelle speichern, worauf alle Anwendungen zugreifen können.
Bonobo wird außerhalb von CORBA erstellt, was die Ausführung von Komponenten als separate Prozesse erlaubt. Komponenten können in verschiedenen Sprachen geschrieben werden und auf verschiedene Laufzeitumgebungen aufsetzen. Es ist lediglich erforderlich, sie mit einer Schnittstelle gemäß der »Interface Definition Language« (IDL) zu verknüpfen. Das flexible Design von CORBA ermöglicht die Ausführung von Komponenten auf separaten Rechnern in einem Netzwerk.
GNOME stellt seine eigene und ressourcenschonende CORBA-Implementation mit ORBit bereit. Die in GNOME enthaltenen Werkzeuge und Bibliotheken ermöglichen das effektive Schreiben von Komponenten in C, einer Sprache, die für andere CORBA-Implementationen oft nicht verfügbar ist. ORBit ist eine unglaublich schnelle CORBA-Implementation.
Bonobo hilft, die Lücken in CORBA zu füllen, indem zusätzliche Schnittstellen und Spezifikationen zur Unterstützung konsistenter Komponenten bereitgestellt werden. Sie werden CORBA kaum ohne Bonobo nutzen können, es ist direkt einsetzbar. Beispielsweise nutzt GNOMEs Barrierefreiheits-Architektur CORBA, um Hilfstechnologien die Überwachung von und Interaktion mit Anwendungen zu ermöglichen.
Sie wollen Bonobo vielleicht verwenden, um komplexe grafische Komponenten bereitzustellen, die in Anwendungen eingebettet werden können. Für die meisten IPC-Erfordernisse jedoch schwenkt GNOME in Richtung D-Bus um, weil die Integration von D-Bus in Anwendungen deutlich einfacher sein dürfte.
Weitere Informationen über Bonobo finden Sie im
Dienste
»DNS Service Discovery«, oder Zeroconf, ist eine Technologie zum automatischen Lokalisieren von Diensten in einem Netzwerk. Zeroconf erlaubt den Benutzern den Zugriff auf Netzwerkressourcen, ohne explizit Adressen angeben oder das Netzwerk manuell konfigurieren zu müssen.
»DNS Service Discovery« wird bereits an einer Anzahl von Stellen in GNOME verwendet. Weitere Unterstützung wird in Zukunft hinzugefügt. Beispielsweise verwendet der GNOME-Dateimanager
Die volle Unterstützung für DNS Service Discovery wird durch die Avahi-Bibliothek bereitgestellt. Weitere Informationen über Avahi finden Sie auf
XML und Web-Dienste
In unserer sich immer mehr vernetzenden Welt steigt die Anzahl der Anwendungen, die Unterstützung für Webdienste benötigen. Manchmal fügen Webdienste nur einfache Funktionalitäten hinzu, während sie bei anderen Anwendungen die Kernfunktion darstellen. Anwendungen, die eine für sich stehende Bedienbarkeit bereits über Jahre hinweg anbieten, finden innovative Betätigungsfelder in Webdiensten.
Die GNOME-Plattform bietet Unterstützung sowohl für die Nutzung von Webdiensten aus Ihrer Anwendung heraus, als auch umfassende Bibliotheken für die Verarbeitung, Verwaltung und Umwandlung von XML, der Sprache des Webs.
Weitere Informationen über libsoup finden Sie im
XML-Verarbeitung
Seit seiner formellen Einführung im Jahre 1998 wird XML (eXtensible Markup Language) in einer ständig steigenden Zahl von Anwendungen verwendet. XML hat einen sehr weit gefassten Anwendungsbereich, der von Dokumentformaten wie XHTML und DocBook bis hin zu Internetprotokollen wie SOAP und Jabber reicht. XML verfügt über eine saubere und einfache Syntax, wodurch sich Anwendungen auf Ihre speziellen Bedürfnisse zuschneiden lassen.
GNOME wird mit der libxml2-Bibliothek geliefert und verwendet diese sehr intensiv im gesamten Desktop. Die libxml2-Bibliothek ist eine schnelle und vollständig standardkonforme Bibliothek zur XML-Verarbeitung und stellt alles Nötige zur Verfügung, was für die Verwendung von XML in Ihrer Anwendung erforderlich ist.
Die libxml2-Bibliothek stellt eine Reihe von Schnittstellen für die Arbeit mit XML bereit. Sie können das verwenden, was für Ihre Anwendungsentwicklung am besten geeignet ist. Zusätzlich zum eigentlichen Schnittstellenbaum bietet libxml2 auch die Callback-basierte SAX2-Schnittstelle, Lese- und Schreibschnittstellen für XML-Datenströme und eine vollständige Unterstützung für XPath.
Zusätzlich zur DTD-Unterstützung kann die Validierung von Dokumenten mittels RELAX NG erfolgen. Dies erlaubt Ihnen ein flexibleres Validierungsmodell und trotzdem eine einfache Verwendung. XML Schema wird teilweise unterstützt, die neue Schema-Sprache des W3C.
Sie sollten libxml2 verwenden, wo immer Sie in Ihrer Anwendung direkt mit XML arbeiten. Die Verwendung von libxml2 stellt sicher, dass das Parsen, die Verarbeitung und die Ausgabe von XML standardkonform erfolgt. Damit dürfte der Ärger über Inkompatibilitäten zwischen Anwendungen ein Ende haben.
Weitere Informationen über libxml2 finden Sie in
Umwandlung von XML mittels XSLT
XSLT ist eine XML-basierte Sprache zur Umwandlung von XML in andere Formate. XSLT ist vorlagenbasiert, was Ihnen die Auswahl bestimmter XML-Elementtypen und deren entsprechende Ausgabe ermöglicht. Basierend auf XML und XPath hilft XSLT Entwicklern bei der Erzeugung sauberer und modularisierter, zur jeweiligen Anwendung passender Vorlagen für die Umwandlung eines XML-Dialekts in ein anderes Format.
GNOME wird mit der libxslt-bibliothek geliefert, einer vollständigen Umsetzung des XSLT-Standards. Die libxslt-Bibliothek setzt auf die Unterstützung für XML und XPath in libxml2 auf, wodurch sie schnell und standardkonform ist.
Sie sollten libxslt verwenden, um XML-Dokumente umzuwandeln. Obwohl XSLT nicht immer der perfekte Weg für die Verarbeitung von XML ist, so kann damit doch oft die Entwicklung vereinfacht werden. Seit es libxslt ermöglicht, Funktionen und Elemente als Erweiterungen einzubinden, können Sie es besser an Ihre Anwendung anpassen.
Weitere Informationen über libxslt finden Sie in
Einführung
GNOME ist eine mächtige und doch schlichte Arbeitsumgebung, bei der das Hauptaugenmerk auf Benutzerfreundlichkeit, Barrierefreiheit und Internationalisierung liegt. GNOME wurde entworfen, um von jedermann benutzt werden zu können, ungeachtet seiner technischen Fähigkeiten, seiner Behinderungen oder seiner Muttersprache. GNOME macht die Benutzung eines Computers leicht.
GNOME stellt eine umfassende Entwicklerplattform bereit, die die Erstellung professioneller Software erlaubt, welche leicht zu bedienen ist und auch ästhetischen Ansprüchen genügt. Dieses Dokument bietet einen ausführlichen Überblick über die Plattform, begleitet von Links zu detaillierteren Informationen zu jedem der Bestandteile.
Wer sollte dieses Dokument lesen?
Sie sollten dieses Dokument lesen, wenn Sie Software unter Verwendung der GNOME-Plattform erstellen wollen. Das Entwickeln mit der GNOME-Plattform hilft Ihnen beider Erstellung konsistenter Anwendungen, die sich harmonisch in den Desktop des Benutzers einfügen. Dieses Handbuch führt Sie in die verschiedenen Komponenten der Plattform ein, so dass Sie wissen, welche Bibliotheken für die Ausführung welcher Aufgaben zuständig sind. Enthalten sind ebenfalls Links zu detaillierterer Dokumentation, so dass Sie jede Komponente der Plattform eingehender kennenlernen können.
Dieses Handbuch könnte Ihnen auch beim der Auswahl bei einer passenden Entwicklungsplattform für Ihr Software-Projekt helfen. Es wird ein Überblick gegeben, wie Sie die GNOME-Plattform zur Erstellung benutzerfreundlicher Software verwenden können.
Dieses Handbuch beschreibt ebenfalls die Erweiterung des GNOME-Desktops mit Plugins, Panel-Applets und anderen nützlichen Werkzeugen. Falls Sie planen, GNOME mit zusätzlicher Funktionalität auszustatten, sollten Sie dieses Handbuch lesen, speziell
Falls Sie über vorhandene Software verfügen, die Sie auf die GNOME-Plattform portieren wollen, dann sollten Sie zusätzlich zu diesem Handbuch den online verfügbaren
Die GNOME-Familie
GNOME ist eine globale Angelegenheit mit vielen Mitwirkenden in der ganzen Welt. GNOME wird durch diese Mitwirkenden und Benutzer ein Erfolg. Dieser Abschnitt listet die Webseiten und Konferenzen auf, wo Sie mehr über GNOME erfahren können, sowie weitere Organisationen, die mit GNOME zusammenarbeiten.
Webseiten
www.gnome.org
Die erste Informationsquelle für GNOME-Benutzer. Enthält Anmerkungen zur Veröffentlichung, Downloads und Dokumentation.
library.gnome.org
Die vollständige Sammlung aller Informationen zu GNOME. Enthält die Entwickler- und Benutzerdokumentation für GNOME und wird automatisch mit jeder neuen Veröffentlichung aktualisiert.
foundation.gnome.org
Die Webseite der GNOME-Foundation, der nicht gewinnorientierten Stiftung, welche die Schirmherrin über die GNOME-Entwicklung ist.
bugzilla.gnome.org
Das GNOME-Fehlererfasungssystem. Hier können Sie eine Fehlermeldung abgeben oder einen Wunsch für ein neues Funktionsmerkmal äußern, oder auch den Status einer Meldung verfolgen.
live.gnome.org
Das GNOME-Wiki. Viele Projekte innerhalb von GNOME verwenden nun das Wiki als primären Webauftritt. Zusätzlich wird das Wiki oft verwendet, um die zukünftige Entwicklung zu diskutieren.
developer.gnome.org
Die alte Webseite für Enwicklerinformationen. Diese enthielt einst Entwicklerdokumentation und Informationen über Benutzerfreundlichkeit, Dokumentation sowie Übersetzungsteams. Der Inhalt dieser Seite wurde weitgehend durch die Informationen auf
mail.gnome.org
Informationen über die GNOME-Mailinglisten. Diese Seite enthält vollständige Archive aller GNOME-Mailinglisten.
git.gnome.org
Der Git-Softwarebestand von GNOME, der allen Quellcode des Projekts beherbergt.
Mailinglisten
gnome-list
Die primäre Mailingliste für GNOME-Benutzer.
gnome-devel-list
Informationen und Fragen zur Anwendungsentwicklung auf der GNOME-Plattform.
gnome-love
Die erste Anlaufstelle zur Mitarbeit bei GNOME.
gnome-accessibility-list
Informationen über Barrierefreiheit in GNOME-Anwendungen.
gnome-doc-list
Informationen über die Erstellung von Dokumentationen für GNOME-Anwendungen.
gnome-i18n
Informationen über die Internationalisierung und Lokalisierung von GNOME-Anwendungen.
usability
Informationen über Barrierefreiheit für GNOME-Anwendungen.
Konferenzen
GUADEC
Die primäre Konferenz für GNOME-Benutzer und -Entwickler. Die GUADEC wird jährlich im Mai oder Juni abgehalten. Sie findet jedes Jahr in einer anderen europäischen Stadt statt, so dass Sie diese Konferenz auch hervorragend dazu nutzen können, Europa ein wenig besser kennenzulernen. Die GUADEC umfasst Vorträge für Benutzer, Entwickler und Softwareanbieter.
The GNOME Summit
Die Hacker-Zusammenkunft. Das »Summit« zielt vorrangig auf existierende GNOME-Entwickler ab, jedoch finden sich oft auch nützliche Informationen für Neulinge. Das »Summit« findet alljährlich in Boston statt.
GNOME.conf.au
Eine etwa jährlich abgehaltene Zusammenkunft auf linux.conf.au.
Weitere Organisationen
freedesktop.org
Gemeinsame Anstrengungen für die Interoperabilität und gemeinsame Technologien ziehen sich durch alle Arbeitsumgebungen. GNOME arbeitet mit Projekten wie KDE un XFCE, um die Entwicklung von benutzerfreundlichen Anwendung für Programmierer zu vereinfachen.
Mozilla
Die freie Web-Engine, und noch viel mehr. GNOME unterhält enge Beziehungen zum Mozilla-Entwicklerteam, um eine allgemeine Verbesserung der Benutzerschnittstelle zu erreichen.
OpenOffice.org
Die freie Büro-Suite. GNOME arbeitet mit dem OpenOffice.org-Entwicklungsteam zusammen, um eine einheitlichere Schnittstelle anzubieten, wenn die freie Büro-Suite unter GNOME verwendet wird.
Free Software Foundation
Die Freiheit an sich. Gegründet im Jahre 1985, arbeitete die Free Software Foundation daran, ein vollständig freies Betriebssystem zu entwickeln, was den Benutzern die Freiheit gibt, es zu verwenden, verändern und weiterzugeben. Als Teil des GNU-Projekts ist es Ziel von GNOME, eine vollständig freie Arbeitsumgebung bereitzustellen.
Registrieren von Anwendungen und Dateitypen
Im Zusammenhang mit der Benutzerfreundlichkeit einer Anwendung muss der Benutzer diese auch finden und starten können. Benutzer des GNOME-Desktops starten Anwendungen aus dem Anwendungsmenü oder durch den Zugriff auf Dateien im Dateimanager. Der GNOME-Desktop ermöglicht es, beim Installieren Ihrer Anwendung die entsprechenden Anwendungstypen und Dateitypen hinzuzufügen. Der dafür verwendete Mechanismus ist durch
Das Hinzufügen Ihrer Anwendung ist so einfach wie die Bereitstellung einer Dektop-Datei mit den nötigen Informationen. Desktop-Dateien verwenden eine einfache aus Schlüssel-Wert-Paaren aufgebaute Syntax, mit einigen Zusätzen für übersetzte Inhalte oder bestimmte Angaben. Die Desktop-Datei Ihrer Anwendung wird die folgenden Informationen enthalten:
Einen Namen und einen Kommentar, jeweils übersetzt in so viele Sprachen, wie Ihre Anwendung unterstützt,
Eine Liste von Kategorien aus einer festgelegten Liste, die für den Einbau Ihrer Anwendung in das Anwendungsmenü benutzt wird,
Ein Symbol, entweder mit vollem Dateipfad oder einen Namen aus dem Symbolthemensystem,
Eine Liste der Dateitypen, mit denen Ihre Anwendung umgehen kann, und
Der Befehl zur Ausführung Ihrer Anwendung.
Falls Ihre Anwendung mit bestimmten Dateitypen umgehen kann, die dem System noch nicht bekannt sind, ist es notwendig, diese Dateitypen zu registrieren. Auf alle Dateitypen wird über deren MIME-Typ zugegriffen. Beispielsweise haben OggVorbis-Audiodateien den MIME-Typ
Weitere Informationen über Anwendungen finden Sie in
Panel-Applets
Der GNOME-Desktop enthält flexible und mächtige Panels, zu denen Benutzer eine beliebige Anzahl kleiner Anwendungen hinzufügen können, genannt Panel-Applets. Panel-Applets bieten schnellen Zugriff auf alle Arten nützlicher Informationen und Funktionalitäten. Der GNOME-Desktop wird beispielsweise mit Panel-Applets geliefert, mit deren Hilfe der Benutzer zwischen Fenstern und Arbeitsflächen umschalten oder die gegenwärtigen Wetterbedingungen abrufen kann, und noch vieles mehr.
Sie können ein Panel-Applet bereitstellen, um die Funktionalität Ihrer Anwendung zu verbessern, oder auch ein einfaches allein arbeitendes Applet anbieten. Wenn Sie einfach nur schnelle Benachrichtigungen anzeigen wollen, sollten Sie das Benachrichtigungsfeld dafür in Betracht ziehen, welches ebenfalls im Panel des Benutzers angezeigt wird. Panel-Applets sollten dann zum Einsatz kommen, wenn mehr Funktionalität geboten werden soll, als mit einem Symbol im Benachrichtigungsfeld möglich ist.
Panel-Applets sind unabhängige Prozesse, die Bonobo zur Kommunikation mit dem Panel verwenden. Bonobo erlaubt den Applets die Integration im Panel, um ein konsistentes Benutzererlebnis zur Verfügung zu stellen. Beispielsweise enthält das Kontextmenü eines jeden Panel-Applets Einträge zum Entfernen, Verschieben und Sperren des Applets. Jedes Panel-Applet kann noch weitere Einträge zum Kontextmenü hinzufügen, um zusätzliche Aktionen auszuführen. Das
Beachten Sie, dass Bonobo als veraltet markiert und durch D-Bus und andere Technologien abgelöst wurde.
Weitere Informationen über Panel-Applets finden Sie in der
Benachrichtigungsfeld
Zusätzlich zu Anwendungsstartern und Panel-Applets verfügt das GNOME-Panel auch über ein -Benachrichtigungsfeld, in dem Anwendungen die Benutzer auf Ereignisse hinweisen können. Benachrichtigungen können den Benutzer warnen, wenn neue E-Mails eingetroffen sind, bei verfügbaren Systemaktualisierungen, anstehenden Terminen oder jeder anderen Art von Ereignissen.
Benachrichtigungen sind einfache Symbole, die Ihre Anwendung im Benachrichtigungsfeld des Panels des Benutzers erscheinen lässt. Ihre Anwendung kann weitere Aktionen ausführen, wenn der Benutzer das Symbol anklickt. Gegenwärtig basiert das Benachrichtigungssystem auf der exsperimentellen Egg-Bibliothek, jedoch wird die nächste Version von GTK+ die Benachrichtigungssymbole direkt unterstützen.
Das Benachrichtigungsfeld ist eine
Dateimanager
GNOME wird mit


Plugins können auch Spalten zu einer Listenansicht hinzufügen oder Dateien automatisch mit Emblemen versehen. Dadurch können dem Benutzer sachdienliche Informationen zusaätzlich zur Verfügung gestellt werden. Beispielsweise könnte ein

Zusätzlich zur flexiblen Plugin-Architektur kann
Fenstermanager
Der Fenstermanager ist ein spezielles Programm, das für das Zeichnen der Rahmen und Titelleisten von Fenstern zuständig ist. Der Fenstermanager verarbeitet alle Operationen, die mit Fenstern ausgeführt werden, zum Beispiel Verschieben, Größenänderungen, Minimieren und Verschieben zwischen den verschiedenen Arbeitsflächen. Fenster werden ohne oder mit geringem Aufwand bei der Anwendungsentwicklung verwaltet. Falls es nötig sein sollte, dass Anwendungen den Fenstermanager beeinflussen sollen, dann kann dies über Funktionsaufrufe in GTK+ geschehen.
Externe Programme können allerdings auch mit dem Fenstermanager zusammenarbeiten und dessen Verhalten beeinflussen. Mit der libwnck-Bibliothek von GNOME können Anwendungen über die Platzierung und den Status aller Fenster erfragen sowie den Fenstermanager anweisen, Aktionen mit diesen Fenstern auszuführen.
Die libwnck-Bibliothek bezieht sich nicht speziell auf den GNOME-Fenstermanager. Sämtliche Funktionalität verwenden die »Extended Window Manager Hints« (EWMH). EWMH wurde in Zusammenarbeit mit
Die Interaktion mit dem Fenstermanager kann für einfache Aufgaben verwendet werden, wie die Anzeige der Arbeitsflächen- und Fensterlisten-Applets im GNOME-Panel. Auch komplexere Vorgänge sind möglich, zum Beispiel das automatische Ausführen von Aktionen mit neuen Fenstern aufgrund bestimmter Fenstereigenschaften.
Kontrollzentrum
Der GNOME-Desktop stellt ein Menü für alle auf den Desktop bezogenen Einstellungen und Einstellungen der Systemverwaltung bereit. Einstellungsdialoge können in dieses Menü gesetzt werden, um leichter darauf zugreifen zu können. Sie können Dialoge dort platzieren, indem Sie zur Anwendungsregistrierung in der Kategorie »Settings« hinzufügen. Dialoge erscheinen im Systemverwaltungsmenü, wenn Sie sie sowohl der Kategorie
Wenn Sie einen Dialog anbieten, der Systemverwaltern ermöglicht, Desktop-Systeme zu konfigurieren, so sollten Sie diesen Dialog in das Menü »System« einbinden. Ein Dialog, der Benutzern die Anpassung der Einstellungen für mehrere Anwendungen ermöglicht, findet dagegen seinen Platz im Menü »Einstellungen«. Bitte verwenden Sie diese globalen Menüs nicht für individuelle Einstellungen Ihrer Anwendung.
Speichern von Passwörtern
GNOME stellt eine moderne und sichere Schlüsselbundverwaltung zum Speichern von Benutzerpasswörtern und anderen sicherheitsrelevanten Daten bereit. Anwendungen können die Bibliothek der Schlüsselbundverwaltung zum Speichern und Zugreifen auf Passwörter verwenden. Benutzer können ihre Passwörter in der GNOME-Anwendung
Die Schlüsselbundverwaltung kann mit mehreren Schlüsselbünden umgehen, wobei jeder Schlüsselbund wiederum eine beliebige Anzahl von Einträgen enthalten kann. Ein Eintrag im Schlüsselbund enthält Daten, zumeist ein Passwort. Jeder Schlüsselbund ist individuell gesperrt, so dass die Benutzer ein Passwort zur Entsperrung bereitstellen müssen. Sobald ein Schlüsselbund entsperrt ist, hat der Benutzer Zugriff auf alle enthaltenen Einträge.
Die Schlüsselbundverwaltung bietet Zugriffskontrolllisten für jedes Schlüsselbundobjekt, über die Anwendungen Zugriff auf das jeweilige Objekt erhalten können. Falls eine unbekannte Anwendung versucht, Zugriff auf das Schlüsselbundobjekt zu erlangen, fragt die Schlüsselbundverwaltung den Benutzer, ob der Zugriff gewährt oder verweigert werden soll. Das verhindert, dass böswillige oder dürftig programmierte Anwendungen Zugriff auf die sicherheitskritischen Daten des Benutzers erlangen.
Die im Dateisystem gespeicherten Daten des Schlüsselbundes werden mit »AES block cipher« gespeichert, wobei SHA1 zur Ermittlung der Prüfsumme der Attribute des Objektes verwendet wird. Aufgrund der Prüfsummen der Attribute ist die Schlüsselbundverwaltung in der Lage, nach den von Anwendungen angefragten Daten zu suchen, ohne den eigentlichen Schlüsselbund entsperren zu müssen. Der Schlüsselbund muss erst dann entsperrt werden, wenn tatsächlich ein passendes Objekt gefunden wurde und darauf zugegriffen wird.
Die Schlüsselbundverwaltung stellt auch einen sitzungsgebundenen Schlüsselbund zur Verfügung. Die Einträge in diesem Schlüsselbund werden niemals dauerhaft gespeichert und gehen verloren, sobald die Sitzung des Benutzers beendet ist. Der Sitzungs-Schhlüsselbund kann zum Speichern von Passwörtern genutzt werden, die nur für die aktuelle Sitzung nötig sind.
Falls sie GIO zum Zugriff auf entfernte Server verwenden, nutzen Sie automatisch den Vorteil der Schlüsselbundbverwaltung. Wann immer es für GVFS erforderlich ist, den Benutzer zu legitimieren, wird die Option zur Speicherung des Passworts angeboten, entweder im Standard-Schlüsselbund oder im sintzungsgebundenen Schlüsselbund.
Sie sollten die Schlüsselbundverwaltung immer dann einsetzen, wenn Ihre Anwendung Passwörter oder andere sicherheitsrelevante Daten des Benutzers speichern soll. Die Schlüsselbundverwaltung bietet eine hohe Bedienerfreundlichkeit und hält die Benutzerdaten doch sicher in Verwahrung.
Weitere Informationen über API-Referenzen finden sie im
Sitzungsverwaltung
GNOME bietet Werkzeuge, die Ihre Anwendung sitzungsübergreifend laufen lassen. Benutzer können sich mit laufenden Anwendungen abmelden und finden bei der nächsten Anmeldung diese Anwendungen völlig wieder hergestellt wieder vor. Um diese Funktionalität bereitzustellen, muss Ihre Anwendung mit der Sitzungsverwaltung verbunden sein und ihren Status speichern, wenn sich der Benutzer abmeldet.
Beachten Sie, dass dieser Abschnitt veraltet ist, da sowohl GnomeClient als auch Libgnomeui als veraltet markiert wurden. Neu geschriebener Code sollte stattdessen
GNOME bietet eine einfache API für die Sitzungsverwaltung in der GNOME-Benutzerschnittstellen-Bibliothek. Im Abschnitt
Adressbuch und Kalender
Mit dem »Evolution Data Server« bietet GNOME ein Adressbuch und einen Kalender, den alle Anwendungen zum Speichern und Abfragen von Informationen verwenden können. Benutzer brauchen dadurch nicht mehr separate Kontaktlisten in den verschiedenen Anwendungen zu verwalten oder per Hand Ereignisse in .den Kalender zu kopieren
Leute, die Computer benutzen, wollen in immer mehr zunehmendem Maße mit Freunden oder Kollegen in Verbindung treten. Anwendungen wie E-Mail-Programme, Sofortnachrichtendienste oder Videokonferenzen werden zur Kommunikation mit anderen benutzt. Diese Anwendungen stellen oft Kontaktlisten bereit, um den Benutzer zu unterstützen. Bei der Verwendung von »Evolution Data Server« können Anwendungen jegliche Kontaktinformationen an einem zentralen Ort speichern, was allen Anwendungen die für Kontakt relevanten Daten zur Verfügung stellt.
Anwendungen können den »Evolution Data Server« ebenfalls dazu verwenden, Einträge des Benutzerkalenders zu speichern oder abzufragen. Beispielsweise zeigt die Uhr im Panel beim Anklicken einen einfachen Kalender an. Falls der Benutzer Termine eingetragen hat, werden diese im Kalender angezeigt. Dadurch wird die Anzeige von Terminen erleichtert, da das Öffnen einer kompletten Kalender-Anwendung nicht nötig ist.
Weitere Informationen über das Adressbuch finden Sie in der
Bedienbarkeit
Der GNOME-Desktop wurde auf Benutzerfreundlichkeit entworfen, um ein konsistentes und einfaches Benutzererlebnis zu ermöglichen. Leute, die Computer benutzen, wollen damit arbeiten (oder spielen!) und nicht hochkomplizierte Benutzeroberflächen-Puzzles erkunden. Bei der Entwicklung Ihrer Anwendung sollten Sie berücksichtigen, wie gut bekannte Benutzerschnittstellen-Muster umgesetzt werden, wie schnell Benutzer den Umgang mit den speziellen Elementen Ihrer Anwendung erlernen können und wie effizient nach diesem Lernprozess Aufgaben ausgeführt werden können.
GNOME verfügt über hochentwickelte »Human Interface Guidelines«, die Ihnen die Entwicklung attraktiver und benutzerfreundlicher Anwendungen ermöglichen. Zwar wird es keine Richlinien geben, die eine allgemeingültige Antwort auf alle Fragen zur Benutzerfreundlichkeit geben können. Doch kann es das Verstehen der »Human Interface Guidelines« einfacher machen, eine einfach benutzbare Anwendung zu erstellen. Weitere Informationen finden Sie in den
Dokumentation
Alle Anwendungen sollten Dokumentation zur Verfügung stellen, um Ihren Benutzern beim Verstehen der Anwendung zu helfen und sie bei der Lösung von Problemen zu unterstützen. Zwar erfordert eine Anwendung nicht unbedingt das Lesen der Dokumentation vor der Benutzung, aber eine Dokumentation kann doch ein bedeutsames Werzeug für Benutzer sein, insbesondere für sehr komplexe Anwendungen.
GNOME bietet eine vereinheitlichte Umgebung zur Bereitstellung von Benutzerdokumentation. Sie können Dokumentation im als Industriestandard üblichen DocBook-Format anbieten. Die Verwendung von DocBook vermeidet, dass Sie sich mit Formatierungsdetails befassen müssen. Ihre Dokumentation wird automatisch formatiert, mit den gleichen konsistenten Konventionen wie die übrige Systemdokumentation.

Weitere Informationen über das Schreiben von Dokumentation für Ihre Anwendung finden Sie im
translated
translated
translated
Grafische Schnittstellen
Für die meisten Anwendungen ist es erforderlich, eine grafische Schnittstelle zur Interaktion mit dem Benutzer bereitzustellen. Grafische Benutzeroberflächen stellen ein intuitives und erfahrbares Medium zur Interaktion des Benutzers mit der Anwendung dar, und Benutzer erwarten Anwendungen mit benutzerfreundlichen und attraktiven Oberflächen.
Die GNOME-Plattform stellt eine hochentwickelte Technologie für Grafik und Benutzerschnittstellen zur Verfügung, von Standard-Bedienelementen bis zu einer API zum Zeichnen qualitativ hochwertiger Grafiken auf dem Bildschirm. Die Verwendung dieser Grafiktechnologien in GNOME ermöglicht Ihnen die Erstellung konsistenter und einfach bedienbarer Anwendungen, die auch höheren ästhetischen Ansprüchen genügen.
Ebenenansicht in Grafikbibliotheken
GTK+
GTK+ ist die primäre zur Erstellung von Benutzeroberflächen verwendete Bibliothek in GNOME. Sie stellt alle Bedienelemente bereit, auch Widgets genannt, die in einer grafischen Anwendung zum Einsatz kommen. Ihre moderne, objektorientierte Schnittstelle erlaubt Ihnen die Erstellung attraktiver und kultivierter Benutzeroberflächen, ohne dass Sie sich mit den Hintergrunddetails des Zeichnens oder der Interaktion mit Geräten befassen müssen.
Zusätzlich zu den grundlegenden Widgets wie Knöpfen, Ankreuzfeldern oder Texteingabefeldern stellt GTK+ auch eine mächtige Model-View-Controller-(MVC-)Schnittstelle für Baumansichten, mehrzeilige Textfelder sowie Menü- und Werkzeugleisten-Aktionen bereit.
Die Widgets in GTK+ werden innerhalb von Fenstern in einem Box-Anordnungsmodell platziert. Die Programmierer legen fest, wie die Widgets in Containerboxen angeordnet werden sollen, ohne dass diese direkt in unveränderliche Positionen gesetzt werden müssen. GTK+ stellt dabei sicher, dass die Fenstergrößen optimal auf deren Inhalt abgestimmt sind. Die Anpassung der Fenstergröße erfolgt dabei automatisch.
Weil GTK+ eine über eine flexible API verfügt, ist der Entwurf zusätzlicher Widgets recht einfach. Es existiert eine Reihe von Drittanbieter-Bibliotheken, die zusätzliche Widgets anbieten. Viele Entwickler haben bereits eigene, für ihre speziellen Zwecke benötigte Widgets erstellt.
GTK+ kümmert sich um die schwierigen Einzelheiten der Benutzeroberflächen und Benutzer-Interaktionen. Eine simple und doch mächtige API erlaubt es Ihnen, sich auf die Details Ihrer Anwendung zu konzentrieren. Die mit GTK+ entwickelten Anwendungen folgen automatisch den Benutzereinstellungen für Erscheinungsbild und Schriften, arbeiten hervorragend mit Barrierefreiheits-Technologien zusammen und bieten genau dass, was der Benutzer erwartet.
Weitere Informationen über GTK+ finden Sie im
Libglade
Beachten sie, dass Libglade als veraltet markiert wurde und durch
Libglade ist eine Bibliothek, die Benutzerschnittstellen dynamisch aus XML-Beschreibungen erstellt. Sie können ein Erstellungsprogramm für die grafische Benutzerschnittstelle wie
Libglade ermöglicht es Programmierern, ihren Code auf die Logik ihrer Anwendungen auszurichten, ohne sie durch die aktuelle Konstruktion der Schnittstelle durcheinander zu bringen. Grafische Schnittstellen-Ersteller machen es auch für enthusiastische Designer leichter, Oberflächen zu erstellen, ohne sich mit der Programmierung selbst zu beschäftigen.
Weitere Informationen über Libglade finden Sie im
Pango
Die Pango-Layout-Engine kann mit verschiedenen Schrift- und Zeichen-Backends genutzt werden. Auf den meisten Systemen verwendet Pango dazu FreeType, fontconfig und Cairo zum Zugriff auf Schriften und Darstellen von Text. Auf anderen Systemen kommen deren Schriftsysteme zum Einsatz, zum Beispiel Uniscribe auf Microsoft Windows und ATSUI auf MacOS.
Pango ist die Kernbibliothek für den Umgang mit Text und Schriften auf der GNOME-Plattform. Es ist für das Anordnen und Rendern von Texten zuständig und wird durchgehend in GTK+ verwendet.
Pango bietet erweiterte Unterstützung für die verschiedenen Schriftsysteme, die in der Welt verwendet werden. Viele dieser Schriftsysteme haben sehr komplexe Regeln, für das Darstellen und von Zeichen und deren Verbindung untereinander. Mit Pango können beinahe alle existierenden Schriften geschrieben und korrekt dargestellt werden, was den Benutzern überall das Betrachten von Texten in ihren Muttersprachen ermöglicht. Pango unterstützt die verschiedenen Schriftsysteme automatisch. Anwendungsentwickler brauchen keinen zusätzlichen Code zu schreiben, um andere Sprachen zu unterstützen.
Mehrsprachige Darstellung mit Pango
Bildschirmfoto des Texteditors
Pango unterstützt die in typischen Dokumenten verwendeten Textstile und Schnittstellen, wie Kursiv, Fettschrift oder Unterstreichungen. Dazu kommt ein simples XML-ähnliches Vokabular namens PangoMarkup zum Einsatz, welches Ihnen ermöglicht, Schriftgrößen, Farben, Stile und andere Textattribute anzupassen. Mit PangoMarkup können Sie beispielsweise durchgehende Stile verwenden, ohne Textblöcke manuell wieder und wieder bearbeiten zu müssen. Die Benutzung von Pango ist direkt aus GTK+ heraus möglich, was die Anpassung des Textstils in Ihren grafischen Benutzeroberflächen erheblich erleichtert.
Sie sollten Pango immer dann verwenden, wenn die Textdarstellung auf dem Bildschirm oder einem anderen Medium gefordert ist. Mit Pango fügt sich die Textdarstellung nahtlos in GTK+ und die übrige GNOME-Plattform ein. Pango hilft Ihnen bei der Erstellung portablen Codes. Am bedeutsamsten ist jedoch, dass Ihre Anwendung Text in Hunderten von Sprachen korrekt darstellen kann.
Weitere Informationen über Pango finden Sie im
GDK
GDK funktioniert auf einer Reihe verschiedener Plattformen, einschließlich des X-Window-Systems, Microsoft Windows, DirectFB und Quartz. Auf jeder dieser Plattform steht die gleiche konsistente Schnittstelle bereit, was die Ausführung von auf GTK+ basierenden Anwendungen ohne Änderungen ermöglicht.
GDK ist die Low-Level-Bibliothek, die von GTK+ zur Interaktion mit dem System für grafische und Eingabegeräte verwendet wird. Obwohl Sie GDK im Anwendungscode kaum direkt verwenden werden, enthält es doch alle notwendige Funktionalität zum Darstellen von Text und Objekten auf dem Bildschirm sowie zur Interaktion des Benutzers mit den verschiedenen Eingabegeräten.
GDK bietet einen grafischen Kontext und zeichnet Primitive, die für die Darstellung einfacher Objekte und Bilder auf dem Bildschirm nutzbar sind. Da in Form von Cairo ein erweitertes Darstellungssystem zur Verfügung steht, stellt GDK Ansatzpunkte für Cairo-Kontexte innerhalb von GDK bereit.
GDK ermöglicht Ihnen den Zugriff auf von Tastaturen, Mäusen oder anderen Eingabegeräten ausgelöste Ereignisse, im Gegensatz zu den in GTK+ verwendeten High-Level-Signalen. GDK stellt auch Low-Level-Routinen für Ziehen-und-Ablegen und die Daten in der Zwischenablage des Systems zur Verfügung. Wenn Sie eigene Bedienungsmöglichkeiten implementieren, dann dürften Sie auf diese Funktionsmerkmale zugreifen wollen, um eine saubere Interaktion mit dem Benutzer zu gewährleisten.
GDK stellt weitere Funktionalität bereit, die für die Implementation eines kompletten grafischen Werkzeugkastens wie GTK+ erforderlich ist. Weil sich GTK+ als Plattform-Abstraktion versteht, was dir Verwendung in verschiedenen Umgebungen ermöglicht, stellt es eine API für alle von GTK+ benötigte Systemfunktionalität bereit. Das schließt Informationen über die Anzeige auf mehreren Bildschirmen ein, die Auflösung und Farbtiefe, Farbpaletten und Zeiger.
Sie sollten GDK immer dann verwenden, wenn Sie Zugriff auf das darunterliegende Fenstersystem benötigen, wie beispielsweise Zugriff auf Ereignisse, Fenster oder die Zwischenablage. Die Nutzung von GDK für derartige Aufgaben stellt sicher, dass Ihr Code portierbar ist und sich in den restlichen GTK+-Code gut integriert. Die simplen Zeichenroutinen in GDK sollten nicht verwendet werden. Stattdessen sollten Sie die erweiterte Funktionalität nutzen, die Cairo zur Verfügung stellt.
Weitere Informationen über GDK finden Sie im
Cairo
Cairo ist eine 2D-Grafikbibliothek, die eine hochentwickelte Schnittstelle für das Zeichnen von Vektorgrafiken, das Erstellen von Bildern und zum Rendern von geglättetem Text bereitstellt. Cairo unterstützt zahlreiche Ausgabegeräte, wie das X-Window-System, Microsoft Windows und Bildpuffer. Dies ermöglicht Ihnen das Schreiben von plattformunabhängigem Code zum Zeichnen von Grafiken auf verschiedenen Medien.
Das Cairo-Darstellungsmodell ist dem von PostScript oder PDF ähnlich. Die Cairo-Schnittstelle bietet solche Zeichenoperationen wie Pinselstriche, Füllen von kubischen Bézier-Objekten, Zusammensetzen von Bildern und die Ausführung von Umwandlungen. Diese Vektor-Operationen ermöglichen hervorragende, geglättete Grafiken ohne Zuhilfenahme pixelbasierten Zeichnens in Ihrem Code.
Das Zeichenmodell von Cairo ermöglicht qualitativ hochwertige Ausgaben auf verschiedenen Medien. Die gleiche Schnittstelle wird zur Erzeugung fantastischer Bildschirmgrafiken ebenso verwendet wie für das Rendern von Bildern oder für knackige Ausdrucke.
Sie sollten Cairo immer dann verwenden, wenn Sie in Ihren Anwendungen Grafiken zeichnen wollen, die die Widgets von GTK+ nicht bieten. Die meisten Zeichenvorgänge in GTK+ werden bereits mit Cairo ausgeführt. Die Verwendung von Cairo für Ihre spezielle Zeichnung erlaubt qualitativ hochwertige, geglättete und von der Auflösung unabhängige Grafiken in Ihrer Anwendung.
Weitere Informationen über Cairo finden Sie in
Virtuelles Dateisystem
GIO, ein Teil von GLib, ist die Kernbibliothek für Datei- und Ordneroperationen in GNOME-Anwendungen. GIO stellt eine vereinheitlichte Dateisystem-Abstraktionsschicht für verschiedene als Plugin einzufügende Backends bereit. In GNOME bietet die GVFS-Bibliothek ein GIO-Backend, das bereits mehrere lokale und Netzwerkprotokolle beinhaltet. Die Verwendung von GIO macht die Arbeit mit Dateien auf entfernten Rechnern so einfach wie mit lokalen Dateien.
GIO kann ausführliche Informationen über Dateien und Ordner bereitstellen, einschließlich des MIME-Typs, des Symbols oder Angaben über die Anwendungen, die eine Datei öffnen können. Seit GVFS den
GIO wird im GNOME-Desktop durchgehend verwendet. Der Dateimanager
Weitere Informationen über GIO finden Sie im
In früheren Versionen von GNOME kam die GnomeVFS-Bibliothek für den Zugriff auf Dateien und Ordner zum Einsatz. Obwohl GnomeVFS bereits über viele der gleichen Funktionsmerkmale verfügte, wie nachvollziehbaren Zugriff auf entfernte Dateien, gab es eine Reihe von Einschränkungen, die mit GIO beseitigt wurden. GnomeVFS ist veraltet und sollte in neu zu schreibendem Code nicht mehr verwendet werden, allerdings wird die Unterstützung während der GNOME2-Lebensdauer fortgesetzt. Weitere Informationen zu GnomeVFS finden Sie in
Konfiguration und Sperrmöglichkeiten
GConf ist das System zum Speichern und Abfragen von Konfigurationseinstellungen in GNOME. GConf besteht aus zwei Teilen: einer Client-Bibliothek zum Zugriff auf Einstellungen und einem Sitzungsdienst, der für die Details der Speicherung und Abfrage dieser Einstellungen verantwortlich ist. Die Verwendung dieses Dienstes ermöglcht GConf die Einbindung verschiedener Backends zur Speicherung, die Validierung der Eingaben und den gleichzeitigen Zugriff durch verschiedene Anwendungen.
Die in GConf gespeicherten Einstellungen werden mittels eines eindeutigen Schlüssels oder Identifizierungsstrings gespeichert und abgefragt. Die Schlüssel verwenden einen einfachen hierarchisch aufgebauten Namensraum, um Überschneidungen zwischen den Einstellungen für Anwendungen und für den Desktop zu vermeiden. Sie können eine Schema-Datei bereitstellen, um Ihre Konfigurationsschlüssel detailliert zu beschreiben. Dies ermöglicht GConf den Typ der Eingabe zu validieren und übersetzte Dokumentation für den Schlüssel anzuzeigen. Nützlich ist dies vor allem für Systemverwalter, die gleichzeitig mehrere Einstellungen vornehmen können, ohne durch Einstellungsdialoge navigieren zu müssen.
GConf kann nach Einstellungen in verschiedenen Quellen gleichzeitig suchen, typischerweise an verschiedenen Orten im Dateisystem. Wenn die entsprechenden Systemquellen sauber konfiguriert sind, können Systemverwalter sowohl vorgegebene als auch obligatorische Einstellungen für alle Benutzer anbieten. GNOME-Werkzeuge wie der
Die GConf-Clientbibliothek stellt Benachrichtigungen über Einstellungsänderungen bereit, was die sofortige Wirksamkeit dieser Änderungen in Ihrer Anwendung erleichtert, ungeachtet dessen, ob diese Änderungen auf Ihre Anwendung oder ein anderes Werkzeug zurückzuführen sind. Die Änderung eines Schlüsselwerts benachrichtigt alle relevanten Anwendungen. Dadurch werden desktop-weite und andere, über Anwendungsgrenzen hinweg gehende Einstellungen sofort und mühelos wirksam.
GConf macht es leicht, Systeme dadurch einzuschränken, dass bestimmte Schlüssel nur lesbar sind. Das vermeidet, dass Benutzer solche Schlüssel eigenständig ändern. GNOME stellt eine Reihe von Schlüsseln bereit, über die sich Aktionen wie das Speichern auf der Festplatte oder Ändern der Panel-Einstellungen sperren lassen. Werkzeuge wie
Sie sollten GConf verwenden, um alle Benutzereinstellungen Ihrer Anwendung zu speichern. Dadurch wird es erleichtert, Änderungen in der Konfiguration sofort anzuwenden. Außerdem werden die Einstellungen besser zugänglich für Systemverwalter sowie Werkzeuge zur Konfiguration und Datensicherung.
Weitere Informationen über GConf finden Sie im
Internationalisierung
Der GNOME-Desktop und die Entwicklungsplattform stellen eine vollständige Unterstützung für die Internationalisierung und Übersetzung von Anwendungen bereit. Durch Internationalisierung wird sichergestellt, dass die Anwendung übersetzt werden kann. Dies umfasst das Markieren von Zeichenketten zur Übersetzung, die korrekte Verwendung von Zahlen und Formatstrings sowie die Anpassungsmöglichkeiten der Konventiuonen für die Formate für Zeit, Datum und Einheiten.
GNOME verwendet die standardisierten Gettext- und andere Routinen, um auf Übersetzungen zuzugreifen. Die Unterstützung für Übersetzungen mittels Gettext ist bereits in jedem Bestandteil der GNOME-Plattform eingebaut. Ihr Quellcode kann durch automatisch arbeitende Werkzeuge auf spezielle Markierungen überprüft werden. Diese Zeichenketten werden dann in po-Dateien geschrieben, die Übersetzer für ihre Arbeit benötigen. Wenn Sie Gettext verwenden, dann kann mit Hilfe der mit Ihrer Anwendung installierten Übersetzungsdateien leicht und effizient auf übersetzte Versionen aller für den Benutzer sichtbaren Zeichenketten zugegriffen werden.
Diese Übersetzungsdateien werden aus po-Dateien erzeugt, die Übersetzer zum Überwachen von Änderungen und Aktualisieren ihrer Übersetzungen verwenden. GNOME wird mit intltool geliefert, einem Werkzeug für die Verwaltung von Übersetzungen in po-Dateien. Mit intltool können Übersetzer nicht nur die Zeichenketten in Ihrer Anwendung bearbeiten, sondern auch andere von Ihnen verwendete Dateitypen, wie GConf-Schemas, Desktop-Dateien und XML-Dateien.
GNOME stellt ebenfalls das Werkzeug xml2po als Teil des Pakets gnome-doc-utils bereit. Dadurch wird Übersetzern ermöglicht, po-Dateien zur Erzeugung übersetzter Versionen von in diversen XML-Formaten geschriebenen Dokumentationen zu verwenden, einschließlich DocBook und XHTML.
Internationalisierung beinhaltet mehr als nur die bloße Übersetzbarkeit von Zeichenketten. GNOME unterstützt Ihre Anwendungsentwicklung bei jedem Schritt dieses Prozesses. GTK+ justiert automatisch die Präsentation einer Sprache, die von rechts nach links gelesen wird, und Pango unterstützt vollständig das Rendern von Text in beiden Richtungen sowie Text in den verschiedensten Schreibsystemen. GTK+ unterstützt mehrere Eingabemethoden, was die effektive Eingabe von Text für Benutzer jeglicher Sprachen über die Tastatur ermöglicht. Die gesamte GNOME-Plattform verwendet nativ die UTF-8-Kodierung von Unicode, wodurch der Zugriff auf die Schreibsysteme und Zeichen der ganzen Welt möglich ist.

Bildschirmfotos der Anwendung
Die Internationalisierung ihrer Anwendung macht diese vielen weiteren Benutzern in der ganzen Welt zugänglich. Während versierte Übersetzer für ihre Sprachen die Übersetzungen erstellen, müssen die Programmierer dafür sorgen, dass die Internationalisierung sauber implementiert ist, bevor die Anwendung übersetzt wird.
Weitere Informationen über die Internationalisierung in GNOME finden Sie in
Barrierefreiheit
Die Barrierefreiheit stellt sicher, dass Ihre Anwendung von Benutzern mit verschiedenen Behinderungen verwendet werden kann. Behinderungen gibt es in verschiedenen Formen: visuelle Einschränkungen, Bewegungseinschränkungen, Schwerhörigkeit/Gehörlosigkeit und Anfallsleiden. Viele Leute haben solche Behinderungen, und die Sicherstellung der Barrierefreiheit für Ihre Anwendung macht diese für mehr Benutzer effektiver zugänglich.
GNOME bietet über das ATK-Framework Unterstützung für Barrierefreiheits-Geräte. Dieses Framework definiert eine Reihe von Schnittstellen, die sich mit den Komponenten der grafischen Schnittstellen verbinden. Dies erlaubt beispielsweise Bildschirmlesern das Lesen von Text einer Schnittstelle und die Interaktion mit deren Bedienelementen. ATK-Unterstützung ist in GTK+ und die übrige GNOME-Plattform eingebaut und verwendet die GAIL-Bibliothek, so dass jede GTK+ nutzende Anwendung ansprechende Barrierefreiheits-Unterstützung als Gratisbeigabe erhält.
Nichtsdestotrotz sollten Sie beim Entwickeln von Anwendungen die Barrierefreiheit im Auge behalten. Obwohl die GTK+-Schnittstellen schon vernünftige Schnittstellen standardmäßig bereitstellt, können Sie doch die Barrierefreiheit Ihres Programms weiter verbessern, indem Sie ATK zusätzliche Informationen zur Verfügung stellen. Falls Sie eigene Widgets entwickeln, stellen Sie bitte sicher, dass deren Eigenschaften an ATK übermittelt werden. Sie sollten auch vermeiden, Klänge, Grafiken oder Farben als grundlegende und alleinige Informationselemente für den Benutzer zu verwenden.
Der GNOME-Desktop wird mit einer Reihe von Barrierefreiheits-Werkzeugen geliefert, die es Benutzern mit Behinderungen ermöglichen, ihren Desktop und ihre Anwendungen uneingeschränkt zu benutzen. Anwendungen, die ATK vollständig implementieren, sind fähig, mit diesen Barrierefreiheits-Werkzeugen zu arbeiten. Die GNOME-Barrierefreiheits-Werkzeuge enthalten einen Bildschirmleser, eine Bildschirmlupe, eine Bildschirmtastatur sowie
Weitere Ausführungen zur Barrierefreiheit finden Sie in
Multimedia
GStreamer ist eine mächtige Multimedia-Bibliothek zur Wiedergabe, Erzeugung und Bearbeitung von Klängen, Video und anderen Medien. Sie können GStreamer zur Wiedergabe von Klang und Video, Aufnahmen aus verschiedenen Quellen und Bearbeiten von Multimedia-Inhalten verwenden. GStreamer unterstützt bereits die Kodierung und Enkodierung verschiedener Formate. Die Unterstützung für weitere Formate kann über Plugins erfolgen.
GStreamer stellt eine flexible Architektur bereit, in der Mediendaten innerhalb einer Pipeline aus Elementen verarbeitet werden. Jedes Element kann Filter auf die Inhalte anwenden, wie Enkodierung oder Dekodierung, Zusammenführen mehrerer Quellen, oder Umwandeln des Multimedia-Inhalts. Diese Architektur erlaubt eine willkürliche Anordnung der Elemente, so dass Sie virtuell jeden beliebigen Effekt in GStreamer verwirklichen können. Außerdem wurde GStreamer auf geringen Overhead hin entworfen, so dass es in Anwendungen mit hohen Anforderungen an die Latenzzeit genutzt werden kann.
GStreamer bietet nicht nur eine mächtige API für die Manipulation von Multimediadaten, sondern auch bequeme Routinen für die einfache Wiedergabe. GStreamer kann automatisch eine Weiterleitung konstruieren, um Dateien in jedem unterstützten Format zu lesen und wiederzugeben. Dies erlaubt Ihnen in Ihrer Anwendung die einfache Nutzung von Klang und Video.
Die GStreamer-Architektur ermöglicht es, mittels Plugins Encoder und Decoder einzubinden sowie den Inhalt auf alle erdenklichen Arten zu filtern. Drittanbieter können GStreamer-Plugins bereitstellen, die über dann automatisch auch für alle Anwendungen verfügbar sind, die GStreamer nutzen. Plugins können der Unterstützung weiterer Multimediaformate dienen oder zusätzliche Funktionen und Effekte bereitstellen.
Sie sollten GStreamer verwenden, wann immer es in Ihrer Anwendung notwendig ist, Multimedia-Inhalte zu lesen oder wiederzugeben, oder wenn Ihre Anwendung Klänge oder Video bearbeiten soll. GStreamer erleichtert Ihre Anwendungsentwicklung und stellt umfassend getestete Elemente für viele Anwendungsfälle bereit.
Umfassende Informationen zu GStreamer finden Sie in
Drucken
Die meisten Anwendungen benötigen Unterstützung für das Drucken. Die Benutzer erwarten, dass Sie das, was sie auf dem Bildschirm sehen, auch drucken können. Die GNOME-Plattform stellt Bibliotheken zur Verfügung, die Ihnen bei der Hinzufügung der Unterstützung für qualitativ hochwertige Ausdrucke aus Ihrer Anwendung heraus behilflich sind.
GNOME Print
Beachten Sie, dass dieser Abschnitt veraltet ist, weil libgnomeprint und libgnomeprintui als veraltet markiert und durch
Die GNOME-Druckumgebung besteht aus zwei Bibliotheken, die Ihnen helfen, hochwertige Ausdrucke mit einer konsistenten Bedienoberfläche in Ihrer Anwendung anzubieten. Den Kern der Druckumgebung bildet libgnomeprint, eine Bibliothek, die PostScript-Ausgaben erzeugt, die an Drucker gesendet werden können. Darauf baut libgnomeprintui auf, welches standardisierte Bedienelemente für Ihre Benutzeroberfläche bereitstellt.
Die libgnomeprint-Bibliothek implementiert das PostScript-Darstellungsmodell, welches von den meisten Druckern verwendet wird. Drucker, die PostScript nicht unterstützen, werden durch CUPS unterstützt, welches im Folgenden beschrieben wird. Zusätzlich zur vorgegebenen PostScript-Darstellung bietet libgnomeprint auch Unterstützung für den Alphakanal und Kantenglättung.
Die libgnomeprintui-Bibliothek stellt einen standardisierten Druckdialog bereit, eine Dialog zur Druckvorschau und weitere Steuerungen und Funktionalitäten, die zum Erstellen einer intuitiv bedienbaren Benutzerschnittstelle erforderlich ist. Die GNOME-Druckumgebung kümmert sich um die Details wie die Druckererkennung oder die Verwaltung von Warteschlangen. Der Export in PostScript oder PDF ist direkt im Druckdialog möglich.
Wo immer es möglich ist, sollten Sie libgnomeprint zur Ausgabe von Inhalten im PostScript-Format für das Drucken verwenden. Konstruieren Sie mit libgnomeprintui die Benutzerschnittstelle für Druckaufgaben, selbst dann, wenn die gerenderte Ausgabe aus einer anderen Quelle stammt. Mit dem GNOME-Druck-Framework erhält der Benutzer eine konsistente Bedienoberfläche mit den Funktionsmerkmalen, die er von Druckanwendungen erwartet.
CUPS
Auf den meisten GNOME-Systemen bildet CUPS das Rückgrat des Drucksystems. CUPS stellt eine moderne, funktionsreiche Architektur zur Druckererkennung sowie den Zugriff auf Optionen und Warteschlangen für die verschiedenen Druckertypen bereit.
CUPS liefert eine Reihe von Dienstprogrammen für die automatische Erkennung von sowohl lokalen als auch Netzwerkdruckern. Dadurch sehen die Benutzer die verfügbaren Drucker nicht nur, sondern können die verschiedenen Arten von Druckern weitgehend ohne manuelle Konfiguration nutzen.
CUPS stellt eine vereinheitlichte Schnittstelle zum Drucken bereit, unabhängig von Ort oder Art des Druckers. Mehrere Druckprotokolle werden nahtlos von CUPS verarbeitet, indem auf die an die Drucker gesendeten Inhalte automatisch Filter angewendet werden. Anwendungen können so ganz einfach PostScript ausgeben, und CUPS wird es automatisch für Drucker umwandeln, die PostScript nicht direkt unterstützen.
CUPS bietet auch Einstellungsoptionen für das Drucken in Form von »PostScript Printer Description«- (PPD-)Dateien. PPD-Konfigurationen ermöglichen Anwendungen, den Benutzern die Fähigkeiten eines bestimmten Druckers in einer konsistenten Benutzerschnittstelle anzuzeigen. Beispielsweise erlaubt Ihnen PPD zu ermitteln, ob ein Drucker Druckaufträge heften und binden kann und stellt eine entsprechende Option im Druckdialog bereit.
In den meisten Fällen werden Sie die CUPS-Schnittstelle in Ihren Anwendungen nicht benötigen. Durch die GNOME-Druckumgebung haben Sie ganz automatisch Zugriff auf die Stärke und Flexibilität von CUPS. Durch CUPS erreichen Sie eine bessere Benutzbarkeit mit weniger Programmieraufwand.
Sprachbindungen
Obwohl die GNOME-Plattform primär in C geschrieben ist, ist es leicht, andere Programmiersprachen einzubinden. Mit den gebotenen Sprachbindungen können Sie auf der GNOME-Plattform die Programmiersprache Ihrer Wahl verwenden.
Sprachbindungen existieren für viele Programmiersprachen. Die GNOME-Plattform unterstützt offiziell C++, Java, Perl, und Python.
C++
Die C++-Bindungen werden von der GNOME-Plattform komplett abgedeckt, einschließlich GTK+, Cairo und GConf. Die C++-Bindungen umschließen alle Objekte mit nativen C++-Objekten und ermöglichen Programmierern, eigene Widgets mit den normalen C++-Vererbungseigenschaften bereitzustellen. Sie bieten eine vollständig native API mit typsicheren Signalhandlern, unter Verwendung der C++-Klassenbibliotheken und Schnittstellen, wo immer es möglich ist.
Weitere Informationen über die GNOME-Sprachbindung für C++ finden Sie auf der
Java
Die Java-Bindungen werden von der GNOME-Plattform komplett abgedeckt, einschließlich GTK+, Cairo und GConf. Die Java-Bindungen umschließen alle Objekte mit nativen Java-Objekten und ermöglichen Programmierern, eigene Widgets mit den normalen Java-Vererbungseigenschaften bereitzustellen. Sie bieten eine vollständig native API unter Verwendung der Java-Klassenbibliotheken und Schnittstellen, wo immer es möglich ist.
Weitere Informationen über die Java-Bindungen in GNOME finden Sie auf der
Perl
Die Perl-Bindungen stellen native Perl-Schnittstellen für die GNOME-Plattform bereit, einschließlich GTK+, GnomeVFS und GConf. Die Perl-Bindungen umschließen alle Objekte mit nativen Perl-Objekten und ermöglichen Programmierern die Verwendung von Standard-Perl-Routinen, um diese zu manipulieren. Sie bieten eine vollständig native Perl-API und verwenden native Perl-Daten, wo immer es möglich ist.
Weitere Informationen über die Perl-Bindungen in GNOME finden Sie auf der
Python
Die Python-Bindungen stellen native Python-Schnittstellen für die GNOME-Plattform bereit, einschließlich GTK+, GnomeVFS und GConf. Die Python-Bindungen umschließen alle Objekte mit nativen Python-Objekten und ermöglichen Programmierern die Bereitstellung eigener Widgets mit normalen Python-Vererbungseigenschaften. Sie bieten eine vollständig native Python-API und verarbeiten automatisch Details wie Type-Casting oder Speichermanagement.
Weitere Informationen über die Python-Bindungen in GNOME finden Sie auf der
Weitere Sprachen
Vollständige oder teilweise Bindungen existieren für viele weitere Programmierspracdhen, wie C#, Eiffel, JavaScript, Ruby, and Scheme. Obwohl diese Sprachen in GNOME derzeit nicht offiziell unterstützt werden, sind diese Bindungen oft von der gleichen hohen Qualität wie die offiziellen GNOME-Bindungen. Einige davon werden sicherlich in zukünftigen Versionen von GNOME Einzug halten.
Eine Liste der Sprachbindungen finden Sie auf der
Kurzüberblick über die Module
Dieser Anhang gibt einen kurzen Überblick über die im GNOME-Desktop und der Entwicklerplattform enthaltenen Bibliotheken. Die Bibliotheken sind modulweise aufgelistet, mit einer kurzen Beschreibung sowie einem Link zu weiteren Informationen in diesem Dokument, sofern verfügbar.
Plattform-Module
Die Module der GNOME-Entwicklerplattform garantieren strikte API- und API-Stabilität. Für die auf dieser Grundlage entwickelten Anwendungen gilt, dass sie unverändert während der gesamten Lebensdauer von GNOME 2 lauffähig sind.
GConf
GConf stellt den Dienst und die Bibliotheken zum Speichern und Abfragen von Konfigurationsdaten bereit. GConf wird in
ORBit
ORBit ist ein schneller und ressourcenschonender, veralteter CORBA-Server. Die Bonobo-Komponentenarchitektur von GNOME setzt auf CORBA auf. CORBA wird in
atk
ATK stellt eine Reihe von Schnittstellen für Hilfstechnologien, die von anderen Toolkits und Anwendungen implementiert werden können. Durch Nutzung der ATK-Schnittstellen haben Hilfstechnologie-Werkzeuge vollen Zugriff auf laufende Anwendungen, um diese zu überwachen und zu steuern. ATK wird in
gail
GAIL stellt eine Implementation von ATK-Schnittstellen für GTK+ und GNOME-Bibliotheken bereit, so dass die Barrierefreiheits-Werkzeuge mit Anwendungen interagieren können, welche diese Bibliotheken verwenden. GAIL wurde 2009 in GTK+ integriert. Die Barrierefreiheit wird in
gio
Als Teil der GLib stellt GIO eine High-Level-API zum Zugriff auf Dateien und Ordner bereit. Zusammen mit der GVFS-Bibliothek bildet sie eine Dateisystem-Abstraktionsschicht, welche transparenten Zugriff auf lokale und entfernte Dateien ermöglicht. GIO wird in
glib
GLib bildet den Kernblock zum Erstellen von Bibliotheken und Anwendungen in C. Es stellt das grundlegende in GNOME verwendete Objektsystem bereit, die Implementation von Schleifen und eine große Zahl von Hilfsfunktionen für Zeichenketten und häufig genutzte Datenstrukturen.
gnome-vfs
GnomeVFS ist eine veraltete Bibliothek für den Zugriff auf Dateien und Ordner. Sie wurde durch GIO und GVFS ersetzt. In neu zu schreibendem Code sollten Sie stattdessen GIO verwenden.
gtk+
GTK+ ist die primäre Bibliothek zur Konstruktion von Benutzerschnittstellen in GNOME-Anwendungen. Sie stellt Bedienelemente und Signalverknüpfungen zum Steuern von Benutzerschnittstellen zur Verfügung. GTK+ wird in
gvfs
GVFS ist eine Backend-Implementation für GIO und erlaubt den Zugriff auf eine Anzahl von Protokollen mit der GIO-API. Entwickler sollten auf GVFS nicht direkt zugreifen. Stattdessen ist es besser, GIO zum automatischen Zugriff auf GVFS zu benutzen, sofern dieses aktiviert ist.
libIDL
libIDL ist eine veraltete Bibliothek zum Parsen von Dateien der »Interface Definition Language« (IDL), die für CORBA-Schnittstellen erforderlich ist. Die libIDL wird von ORBit verwendet, der GNOME-Implementation von CORBA. CORBA wird in
libart_lgpl
libart ist eine veraltete Grafikbibliothek, die Vektorpfade darstellen kann. Sie wird vom GnomeCanvas-Widget verwendet. Neu geschriebener Code sollte anstelle der libart_lgpl Cairo und/oder andere Technologien verwenden.
libbonobo
Bonobo ist ein veraltetes Framework zur Erzeugung wiederverwendbarer Komponenten für die Benutzung in GNOME-Anwendungen und setzt auf CORBA auf. Bonobo wird in
libbonoboui
Die veraltete Bonobo-Schnittstellenbibliothek stellt eine Reihe von Steuerungsmöglichkeiten der Benutzeroberfläche durch das Bonobo-Komponenten-Framework bereit. Bonobo wird in
libglade
Libglade ist eine veraltete Bibliothek, mit der Sie Benutzerschnittstellen dynamisch aus XML-Beschreibungen erstellen können. Sie wurde durch
libgnome
Die veraltete libgnome-Bibliothek stellt eine Anzahl nützlicher Routinen zum Bau moderner Anwendungen zur Verfügung, einschließlich Sitzungsverwaltung, Aktivierung von Dateien und Adressen sowie Anzeige von Hilfen.
libgnomecanvas
Das GnomeCanvas-Widget stellt ein flexibles Widget zur Erzeugung interaktiver strukturierter Grafiken bereit.
libgnomeui
Die veraltete libgnomeui-Bibliothek stellt zusätzliche Widgets für Anwendungen zur Verfügung. Viele dieser Widgets wurden bereits auf GTK+ portiert.
libxml2
Die libxml2-Bibliothek stellt eine Reihe von Schnittstellen zum Arbeiten mit XML in einer standardkonformen Art und Weise bereit. Die libxml2-Bibliothek wird in
libxslt
Die libxslt-Bibliothek ist eine schnelle und vollständige Implementation von XSLT, einer Sprache zur XML-Umwandlung. Die libxslt-Bibliothek wird in
pango
Pango ist die Kernbibliothek für den Umgang mit Texten und Schriften in GNOME-Anwendungen. Sie bietet umfangreiche Unterstützung für die verschiedenen Schriftsysteme dieser Welt. Pango wird in
Desktop-Module
Für die Module des GNOME-Desktops ist es nicht notwendig, die gleichen API- und ABI-Stabilitätsgarantien anzubieten wie für die Module der Plattform, jedoch wird versucht, sie ausreichend stabil zu halten. Oft werden Module in der Desktop-Veröffentlichung eingeführt und halten später in der Plattform Einzug, sobald ausreichende Stabilität gewährleistet ist.
eel
Die eel-Bibliothek stellt eine Reihe von Widgets bereit, die vorrangig für den Einsatz im GNOME-Dateimanager
evolution-data-server
Der »Evolution Data Server« bietet einen zentralen Ort für Adressbuch- und Kalenderinformationen, so dass mehrere Anwendungen die Daten gemeinsam nutzen können. Der »Evolution Data Server« wird in
gnome-panel
Zusätzlich zum Panel an sich stellt das Paket gnome-panel die Bibliotheken zum Entwerfen von Panel-Applets bereit, die im Panel des Benutzers ausgeführt werden können. Panel-Applets werden in
gnome-keyring
Die GNOME-Schlüsselbundverwaltung ist eine moderne und sichere Möglichkeit zur Speicherung von Benutzerpasswörtern und anderen sicherheitsrelevanten Daten. Die Schlüssel werden verschlüsselt und sind nur für den legitimierten Benutzer zugänglich. Die Schlüsselbundverwaltung wird in
gstreamer
GStreamer ist ein mächtiges Multimedia-Werkzeug, das überall in GNOME zum Wiedergeben, Erzeugen und Bearbeiten von Klängen und Video benutzt wird. GStreamer wird in
gtkhtml
Die gtkhtml-Bibliothek stellt einen ressourcenschonenden HTML-Renderer mit voller Unterstützung für die reale Textbearbeitung bereit. Sie wird im E-Mail-Programm
gtksourceview
Die gtksourceview-Bibliothek ist eine Erweiterung des GtkTextView-Widgets mit Unterstützung für automatische Syntax-Hervorhebung und weiterer Funktionen, die für Quellcode-Editoren nützlich sind. Sie wird im
libgail-gnome
GAIL stellt eine Implementation von ATK-Schnittstellen für GTK+ und GNOME-Bibliotheken bereit, so dass die Barrierefreiheits-Werkzeuge mit Anwendungen interagieren können, welche diese Bibliotheken verwenden. Die Barrierefreiheit wird in
libgnomeprint
Die veraltete libgnomeprint-Bibliothek bietet eine Implementation des PostScript-Darstellungsmodells und kann zur Erzeugung qualitativ hochwertiger Druckobjekte verwendet werden. Sie wurde durch
libgnomeprintui
Die veraltete libgnomeprint-Bibliothek stellt einen Standard-Druckdialog bereit, einen Dialog zur Druckvorschau und verschiedene andere auf Druckvorgänge bezogene Steuerungsmöglichkeiten. Sie wurde durch
libgtop
Die libgtop-Bibliothek stellt eine portable Schnittstelle zum Erhalten von Informationen über laufende Prozesse bereit. Sie wird in der
librsvg
Die librsvg-Bibliothek ist eine Implementation skalierbarer Vektorgrafiken (SVG). Sie wird im gesamten Desktop verwendet, um auflösungsunabhängige Vektorgrafiken darzustellen.
libsoup
Die libxslt-Bibliothek ist eine schnelle und vollständige Implementation von XSLT, einer Sprache zur XML-Umwandlung. Die libxslt-Bibliothek wird in
libwnck
Die libwnck-Bibliothek ist für die Steuerung eines EWMH-kompatiblen Fenstermanagers zuständig, unter anderem
libxklavier
Die libxklavier-Bibliothek bietet eine hochentwickelte Schnittstelle für den Zugriff und die Einstellungen von Tastaturbelegungen. Sie wird in den
vte
VTE ist das Terminalemulator-Widget für GTK+-Anwendungen. Es stellt eine konsistente Schnittstelle bereit und verwendet Pango zur Textdarstellung, wobei jeglicher internationalisierter Text angezeigt werden kann. VTE wird in der GNOME-Anwendung
Überblick über die GNOME-Plattform
2005
2006
Shaun McCance
GNOME-Foundation
16. März 2007
2.20
Überblick über die mächtigen Technologien der GNOME-Plattform.
Shaun
McCance
GNOME-Dokumentationsprojekt
shaunm@gnome.org
Mario Blättermann <mariobl\@gnome\.org>, 2009, 2010
SOAP
Mit der libsoup-Bibliothek stellt GNOME Unterstützung für SOAP bereit, ein oft verwendetes Protokoll für die Übertragung von XML-Meldungen über HTTP. SOAP erlaubt Entwicklern die Bereitstellung einer Web-Schnittstelle, die dann von Anwendungen zum Abrufen von Informationen, Senden von Daten, für Transaktionen oder jeden anderen verfügbaren Dienst verwendet werden kann.
SOAP kann zum Suchen und Abrufen von Informationen verewendet werden, zur Interaktion mit einem Online-Speicher, zur Verwaltung von Benutzerkonten auf anderen Systemen und für viele andere Zwecke. Webdienste stellen mehr und mehr grundlegende Funktionen für Benutzer bereit. Anwendungen, die SOAP verwenden, können die Integration und Bedienbarkeit für Benutzer verbessern.
Die libsoup-Bibliothek enthält eine HTTP-Implementation sowie eine Reihe von Schnittstellen für die Konstruktion und Verarbeitung von SOAP-Meldungen. Sie erlaubt die sichere Legitimierung, so dass Webdienste auf private Benutzerkonten über eine sichere Verbindung zugreifen können. Die Verwendung von libsoup ermöglicht den leichten Zugriff auf Webdienste ohne manuelles Parsen und Interpretieren der durch SOUP gesendeten Meldungen.
Die libsoup-Bibliothek bildet sowohl eine Implementation des »Simple Object Access Protocol« (SOAP) als auch eine HTTP-Implementation. SOAP kann zum Einbau von Webdiensten in Anwendungen genutzt werden. Die libsoup-Bibliothek wird in
svn.gnome.org