# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

While...Wend-Anweisung [Laufzeit]
/text/sbasic/shared/03090203.xhp
Sun Microsystems, Inc.
converted from old format - fpe
While;While...Wend-Schleife
While...Wend-Anweisung [Laufzeit]
Wenn das Programm auf eine While-Anweisung trifft, überprüft es die angegebene Bedingung.
Ist die Bedingung nicht erfüllt, wird das Programm direkt hinter der Wend-Anweisung fortgesetzt.
Ist die Bedingung erfüllt, wird die Schleife ausgeführt, bis das Programm auf die Wend-Anwendung trifft.
An diesem Punkt springt das Programm zurück zur While-Anweisung.
Wenn die Bedingung dann immer noch erfüllt ist, wird die Schleife ein weiteres Mal ausgeführt usw.
Do...Loop
kann eine
While...Wend
-Schleife nicht mit
Exit
verlassen werden.
Sie sollten ebenfalls davon Abstand nehmen, eine
While...Wend
-Schleife mit
GoTo
zu verlassen, da dies zu Laufzeitfehlern führen kann.
Do...Loop
flexibler und damit empfehlenswert.
Syntax:
While Bedingung [Anweisung] Wend
Beispiel:
Sub ExampleWhileWend
Dim stext As String
Dim iRun As Integer
sText = &quot; Das ist ein kleiner Text &quot;
iRun = 1
while iRun < Len(sText)
if Mid(sText,iRun,1 ) < > &quot; &quot; then Mid( sText ,iRun, 1, Chr( 1 + Asc( Mid(sText,iRun,1 )) )
iRun = iRun + 1
Wend
MsgBox sText,0, &quot; Text verschlüsselt &quot;
end sub