# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

pg_last_oid() wird benutzt, um den Object Identifier oid, der einem eingefügten Datensatz (Tupel) zugewiesen wurde, auszulesen. result muss die Ergebniskennung des letzten Kommandos sein, das mit pg_query() an den Server gesendet wurde, und dieses Kommando muss ein INSERT gewesen sein.
Die Funktion gibt einen positiven Integerwert zurück, wenn es einen gültigen oid gibt.
Falls ein Fehler auftritt, oder das letzte Kommando, das mit pg_query() gesendet wurde, kein INSERT war, oder der INSEERT fehlgeschlagen ist, wird FALSE zurückgegeben.
Das OID-Feld (Datensatznummer) wurde in der PostgreSQL-Version 7.2 optional.
Falls eine Tabelle ohne OID definiert wurde, muss mit der Funktion pg_result_status() geprüft werden, ob ein Datensatz korrekt eingefügt wurde.
Anmerkung:
Diese Funktion ersetzt die Funktion pg_getlastoid().
Siehe auch pg_query() und pg_result_status().
Zurück
Zum Anfang
Nach vorne

Nach oben
