# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Kapitel 5.
Sicherheit
Nach vorne
In vielen PHP Programmen liegt die größte Schwäche nicht an der Sprache selbst, sondern bloß an Code, der nicht mit dem nötigen Augenmerk auf die Sicherheit geschrieben wurde.
Deshalb sollten Sie sich immer Zeit nehmen, die Implikationen eines gegebenen Codestücks zu bedenken, um einen möglichen Schaden durch eine eventuell unerwartete übergebene Variable festzustellen.
Beispiel 5-17.
Gefährliche Verwendung von Variablen
?php / / lösche eine Datei aus dem Benutzer-Verzeichnis... / / oder vielleicht dem eines anderen Benutzers? unlink ($evil_var); / / Schreibe die Log-Information von deren Zugriff... / / oder vielleicht einen / etc / passwd Eintrag? fputs ($fp, $evil_var); / / Führe etwas triviales aus... oder rm -rf *? system ($evil_var); exec ($evil_var);?
Wird sich dieses Skript nur auf die vorgesehenen Dateien auswirken?
Kann auf ungewöhnliche oder unerwünschte Daten reagiert werden?
Kann dieses Skript auf nicht vorgesehene Art genutzt werden?
Kann dies in Verbindung mit anderen Skripten in einer negativen Art benutzt werden?
Werden alle Transaktionen ausreichend geloggt?
Sie könnten auch Überlegungen anstellen, ob Sie nicht register_globals, magic_quotes, oder andere bequeme Einstellungen abschalten, welche Sie in Punkto Gültigkeit, Herkunft, oder Inhalt einer gegebenen Variable durcheinanderbringen könnten.
Mit PHP im error_reporting( E_ALL) Modus zu arbeiten kann auch helfen, Sie vor Variablen zu warnen, welche benutzt werden, bevor sie geprüft oder initialisiert wurden (so können Sie verhindern, dass mit ungewöhnlichen Daten gearbeitet wird).
Zurück
Zum Anfang
Nach vorne
Verwendung von Register Globals
Nach oben
Verstecken von PHP