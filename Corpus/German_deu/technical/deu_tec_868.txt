# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Abfrageentwurf
/text/shared/explorer/database/02010100.xhp
Ansichten; Datenbankansichten erzeugen (Base)
Abfragen; in der Entwurfsansicht erstellen (Base)
Entwerfen; Abfragen (Base)
Entwurfsansicht; Abfragen/Ansichten (Base)
Verknüpfen;Tabellen (Base)
Tabellen in Datenbanken; für Abfragen verknüpfen (Base)
Abfragen; Tabellen verknüpfen (Base)
Tabellen in Datenbanken; Relationen (Base)
Relationen; Tabellen verknüpfen (Base)
Abfragen; Tabellenverknüpfungen löschen (Base)
Kriterien beim Entwerfen von Abfragen (Base)
Abfragen; Filterbedingungen formulieren (Base)
Filterbedingungen;in Abfragen (Base)
Parameter; Abfragen (Base)
Abfragen; Parameterabfragen (Base)
SQL; Abfragen (Base)
Native SQL (Base)
mw added &quot; (Base) &quot; to all entries
Abfrageentwurf
Abfrageentwurfsansicht
können Sie neue Datenbankabfragen erstellen und vorhandene bearbeiten.
Die meisten Datenbanken verwenden Abfragen, um Datensätze aus Datenbanktabellen auf dem Computer gefiltert und sortiert anzuzeigen.
Sichten bieten die gleiche Funktionalität wie Abfragen, sind jedoch serverseitig angeordnet.
Wenn Ihre Datenbank auf einem Server installiert ist, der Sichten unterstützt, können Sie mit diesen Sichten Datensätze auf dem Server filtern, um die zur Anzeige benötigte Zeit zu verkürzen.
Ansicht erstellen
im Bereich
Tabellen
des Aufgabenfensters einer Datenbank wählen, wird das Fenster
Ansichtsentwurf
geöffnet, das dem hier beschriebenen Fenster
Abfrageentwurf
entspricht.
Das Aussehen der Abfrage-Entwurfsansicht wird mit der erzeugten Abfrage gespeichert.
Sie kann aber nicht mit der erzeugten Ansicht gespeichert werden.
Die Entwurfsansicht
Abfragen
, dann klicken Sie auf
Abfrage in der Entwurfsansicht erstellen
.
definieren
Sie die Abfrage.
Zur Definition einer Abfrage geben Sie die
Feldnamen
der in der Datenbank zu berücksichtigenden Felder sowie die
Kriterien
zur Anzeige der Felder an.
Die Spalten im unteren Fensterbereich der Entwurfsansicht lassen sich durch Ziehen der Spaltenköpfe oder Auswählen der Spalten und Drücken von
Befehl
Strg
+Pfeiltaste umordnen.
Symbolleiste
Abfrageentwurf
.
Abfrage ausführen
in der Symbolleiste
Abfrageentwurf
.
Das Abfrageergebnis wird in einer der Datenquellenansicht ähnlichen Tabelle angezeigt.
Hinweis:
Die Anzeige dieser Tabelle ist nur temporär.
Schlüssel in der Abfrageentwurfsansicht
Schlüssel
Funktion
F4
Vorschau
F5
Abfrage ausführen
F7
Tabelle oder Abfrage hinzufügen
Tabellen auswählen
Tabellen hinzufügen
klicken.
Dadurch öffnet sich ein Dialog, in dem Sie zunächst die als Grundlage für die Abfrage dienende Tabelle wählen müssen.
Doppelklicken Sie auf Felder, um sie der Abfrage hinzuzufügen.
Mit Drag- & -Drop definieren Sie Relationen.
Während Sie eine Abfrage erstellen, können Sie die ausgewählten Tabellen nicht mehr verändern.
Tabellen entfernen
Löschen
wird die Tabelle aus der Entwurfsansicht entfernt.
Alternativ können Sie auch die (Entf)-Taste betätigen.
Tabellen verschieben und Tabellengröße ändern
Sie können die Tabellen nach Ihren Wünschen anordnen und sie in der Größe verändern.
Um eine Tabelle zu verschieben, fassen Sie sie mit der Maus am oberen Rand und ziehen Sie sie in die gewünschte Position.
Um sie in der Darstellung zu vergrößern oder zu verkleinern, ziehen Sie den Rand oder eine Ecke.
Beziehungen zwischen Tabellen
Wenn es Datenbeziehungen zwischen einem Datenfeld in einer Tabelle zu einem Datenfeld in einer anderen Tabelle gibt, dann können Sie diese Beziehungen für Ihre Abfrage nutzen.
Nehmen wir beispielsweise an, Sie haben ein Tabelle für Artikel, in der jeder Artikel durch eine Artikelnummer gekennzeichnet ist, und eine Tabelle für Kunden, in der alle von den Kunden bestellten Artikel anhand der Artikelnummern verzeichnet sind.
In diesem Fall besteht eine Beziehung zwischen den beiden &quot; Artikelnummer &quot; -Datenfeldern.
Wenn Sie nun eine Abfrage erstellen möchten, die alle von einem Kunden bestellten Artikel ausgibt, müssen Sie Daten aus zwei Tabellen abrufen.
Dafür müssen Sie $[officename] die Beziehung zwischen den Daten in den beiden Tabellen aufzeigen.
Klicken Sie dazu ein Datenfeld einer Tabelle an (z.
B. das Datenfeld &quot; Artikel-Nummer &quot; aus der Kunden-Tabelle) und ziehen Sie dann bei gedrückt gehaltener Maustaste auf das Datenfeld der anderen Tabelle ( &quot; Artikel-Nummer &quot; aus der Artikel-Tabelle).
Wenn Sie nun die Maustaste loslassen, sehen Sie eine Linie, die die beiden Felder in den beiden Fenstern verbindet.
In der resultierenden SQL-Abfrage wird die entsprechende Bedingung eingetragen, dass der Inhalt beider Datenfelder gleich sein muss.
Das Erstellen einer Abfrage, der mehrere in Beziehung zueinander stehende Tabellen zugrunde liegen, ist nur dann möglich, wenn Sie $[officename] als Oberfläche für eine relationale Datenbank verwenden.
In einer Abfrage kann nicht auf Tabellen aus verschiedenen Datenbanken zugegriffen werden.
Abfragen, die auf mehreren Tabellen beruhen, können nur innerhalb einer Datenbank erstellt werden.
Verknüpfungsart festlegen
Einfügen - Neue Relation...
wählen, können Sie im Dialog
Verbundeigenschaften
(Relationen) den gewünschten Verbindungstyp angeben.
Bearbeiten der Verbundeigenschaften.
Alternativ drücken Sie die Tabulatortaste, bis die Verbindungslinie ausgewählt ist.
Dann drücken Sie Umschalt+F10, um das Kontextmenü anzuzeigen und dort den Befehl
Bearbeiten
auszuwählen.
Einige Datenbanken unterstützen nur eine Teilmenge der möglichen Verbindungsarten.
Beziehungen löschen
Wenn Sie eine Beziehung zwischen zwei Tabellen löschen möchten, dann klicken Sie die Verbindungslinie mit der Maus an und drücken Sie dann die (Entf)-Taste.
beteiligte Felder
im Dialog
Verbundeigenschaften
löschen.
Oder drücken Sie die Tabulatortaste, bis die Verbindungslinie hervorgehoben wird, drücken Sie Umschalt+F10 zum Öffnen des Kontextmenüs, und wählen Sie den Befehl
Löschen
.
Abfrage definieren
Wählen Sie die Bedingungen zum Definieren der Abfrage.
Jede Spalte der Entwurfstabelle nimmt ein Datenfeld für die Abfrage auf.
Die Bedingungen in einer Zeile werden durch ein logisches UND verknüpft.
Datenfelder festlegen
Wählen Sie zunächst in den Tabellen alle Feldnamen aus, die in der Abfrage berücksichtigt werden sollen.
Dies geschieht entweder per Ziehen und Ablegen oder durch Doppelklicken auf einen Feldnamen im Tabellenfenster.
Beim Ziehen und Ablegen ziehen Sie einen Feldnamen mit der Maus aus dem Tabellenfenster in den unteren Fensterbereich des Abfrageentwurfs.
Dabei können Sie entscheiden, in welche Spalte das Feld eingefügt werden soll.
Wählen Sie einen Feldnamen aus, indem Sie darauf doppelklicken.
Er wird dann in die nächste freie Spalte eingefügt.
Datenfelder löschen
Löschen
im Kontextmenü der Spalte auf.
Abfrage speichern
Speichern
in der Standardleiste speichern Sie die Abfrage.
Sie sehen einen Dialog, der Sie zum Eingeben eines Namens für die Abfrage auffordert.
Wenn die Datenbank Schemas unterstützt, können Sie auch ein Schema eingeben:
Schema
Geben Sie den Namen des Schemas ein, dem die Abfrage/Tabellenansicht zugeordnet wird.
Name der Abfrage / Tabellenansicht
Geben Sie den Namen der Abfrage/Tabellenansicht ein.
Filterung der Daten
Zum Filtern der Daten für die Abfrage nehmen Sie im unteren Fensterbereich der Entwurfsansicht die gewünschten Einstellungen vor.
Die folgenden Zeilen stehen zur Verfügung:
Feld
Geben Sie den Namen des Datenfelds ein, auf das sich die Abfrage bezieht.
Alle Einstellungen in den unteren Zeilen gelten für dieses Feld.
Wenn Sie eine Zelle per Mausklick aktivieren, wird eine Pfeilschaltfläche eingeblendet, die zum Auswählen von Feldern dient.
Mit der Option &quot; Tabellenname.* &quot; wählen Sie alle Datenfelder aus, und die Kriterien gelten dann für alle Tabellenfelder.
Alias
Dient zur Angabe eines Aliasnamens.
Der Aliasname wird in der Abfrage anstelle des Feldnamens angezeigt.
Diese Funktion ermöglicht den Einsatz benutzerdefinierter Spaltenbeschriftungen.
Heißt das Datenfeld in der Tabelle beispielsweise &quot; Teilenr. &quot; und Sie möchten, dass in der Abfrage stattdessen der Name &quot; Teilenummer &quot; erscheint, so geben Sie &quot; Teilenummer &quot; als Aliasnamen ein (ohne die Anführungszeichen).
In einer SQL-Anweisung werden Aliasnamen wie folgt festgelegt:
SELECT column AS alias FROM table.
Beispiel:
SELECT &quot; ArtikelNr &quot; AS &quot; Artikel-Nummer &quot; FROM &quot; Artikel &quot;
Tabelle
Hier ist die zugehörige Datenbanktabelle des ausgewählten Datenfelds angegeben.
Wenn Sie eine Zelle per Mausklick aktivieren, wird eine Pfeilschaltfläche eingeblendet, die zur Auswahl einer anderen Tabelle der aktuellen Abfrage dient.
Sortierung
Wenn Sie die Zelle anklicken, können Sie zwischen folgenden Sortieroptionen wählen: aufsteigend, absteigend oder nicht sortiert.
Text-Felder werden alphabetisch sortiert, numerische Felder numerisch.
Für die meisten Datenbanken können die Administratoren die Sortieroptionen setzen.
Sichtbar
Sichtbar
für ein Datenfeld, dann wird dieses in der Abfrage sichtbar aufgeführt.
.
Wenn Sie ein Datenfeld nur zur Formulierung einer Bedingung nutzen möchten, brauchen Sie es für die Abfrage nicht unbedingt einzublenden.
Kriterien
Kriterien
fest, nach denen der Inhalt des Datenfelds gefiltert werden soll.
oder
Hier können Sie in jeder Zeile je ein weiteres Kriterium für die Filterung eingeben.
Mehrere Kriterien in einer Spalte werden mit einer ODER-Verknüpfung verbunden.
Darüber hinaus können Sie über das Kontextmenü der Zeilenköpfe im unteren Bereich des Abfrageentwurfs noch eine Zeile für Funktionen einfügen:
Funktionen
Hier können Sie eine Funktion auswählen, die in der Abfrage ausgeführt werden soll.
Sie können in Abfragen Funktionen ausführen, wobei die unterschiedlichen Möglichkeiten von dem von Ihnen verwendeten Datenbanksystem abhängen.
Funktion
-Reihe die folgenden Optionen:
Option
SQL
Auswirkung
keine Funktion
Es wird keine Funktion ausgeführt.
Durchschnitt
AVG
Berechnet das arithmetische Mittel eines Feldes.
Anzahl
COUNT
Bestimmt die Anzahl der Datensätze in der Tabelle.
Dabei können leere Felder entweder gezählt (a) oder übersprungen (b) werden.
a) COUNT(*):
Wenn Sie als Argument ein Sternchen übergeben, werden alle Datensätze der Tabelle gezählt.
b) COUNT(column):
Wenn Sie als Argument ein Datenfeld übergeben, werden nur die Felder gezählt, in denen das jeweilige Datenfeld einen Wert enthält.
Null-Werte (leere Felder) werden dabei nicht mitgezählt.
Maximum
MAX
Ermittelt den höchsten Wert eines Feldes.
Minimum
MIN
Ermittelt den niedrigsten Wert eines Feldes.
Summe
SUM
Berechnet die Summe der Werte des zugehörigen Feldes.
Gruppierung
GROUP BY
Gruppiert Abfragedaten nach dem ausgewählten Feldnamen.
Die Funktionen werden für die angegebenen Gruppen ausgeführt.
Diese Option entspricht in SQL der Klausel GROUP BY.
Wenn Sie ein Kriterium hinzufügen, erscheint dieser Eintrag in SQL nach HAVING.
Es besteht auch die Möglichkeit, Funktionsaufrufe direkt in den SQL-Ausdruck einzugeben.
Die Syntax lautet:
SELECT FUNCTION(column) FROM table.
Im SQL lautet der Funktionsaufruf zur Summenberechnung beispielsweise:
SELECT SUM( &quot; Preise &quot; ) FROM &quot; Artikel &quot; .
Gruppierung
handelt es sich bei den obigen Funktionen um so genannte Aggregatfunktionen.
Das sind Funktionen, die Daten durch Berechnungen zu Ergebnissen zusammenfassen.
Weitere Funktionen sind möglich, die nicht im Listenfeld aufgeführt sind.
Diese hängen von dem speziellen Datenbanksystem, das Sie verwenden als auch vom gegenwärtigen Zustand des Base-Treibers ab.
Feld
eingeben.
Alias
ein.
Im SQL-Statement lautet ein entsprechender Funktionsaufruf:
SELECT FUNCTION() AS alias FROM table
Beispiel:
SELECT COUNT(*) AS Anzahl FROM &quot; Artikel &quot;
Wenn Sie eine Funktion ausführen, können Sie keine weiteren Spalten für die Abfrage einfügen, außer diese Spalten erhalten als Funktion &quot; Gruppierung &quot; .
Beispiele
Im folgenden Beispiel wird eine Abfrage über zwei Tabellen ausgeführt: eine Tabelle &quot; Artikel &quot; mit dem Feld &quot; Artikel_Nr &quot; und eine Tabelle &quot; Lieferanten &quot; mit dem Feld &quot; Lieferanten_Name &quot; .
Außerdem besitzen beide Tabellen ein gemeinsames Datenfeld &quot; Lieferanten_Nr &quot; .
Um eine Abfrage zu erstellen, die alle Lieferanten beinhaltet, die mehr als drei Artikel liefern, sind folgende Schritte nötig:
Die Tabelle &quot; Artikel &quot; und &quot; Lieferanten &quot; in den Abfrageentwurf einfügen.
Die Felder &quot; Lieferanten_Nr &quot; beider Tabellen verbinden, falls es nicht schon eine entsprechende Relation zwischen den Tabellen gibt.
Funktion
über das Kontextmenü einblenden und die Funktion Anzahl auswählen.
Als Kriterium > 3 eingeben und das Sichtbar-Feld ausschalten.
Das Feld &quot; Lieferanten_Name &quot; aus der Tabelle &quot; Lieferanten &quot; doppelt anklicken, und die Funktion Gruppierung auswählen.
Führen Sie die Abfrage aus.
Wenn in der Tabelle &quot; Artikel &quot; die Felder &quot; Preis &quot; (für den Einzelpreis eines Artikels) und &quot; Lieferanten_Nr &quot; (für den Lieferanten des Artikels) existieren, können Sie mit folgender Abfrage den Durchschnittspreis der Artikel erhalten, die ein Lieferant bereitstellt:
Die Tabelle &quot; Artikel &quot; in den Abfrageentwurf einfügen.
Die Felder &quot; Preis &quot; und &quot; Lieferanten_Nr &quot; doppelt anklicken.
Funktion
einschalten und bei dem Feld &quot; Preis &quot; die Funktion Durchschnitt auswählen.
Auf Wunsch in der Zeile für den Aliasnamen &quot; Durchschnitt &quot; eintragen (ohne Anführungsstriche).
Bei dem Feld &quot; Lieferanten_Nr &quot; die Gruppierung auswählen.
Führen Sie die Abfrage aus.
Folgende Kontextmenübefehle und Symbole sind vorhanden:
Funktionen
Blendet eine Zeile für Funktionen ein oder aus.
Tabellenname
Blendet die Zeile für den Tabellennamen ein oder aus.
Aliasname
Blendet die Zeile für den Aliasnamen ein oder aus.
Eindeutige Werte
Wendet nur eindeutige Werte auf die Abfrage an.
Dies gilt für Datensätze mit Daten, die in den ausgewählten Feldern mehrmals auftreten.
Ist der Befehl
Eindeutige Werte
aktiv, wird nur ein Datensatz in der Abfrage angezeigt (DISTINCT).
Anderenfalls sind alle die Abfragekriterien erfüllenden Datensätze sichtbar (ALL).
Eindeutige Werte
angeben, dass er in der Abfrage nur einmal erscheinen soll.
Eindeutige Werte
liefert die Abfrage über die Felder &quot; Nachname &quot; und &quot; Stadt &quot; als Ergebnis einmal &quot; Schmitt in Hamburg &quot; und einmal &quot; Schmitt in Mainz &quot; .
Dieser Befehl entspricht in SQL dem Prädikat DISTINCT.
Formulieren von Filterbedingungen
Für das Formulieren von Filterbedingungen stehen Ihnen verschiedene Operatoren und Befehle zur Verfügung.
Außer den relationalen Operatoren gibt es auch SQL-spezifische Befehle zum Abfragen der Inhalte von Datenbankfeldern.
Wenn Sie diese Befehle in der $[officename]-Syntax verwenden, konvertiert $[officename] sie automatisch in die entsprechende SQL-Syntax.
Sie können SQL-Befehle auch direkt eingeben.
Die folgenden Tabellen bieten einen Überblick über die Operatoren und Befehle:
Operator
Bedeutung
Bedingung ist erfüllt, wenn...
=
ist gleich
... der Feldinhalt mit dem angegebenen Ausdruck identisch ist.
=
wird in den Abfragefeldern nicht angezeigt; geben Sie einen Wert ohne Operator ein, wird der Operator
=
angenommen.
< >
ist ungleich
... der Feldinhalt dem angegebenen Ausdruck nicht entspricht.
>
ist größer
... der Feldinhalt größer ist als der angegebene Ausdruck.
<
ist kleiner
... der Feldinhalt kleiner ist als der angegebene Ausdruck.
> =
ist größer gleich
... der Feldinhalt größer oder gleich dem angegebenen Ausdruck ist.
< =
ist kleiner gleich
... der Feldinhalt kleiner oder gleich dem angegebenen Ausdruck ist.
$[officename]-Befehl
SQL-Befehl
Bedeutung
Bedingung ist erfüllt, wenn...
IST LEER
IS NULL bzw.
IST LEER
ist leer
... das Datenfeld leer ist.
Bei Ja/Nein-Feldern mit drei Zuständen, fragt dieser Befehl den unbestimmten Zustand ab (weder Ja noch Nein).
IST NICHT LEER
IS NOT NULL
ist nicht leer
... das Datenfeld nicht leer ist.
LIKE
(Platzhalter * für beliebig viele Zeichen
Platzhalter ? für genau ein Zeichen)
LIKE
Platzhalter in SQL-Abfragen
(Platzhalter % für beliebig viele Zeichen
Platzhalter _ für genau ein Zeichen)
ist Bestandteil von
... das Datenfeld den angegebenen Ausdruck enthält.
Platzhalter (*) geben hierbei an, ob der Ausdruck x am Anfang (x*), am Ende (*x) oder innerhalb des Feldinhalts (*x*) vorkommt.
Als Platzhalter können Sie in SQL-Abfragen das SQL-Zeichen % eingeben, in der $[officename] Oberfläche die aus dem Dateisystem gewohnten Platzhalter (*).
Der Platzhalter * oder % steht für beliebig viele Zeichen.
Für genau ein Zeichen dient in der $[officename] Oberfläche das Fragezeichen (?) oder in SQL-Abfragen der Unterstrich (_) als Platzhalter.
NICHT WIE
NICHT WIE
ist nicht Bestandteil von
... das Datenfeld den angegebenen Ausdruck nicht enthält.
ZWISCHEN x UND y
ZWISCHEN x UND y
liegt im Intervall [x,y]
... das Datenfeld einen Wert enthält, der zwischen den beiden Werten x und y liegt.
NOT BETWEEN x AND y
NOT BETWEEN x AND y
liegt nicht im Intervall [x,y]
... das Datenfeld einen Wert enthält, der nicht zwischen den beiden Werten x und y liegt.
IN (a; b; c...)
Achten Sie auf die Semikola als Trenner in allen Wertelisten!
IN (a, b, c...)
enthält a, b, c...
... das Datenfeld einen der angegebenen Ausdrücke a, b, c,... enthält.
Es können beliebig viele Ausdrücke angegeben werden, das Abfrageergebnis wird durch eine Oder-Verknüpfung ermittelt.
Die Ausdrücke a, b, c... können sowohl Zahlen als auch Zeichen sein
NICHT IN (a; b; c...)
NOT IN (a, b, c...)
enthält nicht a, b, c...
... das Datenfeld einen der angegebenen Ausdrücke a, b, c,... nicht enthält.
= WAHR
= WAHR
hat den Wert True
... das Datenfeld den Wert True hat.
= FALSCH
= FALSE
hat den Wert False
... das Datenfeld den Wert False hat.
Beispiele
='Frau'
liefert Datenfelder mit dem Feldinhalt &quot; Frau &quot; .
WIE 'H?llo'
liefert Datenfelder mit Feldinhalten wie &quot; Hallo &quot; und &quot; Hello &quot; .
WIE 'S*'
liefert Datenfelder mit Feldinhalten wie &quot; Sun &quot; .
ZWISCHEN 10 UND 20
liefert Datenfelder mit Feldinhalten zwischen den Werten 10 und 20.
(Dabei kann es sich sowohl um Textfelder als auch um Zahlenfelder handeln.)
IN (1; 3; 5; 7)
liefert Datenfelder mit den Werten 1, 3, 5, 7.
Beinhaltet das Datenfeld beispielsweise eine Artikel-Nummer, können Sie eine Abfrage erstellen, die bestimmte Artikel mit der angegebenen Nummer liefert.
NICHT IN ('Müller')
liefert Datenfelder, die nicht &quot; Müller &quot; enthalten.
Datumsfelder
werden zur eindeutigen Kennzeichnung in der Form #Datum# dargestellt.
Die Datumsbedingung wird in dem hieraus resultierenden SQL-Ausdruck auf die folgende ODBC-konforme Art wiedergegeben:
Datum
{D'YYYY-MM-DD'}
Datumzeit
{D'YYYY-MM-DD HH:MM:SS'}
Zeit
{D'HH:MM:SS'}
Escape-Sequenzen
:
Datum
{d 'YYYY-MM-DD'}
Zeit
{t 'HH:MI:SS[.SS]'} - [ ] optional
Datumzeit
{ts 'YYYY-MM-DD HH:MI:SS[.SS]'} - [ ] optional
Beispiel: select {d '1999-12-31'} from world.years
Like
Escape Sequence:
{escape 'escape-character'}
Beispiel: select * from Artikel where Artikelname like 'The *%' {escape '*'}
Das Beispiel liefert alle Einträge, wo der Artikelname mit 'The *' beginnt.
Sie können somit auch nach Zeichen suchen, die sonst als Platzhalter interpretiert werden, wie *, ?, _, % oder der Punkt.
Outer Join
Escape Sequence:
{oj outer-join}
Beispiel: select Artikel.* from {oj Artikel LEFT OUTER JOIN Bestellungen ON Artikel.Nr=Bestellungen.ANR}
Abfrage von Textfeldern
Um den Inhalt eines Textfeldes abzufragen, müssen Sie den Ausdruck in einfache Anführungszeichen setzen.
Zwischen Groß- und Kleinschreibung wird nicht unterschieden.
Abfrage von Datumsfeldern
Auch wenn Sie nach einem Datum filtern wollen, müssen Sie den Ausdruck in einfache Anführungszeichen setzen.
Folgende Formate sind möglich:
JJJJ-MM-TT HH:MM:SS und JJJJ/MM/TT HH:MM:SS sowie JJJJ.MM.TT HH:MM:SS
Abfrage von Ja/Nein-Feldern
Um Ja/Nein-Felder abzufragen, verwenden Sie für dBase-Tabellen die folgende Syntax:
Zustand
Abfragekriterium
Beispiel
Ja
bei dBase-Tabellen: ungleich zu jedem Wert
=1 liefert alle Datensätze, bei denen das Ja/Nein-Feld den Zustand &quot; Ja &quot; oder &quot; an &quot; hat (schwarze Markierung).
Nein
0
=0 liefert alle Datensätze, bei denen das Ja/Nein-Feld den Zustand &quot; Nein &quot; oder &quot; aus &quot; hat (keine Markierung).
Leer
IS NULL bzw.
IST LEER
IS NULL liefert alle Datensätze, bei denen das Ja/Nein-Feld keinen der beiden Zustände Ja oder Nein hat (graue Markierung).
Die Syntax ist von dem jeweiligen Datenbanksystem abhängig.
Beachten Sie außerdem, dass Ja/Nein-Felder unterschiedlich definiert sein können (nur zwei anstelle von 3 Zuständen).
Parameterabfragen
Wenn Sie Abfragen mit variablen Parametern erstellen möchten, müssen Sie die Variablen in eckige Klammern setzen (=[x]).
Alternativ können Sie ein Gleichheitszeichen, gefolgt von einem Doppelpunkt setzen (=:x).
Bei der Ausführung der Abfrage erscheint ein Dialog, in dem Sie gefragt werden, welchem Ausdruck die Variable x zugeordnet werden soll.
Beim gleichzeitigen Abfragen mehrerer Parameter weist der Dialog ein Listenfeld auf, in dem alle Parameter mit einer Eingabezeile daneben aufgeführt sind.
Geben Sie von oben nach unten die Werte ein, und drücken Sie nach jeder Zeile die Eingabetaste.
Parameterabfragen mit Platzhaltern (*, _) oder Sonderzeichen (z.
B. ?) sind nicht möglich.
Die Formulierung von Parameterabfragen bietet den Vorteil, dass eine solche mit Variablen gespeicherte Abfrage zu einem späteren Zeitpunkt als Grundlage für eine neue Abfrage verwendet werden kann.
Sobald Sie die Abfrage öffnen, fragt $[officename] nach diesen Variablen, die Sie dann nur noch durch die gewünschten Ausdrücke zu ersetzen brauchen.
Parameter-Eingabe
Parameter-Eingabe
werden Sie nach den in der Abfrage definierten Variablen gefragt.
Geben Sie für jede Variable der Abfrage einen Wert ein, und bestätigen Sie mit
Eingabetaste
.
Unterformulare
verwendet, da sie ausschließlich mit Abfragen arbeiten, bei welchen die abzurufenden Werte intern aus einer Variablen gelesen werden.
Im SQL-Statement sieht eine Parameterabfrage z.
B. so aus:
select * from 'adressen' where 'name' = :placeholder
SQL-Modus
SQL steht für &quot; Structured Query Language &quot; und beschreibt Anweisungen, um relationale Datenbanken abzufragen, zu aktualisieren und zu verwalten.
Design-Ansicht an-, ausschalten
in die SQL-Ansicht wechseln, sehen Sie die SQL-Befehle einer zuvor erstellten Abfrage.
Sie können Ihre Abfrage direkt im SQL-Code formulieren.
Dabei ist jedoch zu beachten, dass die spezielle Syntax von Ihrem verwendeten Datenbanksystem abhängt.
Abfrageentwurf
unterstützt werden.
Diese Abfragen müssen im Native-SQL-Modus ausgeführt werden.
SQL-Kommando direkt ausführen
in der SQL-Ansicht klicken, haben Sie die Möglichkeit, eine Abfrage zu formulieren, die nicht von $[officename] verarbeitet wird.