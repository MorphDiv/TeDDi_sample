# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

& quantaplus; erweitern
Christopher Hornbaker
chrishornbaker@earthlink.net
Andr#225;s Mantia
amantia@kde.org
Georg Schuster gschuster@utanet.at Deutsche Übersetzung
Dieses Kapitel beschreibt, wie Sie & quantaplus; an Ihre Bedürfnisse anpassen können und wie Sie & quantaplus; helfen können, besser zu werden.
Dokumenttyp Editierpaket (DTEP;)
Dokumenttyp Editierpakete (DTEP;s) werden in & quantaplus; verwendet, um Unterstützung für Markup- und Skriptsprachen sowie & CSS; zu geben. Sie ermöglichen & quantaplus; Fähigkeiten wie Autovervollständigung und Knotenbäume zu leisten. Ihre Einfachheit und Flexibilität macht aus & quantaplus; eine schnelle, benutzerfreundliche & IDE; für Webentwickler, einfach zu nutzen und produktiv.
& DTEP;s gibt es in zwei Arten, Familie 1, die Markup-Sprachen und Familie 2, die Skript-Sprachen bzw. & CSS;. & DTEP;s bestehen aus zwei Teilen, dem Tag-Ordner und den Werkzeugleisten. Tag-Ordner enthalten zwei Dateitypen, die & descriptionrc; und TagXML-Dateien mit der Endung .tag. Werkzeugleisten sind handliche, symbolorientierte Leisten von Bildknöpfen (oberhalb des Editier-Fensters), die Text und Anweisungen schneller in ein Dokument einfügen, als ein Benutzer je könnte.
& DTEP;s können händisch erstellt werden (siehe unten), heruntergeladen oder automatisch erstellt aus einer bestehenden DTD. Siehe in für Einzelheiten zur Umwandlung.
Dieses Dokument beschreibt, wie TagXML-Dateien zu erstellen sind, dann die & descriptionrc; und auch Werkzeugleisten. Kurz, eine & DTEP;.
TagXML Dateien (.tag) definieren sowohl die spezifischen Attribute für Tags als auch das Layout und den Inhalt des Eigenschaftendialoges, den & quantaplus; für den Tag zeigt. Die & descriptionrc; Datei enthält die Regeln und Informationen der & DTEP; selbst. Werkzeugleisten ermöglichen ein schnelles Einfügen von Tags in ein Dokument ohne Gefahr eines Schreibfehlers.
Gliederung
Tag-Ordner sind nichts als Ordner. Sie enthalten nur die & descriptionrc; und die TagXML-Dateien. Tag-Ordner tragen den Namen der Beschreibungs-Sprache und Version, so vorhanden. (zum Beispiel, html-4.01-strict)
TagXML
Die Tabelle unten listet die Elemente der TagXML auf und deklariert, ob sie notwendig sind, oder nicht. Obwohl nicht alle notwendig sind, ist es ratsam, so viele wie möglich zu verwenden, damit andere Benutzer einen besseren Einblick und mehr Informationen bei der Arbeit mit ihnen haben.
Element
Standardanwendung
Fallbeispiel
TAGS
notwendig
immer
tag
label
optional
um einen Eigenschaftendialog darzustellen
attr
für die Definition einer Eigenschaft
tooltip
um im Eigenschaftendialog einen Tipp anzeigen zu können
whatsthis
um im Eigenschaftendialog einen Was ist das? Tipp zeigen zu können
list
um die Eigenschaft vom Typ list zu deklarieren
item
für die Verwendung eines & lt;list > Listenelementes
textlocation
location
für einen Text
text
children
Liste der Tags, die innerhalb des definierten Tags eingefügt werden dürfen
child
ein Kindeintrag
stoppingtags
Liste der Tags, die einen anderen Tag beenden
stoppingtag
ein Tags beendender Eintrag
TagXML Elementbeschreibung
Das folgende Kapitel beschreibt jedes Element im Einzelnen. Alles über die Möglichkeiten und Grenzen wird in einfacher Weise dargelegt.
TAGS
Das ist das Wurzelelement eines TagXML-Dokumentes. Es kann nur einmal in einem Dokument vorkommen. Es kann die Definition vieler Tags enthalten, enthält aber als nur-Element Typ über sich selbst sonst nichts.
Eltern
Kinder
Nichts
tag
Verbinder (Wrapper) für ein zu definierendes Tag. Dieses Element ist ein nur-Element Typ.
label, attr, stoppingtags
Attribute
Typ
Werte
Standard
Verwendung
Beschreibung
Name
Zeichenkette
Benennt das zu definierende Tag.
einzel
boolean
Legt fest, ob ein Tag ein schließendes Tag & lt;/(Tag-Name) > benötigt.
type
xmltag
Definiert den Typ des Tags.
Der Typ des Tags ist XML-beschrieben (nur Familie 1)
Entität
Der Tags beschreibt eine Entität. (nur Familie 1)
property
Der Typ des Tags ist & CSS;-bezogen. (nur Familie 2)
function
Der Typ des Tags ist eine Skript-Funktion. Bei der Verwendung wird & lt;attr > ein Argument der Funktion. (nur Familie 2)
class
Der Typ des Tags ist eine Skript-Klasse. (nur Familie 2)
Methode
Der Typ des Tags ist eine Klassenmethode. (nur Familie 2)
returnType
void
Beschreibt den Rückgabetyp des Tags. (nur Familie 2)
Der Typ von Tag gibt void (nichts) zurück.
int
Der Typ von Tag gibt int (eine Ganzzahl) zurück.
float
Der Typ von Tag gibt ein float (Gleitkommazahl) zurück.
long
Dieser Typ Tag gibt ein long (sehr große Ganzzahl) zurück.
Dieser Typ von Tags gibt ein string (eine Zeichenkette) zurück.
version
Gibt die Sprachversion an, für die dieser Tag gültig ist
extends
Nur für den Tagtyp class gültig. Der Name der Basisklasse für diese Klasse. (nur Familie 2)
Nur für den Type method gültig. Gibt den Namen der Klasse an, wohin diese Methode gehört. (nur Familie 2)
common
wenn yes, hat der Tag ein common-Attributgruppe und die Attribute innerhalb dieses Tags können zu jedem anderen Tag hinzugefügt werden. (nur Familie 1)
Kommentar
die Kommentar-Zeichenkette erscheint neben dem Tagnamen im Vervollständigungsfeld
label
Setzt einen Text in den Dialog. Dieser Text wird durch das & lt;text > -Tag bestimmt. Das ist ein nur-Element Typ Element.
text, location
attr
Beschreibt ein Attribut eines Tags. Dieses Element kann nur einmal für jedes Attribut vorkommen. Es legt den Namen und den Typ des Attributes fest. Zusätzlich enthält es weitere Tags, die beschreiben, wie dieses Attribut angezeigt werden soll & etc; Dies ist ein nur-Element -Typ-Element.
location, list, tooltip, whatsthis, textlocation
Beschreibt den Namen des zu definierenden Attributes.
input
Beschreibt den Typ des zu definierenden Attributes.
Das Feld unterstützt freie Texteinträge (Textfeld).
check
Der Feldtyp ist boolean (Optionsfeld).
color
Der Feldinhalt ist eine Farbangabe.
url
Feldinhalt ist eine Adresse (URL;). (eine lokale Dateireferenz)
Feldinhalt ist ein Element von einer angegebenen Liste.
status
Legt fest, ob ein Argument erforderlich ist. (nur Familie 2)
Das Argument ist optional.
Das Argument ist erforderlich.
implied
Das Argument ist inbegriffen.
source
Gibt die zur Ausfüllung verwendeten Quelltexte für die Attribute im Tag-Editordialog und im Attribut-Baum an
selection
Der ausgewählte Text wird als Quelle verwendet
dcop
Das Ergebnis einer dcop-Methode wird als Quelle verwendet
interface
Erfordert source= dcop. Die dcop-Schnittstelle innerhalb von & quantaplus; wird zum Erreichen der Quelldaten genutzt.
Erfordert source= dcop und den Namen einer Schnittstelle. Der dcop-Methodenname innerhalb von & quantaplus; wird zur Erreichung der Datenquelle genutzt.
arguments
Erfordert source= dcop, einen Schnittstellen- und einen Methodennamen. Die Argumente, die an die Methode übergeben werden. Kann leer sein oder %tagname%, das bedeutet den Namen des aktuellen Tags.
tooltip
Beschreibt eine Sprechblasenhilfe (tooltip) für ein Feld in dem Dialog. Dieses Element kann nur Text enthalten.
Derzeit ist nur einfacher Text unterstützt (keine Verwendung irgendeiner Markup-Elemente).
whatsthis
Beschreibt die Was ist das? -Hilfe für ein Feld im Dialog. Dieses Element kann nur Text enthalten.
list
Ein Behälter-Tag das die Elemente einer Liste zusammen gruppiert. Es kann für eine Attributbeschreibung nur einmal vorkommen. Es ist ein nur-Elementtyp Element.
item
Definiert ein Glied in einer Liste. Dieses Element kann nur Text enthalten.
textlocation
Legt die Position des Attributtextes eines Tags innerhalb eines Dialoges fest. Dieses Tag kann für jedes Attribut in einem Dialog nur einmal vorkommen (z.B. einmal für jedes & lt;attr > -Tag). Das Element ist leer.
row
positive Ganzzahl
Gibt die Reihe im Dialog-Layout eines Feldes oder Textes an.
col
Gibt die Spalte im Dialog-Layout eines Feldes oder Textes an.
rowspan
Gibt die Anzahl der Reihen an, über die sich ein Feld erstrecken soll.
colspan
Gibt die Anzahl der Spalten an, über die sich ein Feld erstrecken soll.
location
Gibt die Position und die Größe eines Feldes im Dialog an. Dieses Tag sollte für jedes Feld im Dialog einmal vorhanden sein (z.B. eines für jedes & lt;attr > und & lt;label > Tag). Dieses Element ist leer.
label, attr
text
Definiert den Text für einen Textkommentar oder eine Auswahlbox. Dieses Element kann nur reinen Text enthalten.
children
Gibt eine Liste von Elementen an, die innerhalb des zu definierenden Tags vorkommen dürfen. Dieses Element ist ein nur-Element Typ.
child
Definiert ein Kind-Tag. Dieses Element ist leer.
Gibt ein Tag an, dass in einem anderen Tag verschachtelt sein kann.
usage
Legt die Beziehung mit dem Eltern-Tag fest.
Das Eltern-Tag muss mindestens ein Kind mit diesem Namen haben.
stoppingtags
Gibt eine Liste von Elementen an, die ein Tag beenden. Dieses Element ist ein nur-Element Typ.
stoppingtag
Definiert ein Stopp-Tag. Das Element ist leer.
Gibt an, welche Tags ein anderes Tag beenden.
TagXML Verwendung
Alle TagXML-Dateien müssen mit einer & XML;-Deklaration beginnen: & lt;?xml version= 1.0 encoding= UTF-8? > und müssen ordentlich gekettet und geschlossen sein.
Leerzeichen beeinflussen nichts, aber achten Sie auf & und & lt; Zeichen. Diese sollten durch & amp; und & lt;, besonders in Elementen wie & lt;tooltip >, & lt;whatsthis >, and & lt;text > ersetzt werden. Dies zu unterlassen wird keinen Beinbruch bewirken, aber einige Stücke der Arbeit würden verschwinden.
TagXML Überprüfung
Zur Überprüfung der TagXML-Dateien ist der Werkzeuge Dialog oben im & quantaplus;-Fenster zu starten und Überprüfe TagXML. zu wählen. Ein weitere Dialog wird erscheinen, dessen einfachen Anweisungen zu folgen ist.
Diese Funktion ist derzeit noch nicht verfügbar. Gegenwärtig erfolgt die Überprüfung nur beim Laden der TagXML-Dateien in & quantaplus;.
TagXML Beispiele
Familie 1
Im folgenden ein Beispiel für eine Familie 1 TagXML-Datei. Diese Datei beschreibt das & lt;schema > -Element aus dem & W3C; & XML;-Schema. Der Dateiname für diese TagXML-Datei soll schema.tag sein.
& lt;?xml version="1.0 "encoding="UTF-8"? > & lt;!DOCTYPE TAGS > & lt;TAGS > & lt;tag name="schema "> & lt;label > & lt;text > idlt;/text > & lt;location col="0" row="0 "/ > & lt;/label > & lt;attr name="id" type="input "> & lt;tooltip > Eine einzigartige ID für das Element.lt;/tooltip > & lt;whatsthis > Eine einzigartige ID für das Element.lt;/whatsthis > & lt;location col="1" row="0 "/ > & lt;/attr > & lt;label > & lt;text > versionlt;/text > & lt;location col="0" row="1 "/ > & lt;/label > & lt;attr name="version" type="input "> & lt;tooltip > Schema-Version.lt;/tooltip > & lt;whatsthis > Schema-Version.lt;/whatsthis > & lt;location col="1" row="1 "/ > & lt;/attr > & lt;label > & lt;text > targetNamespacelt;/text > & lt;location col="0" row="2 "/ > & lt;/label > & lt;attr name="targetNamespace" type="input "> & lt;tooltip > URI;-Referenz des Namensraumes von diesem Schema.lt;/tooltip > & lt;whatsthis > URI;-Referenz des Namensraumes von diesem Schema.lt;/whatsthis > & lt;location col="1" row="2 "/ > & lt;/attr > & lt;label > & lt;text > xmlnslt;/text > & lt;location col="0" row="3 "/ > & lt;/label > & lt;attr name="xmlns" type="input "> & lt;tooltip > URI;-Referenz für einen oder mehrere Namensräume in diesem Schema. Wenn nichts vorangestellt ist, können Komponenten dieses Namensraumes ohne Qualifizierung genutzt werden.lt;/tooltip > & lt;whatsthis > URI;-Referenz für einen oder mehrere Namensräume in diesem Schema. Wenn nichts vorangestellt ist, können Komponenten dieses Namensraumes ohne Qualifizierung genutzt werden.lt;/whatsthis > & lt;location col="1" row="3 "/ > & lt;/attr > & lt;label > & lt;text > attributeFormDefaultlt;/text > & lt;location col="0" row="4 "/ > & lt;/label > & lt;attr name="attributeFormDefault" type="list "> & lt;items > & lt;item > qualifiedlt;/item > & lt;item > unqualifiedlt;/item > & lt;/items > & lt;tooltip > Standard Form für alle Attribute in diesem Schema.lt;/tooltip > & lt;whatsthis > Standard Form für alle Attribute in diesem Schema.lt;/whatsthis > & lt;location col="1" row="4 "/ > & lt;/attr > & lt;label > & lt;text > elementFormDefaultlt;/text > & lt;location col="0" row="5 "/ > & lt;/label > & lt;attr name="elementFormDefault" type="list "> & lt;items > & lt;item > qualifiedlt;/item > & lt;item > unqualifiedlt;/item > & lt;/items > & lt;tooltip > Standard Form für alle Attribute in diesem Schema.lt;/tooltip > & lt;whatsthis > Standard Form für alle Attribute in diesem Schema.lt;/whatsthis > & lt;location col="1" row="5 "/ > & lt;/attr > & lt;label > & lt;text > blockDefaultlt;/text > & lt;location col="0" row="6 "/ > & lt;/label > & lt;attr name="blockDefault" type="input "> & lt;location col="1" row="6 "/ > & lt;/attr > & lt;label > & lt;text > finalDefaultlt;/text > & lt;location col="0" row="7 "/ > & lt;/label > & lt;attr name="finalDefault" type="input "> & lt;location col="1" row="7 "/ > & lt;/attr > & lt;/tag > & lt;/TAGS >
Familie 2
Im folgenden ein Beispiel für eine funktionierende Familie 2 TagXML-Datei. In dieser Datei wird eine & PHP; Überlade-Funktion beschrieben. Der Dateiname dieser TagXML-Datei soll overload.tag sein.
& lt;?xml version="1.0 "encoding="UTF-8"? > & lt;!DOCTYPE tags > & lt;tags > & lt;tag name="overload "type="function" returnType="void "> & lt;attr name="class_name" type="string "status="optional" / > & lt;/tag > & lt;/tags >
& descriptionrc;
Die & descriptionrc;-Datei ist ebenso ziemlich einfach und es gibt einen Editor dafür, erreichbar über DTD Bearbeite DTD-Einstellungen. Damit kann diedescriptionrc; für eine aus einer Liste wählbare & DTEP; bearbeitet werden. Beim Bearbeiten einer & descriptionrc; für eine neu erstellte & DTEP; sollte eine einfache & descriptionrc; mit folgenden Einträgen erstellt werden:
[General] Version = Verwende 1 für & quantaplus; Version & lt;=3.1.2 und 2 für jede höhere Version. Name = DTD-Angabe. (-//W3C;//DTD HTML 4.01 Transitional//EN) NickName = Der vereinfachte Name der DTD. (HTML 4.01 Transitional). Wenn nicht angegeben, wird der Name als NickName benutzt.
Wenn es mit Ausnahme der Tag-Dateien erstellt ist, kann die neu erstellte & DTEP; mit DTD DTD Paket (DTEP) öffnen geladen und das Bearbeiten der Einstellungen der & DTEP; kann fortgesetzt werden. Überprüfen Sie die Kurzinfos und den Was ist das Text der Einträge im Editordialog, um die Bedeutung jedes Eintrages zu verstehen. Alternativ kann in quanta/data/dtep/dtd-description.txt aus dem Quell-Tarball die dort enthaltene Beschreibung des Formates nachgelesen werden.
Benutzerdefinierte Aktionen
Aktionen sind in vielen Anwendungen üblich. Damit wird man in jeder Anwendung konfrontiert. Das Anklicken eines Symbols in der Werkzeugleiste, die Auswahl eines Menüpunktes oder ein Tastaturkürzel führt eine Aktion aus. In & quantaplus; sind Aktionen weiterentwickelt. Anstelle von festgelegten Aktionen (die vom Entwickler der Anwendung auf Quelltext-Ebene erstellt werden) ist es für den normalen Benutzer möglich, Aktionen selbst zu erstellen oder zu verändern und auf diese Weise neue Funktionalität zu & quantaplus; hinzuzufügen. Das bedeutet benutzerdefinierte Aktion und viele Standardaktionen von & quantaplus; sind eigentlich benutzerdefiniert (und daher veränderbar).
Es gibt drei Typen von benutzerdefinierten Aktionen:
Text-Aktionen
Tag-Aktionen
Skript-Aktionen
Aktionen erstellen
Eine Aktion kann mit Einstellungen Aktionen festlegen... erstellt werden. Klicken auf Neue Aktion führt zum gleichen Dialog:
Typ
Legt den Typ der Aktion fest (Text, Tag, Skript).
Text
Der für den Benutzer sichtbare Namen der Aktion.
Die Schaltfläche neben dem Text Bezeichner
Das der Aktion zugewiesen Symbol. Anklicken, um das aktuelle Symbol zu ändern.
Kurzinfo
Kurze Beschreibung, was die Aktion macht.
Tastenkürzel
Das dieser Aktion zugewiesene Tastenkürzel. Mit Anklicken der Schaltfläche Benutzerdefiniert kann ein Tastenkürzel zugewiesen werden; mit Keiner ist das aktuelle Tastenkürzel entfernbar.
Container-Werkzeugleisten
Die benutzerdefinierte Werkzeugleiste, in der diese Aktion erscheint. Siehe.
Detailierte Einstellungen
Spezifische Einstellungen für die verschiedenen Typen von Aktion. Siehe unten.
Textaktionen
Die einfachsten Aktionen. Es kann ein Text in den Detailierten Einstellungen eingegeben werden und bei Ausführung der Aktion wird dieser Text im Dokument an der aktuellen Cursor-Position eingefügt. Siehe das Beispiel unten.
Tag-Aktionen
Nützlich zum Einfügen von XML-Tags, können aber natürlich für andere Aufgaben ebenso eingesetzt werden. lt;taggt; Der Name des Tags. lt;/taggt; Wenn aktiviert, wird beim Ausführen der Aktion dieser Text als schließendes Tag eingefügt. Wenn im Dokument vor Ausführung der Aktion ein Bereich markiert ist, dann wird der & lt;taggt; vor diesem Bereich eingefügt und das & lt;/taggt; danach. Dialog "Tag bearbeiten" aufrufen, wenn verfügbar Wenn dies aktiviert ist und es eine tagXML-Datei für diesen Tag gibt, wird ein Bearbeitungsdialog für dieses Tag vor dem Einfügen im Dokument anzeigt, der die Feineinstellung der Tag-Attribute ermöglicht. Das & lt;taggt; und das & lt;/taggt; wird so, wie hier eingetippt, eingefügt. Daslt;, & gt; oder das / Zeichen wird nicht automatisch angefügt.
Skript-Aktionen
Das ist der mächtigste Aktionstyp. Mit der Hilfe dieser Aktion können externe Anwendungen (üblicherweise Skripte, aber darauf ist es nicht beschränkt), die das Dokument ändern oder als Eingabe verwenden (oder Teile des Dokumentes), gestartet werden. Beispiele aus & quantaplus; selbst sind der Schnellstart -Dialog oder die verschiedenen Siehe in... Aktionen für die (X)HTML-DTEPs.
Als erstes muss der Name des Skriptes und der Interpreter angegeben werden. Beispiel: sh /home/myHome/myScript.sh.
Obwohl qualifizierte Pfade erlaubt sind, ist es empfohlen, die %scriptdir Variable in der Befehlszeile zu verwenden, wie sh %scriptdir/myScript.sh. Auf diese Weise versucht & quantaplus; das Skript an folgenden Orten zu finden: Globaler Skriptordner: $KDEDIR /share/apps/quanta/scripts lokaler Skriptordner: $KDEHOME /share/apps/quanta/scripts in ihrem Pfad: $PATH Es gibt andere spezielle Variable, die in der Befehlszeile verwendet werden können:
%f: wir mit der URL des aktuellen Dokumentes ersetzt. Im Falle eines lokalen Dokumentes wird file: / aus dem Dokumentnamen entfernt.
%input: wird mit der ausgewählten Eingabe ersetzt. Siehe unten.
%projectbase: wird durch die URL des aktuellen Projektesersetzt. Leer, wenn kein Projekt geladen ist.
%pid: wird mit der PID des laufenden & quantaplus;-Prozesses ersetzt. Wenn von & quantaplus; nur eine Instanz läuft, wird der Text unique an die PID-Nummer angefügt. Dies ist nützlich, wenn DCOP zur Steuerung von & quantaplus; vom externen Skript genutzt wird.
%userarguments: nützlich bei Ereignissen. Dieser Eintrag wird durch die Ereigniseigenschaften in dieser Reihenfolge ersetzt:
Erstes Argument
Die einzigartige ID des Skriptes
Zweites Argument
Der Ereignisname
Drittes Argument
Die Parameter für dieses Ereignis, normalerweise der Dateiname des aktuellen Dokumentes oder der Pfad zur Projektdatei.
Zusätzlich zu den oben aufgezählten Methoden kann ein Skript Eingaben von & quantaplus; an der Standardeingabe entgegennehmen. Im Auswahlfeld Eingabe kann bestimmt werden, was an die Standardeingabe zu senden ist. Möglichkeiten sind:
keine: nichts wird an das Skript gesendet.
Aktuelles Dokument: das ganze Dokument wird an das Skript gesendet.
Ausgewählter Text: der ausgewählte Bereich des Dokumentes wird an das Skript gesendet. Die %input Variable ist normalerweise nur mit dieser Einstellung sinnvoll.
Entsprechend der Eingabe kann auch die Ausgabe der ausgeführten Anwendung umgeleitet werden. Es gibt zwei Arten Ausgabe: Normale Ausgabe, auf die Standardausgabe geschrieben; Fehlermeldungen, auf die Standardfehlerausgabe geleitet. Es kann angegeben werden, was mit dem auf die Standardausgabe geschriebenen Text geschehen soll, indem der Wert das Auswahlfeld Ausgabe eingestellt wird:
keine: die Ausgabe der Anwendung wird ignoriert.
An der Cursor-Position einfügen: die Ausgabe wird im aktuellenDokument an der Cursor-Position eingefügt.
Auswahl ersetzen: der ausgewählte Bereich des Dokumentes wird mit der Ausgabe ersetzt.
Neues Dokument erstellen: ein neues Dokument mit der Ausgabe des Skriptes wird erstellt.
Aktuelles Dokument ersetzen: das ganze Dokument wird mit der Ausgabe ersetzt.
Nachrichtenfenster: die Ausgabe wird in der Ansicht Nachrichten dargestellt.
Die Auswahlmöglichkeiten für die Standardfehlerausgabe (Fehler) sind gleich, wie für die normale Ausgabe.
Gestaltung von Werkzeugleisten
Das folgende zeigt, wie man eine Werkzeugleiste für eine & DTEP; hinzufügt. Werkzeugleisten sind grafische Elemente geschaffen für die Zuordnung zu Aktionen. In & quantaplus; sind Aktionen die Basis für alle Erweiterungen, die & quantaplus; hat oder in Zukunft bekommen wird. Derselbe Mechanismus, der Aktionen in & quantaplus; definiert, ermöglicht auch Autovervollständigung und Tag-Dialoge. Mit Aktionen sind Ihnen praktisch keine Grenzen gesetzt. Als Beispiel werden wir HTML;-tidy auf unseren Webseiten benutzen.
Von Anfang an
Zu Beginn muss eine Benutzer-Werkzeugleiste hinzufügt werden. Dafür Werkzeugleisten Benutzer-Werkzeugleiste hinzufügen wählen.
Wenn es viele Tags in der Markup-Sprache gibt, ist es empfehlenswert, die Tags in logische Gruppen zu unterteilen. Es ist notwendig, für jede Gruppe eine eigene Werkzeugleiste zu schaffen. In gegebenen Fall sind es nicht allzu viele, deshalb kann man eine Werkzeugleiste mit dem Namen des Markups erstellen.
Sobald eine Werkzeugleiste hinzugefügt ist, müssen Sie Aktionen hinzufügen und konfigurieren. Wählen Sie Einstellungen Aktionen festlegen.
Die Teile dieses Fensters sind ziemlich selbsterklärend. Drücken des Neue Aktion Knopfes am unteren Ende des Fensters startet den Bearbeiten-Modus.
Füllen Sie alle notwendigen Felder aus und fügen sie den Tag zur passenden Werkzeugleiste hinzu.
Vervollständigen Sie alles und, falls der Tag Attribute hat und Sie deren Verwendung planen, aktivieren Sie Dialog "Tag bearbeiten" aufrufen, wenn verfügbar, damit eine Eingabe beim Verwenden der Aktion möglich ist.
Sie sollten nun etwas haben, dass dem folgenden ähndelt.
Drücken Sie den Anwenden -Knopf und die Aktion wird zur ausgewählten Werkzeugleiste hinzugefügt.
Igitt! Ist das ein häßliches Symbol. Wer sollte sich die Aktion in Verbindung mit diesem Symbol merken? Ersetzen wir es, bevor wir Schwierigkeiten haben.
Zum Erstellen eines Symbols, dass die Aktion besser repräsentiert, werden wir & kiconedit; verwenden. Wählen Sie aus dem & kmenu;, Grafik Weitere Programme (oder wo sonst es in ihrer Distribution gelegen ist).
& kiconedit; verwendet standardmäßig 32x32 Pixel, wir brauchen aber 22x22. Um dies zu ändern, wählen Sie Bearbeiten Größe andern.
Bitte beachten Sie, dass das geschaffene Symbol nicht nur Ihnen hilft, sich zu merken, was die Aktion tut, sondern auch allen anderen Benutzern der & DTEP;.
Im Hinblick darauf, dass der Tag start, heißt, habe ich mich entschieden, einen Startknopf als Symbol zu schaffen. Durch die Verwendung von grün (grün wird meist als los, starte, weiter interpretiert) wird, oder sollte zumindest, eine Botschaft zum Benutzer signalisiert werden, dass Anklicken dieses Symbols ein & lt;startgt;-Tag im aktuellen Dokument einfügen wird.
Nach der Gestaltung des Symbols speichere ich es.
Nach der Schaffung des Symbols muss es noch mit der Aktion verbunden werden. Dies geschieht über das Menü mit Einstellungen Aktionen festlegen... (in & quantaplus;) und Auswahl der gewünschten Aktion. Neben dem Text Feld befindet sich ein Knopf, drücken Sie ihn.
Wählen Sie Andere Symbole und drücken Sie den Auswählen Knopf.
Wählen sie den Ordner, in dem sich das gespeicherte Symbol befindet, wählen Sie es aus und bestätigen Sie mit OK.
Drücken Sie den Anwenden Knopf und setzen sie mit anderen Tags fort, so es noch welche gibt, oder bestätigen Sie mit OK um abzuschließen.
Angenommen, Sie wollen einige übliche & quantaplus;-Funktionen zur Werkzeugleiste ergänzen oder es sollte diese zur besseren Übersicht durch einige Trenner in mehrere Gruppen geteilt werden. Öffnen Sie den Werkzeugleisten einstellen Dialog über Einstellungen Werkzeugleisten einstellen. Stellen Sie sicher, dass die gewünschte Werkzeugleiste ausgewählt ist.
Ich möchte den Trenner (ganz links oben) für meine Werkzeugleiste wählen. Nach der Auswahl des Elementes, das zur Werkzeugleiste hinzugefügt werden soll, drücken Sie die Pfeiltaste nach rechts. Dies fügt das Element zur Werkzeugleiste hinzu.
Ich möchte zum Beispiel eine schnelle Möglichkeit zu Zugriff auf die Konqueror Vorschau. Ich werde es auswählen und zur Werkzeugleiste hinzufügen.
Bitte beachten, wie die Trenner die Gruppierung unterstützen. Jemand, der meine Werkzeugleiste nicht kennt, könnte glauben, dass der & konqueror;-Knopf das Gegenteil des Start-Knopfes sei.
Aktivieren Sie ihre Änderungen und drücken Sie OK zum Abschluß.
Das überzeugende Ergebnis: eine viel praktischere Werkzeugleiste.
Die neue Werkzeugleiste muss durch Probieren aller Symbole getestet werden, um sicherzustellen, dass alles funktioniert.
Sichern Sie die Werkzeugleiste durch die Auswahl Werkzeugleisten Werkzeugleiste sichern Als Werkzeugleiste sichern.
Sichern Sie in den richtigen Ordner. Nachdem NeueXML nicht existiert, wird es imStammordner angelegt, aber Ihre Werkzeugleiste(n) sollten im richtigen Ordner gespeichert werden. Bitte passen Sie ihre & descriptionrc; so an, dass ihre Werkzeugleiste(n) geladen wird (werden), wenn eine Datei vom entsprechenden Typ geöffnet wird.
Erstellen Sie Ihre eigene Dokumentation
Robert Nickel
robert@artnickel.com
Vielleicht die erwähnenswerteste Erweiterung von & quantaplus; für den normalen Benutzer ist die Möglichkeit, Dokumentation für die Skriptsprache oder die Formatierungssprache hinzuzufügen, die Sie am liebsten mögen. Deswegen beschreibt dieses Kapitel, wie ich einen & PHP;-Dokumentationsbaum für meine persönliche Nutzung erstelle.
Bevor Sie Ihre eigene Dokumentation starten, könnten Sie im & quantaplus;-Repository prüfen, ob jemand das schon für Sie getan hat.
Es gibt zwei Teile in diesem Prozess. Zuerst müssen Sie ein existierende Dokumentation für die Formatierungs-/Skript/etc;-Sprache suchen. Dann müssen Sie die docrc -Datei erstellen. Den ersten Teil überlassen wir Ihnen, den zweiten behandeln wir hier.
Die normale Form der docrc-Datei sieht so aus:
#KDE Konfigurationsdatei [Tree] Doc dir= pfad, relativ zu dieser Datei, zu den Dokumentations-HTML-Dateien z.B. php42 / #Elemente im Hauptindex Top Element= Ihre Beschreibung für diese Dokumentationen z.B. & PHP; 4.2 Dokumentation Section 1=Section1.html Section 2=#Sec2.1,#Sec2.2,#Sec2.3 Sec2.1=Sec2.1.html Sec2.2=Sec2.2.html Sec2.3=Sec2.3.html... [Context] ContextList=func1,func2,tag1,tag2,tag3 func1=func1.html func2=func2.html tag1=tag1.html tag2=tag2.html tag3=tag3.html
Die docrc gliedert sich in zwei Abschnitte: Baum und Kontext.
Der Abschnitt Baum definiert den sichtbaren Teil der Dokumentation im Dokumentationsbaum. Zum Beispiel sehen Sie jetzt in den & PHP; Dokumentation so etwas:
In Bezug auf das oben gesagte sieht mein & PHP; docrc wie folgt aus:
#KDE Config File [Tree] Doc dir=php42 / #top level elements Top Element=PHP 4.2 documentation PHP 4.2 documentation=Table of Contents,#Getting Started,#Language Reference Table of Contents=index.html Getting Started=Introduction,... Introduction=introduction.html... Language Reference=Basic syntax,... Basic syntax=language.basic-syntax.html...
Beachten Sie das # vor Getting Started und Language Reference. Das zeigt an, dass es sich um Unterordner im Baum mit eigenem Inhalt handelt. Es gibt keine bekannte Grenze für die Schachtelungstiefe (außer durch die Vernunft)mdash; aber probieren Sie es selbst aus.
Sie merken, dass das Inhaltsverzeichnis direkt auf eine Datei referenziert ist (und konsequenterweise am oberen Ende der Baumansicht & mdash; Ordner angezeigt wird!).
Leerzeichen beeinflussen nichts, aber achten Sie auf & und & lt; Zeichen. Diese sollten durch & amp; und & lt; in allen & XML;-basierten & quantaplus; Resourcendateien ersetzt werden.
Der Inhaltsabschnitt ist der Bereich der docrc-Datei, der zum Gestalten der kontextsensitiven Hilfe dient. Zum Beispiel, wenn beim Schreiben eines & PHP;-Skripts die Dokumentation für die mysql_fetch_array -Funktion angezeigt werden soll. Durch Markieren des Funktionsnamens und Drücken von Ctrl; H für Kontext-Hilfe würde die Dokumentation direkt angezeigt. Es gibt nur zwei Arten von Einträgen hier: die Kontextliste (ContextList) und die Dateiverbindungszeilen.
ContextList
Eine einfache Liste von durch Beistrich getrennten Kontext-Elementen, die verfügbar sein sollen (für & PHP;, dies sind die Funktionen von & PHP;).
Dateiverbindungszeilen
Diese haben die Form Kontextelement = Html-Dokumentationsseite. Z.B. acos=function.acos.html
Eine sehr einfache Version eines docrc -Kontextabschnittes könnte so aussehen:
#Schlagwörter für die Kontexthilfe [Context] ContextList=abs,acos,acosh,addcslashes,addslashes,... abs=function.abs.html acos=function.acos.html acosh=function.acosh.html addcslashes=function.addcslashes.html addslashes=function.addslashes.html...
Nun können Sie Ihre Datei docrc einfach speichern und zwar nach $HOME /.kde/share/apps/quanta/doc oder $KDEDIR /share/apps/quanta/doc für lokale bzw. globale Benutzung. Dann erstellen Sie einen Ordner (so, wie Sie diesen in Ihrer Datei docrc angegeben haben) im selben Ordner wie docrc und kopieren Ihre HTML-Dokumentation dorthin.
Sie müssen & quantaplus; neu starten und sehen dann Ihre Dokumentationen.
Wenn Sie sich sicher sind, dass diese gut und es wert sind, geteilt zu werden, senden Sie Ihre docrc -Dateien mit einer Beschreibung von wichtigen Informationen, z.B. welche Dokumentation benutzt wurden an das & quantaplus;-Repository für die Benutzung durch die & quantaplus;-Gemeinschaft. Sie werden davon nicht reich werden, aber stolz darauf sein, bei der besten Webentwicklungsplattform mitgearbeitet zu haben.
Ressourcen teilen
Mit & quantaplus; sind Sie nicht allein. Es ist möglich, die verscheidenen Ressourcen (DTEP-Pakete, Werkzeugleisten mit Aktionen, Skripte, Vorlagen) mit anderen zu teilen. Es gibt zwei Wege dies zu tun:
Mittels EMail-Nachricht senden
Die Ressourcen können mittels EMail zu Freunden, Partnern oder sonst wem gesendet werden. An verschiedenen Stellen gibt es einen Mit Email senden Menüeintrag, wie DTD DTD-Paket (DTEP) mit Email versenden, Werkzeugleisten Werkzeugleiste mit Email versenden, im Kontextmenü von Dateien und Ordnern im Vorlagen und im Skripte Baum.
Auf den Hauptserver hochladen
Die Ressourcen können in unser Haupt-Archiv hochgeladen werden, von wo alle anderen & quantaplus;-Benutzer sie herunterladen können. Die Beiträge werden überprüft und nur verfügbar gemacht, wenn unser Team sie als korrekt und nutzvoll für die Veröffentlichung betrachtet. Um einen nutzvollen Beitrag zu leisten empfehlen wir, die Ressourcen zu signieren, wozu es einen GPG/PGP-Schlüssel braucht. Damit wird die Herkunft der Ressourcen gewährleistet, sowohl für unser Team als auch für die späteren Benutzer.
Über das benutzen der Ressourcen am Hauptserver siehe in.
Beim Hochladen werden Sie nach ihrer Passphrase für ihren privaten GPG-Schlüssel gefragt (die Passphrase wird nicht gespeichert), oder in dem Fall, dass Sie mehrere Schlüssel haben, können Sie einen aussuchen. Im Dialog Neue Ressource weitergeben müssen die Eingabefelder ausgefüllt (URL-Vorschau kann leer bleiben) und mit Anklicken von OK das Hochladen gestartet werden.
Das Hochladen kann von den Menüs DTD DTD-Paket (DTEP) hochladen, Werkzeugleisten Werkzeugleiste hochladen, und im Kontextmenü von Dateien und Ordnern im Vorlagen and Skripte Baum begonnen werden.
Ressourcen holen
& quantaplus; kann aktualisiert werden, ohne eine neue Version zu erhalten, durch das Hereinholen von neuen Ressourcen, wie etwa DTD-Paketen, Werkzeugleisten mit Aktionen, Vorlagen, Skripten und Dokumentation. Eine Möglichkeit ist, die Ressourcen mittels EMail oder Herunterladen von einem Webserver zu holen und händisch zu installieren. Mit etwas Glück ist ein Installationsskript dabei. Aber für & quantaplus; gibt es einen eigenen Server nur für Ressourcen, die entweder nicht in der Haupt-Distribution dabei sind, wegen ihrer Größe oder seltenen Benutzung, oder die erst später von anderen Benutzern beigetragen wurden und diese Ressourcen können automatisch installiert werden. Das Herunterladen geschieht über die verschiedenen herunterladen Einträge in den Menüs. Diese befinden sich in DTD DTD-Paket (DTEP) herunterladen, Werkzeugleisten Werkzeugleiste herunterladen, im Kontextmenü eines leeren Bereiches oder im Wurzeleintrag der Vorlagen, Skripte und Dokumentation Bäume.
Nach dem Herunterladen einer Ressource, noch vor der Installation, untersucht & quantaplus; die Unversehrtheit der Ressource durch Prüfung der Integrität und der Signierung. Im Falle von Problemen warnt es und es kann dann abgebrochen werden. Bitte die Warnmeldungen sorgfältig zu beachten. Wenn die Integrität gegeben und die Ressource korrekt signiert ist, erscheint ein Meldung mit der Angabe des Urhebers der Ressource.
Ressourcen, besonders Werkzeugleisten und Skripte, sollten nur von vertrauenswürdiger Quelle installiert werden!
Eine DTD in eine & DTEP; umwandeln
Es ist möglich, an XML-Sprachen, die derzeit noch nicht von & quantaplus; unterstützt wird, zu arbeiten, indem ein DTEP-Paket erstellt wird. Die Erstellung kann aber zeitaufwändig sein, weil hunderte von Tag-Dateien im tagXML Format nötig sein könnten. Es gibt den einfacheren Weg, eine DTD automatisch in ein DTEP-Paket umwandeln zu lassen.
Die Umwandlung kann vom Menü DTD Laden und Konvertieren einer DTD begonnen werden. Wählen Sie die .dtd -Datei mit der DTD-Beschreibung, die verwendet werden soll. Danach erscheint der folgende Dialog:
Die Einträge sind:
Zielverzeichnisname: die neu erstellte & DTEP; wird mit diesem Namen in den $KDEHOME /share/apps/quanta/dtep Ordner geschrieben.
Name: der Name (Definition string) der DTD
Spitzname: der für den Benutzer sichtbare Name der & DTEP;
!DOCTYPE Definitionszeile: die Zeichenkette, die im !DOCTYPE Tag, wie HTML PUBLIC -//W3C//DTD HTML 4.01 Transitional//EN http://www.w3.org/TR/html4/loose.dtd erscheinen soll
DTD URL: die auf die DTD-Datei zeigende URL
Standarderweiterung: die standardmäßig für Dateien mit dieser DTD-Kennung benutzte Dateinamenserweiterung
Groß/Kleinschreibungsabhängige Tags und Attribute: selbsterklärend, normalerweise WAHR für Varianten von XML-Sprachen
Feineinstellung der DTEP nach der Umwandlung: wenn aktiviert, bringt & quantaplus; nach der Umwandlung den & descriptionrc;-Editor, mit dem Einzelheiten der neu erstellten & DTEP; angepasst werden können. Es wird empfohlen, diese Möglichkeit zu nutzen.