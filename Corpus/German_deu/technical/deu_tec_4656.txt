# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Kapitel 2.
Kleines Tutorial
Nach vorne
Dadurch dass PHP eine immer beliebtere Skriptsprache ist, gibt es immer mehr Quellen, die Ihnen Code-Listings zur Verfügung zu stellen.
Die PHP-Entwickler haben versucht, den größten Teil der Sprache abwärtskompatibel zu halten.
Das bedeutet, dass ein Skript, das für eine ältere PHP-Version geschrieben wurde, (im Idealfall) ohne Änderungen auch unter einer neueren PHP-Version läuft.
In der Praxis sind aber meist einige Änderungen nötig.
Zwei der wichtigsten aktuellen Änderungen, die alten Code betreffen, sind:
Die Missbilligung der alten $HTTP_*_VARS -Arrays (die global gemacht werden mussten, wenn man sie innerhalb einer Funktion nutzen wollte).
In PHP 4.1.0 wurden die folgenden autoglobalen Arrays eingeführt: $_GET, $_POST, $_COOKIE, $_SERVER, $_ENV, $_REQUEST und $_SESSION.
Die älteren $HTTP_*_VARS -Arrays, wie $HTTP_POST_VARS, existierten bereits seit PHP 3 und sind auch immer noch verfügbar.
Externe Variablen werden standardmäßig nicht mehr im globalen Namensraum registriert.
Mit anderen Worten, seit PHP 4.2.0 ist off die Standard-Einstellung für die PHP-Direktive register_globals.
Die empfohlene Methode, auf diese Werte zuzugreifen, ist, die oben genannten autoglobalen Arrays zu verwenden.
Ältere Skripte, Bücher und Tutorials gehen eventuell davon aus, dass diese Einstellung auf on Ältere Skripte, Bücher und Tutorials gehen eventuell davon aus, dass diese Einstellung auf on steht.
Wäre die Einstellung on, wäre die Variable $id aus der URL http: / /www.example.com / foo.php?id=42 verfügbar.
Unabhängig davon, ob on oder off, ist immer $_GET[ 'id'] verfügbar.
Zurück
Zum Anfang
Nach vorne
Formulare verarbeiten
Nach oben
Und weiter?