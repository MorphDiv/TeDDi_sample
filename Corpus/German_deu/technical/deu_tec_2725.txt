# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

array_splice() entfernt die durch offset und length angegebenen Elemente des Arrays input, und ersetzt diese durch die Elemente des Arrays replacement, wenn angegeben und gibt ein Array mit den entfernten Elemente zurück.
Ist offset positiv, beginnt der zu entfernende Bereich bei diesem Offset vom Anfang des Arrays input.
Ist offset negativ, beginnt der zu entfernende Bereich offset Elemente vor dem Ende des Arrays input.
Ist length nicht angegeben, wird alles von offset bis zum Ende des Arrays entfernt.
Ist length positiv, wird die angegebene Anzahl Elemente entfernt.
Ist length negativ, dann wird der Bereich von length Elementen vor dem Ende, bis zum Ende des Arrays entfernt.
Tipp:
Um alles von offset bis zum Ende des Arrays zu entfernen wenn replacement ebenfalls angegeben ist, verwenden Sie count( $input) als length.
Ist das Array replacement angegeben, werden die entfernten Elemente durch die Elemente dieses Arrays ersetzt.
Sind offset und length so angegeben dass nichts entfernt wird, werden die Elemente von replacement an der von offset spezifizierten Stelle eingefügt.
Tipp:
Soll die Ersetzung durch nur ein Element erfolgen ist es nicht nötig ein Array zu anzugeben es sei denn, dieses Element ist selbst ein Array.
Hier einige Entsprechungen:

Gibt das Array mit den entfernten Elementen zurück.
Beispiel 1. array_splice()
$input = array ("rot", "grün", "blau", "gelb"); array_splice ($input, 2); / / $input ist nun array ("rot", "grün") $input = array ("rot", "grün", "blau", "gelb"); array_splice ($input, 1, -1); / / $input ist nun array ("rot", "gelb") $input = array ("rot", "grün", "blau", "gelb"); array_splice ($input, 1, count($input), "orange"); / / $input ist nun array ("rot", "orange") $input = array ("rot", "grün", "blau", "gelb"); array_splice ($input, -1, 1, array("schwarz", "braun")); / / $input ist nun array ("rot", "grün", "blau", "schwarz", "braun")
Siehe auch array_slice().
Zurück
Zum Anfang
Nach vorne

Nach oben
