# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDEdoc
# source:	https://object.pouta.csc.fi/OPUS-KDEdoc/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/KDEdoc.php
# copyright_long:	http://opus.nlpl.eu/KDEdoc.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

aRts -Module
Einleitung
Dieses Kapitel beschreibt die Standardmodule von aRts.
Eine der m\xE4chtigsten M\xF6glichkeiten von aRts ist die Kombinierbarkeit von Modulen zu Strukturen, um neue Funktionen wie Effekte und Instrumente zu implementieren.
Die Module sind in Kategorien eingeteilt.
Synthese-Module werden zur Implementation von Verbindungen ben\xF6tigt, die Multimedia-Datenstr\xF6me f\xFCr neue Effekte, Instrumente, Mischer und Anwendungen zusammenf\xFCgen.
Visuelle Module erlauben die Erzeugung einer graphischen Benutzeroberfl\xE4che zur Kontrolle der Klangstrukturen, die mit den Synthese-Modulen aufgebaut werden.
Synthese-Modul Referenz
Arithmetisch + Mix
Synth_ADD
Addiert zwei Signale
Synth_MUL
Multiplizert ein Signal mit einem Faktor.
Sie k\xF6nnen dieses Modul verwenden, um ein Signal zu reduzieren (0 < Faktor < 1) oder zu verst\xE4rken (Faktor > 1), oder um ein Signal zu invertieren (Faktor < 0).
Der Faktor kann ebenfalls ein Signal sein und muss keine Konstante sein (z.B. eine H\xFCllkurve oder ein reales Signal).
Synth_MULTI_ADD
Addiert eine beliebige Anzahl von Signalen.
Wenn Sie die Wellenformen von viert verschiedenen Oszillatoren addieren m\xFCssen, k\xF6nnen Sie alle Ausg\xE4nge mit einem Synth_MULTI_ADD-Modul verbinden.
Das ist effektiver als die Verwendung von drei Synth_ADD-Modulen.
Synth_XFADE
Hiermit werden zwei Signale \xFCber Kreuz gemischt (crossfading).
Wenn der Prozentsatz -1 betr\xE4gt, dann ist nur das linke, bei 1 nur das rechte und bei 0 sind beide Signale gleichstark h\xF6rbar.
Damit wird es m\xF6glich, ein Signal in einem definierten Bereich zu halten.
Wenn Sie zwei Signale haben, die beide zwischen -1 und 1 vor dem Mischen waren, befindet sich das gemischte Signal ebenfalls zwischen -1 und 1.
Synth_AUTOPANNER
Das Gegenteil eines crossfaders.
Hier wird ein Monosignal aufgeteilt in ein Stereosignal:
Das Modul kann das Signal automatisch zwischen dem rechten und linken Kanal aufteilen.
Das macht lebendigere Mischungen m\xF6glich.
Eine Standardanwendung w\xE4re ein Gitarren- oder Gesangsklang.
Verbinden Sie einen LFO, eine Sinus- oder S\xE4gezahnschwingung mit inlfo und w\xE4hlen Sie eine Frequenz zwischen 0.1 und 5Hz f\xFCr einen traditionellen Effekt oder eine h\xF6here Frequenz f\xFCr einen Special FX.
Busse
Synth_BUS_UPLINK
Ein Uplink zu einem Bus.
Legen Sie ein Signal auf den linken und rechten Eingang und geben Sie dem Bus einen Namen, auf den die Daten gesendet werden sollen.
Das kombinierte Signal von allen Uplinks mit dem gleichen Namen wird auf jedem Downlink mit diesem Namen anliegen.
Synth_BUS_DOWNLINK
Empf\xE4ngt (Summe) alle Daten, die auf einen bestimmten Bus (der Name, den Sie beim Kanal bus festlegen) gesendet werden.
Verz\xF6gerungen
Synth_DELAY
Verz\xF6gert das Eingangssignal um eine bestimmte Zeit.
Die Zeit muss zwischen 0 und maxdelay f\xFCr eine Verz\xF6gerung zwischen 0 und maxdelay Sekunden liegen.
Diese Art von Verz\xF6gerungen darf nicht in r\xFCckgekoppelten Strukturen verwendet werden, weil es sich um eine variable Verz\xF6gerungszeit handelt.
Sie k\xF6nnen die Zeit \xE4ndern, w\xE4hrend das Modul l\xE4uft und sie auch auf Null setzen.
Da aber in einer r\xFCckgekoppelten Struktur das eigene Ausgangssignal f\xFCr die Berechnung des n\xE4chsten Eingangssignals notwendig ist, k\xF6nnte eine Verz\xF6gerung, die auf Null abf\xE4llt, zu einem Einfrieren f\xFChren.
In einem solchen Fall k\xF6nnen Sie aber CDELAY verwenden.
Nehmen Sie eine geringe konstante Verz\xF6gerung (z.B.
0.001 Sekunden) zusammen mit einer einstellbaren Verz\xF6gerung.
Au\xDFerdem k\xF6nnen Sie CDELAY und DELAY kombinieren, um eine variable Verz\xF6gerung mit einem positiven Minimalwert in einem r\xFCckgekoppelten System zu erhalten.
Wichtig ist nur, das ein CDELAY-Modul vorhanden ist.
Synth_CDELAY
Verz\xF6gert das Eingangssignal um eine bestimmte Zeitspanne.
Die Zeit muss gr\xF6\xDFer als 0 f\xFCr eine Verz\xF6gerung von mehr als 0 Sekunden sein.
Die Verz\xF6gerung ist konstant w\xE4hrend der Berechnung, kann also nicht ver\xE4ndert werden.
Das spart Rechenzeit, da keine Interpolation notwendig ist, und ist n\xFCtzlich f\xFCr rekursive Strukturen.Siehe weiter oben (Synth_DELAY).
H\xFCllkurven
Synth_ENVELOPE_ADSR
Dies ist eine klassische ADSR -H\xFCllkurve, das hei\xDFt Sie k\xF6nnen folgendes festlegen:
active
Ob die Taste gerade vom Benutzer gedr\xFCckt wird.
invalue
Das Eingangssignal.
attack
Die Zeit zwischen dem Niederdr\xFCcken der Taste und dem Zeitpunkt zu dem das Signal seine maximale Amplitude erreicht (in Sekunden).
decay
Die Zeit, bis das Signal nach dem Maximalwert einen konstanten Dauerwert annimmt (in Sekunden).
sustain
Der konstante Dauerwert, bei dem das Signal gehalten wird, nachdem der Benutzer die Taste wieder losgelassen hat.
release
Die Zeit vom Loslassen der Taste bis das Signal den Wert Null wiedererreicht hat (in Sekunden).
Das skalierte Signal liegt am Ausgang (outvalue) an.
Wenn die ADSR -H\xFCllkurve beendet ist, wird der Ausgang done auf 1 gesetzt.
Das k\xF6nnen Sie verwenden, um f\xFCr ein Instrument das Signal done zu generieren (das dazu f\xFChrt, das die Struktur vom MIDI -Router nach dem Ende der Release-Phase gel\xF6scht wird).
Synth_PSCALE
Das Synth_PSCALE-Modul skaliert einen Audiostrom von der Lautst\xE4rke 0 (Stille) bis 1 (Maximallautst\xE4rke) und zur\xFCck zu 0 (Stille).
Gesteuert wird das durch den Eingang Position (pos) (dieser Eingang kann mit dem entsprechenden Ausgang von Synth_SEQUENCE belegt werden).
Die Stelle, an der der Maximalwert erreicht werden soll, kann als Eingang pos angegeben werden.
Beispiel:
Setzen Sie top auf 0.1.
Das bedeutet, nach 10% der Note erreicht die Lautst\xE4rke ihren Maximalwert und klingt danach aus.
Effekte
Synth_FREEVERB
Dies ist ein Nachhall-Effekt.
In der augenblicklichen Implementation kann ein Stereosignal durch diesen Effekt geschickt werden.
Dabei wird der Nachhall zum urspr\xFCnglichen Signal addiert.
Das bedeutet, Sie k\xF6nnen das Modul ein innerhalb eines Stereo-Effektstapels verwenden.
Das Eingangssignal wird mit inleft und inright verbunden, das Ausgangssignal liegt bei outleft und outright an.
Sie k\xF6nnen folgende Parameter festlegen:
roomsize
Die Gr\xF6\xDFe des Raumes, f\xFCr den der Nachhall simuliert wird (Bereich:
0..1, wobei 1 demgr\xF6\xDFtm\xF6glichen Raum entspricht).
damp
Das bezeichnet einen Filter, der den simulierten Raum hohe Frequenzen absorbieren l\xE4sst (Bereich 0..1, wobei 1 die hohen Frequenzen sehr effektiv absorbiert).
wet
der Anteil des Nachhall-Signals (das ist der Anteil des Signals, das durch die Filter ver\xE4ndert und zu einer nicht trockenen Akustik, also einem halligen Klang f\xFChrt.
dry
der Anteil des urspr\xFCnglichen Signals, der durchgelassen werden soll.
Er f\xFChrt eher zu einem Echo (oder kombinierter Verz\xF6gerung) anstatt einem Nachhall-Effekt (Bereich:
0..1)
width
Der Anteil an Stereo-Magie, den der Nachhall-Effekt hinzuf\xFCgt und zu einem breiteren Klang im Stereo-Panorama f\xFChrt (Bereich:
0..1).
mode
[TODO:
Ich glaube, wenn mode 1 ist, wird das urspr\xFCngliche Klangbild beibehalten, w\xE4hrend mode 0 der normale Arbeitsmodus ist]
Synth_TREMOLO
Das Tremolo-Modul ver\xE4ndert die Amplitude entsprechend einer LFO -Welle.
\xDCblicherweise verwendet man dazu eine Sinusschwingung, aber das ist nicht zwingend notwendig.
Man erh\xE4lt einen intensiven Effekt, der in vielen Arrangements wegen seiner gro\xDFen Dynamik sehr durchdringend ist.
Der Tremolo-Effekt ist einer der liebsten Effekte f\xFCr Gittaristen, wenn er auch nicht mehr so popul\xE4r wie in den 1960ern ist.
[TODO: augenblicklich ist dieser Effekt als invalue + abs(inlfo) implementiert - vielleicht w\xE4re es sinnvoller, diesen als invalue * (1+inlfo*depth) zu implementieren, wobei depth den Bereich 0..1 hat - das wird nach KDE2.1 entschieden.
Falls Sie Anmerkungen haben, schicken Sie eine Mail an die aRts -Liste;).]
Synth_FX_CFLANGER
Ein Flanger ist ein zeitver\xE4nderlicher Verz\xF6gerungseffekt.
Um die Entwicklung von umfangreichen Flanger-Effekten einfacher zu gestalten, wurde dieses Modul hinzugef\xFCgt, das den Kern eines Ein-Kanal-Flangers darstellt.
Folgende Kan\xE4le sind vorhanden:
invalue
Das Signal, das verarbeitet werden soll.
lfo
M\xF6glichst eine Sinusschwingung, die die Verz\xF6gerungszeit (delay) innerhalb des Flangers moduliert (-1..
1).
mintime
Der minimale Wert f\xFCr die Verz\xF6gerung (delay) innerhalb des Flangers in Millisekunden.
Empfohlene Werte: versuchen sie etwa 1 ms.
Bitte verwenden Sie Werte < 1000 ms.
maxtime
Der minimale Wert f\xFCr die Verz\xF6gerung (delay) innerhalb des Flangers in Millisekunden.
Empfohlene Werte: versuchen sie etwa 5 ms.
Bitte verwenden Sie Werte < 1000 ms.
outvalue
Das Ausgangssignal.
F\xFCr den Effekt ist es wichtig, dass dieses Signal mit dem urspr\xFCnglichen (nicht ver\xE4nderten) Signal gemischt wird.
Sie k\xF6nnen dieses als die Basis f\xFCr einen Choreffekt verwenden.
Filter
Synth_PITCH_SHIFT
Dieser H\xF6henverschiebungseffekt ver\xE4ndert die Frequenz des Eingangssignals ohne die Geschwindigkeit des Signals zu ver\xE4ndern.
Eine Anwendung f\xFCr diesen Effekt ist die Ver\xE4nderung Ihrer Stimme, w\xE4hrend Sie sie aufnehmen (und abspielen) in Echtzeit
Der Parameter speed gibt die relative Geschwindigkeit wieder, mit der das Signal wiedergegeben wird.
Eine Geschwindigkeit von 2 w\xFCrde den Klang auf die doppelte Frequenz anheben (z.B. w\xFCrde eine Eingangsfrequenz von 440Hz zu einer Ausgangsfrequenz von 880Hz f\xFChren).
Der Parameter frequency(Frequenz) wird intern verwendet, um zwischen unterschiedlichen Signalg\xFCten umzuschalten.
Abh\xE4ngig von Ihrer Wahl wird der erzeugte Klang mehr oder weniger realistisch sein.
Ein guter Startwert liegt zwischen 5 und 10.
Synth_SHELVE_CUTOFF
Filtert alle Frequenzen oberhalb einer Grenzfrequenz heraus.
Synth_BRICKWALL_LIMITER
Dieses Modul beschneidet ein Signal, um es in den Bereich von [-1;1] einzupassen.
Es werden keine Ma\xDFnahmen gegen die St\xF6rungen getroffen, die beim Abschneiden lauter Signale entstehen.
Sie k\xF6nnen das als Effekt verwenden (z.B. um eine leicht abgeschnittene Sinusschwingung zu erzeugen).
Es ist wahrscheinlich meistens eine gute Idee, das Resultat durch einen Tiefpassfilter zu schicken, damit es nicht so aggressiv klingt.
Synth_STD_EQUALIZER
Ein h\xFCbsches Modul eines parametrischen Equalizers.
Folgende Parameter sind vorhanden:
invalue, outvalue
Das Signal, das durch den Equalizer gefiltert wird.
low
Wie tiefe Frequenzen ver\xE4ndert werden sollen.
Der Wert ist in dB, wobei 0 keine \xC4nderung der tiefen Frequenzen bedeutet, -6 bedeutet Absenkung um 6dB und +6 bedeutet Anhebung um 6dB.
mid
Wie mittlere Frequenzen durch den Equalizer ver\xE4ndert werden sollen in dB (siehe auch low).
high
Wie hohe Frequenzen durch den Equalizer ver\xE4ndert werden sollen in dB (siehe auch low).
frequency
Dies ist die zentral Frequenz des Equalizers in Hz, die mittleren Frequenzen befinden sich in diesem Bereich, die hohen und tiefen Frequenz oberhalb und unterhalb.
Anmerkung: die Frequenz kann nicht h\xF6her als die halbe Samplingrate sein, also normalerweise 22050Hz, und nicht tiefer als 1 Hz.
q
Beeinflusst die Breite des Frequenzspektrums.
Es sind nur positive Zahlen (> 0) erlaubt.
Der Wert Eins ist sinnvoll, h\xF6here Werte von q bedeuten ein schmaleres Frequenzband der mittleren Frequenzen, geringere Werte ein breiteres Band.
Synth_RC
Ein ged\xE4mpfter Schwingkreis, der alle Frequenzen um seine Resonanzfrequenz filtert.
Es gibt keine leichte M\xF6glichkeit, die Resonanzfrequenz festzulegen (die nicht herausgefiltert wird), da es nur zwei ungew\xF6hnliche Konstanten f und b gibt.
Der Programmteil stammt noch aus den ersten Tagen von Synthesizern und wird vermutlich durch einen neuen Filter ersetzt werden, bei dem man die Frequenz und den Resonanzwert als Parameter hat.
Versuchen Sie etwa b=5, f=5 oder b=10, f=10 oder b=15, f=15.
Synth_MOOG_VCF
Filtert alle Frequenzen oberhalb einer Grenzfrequenz heraus (es handelt sich um einen 24db 4pole-Filter, der -24db pro Oktave oberhalb der Grenzfrequenz absenkt), es gibt einen zus\xE4tzlichen Parameter, um die Resonanz einzustellen, 0 bedeutet keine Resonanz und 4 bedeutet selbstoszillierend.
Midi + Sequenzer
Synth_MIDI_TEST
Dieses Modul l\xE4dt eine Instrumentenstruktur aus einer Datei und registriert sich als MIDI -Ausgangskanal beim aRts - MIDI -Manager.
Noten, die an diesen Ausgang gesendet werden, erzeugen T\xF6ne dieses Instrumentes.
Sie k\xF6nnen so etwas mit artscontrol leichter einrichten als manuell in aRts-builder.
Synth_SEQUENCE
Spielt eine Sequenz von Noten immer wieder.
Die Noten werden in Tracker Notation angegeben und durch Semikolons voneinander getrennt.
Ein Beispiel ist A-3;C-4;E-4;C-4;.
Die Geschwindigkeit wird in Sekunden pro Note angegeben, wenn Sie also 120 BPM anvisieren, legen Sie die Geschwindigkeit auf 0.5 Sekunden fest, da 60 Sekunden / 0.5 Sekunden pro Note auf 120 BPM f\xFChrt.
Sie k\xF6nnen f\xFCr jede Note eine individuelle L\xE4nge relativ zur Grundl\xE4nge festlegen durch einen Doppelpunkt gefolgt von der L\xE4nge hinter der Notenbezeichnung.
Ein Beispiel daf\xFCr ist A-3:2;C-4:0.5;D-4:0.5;E-4;.
Midi-Kompositionsprogramme ist ein wenig komfortabler;)
Das Synth_SEQUENCE-Modul gibt zus\xE4tzliche Informationen \xFCber die Position innerhalb der gerade wiedergegebenen Note aus, wobei 0 gerade begonnen und 1 gerade beendet bedeutet.
Diese Informationen k\xF6nnen im Synth_PSCALE-Modul verwendet werden (siehe unten).
Samples
Synth_PLAY_WAV
Dieser Men\xFCpunkt spielt eine wav -Datei ab.
Er ist nur dann verf\xFCgbar, wenn Sie libaudiofile auf Ihrem Computer installiert haben.
Die wave-Datei startet, sobald das Modul erstellt wird.
Sie stoppt, sobald das Ende der wav-Datei erreicht ist.
Zus\xE4tzlich wird der Parameter finished (beendet) auf 1 gesetzt.
Der Geschwindigkeitsparameter (speed) kann verwendet werden, um die Datei schneller oder langsamer wiederzugeben, wobei 1.0 der normalen (aufgenommenen) Geschwindigkeit entspricht.
Klang-IO
Synth_PLAY
Sie werden dieses Modul normalerweise nicht ben\xF6tigen, wenn Sie nicht selbstst\xE4ndige Anwendungen erstellen.
Innerhalb von artsd existiert bereits ein Modul Synth_PLAY und ein zweites wird nicht funktionieren.
Das Synth_PLAY-Modul gibt ein Audio-Signal auf die Soundkarte aus.
Die linken und rechten Kan\xE4le sollten die normalisierten Eingangssignale f\xFCr die Kan\xE4le enthalten.
Wenn sich das Eingangssignal nicht zwischen -1 und 1 befindet, werden zu hohe Amplituden abgeschnitten (clipping).
Wie bereits gesagt, darf es nur ein Synth_PLAY-Modul geben, da es direkt auf die Soundkarte zugreift.
Verwenden Sie Busse, wenn Sie mehr als einen Audiostrom mischen wollen.
Verwenden Sie das Modul Synth_AMAN_PLAY, um eine Ausgabe innerhalb von artsd zu erzeugen.
Anmerkung:
Das Synth_PLAY-Modul \xFCbernimmt das gesamte Timing f\xFCr die Struktur.
Das bedeutet:
Wenn Sie kein Synth_PLAY-Modul haben, haben Sie kein Timing und damit auch keine Klangausgabe.
Sie ben\xF6tigen also (genau) ein Synth_PLAY-Objekt.
Synth_RECORD
Sie werden dieses Modul vermutlich niemals ben\xF6tigen, es sei denn, Sie schreiben selbstst\xE4ndige Anwendungen.
Innerhalb von artsd befindet sich bereits ein Synth_RECORD-Modul und ein zweites funktioniert nicht.
Das Synth_RECORD-Modul nimmt ein Signal von Ihrer Soundkarte auf.
Die Eingangskan\xE4le left (links) und right (rechts) enthalten die Eingangssignale von der Soundkarte (zwischen -1 und 1).
Wie bereits gesagt kann nur ein Synth_RECORD-Modul verwendet werden, da es direkt auf die Soundkarte zugreift.
Verwenden Sie Busse, wenn Sie einen Audiodatenstrom an mehr als einer Stelle verwenden m\xF6chten.
Verwenden Sie das Modul Synth_AMAN_RECORD, um einen Eingang innerhalb von artsd zu erzeugen.
Damit das funktioniert, muss artsd mit Full-Duplex aktiviert gestartet werden.
Synth_AMAN_PLAY
Das Modul Synth_AMAN_PLAY gibt ein Ausgangssignal aus.
Es sollte (nicht notwendigerweise) normalisiert (zwischen -1 und 1) sein.
Dieses Modul verwendet den Audiomanager, um festzulegen, wo das Signal wiedergegeben wird.
Der Audiomanager kann mit Hilfe von artscontrol gesteuert werden.
Um die Verwendung intuitiver zu gestalten, sollten Sie dem Signal einen Namen geben.
Das k\xF6nnen Sie, indem Sie den Parameter title (Titel) verwenden.
Eine weitere Besonderheit des Audiomanagers ist die F\xE4higkeit, den letzten Wiedergabekanal eines Signals zu speichern.
Dazu muss er die Signale unterscheiden k\xF6nnen.
Aus diesem Grund sollten Sie autoRestoreID einen eindeutigen Wert geben.
Synth_AMAN_RECORD
Das Modul Synth_AMAN_RECORD kann Daten einer externen Quelle (z.B.
Line In / Mikrofon) innerhalb von artsd aufnehmen.
Die Ausgabe ist ein normalisiertes Signal (zwischen -1 und 1).
\xDCber den Audiomanager kann festgelegt werden, von wo das Signal aufgenommen wird.
Der Audiomanager kann mit Hilfe von artscontrol gesteuert werden.
Um die Verwendung intuitiver zu gestalten, sollten Sie dem Signal einen Namen geben.
Das k\xF6nnen Sie, indem Sie den Parameter title (Titel) verwenden.
Eine weitere Besonderheit des Audiomanagers ist die F\xE4higkeit, den letzten Wiedergabekanal eines Signals zu speichern.
Dazu muss er die Signale unterscheiden k\xF6nnen.
Aus diesem Grund sollten Sie autoRestoreID einen eindeutigen Wert geben.
Synth_CAPTURE
Das Synth_CAPTURE-Modul kann ein Audiosignal in eine wav-Datei auf Ihrer Festplatte schreiben.
Tests
Synth_NIL
Macht gar nichts.
Das Modul ist sinnvoll zum Testen.
Synth_DEBUG
Kann zum debuggen verwendet werden.
Es gibt den Wert des Signals invalue in gleichbleibenden Abst\xE4nden (etwa 1 Sekunde) zusammen mit einem von Ihnen festgelegten Kommentar aus.
Auf diese Weise k\xF6nnen Sie herausfinden, ob gewisse Signale in gewissen Bereichen bleiben oder ob sie \xFCberhaupt vorhanden sind.
Synth_MIDI_DEBUG
Hiermit k\xF6nnen Sie \xFCberpr\xFCfen, ob Ihre MIDI -Ereignisse aRts \xFCberhaupt erreichen.
Wenn ein MIDI_DEBUG aktiv ist, druckt artsserver etwa die folgenden Angaben:
Die erste Zeile teilt mit, das 100753ms (das sind 100 Sekunden) nach dem Start von MIDI_DEBUG das MIDI -Ereignis "Note an" auf Kanal 0 eingetroffen ist.Dieses Ereignis hatte die Lautst\xE4rke (velocity) 127, also den lautest m\xF6glichen Wert.
Die n\xE4chste Zeile zeigt das zugeh\xF6rige "Note aus"-Ereignis.[ TODO:
Das funktioniert momentan noch nicht.
Reparieren und durch den MIDI -Manager leiten].
Synth_DATA
Erzeugt ein Signal mit einer konstanten Nummer.
Oszillation & Modulation
Synth_FREQUENCY
Keiner der Oszillatoren in aRts ben\xF6tigt eine Frequenz als Eingabe, sondern nur eine Position innerhalb der Welle.
Die Position muss zwischen 0 und 1 liegen.
Das wird f\xFCr ein Standard-Synth_WAVE_SIN-Modul auf den Bereich 0 bis 2*Pi umgerechnet.
Um eine bestimmte Frequenz zu erzeugen, ben\xF6tigen Sie ein Synth_FREQUENCY-Modul.
Synth_FM_SOURCE
Dieses Modul wird f\xFCr Frequenzmodulation ben\xF6tigt.
Legen Sie die Grundfrequenz an den Frequenzeingang und ein anderes Signal an den Modulationseingang.
Setzen Sie den Modulationswert (modlevel) etwa auf 0.3.
Die Frequenz wird mit dem Modulationssignal moduliert.
Ein interessantes Signal entsteht, wenn man ein r\xFCckgekoppeltes Signal verwendet, d.h. eine Kombination des verz\xF6gerten Ausgangssignals von Synth_FM_SOURCE (sie m\xFCssen es mit einem Oszillator verbinden, da es nur die Rolle von Synth_FREQUENCY \xFCbernimmt), und irgendein anderes Signal.
Arbeitet gut mit Synth_WAVE_SIN-Oszillatoren zusammen.
Wellenformen
Synth_WAVE_SIN
Sinusgenerator.
Legen Sie ein Signal (pos) von Synth_FREQUENCY oder Synth_FM_SOURCE an den Eingang und am Ausgang liegt eine Sinusschwingung an.
Das pos-Signal legt die Position in der Schwingung (Phasenverschiebung) im Bereich von 0..1 fest, was intern 0..2*Pi entspricht.
Synth_WAVE_TRI
Dreieckgenerator.
Legen Sie ein Signal (pos) von Synth_FREQUENCY oder Synth_FM_SOURCE an den Eingang und am Ausgang liegt eine Dreieckschwingung an.
Das pos-Signal legt die Position in der Schwingung (Phasenverschiebung) im Bereich von 0..1 fest, was intern 0..2*Pi entspricht.
Vorsicht:
Das Eingangssignal muss im Bereich von 0..1 sein, damit ein gutes Ausgangssignal entsteht.
Synth_NOISE
L\xE4rmgenerator.
Dieser Generator erzeugt ein zuf\xE4lliges Signal zwischen -1 und 1.
Synth_WAVE_SQUARE
Rechteckgenerator.
Legen Sie ein Signal (pos) von Synth_FREQUENCY oder Synth_FM_SOURCE an den Eingang und am Ausgang liegt eine Rechteckschwingung an.
Das pos-Signal legt die Position in der Schwingung (Phasenverschiebung) im Bereich von 0..1 fest, was intern 0..2*Pi entspricht.
Vorsicht:
Das Eingangssignal muss im Bereich von 0..1 sein, damit ein gutes Ausgangssignal entsteht.
Synth_WAVE_SOFTSAW
Abgeschw\xE4chte S\xE4gezahnoszillation.
Dieses Signal ist \xE4hnlich zum Signal des Dreieckgenerators.
Legen Sie ein Signal (pos) von Synth_FREQUENCY oder Synth_FM_SOURCE an den Eingang und am Ausgang liegt eine weiche S\xE4gezahnschwingung an.
Das pos-Signal legt die Position in der Schwingung (Phasenverschiebung) im Bereich von 0..1 fest, was intern 0..2*Pi entspricht.
Vorsicht:
Das Eingangssignal muss im Bereich von 0..1 sein, damit ein gutes Ausgangssignal entsteht.
Synth_WAVE_PULSE
Impulsgenerator - dieses Modul ist grunds\xE4tzlich \xE4hnlich zum Rechteckgenerator (Synth_WAVE_RECT), bietet aber zus\xE4tzlich eine M\xF6glichkeit, das Verh\xE4ltnis von Maximumzeit zu Minimumzeit mit dem Eingang dutycycle einzustellen.
Legen Sie ein Signal (pos) von Synth_FREQUENCY oder Synth_FM_SOURCE an den Eingang und am Ausgang liegt eine Impulsschwingung an.
Das pos-Signal legt die Position in der Schwingung (Phasenverschiebung) im Bereich von 0..1 fest, was intern 0..2*Pi entspricht.
Vorsicht:
Das Eingangssignal muss im Bereich von 0..1 sein, damit ein gutes Ausgangssignal entsteht.
Verschiedenes
Synth_COMPRESSOR
Dieses Modul reduziert den Dynamikbereich des Signals.
Ein Kompressor ist n\xFCtzlich, um die gro\xDFen Lautst\xE4rkeschwankungen einer \xFCber ein Mikrophon redenden Person zu verringern.
Sobald das Eingangssignal einen bestimmten Pegel (den Grenzpegel) \xFCberschreitet, wird der Pegel reduziert.
Jeder Pegelwert oberhalb des Grenzpegels wird mit einem Faktor, eine Zahl zwischen 0 und 1, multipliziert.
Zum Abschlu\xDF wird das gesamte Signal mit dem Ausgangsfaktor multipliziert.
Die Argumente attack und release verz\xF6gern den Start und das Ende der Kompression.
Das kann verwendet werden, um z.B. den lauten Beginn einer Basedrum zu h\xF6ren.
Das Argument wird in Millisekunden angegeben und ein Wert von 0 ms ist m\xF6glich, kann aber zu einem leichten Nebenger\xE4usch f\xFChren.
Visuelle Modul-Referenz
TODO wenn visuelle Module stabiler sind.