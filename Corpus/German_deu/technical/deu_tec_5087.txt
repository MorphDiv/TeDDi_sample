# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

& Qt; und Lizenzfragen
Was ist & Qt; überhaupt?
& Qt; ist eine auf C++ basierende Klassenbibliothek mit der man Benutzeroberflächen erzeugen kann. Sie enthält desweiteren viele Werkzeuge wie & eg; String-Klassen oder Klassen zur Behandlung von Ein- und Ausgaben. & Qt; ist für die meisten Bedienelemente verantwortlich, die Sie in & kde; sehen können. Dazu gehören & eg; Menüs, Knöpfe, Schieberegler und so weiter. Weil & Qt; auf verschiedenen Plattformen eingesetzt werden kann, kann man damit auch Programme erstellen, die sowohl auf & UNIX; als auch auf & Windows; oder Embedded-Geräten laufen. Wenn Sie mehr über & Qt; lernen möchten, sehen Sie sich bitte auf http://www.qtsoftware.com um.
Warum setzt & kde; auf & Qt;?
& Qt; ist eine sehr anspruchsvolle und fortgeschrittene Bibliothek. Sie enthält alle Funktionen, die für eine moderne Benutzeroberfläche vonnöten sind. & Qt; ist in C++ geschrieben und ermöglicht daher objektorientierte Programmierung. Dadurch wiederum kann man sehr effizient programmieren und bereits geschriebenen Programmtext an vielen Stellen wiederverwenden anstatt ihn neu zu schreiben. Unserer Meinung nach gibt es keine bessere Bibliothek für & UNIX;, deshalb verwenden wir & Qt; in & kde;.
Warum verwendet & kde; nicht GTK, XForms, Xlib oder etwas anderes?
Es gibt eine Menge sogenannter Toolkits. & kde; soll aber eine konsistente Benutzeroberfläche haben und kann deshalb nicht mehrere solche Toolkits gleichzeitig verwenden. Außerdem schont & kde; dadurch Ihre Rechner-Ressourcen. Wir haben uns für & Qt; entschieden; die Gründe dafür können Sie weiter oben nachlesen.
Aber & Qt; ist nicht frei, oder?
Doch, es ist frei. Am 4. September 2000 wurde die Version 2.2 von & Qt; unter der GPL lizenziert und erfüllt damit alle nötigen Aspekte freier Software. Seit Version 4.5.0 ist Qt auch unter der LGPL erhältlich.
Kann ich kommerzielle Programme für & kde; schreiben?
Sie können die & kde;-Bibliotheken sowohl zum Schreiben von kommerzieller und Closed-Source als auch zum Schreiben von kommerzieller und Open-Source -Software verwenden. Wenn Sie Open-Source programmieren möchten, können Sie die freie Version von & Qt; benutzen. Wenn Sie allerdings Closed-Source schreiben, dürfen Sie nicht die freie Version von & Qt; verwenden; Sie müssen eine & Qt;-Lizenz von Qt Software beziehen.
Wenn Sie weitere Informationen benötigen, wenden Sie sich bitte direkt an Qt Software.