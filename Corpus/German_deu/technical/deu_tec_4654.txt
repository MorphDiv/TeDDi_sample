# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Kapitel 2.
Kleines Tutorial
Nach vorne
Eine der mächtigsten Funktionen von PHP ist die Art, wie HTML-Formulare verarbeitet werden.
Sie sollten wissen, dass jedes Element eines Formulars automatisch in Ihren PHP-Skripts verfügbar ist.
Bitte lesen Sie die Seite Variablen außerhalb von PHP für weitere Informationen und Beispiele über das Benutzen von Formularen mit PHP.
Hier ist ein Beispiel-HTML-Formular:
Beispiel 2-6.
Ein einfaches HTML-Formular
form action=" action.php "method="POST" Ihr Name: input type="text "name="name" / Ihr Alter: input type="text "name="alter" / input type="submit "/ form
An diesem Formular ist nichts Besonderes.
Es ist ein normales HTML-Formular ohne irgendwelche speziellen Tags.
Wenn der Benutzer das Formular ausfüllt und den Submit-Button anklickt, wird die Seite action.php Wenn der Benutzer das Formular ausfüllt und den Submit-Button anklickt, wird die Seite action.php aufgerufen.
Diese Datei könnte so aussehen:
Beispiel 2-7.
Daten des Formulars ausgeben
Hallo ?php echo $_POST[ "name"];?.
Sie sind ?php echo $_POST[ "alter"];?
Jahre alt.
Die Ausgabe des Skripts könnte dann so aussehen:
Hallo Joe.
Sie sind 22 Jahre alt.
Es sollte einfach zu verstehen sein, was hier passiert.
Die Variablen $_POST[ "name"] und $_POST["alter"] werden für Sie automatisch von PHP gesetzt.
Weiter oben haben wir das autoglobale Array $_SERVER eingeführt, jetzt benutzen wir hier das - ebenfalls autoglobale - Array $_POST, dass alle POST-Daten enthält.
Beachten Sie, dass die im Formular verwendete Methode POST ist.
Hätten wir GET verwendet, dann wären die Daten unseres Formulars stattdessen im autoglobalen Array $_GET verfügbar.
Sie können auch das autoglobale Array $_REQUEST benutzen, wenn die Quelle der Daten keine Rolle spielt.
Dieses Array enthält die GET-, POST-, COOKIE - und FILE-Daten.
Vgl. auch die import_request_variables() -Funktion.
Zurück
Zum Anfang
Nach vorne
Nützliches
Nach oben
Alten Code mit neuen PHP-Versionen benutzen