# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Das Einlesen der Formel in Zelle %1 ist fehlgeschlagen.
Australien
Dollar
Kanada
Karibik
Neuseeland
Vereinigte Staaten
Österreich
Euro
Belgien
Zypern
Finnland
Frankreich
Deutschland
Griechenland
Irland
Italien
Luxemburg
Malta
Monaco
Niederlande
Portugal
San Marino
Slowakei
Slowenien
Spanien
Vereinigtes Königreich
Pfund
Japan
Yen
Afghanistan
Afghani (alt)
AFA
Afghani
AFN
Albanien
Lek
Algerien
Algerischer Dinar
DZD
Amerikanisch-Samoa
US Dollar
USD
Andorra
EUR
Andoranische Peseta
ADP
Angola
Kwanza
AOA
Anguilla
Ostkaribischer Dollar
XCD
Antigua und Barbuda
Ostkaribischer Dollar
Argentinien
Argentinischer Peso
ARS
Armenien
Armenischer Dram
AMD
Aruba
Aruba-Florin
AWG
Australischer Dollar
AUD
Schilling
S
Aserbaidschan
Aserbaidschan-Manat
AZM
Bahamas
Bahama-Dollar
BSD
Bahrain
Bahrain-Dinar
BHD
Bangladesch
Taka
BDT
Barbados
Barbados-Dollar
BBD
Belarus
Belarus-Rubel
p.
Franc
BF
Belize
Belize-Dollar
BZ$
Benin
CFA Franc BCEAO
XOF
Bermudas
Bermudas-Dollar
BMD
Bhutan
Indische Rupie
INR
Ngultrum
BTN
Bolivien
Boliviano
Bs
Mvdol
BOV
Bosnien und Herzegowina
Bosnisch-herzegowinische konvertible Mark
BAM
Botsuana
Pula
BWP
Bouvetinsel
Norwegische Krone
NOK
Brasilien
Brasilianischer Real
R$
Britisches Territorium im Indischen Ozean
Brunei Darussalam
Brunei-Dollar
BND
Bulgarien
Lew
BGL
Bulgarischer Lew
BGN
Burkina Faso
Burundi
Burundi-Franc
BIF
Kambodscha
Riel
KHR
Kamerun
CFA Franc BEAC
XAF
Kanadischer Dollar
CAD
Kap Verde
Kap-Verde-Escudo
CVE
Kaimaninseln
Kaiman-Dollar
KYD
Zentralafrikanische Republik
Tschad
Chile
Chilenischer Peso
Ch$
Unidades de fomento
CLF
China
Renminbi Yuan
CNY
Weihnachtsinsel
Kokosinseln
Kolumbien
Kolumbianischer Peso
C$
Komoren
Komoren-Franc
KMF
Kongo
Kongo, Die Demokratische Rebublik von
Kongolesischer Franc
CDF
Cookinseln
Neuseeland-Dollar
NZD
Costa Rica
Costa-Rica-Colón
C
Côte d'Ivoire
Kroatien
Kroatische Kuna
kn
Kuba
Kubanischer Peso
CUP
Zypern-Pfund
CYP
Tschechische Republik
Tschechische Krone
Kc
Dänemark
Dänische Krone
kr
Dschibuti
Dschibuti-Franc
DJF
Dominica
RD$
Dominikanische Republik
Dominikanischer Peso
DOP
Timor-Leste
Timor Escudo
TPE
Ecuador
Ägypten
Ägyptisches Pfund
EGP
El Salvador
El-Salvador-Colón
Äquatorialguinea
Eritrea
Nakfa
ERN
Estland
Estnische Krone
Äthiopien
Äthiopischer Birr
ETB
Falklandinseln (Malwinen)
Falkland-Pfund
FKP
Färöer Inseln
Fidschi
Fidschi-Dollar
FJD
Markka
mk
F
Französisch-Guayana
Französisch-Polynesien
CFP Franc
XPF
Französische Gebiete im südlichen Indischen Ozean
Gabun
Gambia
Dalasi
GMD
Georgien
Lari
GEL
Deutsche Mark
DM
Ghana
Cedi
GHC
Gibraltar
Gibraltar-Pfund
GIP
Drachma
GRD
Grönland
DKK
Granada
Guadeloupe
Guam
Guatemala
Quetzal
Q
Guinea
Guinea-Franc
GNF
Guinea-Bissau
Guinea-Bissau-Peso
GWP
Guyana
Guyana-Dollar
GYD
Haiti
Gourde
HTG
Heard und McDonaldinseln
Vatikan
Honduras
Lempira
L
Hongkong
Hongkong-Dollar
HKD
Ungarn
Forint
Ft
Island
Isländische Krone
kr.
Indien
Indonesien
Rupiah
Rp
Islamische Republik Iran
Iranischer Rial
IRR
Irak
Irak-Dinar
IQD
Punt
IR----
Pence
IEX
Israel
Neuer Schekel
ILS
Lira
L.
Jamaika
Jamaika-Dollar
J$
JPY
Jordanien
Jordan-Dinar
JOD
Kasachstan
Tenge
KZT
Kenia
Kenia-Schilling
KES
Kiribati
Demokratischen Volksrepublik Republik Korea
Nordkoreanischer Won
KPW
Republik Korea
Won
KRW
Kuwait
Kuwait-Dinar
KWD
Kirgisistan
Som
KGS
Demokratische Volksrepublik Laos
Kip
LAK
Lettland
Lettischer Lats
Ls
Libanon
Libanesisches Pfund
LBP
Lesotho
Rand
ZAR
Loti
LSL
Liberia
Liberianischer Dollar
LRD
Große Sozialistische Libysch-Arabische Volks-Dschamahirija
Libyscher Dinar
LYD
Liechtenstein
Schweizer Franken
CHF
Litauen
Litauische Litas
Lt
Macau
Pataca
MOP
Ehemalige jugoslawische Republik Mazedonien
Denar
MKD
Madagaskar
Madagaskar-Franc
MGF
Malawi
Kwacha
MWK
Malaysia
Malaysischer Ringgit
MYR
Malediven
Rufiyaa
MVR
Mali
EURO
Maltesische Lira
MTL
Marshallinseln
Martinique
Mauretanien
Ouguiya
MRO
Mauritius
Mauritius-Rupie
MUR
Mayotte
Mexiko
Mexikanischer Peso
MXN
Mexican Unidad de Inversion (UDI)
MXV
Föderierte Staaten von Mikronesien
Republik Moldau
Moldau-Leu
MDL
Mongolei
Tugrik
MNT
Montserrat
Marokko
Marokkanischer Dirham
MAD
Mosambik
Metical
MZM
Myanmar
Kyat
MMK
Namibia
Namibia-Dollar
NAD
Nauru
Nepal
Nepalesische Rupie
NPR
Gulden
fl
Niederländische Antillen
Niederländische-Antillen-Gulden
ANG
Neukaledonien
Nicaragua
Cordoba Oro
NIO
Niger
Nigeria
Naira
NGN
Niue
Norfolkinsel
Nördliche Marianen-Inseln
Norwegen
Oman
Rial Omani
OMR
Pakistan
Pakistanische Rupie
PKR
Palau
Panama
Balboa
PAB
Papua-Neuguinea
Kina
PGK
Paraguay
Guarani
G
Peru
Neuer Sol
PEN
Philippinen
Philippinischer Peso
PHP
Pitcairninseln
Polen
Zloty
zt
Escudo
Esc.
Puerto Rico
Katar
Katar-Riyal
QAR
Rumänien
Leu
LEI
Russische Föderation
Russischer Rubel
RUR
RUB
Ruanda
Ruanda-Franc
RWF
St. Helena
St. Helena-Pfund
SHP
St. Kitts und Nevis
St. Lucia
St. Pierre und Miquelon
St. Vincent und die Grenadinen
Samoa
Tala
WST
São Tomé und Príncipe
Dobra
STD
Saudi-Arabien
Saudi Riyal
SAR
Senegal
Seychellen
Seychellen-Rupie
SCR
Sierra Leone
Leone
SLL
Singapur
Singapur-Dollar
SGD
Slowakische Krone
Sk
Tolar
SIT
Salomonen
Salomonen-Dollar
SBD
Somalia
Somalia-Schilling
SOS
Südafrika
R
Peseta
Pts
Sri Lanka
Sri-Lanka-Rupie
LKR
Sudan
Sudanesischer Dinar
SDD
Suriname
Suriname-Gulden
SRG
Svalbard und Jan Mayen
Swasiland
Lilangeni
SZL
Schweden
Schwedische Krone
Schweiz
SFr.
Arabische Republik Syrien
Syrisches Pfund
SYP
Taiwan
Neuer Taiwan-Dollar
TWD
Tadschikistan
Somoni
TJS
Vereinigte Republik Tansania
Tansania-Schilling
TZS
Thailand
Baht
THB
Togo
Tokelau
Tonga
Pa'anga
TOP
Trinidad und Tobago
Trinidad-und-Tobago-Dollar
TT$
Tunesien
Tunesischer Dinar
TND
Türkei
Türkische Lira
TL
Turkmenistan
Manat
TMM
Turks- und Caicosinseln
Tuvalu
Uganda
Uganda Shilling
UGX
Ukraine
Hryvnia
UAH
Vereinigte Arabische Emirate
UAE Dirham
AED
Pfund Sterling
GBP
US-Dollar (Nächster Tag)
USN
US-Dollar (Selber Tag)
USS
Uruguay
Uruguayischer Peso
NU$
Usbekistan
Usbekistan-Sum
UZS
Vanuatu
Vatu
VUV
Venezuela
Bolívar
Vietnam
Dong
VND
Jungferninseln
Wallis und Futuna
Westsahara
Jemen
Jemen-Rial
YER
Jugoslawien
Jugoslawischer Dinar
YUM
Sambia
ZMK
Simbabwe
Zimbabwe-Dollar
ZWD
Text
Ganze Zahl (z. B. 1, 132, 2344)
Wahrheitswert (WAHR oder FALSCH)
Ein Fließkommawert (wie 1,3;0,343;253)
Ein beliebiger Wert
Eine Zeichenfolge
Eine Folge ganzer Zahlen (wie 1, 132, 2344)
Eine Folge von Wahrheitswerten (WAHR oder FALSCH)
Eine Folge von Fließkommawerten (wie 1,3;0,343;253)
Eine Folge beliebiger Werte
Rückgabetyp: %1
Syntax
Parameter
Kommentar: %1
Typ: %1
Beispiele
Ähnliche Funktionen
Tabelle%1
Dieses Dokument enthält keine Tabellen.
Im Zelleneditor mit den Links/Rechts-Pfeiltasten im Text navigieren.
Wenn diese Einstellung aktiv ist, können Sie mit den Links/Rechts-Pfeilen im Zelleneditor navigieren. Anderenfalls wird der Bearbeitungsmodus verlassen.
& Datei
& Bearbeiten
Füllen
Leeren
Löschen
& Ansicht
& Einfügen
& Externe Daten
Format
Zellen verbinden
& Zeile
& Spalte
& Tabelle
& Druckbereich
Daten
Filter
Extras
& Einstellungen
Bearbeiten
Navigation
Schriftart
Format
Farbe/UmrandungNAME OF TRANSLATORS
Thomas Diehl, Tobias Erbsland, Jannick Kuhr, Holger SchröderEMAIL OF TRANSLATORS
thd@kde.org, te@profzone.ch, opensource@kuhr.org, holger-kde@holgis.net
Datenbankauswahl
Datenbereich
Bereich:
Erste Zeile enthält Beschriftung
Erste Spalte enthält Beschriftung
Datenformat
Datensätze zeilenweise
Datensätze spaltenweise
Vorschau
Zeit
Datum
Teiler
Währung
Währung
Prozent
Allgemein
Zahl
Datum & Zeit
Währung:
Format:
Postfix:
Genauigkeit:
Präfix:
Sie können hier für den aktuellen Zelltext Schriftstil, -größe und -farbe sowie einige zusätzliche Optionen wie„ unterstrichen“ oder„ durchgestrichen“ auswählen. Der untere Teil der Seite gibt Ihnen eine Vorschau des ausgewählten Textformats. Die Standardschrift wird für alle Zellen im Menü„ Format - > Stilverwaltung“ mit dem aktuell verwendeten Stil eingestellt.
Wählen Sie den Schriftstil für die aktuell ausgewählten Zellen. Wenn mehrere Zellen mit unterschiedlichem Stil ausgewählt sind, wird die Anzeige auf„ Unterschiedlich (Keine Änderung )“ gesetzt. Belassen Sie diese Einstellung, werden keine Änderungen durchgeführt. Ändern Sie sie hingegen z. B. auf„ Roman“, wird der Textstil für alle ausgewählten Zellen auf„ Roman“ geändert.
Unterschiedlich (Keine Änderung)
Unecht Kursiv (Roman)
Kursiv
Wählen Sie den Schriftstärke für die aktuell ausgewählten Zellen. Wenn mehrere Zellen mit unterschiedlicher Stärke ausgewählt sind, wird die Anzeige auf„ Unterschiedlich (Keine Änderung )“ gesetzt. Belassen Sie diese Einstellung, werden keine Änderungen durchgeführt. Ändern Sie sie hingegen z. B. auf„ Fett“, wird die Schriftstärke für alle ausgewählten Zellen auf„ Fett“ geändert.
Normal
Fett
Farbe:
Ist diese Einstellung aktiv, wird der aktuelle Zellentext unterstrichen.
Unterstrichen
Größe:
Stärke:
Stil:
Wählen Sie die Farbe für den aktuellen Zellentext. Klicken Sie auf den Farbbalken, um den„ Farbe wählen“ -Dialog zu öffnen und eine neue Farbe einzustellen.
Ist diese Einstellung aktiv, wird der aktuelle Zellentext durchgestrichen.
Durchgestrichen
Dieses Feld listet alle verfügbaren Schriftfamilien. Klicken Sie auf eine Familie, um sie für die aktuelle Zelle zu verwenden.
Hier können Sie eine Vorschau der Schriftart sehen, die Sie für die aktuelle Zelle ausgewählt haben.
Wählen Sie die waagerechte Position des Inhalts in der Zelle. Standard ist voreingestellt wird vom verwendeten Format festgelegt. Links bedeutet, dass der Inhalt links in der Zelle angezeigt wird. Zentriert bedeutet, dass der Inhalt in der Mitte der Zelle angezeigt wird. Rechts bedeutet, dass der Inhalt rechts in der Zelle angezeigt wird.
Waagerecht
Standard
Links
Zentriert
Rechts
Wählen Sie die senkrechte Position des Inhalts in der Zelle. Oben bedeutet, dass der Inhalt oben in der Zelle angezeigt wird. Mitte bedeutet, dass der Inhalt in der Mitte der Zelle angezeigt wird. Unten bedeutet, dass der Inhalt unten in der Zelle angezeigt wird.
Senkrecht
Oben
Mitte
Unten
Ihr Text wird in dem Winkel ausgerichtet erscheinen, den Sie hier einstellen. Negative Werte drehen ihn im Uhrzeigersinn, positive dem Uhrzeigersinn entgegen.
Drehung
°
Diese Einstellung ist nur verfügbar, wenn die Drehung 0° beträgt .„ Text umbrechen“ bricht den Text so um, dass er in die vorhergehende Zellengröße passt. Ist diese Einstellung nicht markiert, bleibt der Text in einer Zeile und die Zellengröße wird entsprechend angepasst .„ Senkrechter Text“ setzt Ihren Text senkrecht in die Zelle.
Text-Einstellungen
Text umbrechen
Senkrechter Text
Wählen Sie den Einzug, der in der Zelle verwendet wird, wenn Sie die Menüs„ Format - > Einzug vergrößern“ bzw.„ Format - > Einzug verkleinern“ auswählen.
Einzug
Wenn diese Einstellung aktiv ist, hat dies den selben Effekt wie„ Daten - > Zellen verbinden“. Sie müssen mindestens zwei aufeinanderfolgenden Zellen ausgewählt haben. Diese Zellen werden dann zu einer größeren verschmolzen. Ist eine verschmolzene Zelle ausgewählt und sie deaktivieren diese Funktion, werden die ursprünglichen Zellen wiederhergestellt. Dies hat den selben Effekt wie„ Daten - > Zellen trennen“.
Zellen verbinden
Die hier verwendete Einheit, wird im Menü„ Format - > Seitenlayout ...“ festgelegt.
Zellengröße
Wenn diese Einstellung aktiv ist, wird für die Zelle die Standardhöhe anstelle des Wertes oben verwendet.
Standardhöhe (%1)
Höhe:
Zellenhöhe einstellen.
Wenn diese Einstellung aktiv ist, wird für die Zelle die Standardbreite anstelle des Wertes oben verwendet.
Standardbreite (%1)
Breite:
Dieser Reiter ermöglicht es Ihnen, den Zellenschutz einzustellen. Alle Zellen werden standardmäßig geschützt. Das bedeutet, dass der Zelleninhalt nicht geändert werden kann. Damit der Zellenschutz aktiv ist, muss außerdem die Tabelle mittels des Menüs„ Extras - > Tabelle schützen“ mit einem Passwort geschützt werden. Sie können außerdem den Zelleninhalt über die Funktion„ Alles ausblenden“ verbergen. Auch dieses erfordert, dass die Tabelle geschützt ist. Im Benutzerhandbuch können Sie mehr über diese Einstellungen erfahren.
Drucken
Wenn diese Einstellung aktiv ist, wird der Inhalt der Zelle nicht gedruckt. Ist sie deaktiviert (Standard), wird der Zelleninhalt regulär gedruckt. Beachten Sie, dass Sie selbst dann drucken können, wenn die Zelle geschützt ist.
Text & nicht drucken
Schutz
Diese Einstellung blendet den Zelleninhalt aus und funktioniert nur, wenn die Tabelle geschützt ist. Ob die Zelle geschützt ist, ist dabei unerheblich.
Alles ausblenden
Wenn diese Einstellung aktiv ist, wird der Zellinhalt geschützt. Dies ist die Standardeinstellung. Um den individuellen Zellschutz zu aktivieren, muss die ganze Tabelle mittels des Menüs„ Extras - > Dokument schützen geschützt werden. Im Benutzerhandbuch können Sie mehr über diese Einstellungen erfahren.
& Geschützt
Wenn diese Einstellung aktiv ist, ist die Zelle noch sichtbar, ihr Inhalt erscheint aber nicht in der Formelleiste .„ Formel ausblenden“ funktioniert ausschließlich für Zellen die Formeln enthalten. Die Tabelle muss dabei geschützt sein.
Formel & ausblenden
Inhalt
Alles
Kommentar
Ergebnis
Alles ohne Umrandung
Operation
Überschreiben
Addition
Subtraktion
Multiplikation
Division
Zwischensumme
Zwischensumme addieren zu:
Funktion verwenden:
Bei jeder Änderung in:
Spalten
Optionen
Aktuelle Zwischensummen & ersetzen
& Seitenumbruch zwischen den Gruppen
& Zusammenfassung unterhalb der Daten
& Nur Zusammenfassung
Leere Zellen beim Suchen nach Änderungen & ignorieren
Dateioptionen
Anzahl der Einträge in der Liste der zuletzt geöffneten Dateien:
Diese Einstellung kontrolliert die maximale Anzahl der angezeigten Dateinamen unter Datei - > Zuletzt geöffnete Dateien.
Automatische Sicherung (Min.):
Hier können Sie die Zeit zwischen den automatischen Sicherungen festlegen oder diese Funktion deaktivieren. Ziehen Sie dazu den Schieberegler ganz nach links.
Nicht automatisch sichern
Min.
Aktivieren Sie diese Einstellung, wenn Sicherungskopien erstellt werden sollen. Standardmäßig ist diese Einstellung aktiv.
Sicherungskopien erstellen
Cursorbewegung nach Drücken der Eingabetaste:
Wenn Sie eine Zelle ausgewählt haben und die Eingabetaste drücken, wird sich der Zellcursor um eine Zelle in die in dieser Liste festgelegte Richtung bewegen.
In der Statusleiste gezeigte Funktion:
Diese Auswahlliste kann verwendet werden, um die Berechnung auszuwählen, die von der Zusammenfassungs-Funktion in der Statusleiste durchgeführt wird.
Einheit:
Wählen Sie die Standardeinheit, die in Ihren Tabellen verwendet wird. Beachten Sie, dass Sie die Einheit für die aktuelle Tabelle über das Menü Format - > Seitenlayout... überschreiben können.
Einzugsschritt:
Mit diese Einstellung legen Sie die Größe des Einzugs fest, der von den Funktionen„ Einzug vergrößern“ und„ Einzug verkleinern“ im Format-Menü verwendet wird.
Farben
Gitter:
Klicken Sie hier, um die Farbe der Gitterlinien, z. B. die Umrandungen der Zellen, zu ändern.
Benutzerdefiniert...
Seitenumrandung:
Wenn Ansicht - > Seitenumrandung anzeigen aktiviert ist, werden die Seitenumrandungenangezeigt. Klicken Sie hier, um eine andere Farbe für die Seitenränder als das standardmäßige rot auszuwählen.
Druckeinstellungen
Gitter
Kommentarmarkierung
Diagramme
Objekte
Nullwerte
Formelmarkierung
Zeichnungen
Kopfzeilen
Seitenreihenfolge
Von links nach rechts, dann nach unten
Von oben nach unten, dann quer
Tabellenausrichtung auf der Seite
Waagerecht zentrieren
Senkrecht zentrieren
Wiederholungen auf jeder Seite
Spalten von
Zeilen von
bis
Skalierung
Feste Vergrößerung:
Seitenbegrenzungen:
SheetPropertiesBase
Layout-Ausrichtung:
In der Standardeinstellung steht die erste Spalte einer Tabelle links. Wählen Sie„ Rechts nach Links“ aus, steht die erste Spalte rechts. Alle weiteren Spalten werden dann von rechts nach links hinzugefügt.
Links nach Rechts
Rechts nach Links
Wenn diese Einstellung aktiv ist, werden Zellen mit einem Kommentar mit einem kleinen roten Dreieck in der rechten oberen Ecke markiert.
& Kommentarmarkierung anzeigen
Wenn diese Einstellung aktiv ist, wird der Zellverweis am linken Ende der Formelleiste im LC-Modus (z. B. L2C3) und nicht in seiner normalen Form (z. B. B3) angezeigt. Derzeit scheint dies nicht von großem Nutzen zu sein.
& LC-Modus verwenden
Wenn diese Einstellung aktiv ist, werden die Seitenumrandungen in Ihrer aktuellen Tabelle angezeigt. Standardmäßig sind sie ausgeblendet. Das Anzeigen der Seitenumrandungen ist nützlich, wenn Sie Ihre Tabelle drucken möchten.
Seitenränder anzeigen
Wenn diese Einstellung aktiv ist, wird der erste Buchstabe eines jeden Textes automatisch mit einem Großbuchstaben beginnen.
& Ersten Buchstaben groß schreiben
Wenn diese Einstellung aktiv ist, wird jede Zelle, die eine Null enthält, leer erscheinen.
Nullen & ausblenden
Wenn diese Einstellung aktiv ist, zeigt KSpread in den Zellen die eigentlichen Formeln und nicht deren Ergebnisse an.
& Formel anzeigen
Wenn diese Einstellung aktiv ist, werden die Spaltenüberschriften als Nummern und nicht als Buchstaben angezeigt. Buchstaben sind die Standardeinstellung.
Spalten als & Nummern anzeigen
Wenn diese Einstellung aktiv ist, wird KSpread ein kleines blaues Dreieck in der unteren linken Ecke von Zellen anzeigen, die eine Formel enthalten. Dies ist nützlich, wenn Sie Zellen mit Formeln schützen möchten.
& Formelmarkierung anzeigen
Wenn diese Einstellung aktiv ist, wird das Gitter (die Zellgrenzen) angezeigt. Dies ist die Standardeinstellung. Ist sie deaktiviert, wird das Gitter ausgeblendet.
& Gitter anzeigen
Diese Einstellung kontrolliert, ob Formeln automatisch neu berechnet werden, wenn sich der Wert in einer ihnen zugeordneten Zelle ändert.
Automatische & Neuberechnung
Alle Tabellen
Aktuelle Tabelle
Ausgewählte Tabellen:
Verfügbare Tabellen
Liste aller verfügbaren Tabellen. Um eine Tabelle zu drucken, müssen Sie eine oder mehrere Tabellen in dieser Liste auswählen und mit Hilfe der Knöpfe in die rechte Liste einfügen. Diese Liste enthält die zu druckenden Tabellen. Sie können eine Tabelle so häufig einfügen wie Sie möchten. Diese werden dann entsprechend mehrfach gedruckt. Dies ist beispielsweise für Trennblätter oder Titelseiten nützlich.
Verfügbare Tabellen
Zu druckende Tabellen in angegebener Reihenfolge
Liste der zu druckenden Tabellen. Nur die hier gelisteten Tabellen werden in der angegebenen Reihenfolge gedruckt. Sie können die Druckreihenfolge mit den Knöpfen Nach oben und Nach unten ändern. Es ist sogar möglich, eine Tabelle mehr als einmal zu drucken. Fügen Sie die gewünschte Tabelle einfach ein weiteres Mal ein und ordnen Sie die Liste nach Ihren Wünschen.
Ausgewählte Tabellen
Alle Tabellen auswählen
Ausgewählte Tabelle ganz nach oben verschieben
Tabellen auswählen
Ausgewählte Tabelle nach oben verschieben
Tabellen entfernen
Ausgewählte Tabelle nach unten verschieben
Auswahl aufheben
Ausgewählte Tabelle ganz nach unten verschieben
Abhängigkeit
Ausschneiden
Ungültiges Dokument. Es ist kein Tabellenname angegeben.
Sie können eine geschützte Tabelle nicht verändern < "and" >
Seite
Seiten
Datei
Name
Zeit
Datum
Verfasser
E-Mail
Organisation
Tabelle
Kopfzeile
Kopfzeile1
Standard
Die Überprüfung von Zelle %1 ist fehlgeschlagen
Wahr
FalschError: circular formula dependency
#KREIS!Error: broken cell reference
#ABHÄNGIG!Error: division by zero
#DIV/0!Error: not available
#N/VError: unknown function name
#NAME?Error: number out of range
#NUM!Error: empty intersecting area
#NULL!Error: formula not parseable
#ANALYSE!Error: invalid cell/array reference
#REF!Error: wrong (number of) function argument(s)
#WERT!
PM
AM
h
Min.
s
wahr
falsch
pm
am
Bit-Operationen
Erste Zahl
Zweite Zahl
Die Funktion BITAND() führt eine bitweise AND-Operation für die beiden ganzzahligen Parameter durch.
BITAND(Wert;Wert)
BITAND(12;10) ergibt 8 (weil dezimal 12 binär 1100 und dezimal 10 binär 1010 entspricht, die AND-Operation von 1100 und 1010 dann 1000 ergibt und dies wiederum der Ganzzahl 8 entspricht).
Anzahl, um die nach links verschoben werden soll
Die Funktion BITLSHIFT() führt eine bitweise Linksverschiebung des ersten Parameters durch. Die Anzahl an Bits, um die verschoben werden soll, wird durch den zweiten Parameter angegeben. Beachten Sie, dass ein negativer Wert für die Linksverschiebung zu einer Rechtsverschiebung führt.
BITLSHIFT(Wert; Verschiebung)
Anzahl, um die nach rechts verschoben werden soll
Die Funktion BITRSHIFT() führt eine bitweise Rechtsverschiebung des ersten Parameters durch. Die Anzahl an Bits, um die verschoben werden soll, wird durch den zweiten Parameter angegeben. Beachten Sie, dass ein negativer Wert für die Linksverschiebung zu einer Linksverschiebung führt.
BITRSHIFT(Wert; Verschiebung)
Die Funktion BITOR() führt eine bitweise OR-Operation für die beiden ganzzahligen Parameter durch.
BITOR(Wert;Wert)
BITOR(12;10) ergibt 14 (weil dezimal 12 binär 1100 und dezimal 10 binär 1010 entspricht, die OR-Operation von 1100 und 1010 dann 1110 ergibt und dies wiederum der Ganzzahl 14 entspricht).
Die Funktion BITXOR() führt eine bitweise XOR-Operation für die beiden ganzzahligen Parameter durch.
BITXOR(Wert; Wert)
BITXOR(12;10) ergibt 6 (weil dezimal 12 binär 1100 und dezimal 10 binär 1010 entspricht, die XOR-Operation von 1100 und 1010 dann 0110 ergibt und dies wiederum der Ganzzahl 6 entspricht).
Konvertierung
Zu konvertierender boolescher Wert
Die Funktion BOOL2STRING ergibt eine Zeichenfolge, die dem booleschen Wert entspricht. Diese Funktion dient dazu, dass man einen booleschen Wert in Funktionen verwenden kann, in denen eine Zeichenfolge erwartet wird.
BOOL2STRING(Wert)
BOOL2STRING(Wahr) ergibt„ Wahr“
BOOL2STRING(Falsch) ergibt„ Falsch“
upper(BOOL2STRING(find("nan";"Banane "))) ergibt Wahr
Zu konvertierender ganzzahliger Wert
Die Funktion INT2BOOL ergibt einen booleschen Wert für einen gegebenen ganzzahligen Wert. Mit dieser Funktion kann man einen ganzzahligen Wert da verwenden, wo ein boolescher Wert erwartet wird. Bei einer 1 wird Wahr zurückgegeben, bei jedem anderen Wert wird Falsch zurückgegeben.
INT2BOOL(Wert)
INT2BOOL(1) ergibt Wahr
INT2BOOL(0) ergibt Falsch
OR(INT2BOOL(1); Falsch) ergibt Wahr
Die Funktion BOOL2INT ergibt einen ganzzahligen Wert für einen gegebenen booleschen Wert. Mit dieser Funktion kann man einen booleschen Wert da verwenden, wo ein ganzzahliger Wert erwartet wird.
BOOL2INT(Wert)
BOOL2INT(Wahr) ergibt 1
BOOL2INT(Falsch) ergibt 0
In Zeichenfolge zu konvertierende Zahl
Die Funktion NUM2STRING() ergibt eine Zeichenfolge für eine gegebene Zahl. Beachten Sie, dass KSpread falls nötig automatisch Zahlen in Zeichenfolge konvertieren kann. Von daher sollte diese Funktion kaum benötigt werden.
NUM2STRING(Wert)
NUM2STRING(10) ergibt„ 10“
NUM2STRING(2,05) ergibt„ 2,05“
=find("101";NUM2STRING(A1)) (A1 = 2,010102) ergibt Wahr
Die Funktion STRING() ergibt eine Zeichenfolge für eine gegebene Zahl. Sie ist mit der NUM2STRING-Funktion identisch.
Eine zu konvertierende Zeichenfolge bestehend aus einem Buchstaben
Die Funktion CHARTOASCII() gibt den ASCII-Code des gegebenen Zeichens zurück.
CHARTOASCII(Wert)
CHARTOASCII("v ") ergibt 118
CHARTOASCII(r) ist ein Fehler. Das Zeichen muss von Anführungszeichen umgeben sein.
Die zu konvertierenden ASCII-Werte
Die Funktion ASCIITOCHAR() gibt für jeden gegebenen ASCII-Code das entsprechende Zeichen zurück.
ASCIITOCHAR(Wert)
ASCIITOCHAR(118) ergibt„ v“
ASCIITOCHAR(75; 68; 69) ergibt„ KDE“
Wert in X
Wert in Y
Die Funktion POLR() gibt den Radius passend zu der Position eines Punktes in einem karthesischen Koordinatensystem zurück.
POLR(X;Y)
POLR(12;12) ergibt 16,9705
POLR(12;0) ergibt 12
Die Funktion POLA() gibt den Winkel (als Radiant) zu derPosition eines Punktes in einem karthesischen Koordinatensystem zurück.
POLA(X;Y)
POLA(12;12) ergibt 0,78539816
POLA(12;0) ergibt 0
POLA(0;12) ergibt 1,5707
Radius
Winkel (rad):
Die Funktion CARX() gibt die X Position zu der Position eines Punktes in einem polaren Koordinatensystem zurück.
CARX(Radius;Winkel)
CARX(12;1,5707) ergibt 0,00115592
CARX(12;0) ergibt 12
Wert
Die Funktion DECSEX() konvertiert einen Double-Wert in einen Zeitwert.
DECSEX(Double)
DECSEX(1,6668) ergibt 1:40
DECSEX(7,8) ergibt 7:47
Stunden
Minuten
Sekunden
Die Funktion SEXDEC() gibt den Wert als Dezimalzahl zurück. Sie können auch ein Zeitwert angeben.
SEXDEC(Zeitwert) oder SEXDEC(Stunden;Minuten;Sekunden)
SEXDEC(1;5;7) ergibt 1,0852778
DECSEX("8:05 ") ergibt 8,08333333
Die Funktion CARY() gibt die Y Position zu der Position eines Punktes in einem polaren Koordinatensystem zurück.
CARY(Radius;Winkel)
CARY(12;1,5707) ergibt 12
CARY(12;0) ergibt 0
Die Funktion ROMAN() gibt eine Zahl im Römischen Format zurück. Nur positiv ganze Zahlen können umgewandelt werden. Das optionale Format-Argument legt den Vereinfachungsgrad fest. Standard ist 0.
ROMAN(Zahl)
ROMAN(99) ergibt„ XCIX“
ROMAN(-55) ergibt„ Err“
Zahlzeichen
Die Funktion ARABIC() konvertiert eine römische Zahl in eine normale (arabische) Zahl.
ARABIC(Zahl)
ARABIC("IV ") ergibt 4
ARABIC("XCIX ") ergibt 99
Datenbank
Ein Zellbereich, welcher die Datenbank darstellt.
Eine Zeichenfolge, welche die Spalte in der Datenbank auswählt.
Ein Bereich, der die Bedingungen enthält.
Summiert alle Zahlen einer Spalte einer Datenbank, eingeschränkt durch einen Satz von Bedingungen.
DSUM(Datenbank; "Spaltenüberschrift"; Bedingungen)
DSUM(A1:C5; "Gehalt"; A9:A11)
Berechnet den Durchschnitt in einer Spalte einer Datenbank, eingeschränkt durch ein Satz von Regeln für Werte die Zahlen sind.
DAVERAGE(Datenbank; "Spaltenüberschrift"; Bedingungen)
DAVERAGE(A1:C5; "Gehalt"; A9:A11)
Zählt die Zellen, die numerische Werte in der Spalte einer Datenbank enthalten und die einen angegebenen Satz von Bedingungen erfüllen.
DCOUNT(Datenbank; "Spaltenüberschrift"; Bedingungen)
DCOUNT(A1:C5; "Gehalt"; A9:A11)
Zählt die Zellen, die numerische oder alphanumerische Werte in der Spalte einer Datenbank enthalten. Die zu zählenden Zellen werden durch einen Satz von Bedingungen eingeschränkt.
DCOUNTA(Datenbank; "Spaltenüberschrift"; Bedingungen)
DCOUNTA(A1:C5; "Gehalt"; A9:A11)
Gibt den Wert einer Datenbankspalte zurück, der einen Satz von Bedingungen erfüllt. Die Funktion gibt einen Fehler zurück, wenn kein Wert oder mehr als ein Wert die Bedingungen erfüllt.
DGET(Datenbank; "Spaltenüberschrift"; Bedingungen)
DGET(A1:C5; "Gehalt"; A9:A11)
Gibt die größte Zahl der Spalte einer Datenbank zurück, eingeschränkt durch einen Satz von Bedingungen.
DMAX(Datenbank; "Spaltenüberschrift"; Bedingungen)
DMAX(A1:C5; "Gehalt"; A9:A11)
Gibt den kleinsten Wert der Spalte einer Datenbank zurück, eingeschränkt durch einen Satz von Bedingungen.
DMIN(Datenbank; "Spaltenüberschrift"; Bedingungen)
DMIN(A1:C5; "Gehalt"; A9:A11)
Gibt das Produkt aller numerischen Werte der Spalte einer Datenbank zurück, welche einen Satz von Bedingungen erfüllen.
DPRODUCT(Datenbank; "Spaltenüberschrift"; Bedingungen)
DPRODUCT(A1:C5; "Gehalt"; A9:A11)
Gibt die geschätzte Standardabweichung einer Grundgesamtheit zurück. Basierend auf einer Stichprobe aus allen numerischen Werten der Spalte einer Datenbank, welche einen Satz von Bedingungen erfüllt.
DSTDEV(Datenbank; "Spaltenüberschrift"; Bedingungen)
DSTDEV(A1:C5; "Gehalt"; A9:A11)
Gibt die Standardabweichung einer Grundgesamtheit zurück. Basierend auf allen numerischen Werten einer Datenbankspalte, die einen Satz von Bedingungen erfüllen.
DSTDEVP(Datenbank; "Spaltenüberschrift"; Bedingungen)
DSTDEVP(A1:C5; "Gehalt"; A9:A11)
Gibt die geschätzte Streuung einer Grundgesamtheit zurück. Basierend auf einer Stichprobe bestehend aus allen numerischen Werten der Spalte einer Datenbank, eingeschränkt durch einen Satz von Bedingungen.
DVAR(Datenbank; "Spaltenüberschrift"; Bedingungen)
DVAR(A1:C5; "Gehalt"; A9:A11)
Gibt die Streuung einer Grundgesamtheit zurück. Basieren auf allen numerischen Werten der Spalte einer Datenbank, eingeschränkt durch einen Satz von Bedingungen.
DVARP(Datenbank; "Spaltenüberschrift"; Bedingungen)
DVARP(A1:C5; "Gehalt"; A9:A11)
Bereich der die Kreuztabelle enthält
Der Name des Feldes von welchem Sie die zusammengefassten Daten möchten
Holt die zusammengefassten Daten von einer Kreuztabelle.
GETPIVOTDATA(Datenbank; "Verkäufe")
Datum & Zeit
Berechnungsmethode (optional)
Die WEEKDAY() Funktion gibt den Wochentag für das angegebene Datum zurück. Wenn die Berechnungsmethode 1 ist (Standard), gibt die Funktion 1 für Sonntag, 2 für Montag,... usw. zurück. Bei Berechnungsmethode 2 ist Montag 1, Dienstag 2,... usw. Und bei Berechnungsmethode 3 ist Montag 0, Dienstag 1,... usw.
WEEKDAY(Datum; Berechnungsmethode)
WEEKDAY("2002-02-22 "; 2) ergibt 5 für Freitag
Datum1
Datum2
Methode
Die Funktion DAYS360() gibt die Anzahl der Tage von Datum1 bis Datum2 zurück. Dabei wird ein 360-Tage-Kalender verwendet, in dem alle Monate mit 30 Tagen gerechnet werden. Wenn die Methode„ Falsch“ ist (Standard) dann wird die amerikanische Berechnungsmethode verwendet, ist Methode„ Wahr“ wird die europäische Berechnungsmethode verwendet.
DAYS360(Datum1; Datum2; Methode)
DAYS360("2/22/2002 ";" 4/21/2002 "; Falsch) ergibt 59
Die Funktion TIMEVALUE() gibt eine Zahl (zwischen 0 und 1) zurück, welche die Zeit des Tages repräsentiert.
TIMEVALUE(Zeit)
TIMEVALUE("10:05:02 ") ergibt 0,42
Die Funktion DATEVALUE gibt eine Zahl zurück, welche den Tag repräsentiert. Das heißt, die Anzahl der Tage seit dem 31. Dezember 1899.
DATEVALUE(Datum)
DATEVALUE("2/22/2002 ") ergibt 37309
Monate
Die Funktion EDATE gibt das Datum zurück, welches entsteht wenn man von einem gegebenen Datum eine bestimmte Anzahl Monate addiert oder subtrahiert.
EDATE(Datum; Monate)
EDATE("2/22/2002 "; 3) ergibt" 5/22/2002 "
EDATE("3/31/2002 "; -1) ergibt" 2/28/2002 "
Die Funktion EOMONTH gibt den letzten Tag in einem Monat zurück. Dieser wird festgelegt durch ein Datum und einer Anzahl von Monaten welche zu diesem Datum addiert oder subtrahiert werden.
EOMONTH(Datum; Monate)
EOMONTH("2/22/2002 "; 3) ergibt" 5/31/2002 "
EOMONTH("3/12/2002 "; -1) ergibt" 2/28/2002 "
EOMONTH("3/12/2002 "; 0) ergibt" 3/31/2002 "
Die Funktion YEAR gibt das Jahr eines Datums zurück. Wird kein Datum angegeben wird das aktuelle Jahr zurückgegeben.
YEAR(Datum)
YEAR("2/22/2002 ") ergibt 2002
YEAR(2323,1285) gibt 1906
Die Funktion MONTH gibt den Monat eines Datums zurück. Wird kein Parameter angegeben gibt die Funktion den aktuellen Monat zurück.
MONTH(Datum)
MONTH("2/22/2002 ") ergibt 2
MONTH(2323,1285) ergibt 5
Die Funktion DAY gibt den Tag eines Datum zurück. Wird kein Parameter angegeben, gibt die Funktion den aktuellen Tag zurück.
DAY(Datum)
DAY("2/22/2002 ") ergibt 22
DAY(2323,1285) ergibt 11
Die Funktion HOUR gibt die Stunde der angegebenen Zeit zurück. Wird kein Parameter angegeben, liefert die Funktion die aktuelle Stunde zurück.
HOUR(Zeit)
HOUR("22:10:12 ") ergibt 22
HOUR(0,1285) ergibt 3
Die Funktion MINUTE gibt die Minuten einer Zeit zurück. Wird kein Parameter angegeben gibt die Funktion die aktuelle Minute zurück.
MINUTE(Zeit)
MINUTE("22:10:12 ") ergibt 10
MINUTE(0,1234) ergibt 57
Die Funktion SECOND gibt die Sekunden einer Zeit zurück. Wird kein Parameter angegeben gibt die Funktion die aktuellen Sekunden zurück.
SECOND(Zeit)
SECOND("22:10:12 ") ergibt 12
SECOND(0,1234) ergibt 42
Erster (früherer) Datumswert
Zweiter Datumswert
Berechnungsmodus
Die Funktion WEEKS() ergibt die Differenz in Wochen zwischen zwei Daten. Der dritte Parameter gibt den Berechnungsmodus an: Wenn der Modus 0 ist, gibt die Funktion die maximal mögliche Anzahl an Wochen zwischen den gegebenen Daten zurück. Wenn der Modus 1 ist, wird die Anzahl an kompletten Kalenderwochen zurückgegeben.
WEEKS(dateum1; datum2; modus)
WEEKS("18.02.2002 ";" 26.02.2002 "; 0) ergibt 1, weil 1 Woche und 1 Tag zwischen den beiden Daten liegen.
WEEKS("19.02.2002 ";" 26.02.2002 "; 0) ergibt 0, weil keine komplette Woche zwischen den beiden Daten liegt. Eine Woche beginnt, abhängig von den Landeseinstellungen, am Montag oder am Sonntag.
Die Funktion MONTHS() ergibt die Differenz in Monaten zwischen zwei Daten. Der dritte Parameter gibt den Berechnungsmodus an: Wenn der Modus 0 ist, gibt die Funktion die maximal mögliche Anzahl an Monaten zwischen den gegebenen Tagen zurück. Wenn der Modus 1 ist, wird die Anzahl an kompletten Kalendermonaten zurückgegeben.
MONTHS(datum1; datum2; modus)
MONTHS("18.01.2002 ";" 26.02.2002 "; 0) ergibt 1, weil 1 Monat und 8 Tage zwischen den beiden Daten liegen.
MONTHS("18.01.2002 ";" 26.02.2002 "; 1) ergibt 0, weil kein ganzer Kalendermonat zwischen den beiden Daten liegt.
Die Funktion YEARS() ergibt die Differenz in Jahren zwischen zwei Daten. Der dritte Parameter gibt den Berechnungsmodus an: Wenn der Modus 0 ist, gibt die Funktion die maximal mögliche Anzahl an Jahren zwischen den gegebenen Tagen zurück. Wenn der Modus 1 ist, wird die Anzahl der kompletten Kalenderjahre zurückgegeben. Diese beginnen am 1. Januar und enden am 31. Dezember.
YEARS(datum1; datum2; modus)
YEARS("19.02.2002 ";" 26.02.2002 "; 0) ergibt 1, weil 1 Jahr und 7 Tage zwischen den beiden Daten liegen.
YEARS("19.02.2002 ";" 26.02.2002 "; 1) ergibt 0, weil kein komplettes Kalenderjahr zwischen den beiden Daten liegt.
Die Funktion DAYS() ergibt die Differenz zwischen zwei Daten in Tagen.
DAYS(datum1; datum2)
DAYS("22.02.2002 ";" 26.02.2002 ") ergibt 4
Jahr
Monat
Tag
Die Funktion DAYOFYEAR() gibt die Nummer des Tages im Jahr zurück (1-365).
DAYOFYEAR(Jahr;Monat;Tag)
DAYOFYEAR(2000;12;1) ergibt 336
DAYOFYEAR(2000;2;29) ergibt 60
Die Funktion DATE() gibt das Datum entsprechend den Landeseinstellungen formatiert zurück.
DATE(Jahr;Monat;Tag)
DATE(2000;5;5) ergibt Freitag 5. Mai 2000
Die Funktion TIME() gibt die Zeit entsprechend den Landeseinstellungen formatiert zurück.
TIME(Stunden;Minuten;Sekunden)
TIME(10;2;2) ergibt 10:02:02
TIME(10;70;0) ergibt 11:10:00
TIME(10;-40;0) ergibt 9:20:00
Die Funktion HOURS() gibt die Anzahl der Stunden eines Zeitausdrucks zurück.
HOURS(zeit)
HOURS("10:5:2 ") ergibt 10
Die Funktion ISLEAPYEAR() gibt den Wert„ Wahr“ zurück, wenn das angegebene Jahr ein Schaltjahr ist.
ISLEAPYEAR(jahr)
ISLEAPYEAR(2000) ergibt Wahr
Die Funktion DAYSINMONTH() gibt die Anzahl der Tage in dem angegebenen Monat eines Jahres zurück.
DAYSINMONTH(Jahr;Monat)
DAYSINMONTH(2000;2) ergibt 29
Die Funktion DAYSINYEAR() gibt die Anzahl der Tage im angegebenen Jahr zurück.
DAYSINYEAR(jahr)
DAYSINYEAR(2000) ergibt 366
Die Funktion WEEKSINYEAR() gibt die Anzahl der Wochen eines angegebenen Jahres zurück.
WEEKSINYEAR(jahr)
WEEKSINYEAR(2000) ergibt 52
Die Funktion MINUTES() gibt die Anzahl der Minuten in einem Zeitausdruck zurück.
MINUTES(zeit)
MINUTES("10:5:2 ") ergibt 5
Die Funktion SECONDS() gibt die Anzahl der Sekunden in einem angegebenen Zeitausdruck zurück.
SECONDS(zeit)
SECONDS("10:5:2 ") ergibt 2
Nummer des Wochentags (1..7)
Die Funktion DAYNAME() gibt den namen eines Wochentags (1..7) zurück. In einigen Ländern ist der erste Tag der Woche Montag, in anderen ist der erste Tag der Woche Sonntag.
DAYNAME(Wochentag)
DAYNAME(1) ergibt Montag (wenn die Woche nach den Landeseinstellungen mit Montag beginnt)
Nummer des Monats (1..12)
Die Funktion MONTHNAME() gibt den Namen des Monats zurück (1..12).
MONTHNAME(Zahl)
MONTHNAME(5) ergibt Mai
Die Funktion CURRENTDATE() gibt das aktuelle Datum formatiert mit lokalen Parametern zurück. Sie ist äquivalent mit der Funktion TODAY.
CURRENTDATE()
CURRENTDATE() ergibt (bzw. ergab )„ Samstag 15. Juli 2002“
Die Funktion TODAY() liefert das aktuelle Datum zurück.
TODAY()
TODAY() ergibt„ Saturday 13 April 2002“
Die Funktion NOW() liefert das aktuelle Datum mit lokalen Parameter formatiert zurück. Sie ist identisch mit der Funktion CURRENTDATETIME und wird aus Kompatibilitätsgründen mit anderen Anwendungen angeboten.
NOW()
NOW() ergibt z. B.„ Saturday 13 April 2002 19:12:01“
Die Funktion CURRENTDATETIME() gibt das aktuelle Datum und die Zeit formatiert mit lokalen Parametern zurück.
CURRENTDATETIME()
CURRENTDATETIME() ergibt„ Samstag 15. Juli 2002 19:12:01“
Die Funktion CURRENTTIME() gibt die aktuelle Zeit formatiert mit lokalen Parametern zurück.
CURRENTTIME()
CURRENTTIME() ergibt„ 19:12:01“
Die Funktion EASTERSUNDAY() gibt das Datum zurück, welches Ostersonntag in dem angegebenen Jahr entspricht.
EASTERSUNDAY(Jahr)
EASTERSUNDAY(2003) ergibt„ 20th April 2003“
Die Funktion ISOWEEKNUM() gibt die Wochenzahl zurück, in welche das angegebene Datum fällt. Die Funktion richtet sich nach dem ISO8601 Standard. Das bedeutet, dass die Woche immer mit dem Montag beginnt, und die erste Woche im Jahr die Woche ist, welche den ersten Donnerstag enthält.
ISOWEEKNUM(Datum)
ISOWEEKNUM(A1) ergibt 51 wenn A1„ 21st of Dec“ enthält.
Die Funktion WEEKNUM() gibt die Nicht-ISO-Wochenzahl zurück, in welche das angegebene Datum fällt.
WEEKNUM(Datum; Berechnungsmethode)
WEEKNUM(A1; 1) ergibt 11, wenn A1 der„ 9. März 2008“ ist. Die Wochenzahl wird davon ausgehend berechnet, dass die Woche an einem Sonntag (1) beginnt. Dies ist Standard, wenn keine Methode übergeben wird.
WEEKNUM(A1; 2) ergibt 10, wenn A1 der„ 9. März 2008“ ist. Die Wochenzahl wird davon ausgehend berechnet, dass die Woche an einem Montag (2) beginnt.
Erstes Datum
Zweites Datum
Intervall
Die Funktion DATEDIF() ergibt die Differenz zwischen zwei Datumsangaben.
Das Intervall muss eines der folgenden sein :„ m“: Monate ;„ d“: Tage ;„ y“: komplette Jahre ;„ ym“: Monate ohne Jahre ;„ yd“: Tage ohne Jahre ;„ md“: Tage ohne Monate und Jahre
DATEDIF(Erstes Datum; Zweites Datum; Intervall)
DATEDIF(A1;A2;"d ") mit A1" 1. Januar 1995 "und A2" 15. Juni 1999 "ergibt als Anzahl an Tagen 1626.
DATEDIF(A1;A2;"d ") mit A1" 1. Januar 1995 "und A2" 15. Juni 1999 "ergibt eine Anzahl von 53 Wochen
Die Funktion YEARFRAC() ergibt die Anzahl an vollen Tagen zwischen dem Start- und dem Enddatum, abhängig von der Basis.
Die Basis muss eine der folgenden sein: 0 = 30/360 US, 1 = Tatsächlich/tatsächlich, 2 = Tatsächlich/360, 3 = Tatsächlich/365, 4 = 30/360 europäisch
YEARFRAC(Startdatum; Enddatum; Basis)
Startdatum
Arbeitstage
Urlaub
Die Funktion WORKDAY() ergibt den ersten Arbeitstag ausgehend vom Startdatum.
Urlaub muss wie folgt angegeben werden: Anzahl hinzuzufügender Tage, ein einzelnes Datum oder ein Datumsbereich.
WORKDAY(Startdatum, Tage, Urlaub)
Mit B9„ 01.01.2001“, D3„ 03.01.2001“ und D4„ 04.01.2003“ ergibt WORKDAY(B9;2;D3:E4) als Arbeitstag„ Fr, 5. Januar 2001“
Enddatum
Die Funktion NETWORKDAY() ergibt die Anzahl an Arbeitstagen zwischen dem Start- und dem Enddatum.
NETWORKDAY(Startdatum; Enddatum; Urlaub)
NETWORKDAY("01.01.2001";"08.01.2001 ") ergibt 5 Arbeitstage
NETWORKDAY("01.01.2001";"08.01.2001";2) ergibt 3 Arbeitstage
Die Funktion DATE2UNIX() konvertiert einen Datums- und Zeitwert in die Unix-Zeit.
Die Unix-Zeit ist die Anzahl an Sekunden nach dem 1. Januar 1970, 00:00 Uhr UTC.
DATE2UNIX(Datum)
DATE2UNIX(„ 01.01.2000“) ergibt 946,684,800
Unix-Zeit
Die Funktion UNIX2DATE() konvertiert die Unix-Zeit in einen Datums- und Zeitwert.
UNIX2DATE(Unix-Zeit)
UNIX2DATE(0) ergibt 01.01.1970
Ingenieurwesen
Basis
MinLänge
Die Funktion BASE() konvertiert eine Zahl zur Basis 10 in eine Zeichenfolge, die eine Zahl zu einer Zielbasis zwischen 2 und 36 darstellt.
BASE(Zahl;Basis;Genauigkeit)
BASE(128;8) ergibt„ 200“
Wo die Funktion ausgewertet wird
Reihenfolge der Funktion
Die Funktion BESSELI() gibt die modifizierte„ Bessel“ Funktion ln(x) zurück.
BESSELI(X;N)
BESSELI(0,7;3) ergibt 0.007367374
Die Funktion BESSELJ() gibt die„ Bessel“ Funktion zurück.
BESSELJ(X;N)
BESSELJ(0,89;3) ergibt 0.013974004
Die Funktion BESSELK() gibt die modifizierte„ Bessel“ Funktion zurück, welche der„ Bessel“ Funktion entspricht, die für Imaginäre Zahlen verwendet wird.
BESSELK(X;N)
BESSELK(3;9) ergibt 397,95880
Die Funktion BESSELY() gibt die„ Bessel“ Funktion zurück, welche auch die„ Weber“ oder die„ Neumann“ Funktion genannt wird.
BESSELY(X;N)
BESSELY(4;2) ergibt 0,215903595
Ausgangseinheit
Zieleinheit
Die Funktion CONVERT() gibt die Konvertierung von einem Maßsystem in ein anderes zurück.
Unterstützte Gewichtseinheiten: g (Gramm), sg (Stück), lbm (Pfund), u (Atommasse), ozm (Unze), stone (entspricht 14 Pfund), ton (Tonne), grain (1 Unze = 480 grains), pweight (pennyweight), hweight (Zentner).
Unterstützte Längeneinheiten: m (Meter), in (Zoll), ft (Fuß), mi (Meile), Nmi (Nautische Meile), ang (Angström), parsec, lightyear (Lichtjahr).
Unterstützte Druckeinheiten: Pa (Pascal), atm (Atmosphären), mmHg (Millimeter-Quecksilbersäule), psi (Pfund pro Quadratzoll), Torr.
Unterstützte Krafteinheiten: N (Newton), dyn, pound (Pfund).
Unterstützte Energieeinheiten: J (Joule), e (erg), c (Thermodynamische Kalorie), cal (I.T.-Kalorie), eV (Elektrovolt), HPh (Pferdestärke pro Stunde), Wh (Wattstunde), flb (Fuß-Pfund), BTU (British thermal unit).
Unterstützte Leistungseinheiten: W (Watt), HP (Horsepower), PS (Pferdestärke).
Unterstützte Magnetismus-Einheiten: T (Tesla), ga (Gauß).
Unterstützte Temperatur-Einheiten: C (Celsius), F (Fahrenheit), K (Kelvin).
Unterstützte Volumeneinheiten: l (Liter), tsp (Teelöffel), tbs (Esslöffel), oz (Flüssigunze), cup (Tasse), pt (Pint), qt (Quart), gal (Gallone), barrel, m3 (Kubikmeter), mi3 (Kubikmeile), Nmi3 (Nautische Kubikmeile), in3 (Kubikzoll), ft3 (Kubikfuß), yd3 (Kubik-Yard), GRT oder regton (Bruttoregistertonne)
Unterstützte Flächeneinheiten: m2 (Quadratmeter), mi2 (Quadratmeile), Nmi2 (Quadrat-Nautische-Meile), in2 (Quadratzoll), ft2 (Quadratfuss), yd2 (Quadrat-Yard), acre, ha (Hektar).
Unterstützte Geschwindigkeitseinheiten: m/s (Meter pro Sekunde), m/h (Meter pro Stunde), mph (Meilen pro Stunde), kn (Knoten).
Für metrische Einheiten kann jeder der folgenden Prefixe verwendet werden: E (exa, 1E+18), P (peta, 1E+15), T (tera, 1E+12), G (giga, 1E+09), M (mega, 1E+06), k (kilo, 1E+03), h (hecto, 1E+02), e (dekao, 1E+01), d (deci, 1E-01), c (centi, 1E-02), m (milli, 1E-03), u (micro, 1E-06), n (nano, 1E-09), p (pico, 1E-12), f (femto, 1E-15), a (atto, 1E-18).
CONVERT(Zahl; Ausgangseinheit; Zieleinheit)
CONVERT(32;"C";"F ") ergibt 89,6
CONVERT(3;"lbm";"kg ") ergibt 1,3608
CONVERT(7,9;"cal";"J ") ergibt 33,0757
Unteres Limit
Oberes Limit
Die Funktion ERF() ergibt die Fehlerfunktion. Wird ein Argument übergeben, gibt ERF() die Fehlerfunktion zwischen 0 und dem Argument zurück.
ERF(Unteres Limit; Oberes Limit)
ERF(0.4) ergibt 0,42839236
Die Funktion ERFC() gibt die komplementäre Fehlerfunktion zurück.
ERFC(Unteres Limit; Oberes Limit)
ERFC(0;4) ergibt 0,57160764
Der zu konvertierende Wert
Die minimale Länge der Ausgabe
Die Funktion DEC2BIN() gibt den Wert als binär-formatierte Zahl zurück.
DEC2BIN(Wert)
DEC2BIN(12) ergibt„ 1100“
DEC2BIN(55) ergibt„ 110111“
Die Funktion DEC2HEX() gibt den Wert als hexadezimal-formatierte Zahl zurück.
DEC2HEX(Wert)
DEC2HEX(12) ergibt„ c“
DEC2HEX(55) ergibt„ 37“
Die Funktion DEC2OCT() gibt den Wert als oktal-formatierte Zahl zurück.
DEC2OCT(Wert)
DEC2OCT(12) ergibt„ 14“
DEC2OCT(55) ergibt„ 67“
Die Funktion OCT2BIN() gibt den Wert als binär-formatierte Zahl zurück.
OCT2BIN(Wert)
OCT2BIN("12 ") ergibt" 1010 "
OCT2BIN("55 ") ergibt" 101101 "
Die Funktion OCT2DEC() gibt den Wert als dezimal-formatierte Zahl zurück.
OCT2DEC(Wert)
OCT2DEC("12 ") ergibt 10
OCT2DEC("55 ") ergibt 45
Die Funktion OCT2HEX() gibt den Wert als hexadezimal-formatierte Zahl zurück.
OCT2HEX(Wert)
OCT2HEX("12 ") ergibt" A "
OCT2HEX("55 ") ergibt" 2D "
Die Funktion BIN2DEC() gibt den Wert als dezimal-formatierte Zahl zurück.
BIN2DEC(Wert)
BIN2DEC("1010 ") ergibt 10
BIN2DEC("11111 ") ergibt 31
Die Funktion BIN2OCT() gibt den Wert als oktal-formatierte Zahl zurück.
BIN2OCT(Wert)
BIN2OCT("1010 ") ergibt" 12 "
BIN2OCT("11111 ") ergibt" 37 "
Die Funktion BIN2HEX() gibt den Wert als hexadezimal-formatierte Zahl zurück.
BIN2HEX(Wert)
BIN2HEX("1010 ") ergibt" a "
BIN2HEX("11111 ") ergibt" 1f "
Die Funktion HEX2DEC() gibt den Wert als dezimal-formatierte Zahl zurück.
HEX2DEC(Wert)
HEX2DEC("a ") ergibt 10
HEX2DEC("37 ") returns 55
Die Funktion HEX2OCT() gibt den Wert als oktal-formatierte Zahl zurück.
HEX2OCT(Wert)
HEX2OCT("a ") ergibt" 12 "
HEX2OCT("37 ") ergibt" 67 "
Die Funktion HEX2BIN() gibt den Wert als binär-formatierte Zahl zurück.
HEX2BIN(Wert)
HEX2BIN("a ") ergibt" 1010 "
HEX2BIN("37 ") ergibt" 110111 "
Realer Koeffizient
Imaginärer Koeffizient
Die Funktion COMPLEX(Realteil; Imaginärteil) gibt eine komplexe Zahl in der Form x+yi zurück.
COMPLEX(Realteil;Imaginärteil)
COMPLEX(1,2;3,4) ergibt„ 1,2+3,4i“
COMPLEX(0;-1) ergibt„ -i“
Komplexe Zahl
Die Funktion IMAGINARY(Zeichenfolge) gibt den imaginären Koeffizienten einer komplexen Zahl zurück.
IMAGINARY(Zeichenfolge)
IMAGINARY("1,2+3,4i ") ergibt 3,4
IMAGINARY("1,2 ") ergibt 0
Die Funktion IMREAL(Zeichenfolge) gibt den realen Koeffizienten einer komplexen Zahl zurück.
IMREAL(Zeichenfolge)
IMREAL("1,2+3,4i ") ergibt 1,2
IMREAL("1,2i ") ergibt 0
Die Funktion IMCOS(Zeichenfolge) gibt den Kosinus einer komplexen Zahl zurück.
IMCOS(Zeichenfolge)
IMCOS("1+i ") ergibt" 0,83373-0,988898i "
IMCOS("12i ") ergibt 81 377,4
Die Funktion IMCOSH(Zeichenfolge) gibt den Kosinus Hyperbolicus einer komplexen Zahl zurück.
IMCOSH(Zeichenfolge)
IMCOSH("1+i ") ergibt" 0,83373+0,988898i "
IMCOSH("12i ") ergibt 0,84358
Die Funktion IMSIN(Zeichenfolge) gibt den Sinus einer komplexen Zahl zurück.
IMSIN(Zeichenfolge)
IMSIN("1+i ") ergibt" 1,29846+0,634964i "
IMSIN("1,2 ") ergibt -0,536573
Die Funktion IMSINH(Zeichenfolge) gibt den Sinus Hyperbolicus einer komplexen Zahl zurück.
IMSINH(Zeichenfolge)
IMSINH("1+i ") ergibt" 0,63496+1,29846i "
IMSINH("1,2 ") ergibt 1,50946
Die Funktion IMTAN(Zeichenfolge) gibt den Tangens einer komplexen Zahl zurück.
IMTAN(Zeichenfolge)
IMTAN("1+i ") ergibt" 0,27175+1,08392i "
IMTAN("1,2 ") ergibt 2,57215
Die Funktion IMTANH(Zeichenfolge) gibt den Tangens Hyperbolicus einer komplexen Zahl zurück.
IMTANH(Zeichenfolge)
IMTANH("1+i ") ergibt" 1,08392+0,27175i "
IMTANH("1,2 ") ergibt 0,83365
Die Funktion IMEXP(Zeichenfolge) gibt den Exponenten einer komplexen Zahl zurück.
IMEXP(Zeichenfolge)
IMEXP("2-i ") ergibt" 3,99232-6,21768i "
IMEXP("12i ") ergibt" 0,843854-0,536573i "
Die Funktion IMLN(Zeichenfolge) gibt den natürlichen Logarithmus einer komplexen Zahl zurück.
IMLN(Zeichenfolge)
IMLN("3-i ") ergibt" 1,15129-0,321751i "
IMLN("12 ") ergibt 2,48491
Die Funktion IMLOG2(Zeichenfolge) gibt den binären Logarithmus einer komplexen Zahl zurück.
IMLOG2(Zeichenfolge)
IMLOG2("3+4i ") ergibt" 2,321928+1,337804i "
Die Funktion IMLOG10(Zeichenfolge) gibt den dekadischen Logarithmus einer komplexen Zahl zurück.
IMLOG10(Zeichenfolge)
IMLOG10("3+4i ") ergibt" 0,69897+0,402719i "
Die Funktion IMSQRT(Zeichenfolge) gibt die Quadratwurzel einer komplexen Zahl zurück.
IMSQRT(Zeichenfolge)
IMSQRT("1+i ") ergibt" 1,09868+0,45509i "
IMSQRT("1,2i ") ergibt" 0,774597+0,774597i "
Potenz
Die Funktion IMPOWER(Zeichenfolge) gibt eine komplexe Zahl potenziert mit einem Wert zurück.
IMPOWER(Zeichenfolge)
IMPOWER("4-i";2) ergibt "15-8i"
IMPOWER("1,2";2) ergibt 1,44
Die Funktion IMSUM() gibt die Summe mehrerer komplexer Zahlen der Form x+yi zurück.
IMSUM(Wert;Wert;...)
IMSUM(1,2;"3,4+5i ") ergibt" 4,6+5i "
IMSUM(1,2;"1i ") ergibt" 1,2+i "
Die Funktion IMDIV() gibt den Quotienten mehrerer komplexer Zahlen der Form x+yi zurück. Die erste Zahl wird also der Reihe nach durch die anderen Zahlen geteilt.
IMDIV(Wert;Wert;...)
IMDIV(1,2;"3,4+5i ") ergibt" 0,111597-0,164114i "
IMDIV("12+i";"12-i ") ergibt" 0,986207+0,16551i "
Die Funktion IMSUB() gibt die Differenz mehrerer komplexer Zahlen der Form x+yi zurück.
IMSUB(Wert;Wert;...)
IMSUB(1,2;"3,4+5i ") ergibt" -2,2-5i "
IMSUB(1,2;"1i ") ergibt" 1,2-i "
Die Funktion IMPRODUCT() gibt das Produkt mehrerer komplexer Zahlen der Form x+yi zurück.
IMPRODUCT(Wert;Wert;...)
IMPRODUCT(1,2;"3,4+5i ") ergibt" 4,08+6i "
IMPRODUCT(1,2;"1i ") ergibt" +1,2i "
Die Funktion IMCONJUGATE(komplexe Zahl) ergibt die zu einer komplexen Zahl der Form x+yi konjugiert komplexe Zahl.
IMCONJUGATE(komplexe Zahl)
IMCONJUGATE("1,2+5i ") ergibt" 1,2-5i "
IMCONJUGATE("-i ") ergibt" i "
IMCONJUGATE("12 ") ergibt" 12 "
Die Funktion IMARGUMENT(komplexe Zahl) gibt das Argument einer komplexen Zahl der Form x+yi zurück.
IMARGUMENT(komplexe Zahl)
IMARGUMENT("1,2+5i ") ergibt 0,6072
IMARGUMENT("-i ") ergibt -1,57079633
IMARGUMENT("12 ") ergibt" #Div/0 "
Die Funktion IMABS(komplexe Zahl) gibt die Norm einer komplexen Zahl der Form x+yi zurück.
IMABS(komplexe Zahl)
IMABS("1,2+5i ") ergibt 5,1419
IMABS("-i ") ergibt 1
IMABS("12 ") ergibt 12
Fließkommawert
Die Funktion DELTA() ergibt 1, wenn x gleich y ist. Sonst gibt sie 0 zurück. y ist standardmässig 0.
DELTA(x; y)
DELTA(1,2; 3,4) ergibt 0
DELTA(3; 3) ergibt 1
DELTA(1; Wahr) ergibt 1
Die Funktion GESTEP() gibt 1 zurück, wenn x größer oder gleich y ist. Sonst gibt sie 0 zurück. y ist standardmässsig 0.
GESTEP(x; y)
GESTEP(1,2; 3,4) ergibt 0
GESTEP(3; 3) ergibt 1
GESTEP(0,4; WAHR) ergibt 0
GESTEP(4; 3) ergibt 1
Finanz
Ausgabetag
Erster Zinstermin
Abrechnungsdatum
Jährlicher Zins eines Wertpapiers
Nennwert
Anzahl der Zahlungen pro Jahr
Basis der Tageszählung
Die Function ACCRINT gibt die aufgewachsenen Zinsen für ein Wertpapier für welches regelmäßig Zinsen ausbezahlt werden. Erlaubte Werte für die Häufigkeit sind 1 für Jährlich, 2 für Halbjährlich und 4 für Vierteljährlich. Basis ist die Art der Tageszählung Sie verwenden möchten: 0 für US 30/360 (Standard), 1 für tatsächliche Tage, 2 für tatsächliche Tage/360, 3 für tatsächliche Tage/365 oder 4 für Europäisch 30/365.
ACCRINT(Ausgabe; erster Zinstermin; Abrechnung; Zins; Nennwert; Häufigkeit; Basis)
ACCRINT("2/28/2001 ";" 8/31/2001 ";" 5/1/2001 "; 0,1; 1000; 2; 0) ergibt 16,944
Die Funktion ACCRINTM gibt die aufgewachsenen Zinsen für ein Wertpapier zurück, welches am Fälligkeitsdatum ausbezahlt wird. Basis ist die Art der Tageszählung Sie verwenden möchten: 0 für US 30/360 (Standard), 1 für tatsächliche Tage, 2 für tatsächliche Tage/360, 3 für tatsächliche Tage/365 oder 4 für Europäisch 30/365.
ACCRINTM(Ausgabe; Abrechnung; Zins; Nennwert; Basis)
ACCRINTM("2/28/2001 ";" 8/31/2001 "; 0,1; 100) ergibt 5,0278
Kosten
Pv
Fv
Die Funktion AMORDEGRC berechnet den Abschreibungswert für das französische Rechnungswesen bei degressiver Abschreibung.
AMORDEGRC( Kosten; Anschaffungsdatum; Enddatum erste Periode; Restwert; Periode; Rate; Basis)
AMORDEGRC( 1000; "01.02.2006"; "31.12.2006"; 10; 0; 0,1; 1) ergibt 228
P
Die Funktion AMORLINC berechnet den Abschreibungswert für das französische Rechnungswesen bei linearer Abschreibung.
AMORLINC( Kosten; Anschaffungsdatum; Enddatum erste Periode; Restwert; Periode; Rate; Basis)
AMORLINC( 1000; "01.02.2004"; "31.12.2004"; 10; 0; 0,1; 1) ergibt 91,256831
Startkapital
Zins
Zinsperioden pro Jahr
Jahre
Die Funktion COMPOUND() gibt den Wert einer Anlage zurück. Der Wert wird dabei mit der Startkapital, dem nominalen Zinssatz, der Häufigkeit der Zinsberechnung und der Laufzeit berechnet. Beispiel: 5000 EUR bei 12% Zins, vierteljährlich verzinst über 5 Jahr ergibt COMPOUND(5000;0,12;4;5) oder 9030,56 EUR.
COMPOUND(Startkapital;Zins;Perioden;Perioden pro Jahr)
COMPOUND(5000;0,12;4;5) ergibt 9030,56
Die Funktion CONTINUOUS() gibt den Endwert eines fortlaufend verzinsten Betrags zurück. Dabei erwartet sie das Startkapital, den nominalen Zinssatz und die Laufzeit in Jahren. Beispiel: 1000 EUR mit 10% Zins bei einem Jahr wird zu continuous(1000;0,1;1) oder 1105,17 EUR.
CONTINUOUS(Startkapital;Zins;Jahre)
CONTINUOUS(1000;0,1;1) ergibt 1105,17
Fälligkeitsdatum
Berechnungshäufigkeit
Die Funktion COUPNUM gibt die Anzahl der Gewinnanteilsscheinen zurück, die zwischen dem Abrechungsdatum und dem Fälligkeitsdatum ausgezahlt werden. Basis ist die Art der Tageszählung Sie verwenden möchten: 0 für US 30/360 (Standard), 1 für tatsächliche Tage, 2 für tatsächliche Tage/360, 3 für tatsächliche Tage/365 oder 4 für Europäisch 30/365.
COUPNUM(Abrechnung; Fälligkeit; Häufigkeit; Basis)
COUPNUM("2/28/2001 ";" 8/31/2001 "; 2; 0) ergibt 1
Rate
Perioden
Wert
Start
Ende
Typ
Berechnet die kumulative Zinszahlung.
CUMIPMT(Zins, Perioden, Wert, Start, Ende, Typ)
CUMIPMT( 0,06/12; 5*12; 100000; 5; 12; 0) ergibt -3562,187023
Berechnet die kumulative Kapitalzahlung.
CUMPRINC(Zins, Perioden, Wert, Start, Ende, Typ)
CUMPRINC( 0,06/12; 5*12; 100000; 5; 12; 0) ergibt -11904,054201
Restwert
Lebensdauer
Periode
Die Funktion DB() berechnet die Abschreibung einer Anlage in einer gegebenen Periode mit der festen degressiven Abschreibungsmethode .„ Monat“ ist optional, wenn er weggelassen wird, wird 12 als Wert angenommen.
DB(Kosten; Restwert; Lebensdauer; Periode [;Monat])
DB(8000;400;6;3) ergibt 1158,40
DB(8000;400;6;3;2) ergibt 1783,41
Faktor
Die Funktion DDB() berechnet die Abschreibung von einem Vermögen für eine angegebene Periode. Dabei wird die arithmetische Degressionsmethode verwendet. Der Faktor ist Options, wenn er fehlt wird angenommen das er 2 ist. Alle Parameter müssen größer als null sein.
DDB(Kosten; Restwert; Lebensdauer; Periode [;Faktor])
DDB(75000;1;60;12;2) ergibt 1721,81
Kurs pro $100 Nennwert
Auszahlung
Die Funktion DISC gibt den Disagio für ein Wertpapier zurück. Basis ist die Art der Tageszählung, die Sie verwenden möchten: 0 für US 30/360 (Standard), 1 für tatsächliche Tage, 2 für tatsächliche Tage/360, 3 für tatsächliche Tage/365 oder 4 für Europäisch 30/365.
DISC(Abrechung; Fälligkeit; Nennwert; Auszahlung [; Basis])
DISC("2/28/2001 ";" 8/31/2001 "; 12; 14) ergibt 0,2841
Zahl
Die Funktion DOLLARDE() gibt eine Notierung, die als Dezimalbruch ausgedrückt wurde, als Dezimalzahl zurück. Die Zahl ist dabei die als Dezimalbruch ausgedrückte Zahl und der Teiler eine ganze Zahl, die als Nenner des Dezimalbruchs verwendet wird.
DOLLARDE(Zahl; Teiler)
DOLLARDE(1,02; 16) - steht für 1 und 2/16 - ergibt 1,125
Zahl
Die Funktion DOLLARFR() gibt eine Notierung, die als Dezimalzahl ausgedrückt wurde, als Dezimalbruch zurück. Die Zahl ist dabei die als Dezimalzahl ausgedrückte Zahl und der Teiler eine ganze Zahl, die als Nenner des Dezimalbruchs verwendet wird.
DOLLARFR(Zahl; Teiler)
DOLLARFR(1,125; 16) ergibt 1,02. (1 + 2/16)
Rate
Barwert (PV)
Endwert (FV)
Gibt die Zahl der Perioden zurück, die benötigt werden, damit eine Anlage einen gewünschten Wert erreicht.
DURATION(Zins; PV; FV)
DURATION(0,1; 1000; 2000) ergibt 7,27
Kupon
Rendite
Basis
Gibt die Macauley-Dauer eines Wertpapiers in Jahren zurück.
DURATION_ADD(Abrechnung; Fälligkeit; Kupon; Rendite; Häufigkeit; Basis)
DURATION_ADD( "01.01.1998"; "01.01.2006"; 0,08; 0,09; 2; 1) ergibt 5,9937749555
Nominaler Zinssatz
Perioden
Die Funktion EFFECT() berechnet die effektive Rendite für einen nominalen Zins (Jahresrate oder effektiver Jahreszins). Beispiel: 8% Zins jeden Monat ergibt eine effektive Rendite von EFFECT(0,08;12) oder 8,3%.
EFFECT(Nominalzins;Perioden)
EFFECT(0,08;12) ergibt 0,083
Die Funktion EFFECTIVE() berechnet die effektive Rendite für einen nominalen Zins (Jahresrate oder effektiver Jahreszins). Sie ist identisch mit der EFFECT-Funktion.
EFFECTIVE(Nominalzins;Perioden)
Die Funktion EURO() konvertiert einen Euro in die angegebene nationale Währung der Europäischen Währungsunion. Die Währung kann eine der folgenden sein: ATS (Österreich), BEF (Belgien), DEM (Deutschland), ESP (Spanien), EUR (Euro), FIM (Finnland), FRF (Frankreich), GRD (Griechenland), IEP (Irland), ITL (Italien), LUF (Luxemburg), NLG (Niederlande) oder PTE (Portugal).
EURO(Währung)
EURO("DEM ") ergibt 1,95583
Ausgangswährung
Zielwährung
Die Funktion EUROCONVERT() konvertiert eine nationale Währung in eine andere nationale Währung der Europäischen Währungsunion. Die Umrechnung erfolgt über den Euro als Zwischenschritt. Die Währung kann eine der folgenden sein: ATS (Österreich), BEF (Belgien), DEM (Deutschland), ESP (Spanien), EUR (Euro), FIM (Finnland), FRF (Frankreich), GRD (Griechenland), IEP (Irland), ITL (Italien), LUF (Luxemburg), NLG (Niederlande) oder PTE (Portugal).
EUROCONVERT(Anzahl; Ausgangswährung, Zielwährung)
EUROCONVERT(1; "EUR"; "DEM") ergibt 1,95583
Barwert
Die Funktion FV() gibt den Endwert einer Anlage zurück, wenn die Rendite und die Laufzeit angegeben werden. Wenn Sie 1000 EUR auf einem Bankkonto mit 8% Verzinsung haben, besitzen sie nach zwei Jahren FV(1000;0,08;2) oder 1166,40 EUR.
FV(Barwert;Rendite;Perioden)
FV(1000;0,08;2) ergibt 1166,40
Zahlung pro Periode
Die Funktion FV_ANNUITY() gibt den Endwert eines regelmäßigen Geldflusses zurück. Sie erwartet die Höhe der Zahlungen, den Zinssatz und die Anzahl der Perioden. Beispiel: Sie erhalten 500 EUR pro Jahr für 20 Jahre und investieren dieses Geld auf einem Konto mit 8% Zins. Nach 20 Jahren haben Sie dann insgesamt FV_annuity(500;0,08;20) oder 22880,98 EUR. Die Funktion geht davon aus, dass die Zahlungen immer am Ende der Periode getätigt werden.
FV_ANNUITY(Betrag; Zins; Perioden)
FV_ANNUITY(1000;0,05;5) ergibt 5525,63
Anlage
Die Funktion INTRATE gibt den Zins für ein voll angelegtes Wertpapier zurück. Basis ist die Art der Tageszählung Sie verwenden möchten: 0 für US 30/360 (Standard), 1 für tatsächliche Tage, 2 für tatsächliche Tage/360, 3 für tatsächliche Tage/365 oder 4 für Europäisch 30/365.
INTRATE(Abrechnung; Fälligkeit; Anlage; Auszahlung; Basis)
INTRATE("2/28/2001 ";" 8/31/2001 "; 1000000; 2000000; 1) ergibt 1,98
Anzahl der Perioden
Gegenwärtige Werte
Endwert (optional)
Typ (optional)
IPMT berechnet den Betrag einer Zinszahlung einer Investition für die Periode.
Zins ist der periodische Zinssatz.
Periode ist die amortisierte Periode. 1 für die erste und NPER für die letzte Periode.
NPER ist die Gesamtzahl der Perioden in welcher die Annuität bezahlt wird.
PV ist der Barwert in einer Sequenz von Zahlungen.
FV (optional) ist der gewünschte (End-) Wert. Standard: 0.
Typ (optional) definiert die Frist. 1 für eine Zahlung am Anfang der Periode und 0 (Standard) für eine Zahlung am Ende der Periode.
Das Beispiel zeigt den Zinssatz, der im letzten Jahr eines Kredits mit einer Laufzeit von drei Jahren bezahlt werden muss. Der Zinssatz beträgt 10 Prozent.
IPMT(Zins; Periode; NPer; PV; FV; Typ)
IPMT(0,1;3;3;8000) ergibt -292,45
Barwerte (PV)
Berechnet den Zins welcher in einer bestimmten Periode einer Anlagebezahlt wurde.
Periode ist die amortisierte Periode. 1 für die erste und NPer für die letzte Periode.
NPer ist die Gesamtzahl der Perioden währendessen Annuität bezahlt wird.
ISPMT(Zins; Periode; NPer; PV)
ISPMT(0,1; 1; 3; 8000000) ergibt -533333
Nennwert
Kuponrate
Kupons pro Jahr
Marktzinssatz
Die Funktion LEVEL_COUPON() berechnet den Wert einer Kuponanleihe. Beispiel: Der Zinssatz beträgt 10%. Eine 1000 EUR Anleihe mit halbjährlichen Kupons bei einem Zinssatz von 13%, der sich 4 Jahre lang entwickelt, hat einen Wert von LEVEL_COUPON(1000;.13;2;4;0,1) oder 1096,95 EUR.
LEVEL_COUPON(Nennwert;Kuponrate;Kupons pro Jahr;Jahre;Marktzinssatz)
LEVEL_COUPON(1000;0,13;2;4;0,1) ergibt 1096,95
Die Funktion MDURATION() berechnet die modifizierte Macauley-Dauer eines Wertpapiers in Jahren.
MDURATION( Abrechnung; Fälligkeit; Kupon; Rendite; Häufigkeit; [Basis=0])
MDURATION("01.02.2004 ";" 31.05.2004 "; 0,08; 0,09; 2; 0) ergibt 0,316321106
Werte
Reinvestition
Die Funktion MIRR() berechnet den internen Zinsfuß (IRR) einer Serie von periodischen Anlagen.
MIRR(Werte; Anlage; Reinvestition)
MIRR({100;200;-50;300;-200}, 5%, 6%) ergibt 34,2823387842%
Effektiver Zins
Die Funktion NOMINAL() berechnet den Nominalzins eines Effektivzinssatzes, der in gegebenen Zeitabständen berechnet wird.Beispiel: Um 8% Zins auf einem Konto zu erhalten, das monatlich verzinst wird, müssen sie NOMINAL(0,08;12) oder 7,72% Nominalzins bekommen.
NOMINAL(Effektiver Zins;Perioden)
NOMINAL(0,08;12) ergibt 0,0772
Zahlung
Endwert (FV - optional)
Gibt die Anzahl der Perioden einer Anlage zurück.
NPER(Zins;Zahlung;PV;FV;Typ)
NPER(0,1; -100; 1000) ergibt 11
NPER(0,06; 0; -10000; 20000 ;0) ergibt 11,906
Werte (Feld)
Der Kapitalwert (NPV) für eine Serie von periodischen Rückflüssen.
Berechnet den Kapitalwert (NPV) für eine Serie von periodischen Rückflüssen mit dem Abzinsfaktor„ Zins“. Die Werte sollten positiv sein, wenn sie als Einnahme und negativ, wenn sie als Ausgabe verbucht werden.
NPV(Zins; Werte)
NPV(100%;4;5;7) = 4,125
Letzte
Jährliche Rendite
Die Funktion ODDLPRICE berechnet den Wert des Wertpapiers pro 100 Währungseinheiten des Nennwerts. Das Wertpapier hat dabei einen irregulären letzten Zinstermin.
ODDLPRICE( Abrechnung; Fälligkeit; Letzter Zinstermin; Zins; Jährliche Rendite; Auszahlung; Häufigkeit [; Basis = 0])
ODDLPRICE(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);3%;5%;100;2) ergibt 90,991042345
Kurs
Die Funktion ODDLYIELD berechnet die Rendite eines Wertpapiers mit einem irregulären letzten Zinstermin.
ODDLYIELD( Abrechnung; Fälligkeit; Letzter Zinstermin; Zins; Kurs; Auszahlung; Häufigkeit [; Basis = 0])
ODDLYIELD(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);3%;91;100;2) ergibt 4,997775351
Anzahl der Perioden (NPer)
PMT ergibt den Zahlungsbetrag für einen Kredit mit konstantem Zinssatz und konstanten Zahlungen (jede Zahlung hat den gleichen Betrag).
PMT(Zins; NPer; PV [; FV = 0 [; Typ = 0]])
PMT(0,1; 4; 10000) ergibt -3154,71
PPMT berechnet den Betrag der Kapitalrückzahlung einer Investition für die Periode.
PPMT(Zins; Periode; NPer; PV [; FV = 9 [; Typ = 0]])
PPMT(0,0875;1;36;5000;8000;1) ergibt -18,48
Ausgabetag
Disagio
Die Funktion PRICEMAT berechnet den Kurs pro 100 Währungseinheiten des Nennwerts eines Wertpapiers, das Zinsen am Fälligkeitsdatum auszahlt.
Basis Berechnungsmodus
0 US-Methode, 12 Monate, jeder Monat hat 30 Tage
1 Tatsächliche Anzahl an Tagen im Jahr, tatsächliche Anzahl an Tagen pro Monat
2 360 Tage in einem Jahr, tatsächliche Anzahl an Tagen pro Monat
4 365 Tage in einem Jahr, tatsächliche Anzahl an Tagen pro Monat
5 Europäische Methode, 12 Monate, jeder Monat hat 30 Tage
PRICEMAT(Abrechnung; Fälligkeit; Ausgabe; Zins; Rendite [; basis = 0])
PRICEMAT(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);6%;5%) ergibt 103,819218241
Endwert
Die Funktion PV() gibt den Barwert einer Anlage zurück. Das ist der heutige Wert einer Geldsumme in der Zukunft bei einem bestimmten Zinssatz bzw. einer bestimmten Inflationsrate. Wenn Sie z. B. 1166,40 EUR für einen neuen Computer benötigen, welchen Sie in zwei Jahren kaufen möchten, benötigen Sie bei einem Zinssatz von 8% jetzt PV(1166,4;0,08;2) oder 1000 EUR.
PV(Endwert;Zins;Perioden)
PV(1166,4; 0,08; 2) ergibt 1000
Die Funktion PV_ANNUITY() gibt den Barwert einer jährlichen Zahlung oder eines Geldstromes. Beispiel: Ein„ eine Million“ -Lottozettel welcher Ihnen 50000 EUR pro Jahr für 20 Jahre auszahlt, ist bei einem Zinssatz von 5% aktuell PV_ANNUITY(50000;0,05;20) oder 623,111 EUR wert. Diese Funktion geht davon aus, dass die Zahlungen am Ende jeder Periode getätigt werden.
PV_ANNUITY(Betrag; Zins; Perioden)
PV_ANNUITY(1000;0,05;5) ergibt 4329,48
Die Funktion RECEIVED gibt den Betrag zurück, der am Fälligkeitsdatum für eine Wertpapier ausbezahlt wird. Basis ist die Art der Tageszählung Sie verwenden möchten: 0 für US 30/360 (Standard), 1 für tatsächliche Tage, 2 für tatsächliche Tage/360, 3 für tatsächliche Tage/365 oder 4 für Europäisch 30/365. Das Abrechungsdatum muss vor dem Fälligkeitsdatum liegen.
RECEIVED(Abrechung; Fälligkeit; Anlage; Disagio; Basis)
RECEIVED("2/28/2001 ";" 8/31/2001 "; 1000; 0,05; 0) ergibt 1,025,787
Die Funktion RRI berechnet die aus einem Profit einer Investition resultierende Zinsrate.
RRI( P; Pv; Fv)
RRI(1;100;200) ergibt 1
Die Funktion SLN() berechnet die lineare Abschreibung eines Anlagegegenstandes über eine Abschreibungsperiode .„ Kosten“ ist der Betrag, der für die Anlage bezahlt wurde .„ Restwert“ ist der Wert der Anlage am Ende des Abschreibungszeitraumes .„ Lebensdauer“ ist die Anzahl der Perioden, in denen die Anlage abgeschrieben wird. SLN() verteilt die Kosten gleich hoch über die Lebensdauer einer Anlage.
SLN(Kosten; Restwert; Lebensdauer)
SLN(10000;700;10) ergibt 930
Die Funktion SYD() berechnet die„ sum-of-years digits“ -Abschreibung für eine Anlage abhängig von ihren Kosten, dem Restwert, der erwarteten Lebensdauer und der gewählten Abschreibungsperiode. Diese Methode beschleunigt die Rate der Abschreibung, so dass in den früheren Abschreibungsperioden höhere Abschreibungskosten auftreten als in den späteren Perioden. Die abschreibbaren Kosten sind die Anschaffungskosten minus Restwert. Die Nutzungsdauer ist die Anzahl der Perioden (typischerweise Jahre), über die die Anlage abgeschrieben wird.
SYD(Kosten; Restwert; Lebensdauer; Periode)
SYD(5000; 200; 5; 2) ergibt 1280
Die Funktion TBILLEQ gibt die passende Obligation zu einem Schatzschein zurück. Das Fälligkeitsdatum muss nach dem Abrechungsdatum, aber innerhalb von 365 Tagen liegen.
TBILLEQ(Abrechnung; Fälligkeit; Disagio)
TBILLEQ("2/28/2001 ";" 8/31/2001 "; 0,1) ergibt 0,1068
Die Funktion TBILLPRICE gibt den Preis pro $100 Wert für einen Schatzschein zurück. Das Fälligkeitsdatum muss nach dem Abrechungsdatum, aber innerhalb von 365 Tagen liegen. Der Disagio muss positiv sein.
TBILLPRICE(Abrechung; Fälligkeit; Disagio)
TBILLPRICE("2/28/2001 ";" 8/31/2001 "; 0,05) ergibt 97,4444
Die Funktion TBILLYIELD gibt die Rendite für einen Schatzschein zurück. Das Fälligkeitsdatum muss nach dem Abrechungsdatum, aber innerhalb von 365 Tagen liegen. Der Preis muss positiv sein.
TBILLYIELD(Abrechnung; Fälligkeit; Kurs)
TBILLYIELD("2/28/2001 ";" 8/31/2001 "; 600) ergibt -1,63
VDB(Kosten; Restwert; Lebensdauer; Startperiode; Endperiode; [; Abschreibungsfaktor = 2 [; wechseln=falsch]])
VDB(10000;600;10;0;0,875;1,5) ergibt 1312,5
Daten
Schätzung
Die Funktion XIRR berechnet den internen Zinsfuß für eine nicht-periodische Serie von Rückflüssen.
XIRR( Werte; Daten[; Schätzung = 0.1])
XIRR(B1:B4;C1:C4) ergibt 0.2115964, wenn B1:B4„ -20000“ ,„ 4000“ ,„ 12000“ ,„ 8000“ und C1:C4„ =DATE(2000;1;1 )“ ,„ =DATE(2000;6;1 )“ ,„ =DATE(2000;12;30 )“ ,„ =DATE(2001;3;1 )“ enthält.
Die Funktion XNPV berechnet den Kapitalwert für eine Serie von Rückflüssen.
XNPV(Zins; Werte; Daten)
XNPV(5%;B1:B4;C1:C4) ergibt 2907.83187, wenn B1:B4„ -20000“ ,„ 4000“ ,„ 12000“ ,„ 8000“ und C1:C4„ =DATE(2000;1;1 )“ ,„ =DATE(2000;6;1 )“ ,„ =DATE(2000;12;30 )“ ,„ =DATE(2001;3;1 )“ enthält.
Die Funktion YIELDDISC berechnet die Rendite eines Wertpapiers pro 100 Währungseinheiten des Nennwerts.
YIELDDISC(Abrechnung; Fälligkeit; Kurs, Auszahlung, Basis)
YIELDDISC(DATE(1990;6;1);DATE(1990;12;31);941,66667;1000) ergibt 0,106194684
Die Funktion YIELDMAT berechnet die Rendite eines Wertpapiers, dessen Zinsen am Fälligkeitstermin gezahlt werden.
YIELDMAT( Abrechnung; Fälligkeit; Ausgabe; Zins; Kurs; Basis)
YIELDMAT(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);6%;103.819218241) ergibt 0.050000000.
Die Funktion ZERO_COUPON() berechnet den Wert einer Nullkuponanleihe. Beispiel: Sie haben 10% Zins. Ein 1000 EUR Anleihe, die sich 20 Jahre lang entwickelt, hat einen Wert von ZERO_COUPON(1000;0,1;20) oder 148,64 EUR.
ZERO_COUPON(Nennwert;Zins;Jahre)
ZERO_COUPON(1000;0,1;20) ergibt 148,64
Information
Fehler
Die Funktion ERRORTYPE() konvertiert einen Fehler in eine Zahl. Wenn der Wert kein Fehler ist, wird ein Fehler ausgegeben. Anderenfalls wird ein numerischer Fehlerwert ausgegeben. Die Fehlerwerte entsprechen denen von Microsoft Excel.
ERRORTYPE(Wert)
ERRORTYPE(NA()) ergibt 7
ERRORTYPE(0) gibt einen Fehler zurück
Die Funktion N() konvertiert einen Wert zu einer Zahl. Wenn der Wert eine Zahl ist oder auf eine Zahl verweist, gibt diese Funktion die Zahl wieder. Wenn der Wert Wahr, also wahr ist, ergibt die Funktion 1. Wenn der Wert ein Datum ist,gibt diese Funktion die Seriennummer des Datums zurück. Bei jedem anderen Wert gibt die Funktion 0 zurück.
N(Wert)
N(3,14) ergibt 3,14
N("7 ") ergibt 0 (weil" 7 "Text ist)
Typ der Information
Die Funktion INFO() gibt Informationen über die aktuelle Arbeitsumgebung zurück. Der Parameter„ Typ“ gibt an, welche Art von Informationen zurückgegeben werden soll. Er kann einer der folgenden Werte sein :„ directory“ gibt den Pfad des aktuellen Ordners zurück ,„ numfile“ ergibt die Anzahl aktuell geöffneter Dokumente ,„ release“ ergibt die Version von KSpread als Text ,„ recalc“ ergibt den aktuellen Neuberechnungsmodus :„ Automatisch“ oder„ Manuell“ ,„ system“ ergibt den Namen des Betriebssystems und„ osversion“ ergibt den Namen und die Version des Betriebssystems.
INFO(Typ)
Irgendein Wert
Die Funktion ISLOGICAL() ergibt Wahr, wenn der Parameter ein boolescher Wert ist. Ansonsten ergibt die Funktion Falsch.
ISLOGICAL(x)
ISLOGICAL(A1 > A2) ergibt Wahr
ISLOGICAL(12) ergibt Falsch
Die Funktion ISBLANK() ergibt Wahr, wenn der Parameter leer ist. Ansonsten ergibt sie Falsch.
ISBLANK(x)
ISBLANK(A1) ergibt Wahr, wenn A1 leer ist
ISBLANK(A1) ergibt Falsch, wenn A1 einen Wert enthält
Die Funktion ISNUMBER() gibt Wahr zurück, wenn der Parameter ein numerischer Wert ist. Ansonsten gibt sie Falsch zurück. Sie ist identisch mit der ISNUM-Funktion.
ISNUMBER(x)
ISNUMBER(12) ergibt Wahr
ISNUMBER(Hallo) ergibt Falsch
Die Funktion ISNUM() gibt Wahr zurück, wenn der Parameter ein numerischer Wert ist. Ansonsten gibt sie Falsch zurück. Sie ist identisch mit der ISNUMBER-Funktion.
ISNUM(x)
ISNUM(12) ergibt Wahr
ISNUM(Hallo) ergibt Falsch
Die Funktion ISTIME() ergibt Wahr, wenn der Parameter ein Zeitwert ist. Sonst ergibt sie Falsch.
ISTIME(x)
ISTIME("12:05 ") ergibt Wahr
ISTIME("Hallo ") ergibt Falsch
Die Funktion ISDATE() ergibt Wahr, wenn der Parameter ein Datumswert ist. Sonst ergibt sie Falsch.
ISDATE(x)
ISDATE("2.2.2000 ") ergibt Wahr
ISDATE("Hallo ") ergibt Falsch
Die Funktion ISREF() ergibt Wahr, wenn der Parameter ein Zellenverweis ist. Ansonsten ergibt sie Falsch.
ISREF(x)
ISREF(A12) ergibt Wahr
ISREF("Hallo ") ergibt Falsch
Die Funktion ISTEXT() ergibt Wahr, wenn der Parameter eine Zeichenfolge ist. Ansonsten ergibt sie Falsch.
ISTEXT(x)
ISTEXT(12) ergibt Falsch
ISTEXT("Hallo ") ergibt Wahr
Die Funktion ISNONTEXT() ergibt Wahr wenn der Parameter keine Zeichenfolge ist. Ansonsten ergibt sie Falsch. Sie ist identisch mit der ISNOTTEXT-Funktion.
ISNONTEXT(x)
ISNONTEXT(12) ergibt Wahr
ISNONTEXT("Hallo ") ergibt Falsch
Die Funktion ISNOTTEXT() ergibt Wahr wenn der Parameter keine Zeichenfolge ist. Ansonsten ergibt sie Falsch. Sie ist identisch mit der ISNONTEXT-Funktion.
ISNOTTEXT(x)
ISNOTTEXT(12) ergibt Wahr
ISNOTTEXT("Hallo ") ergibt Falsch
Die Funktion ISODD() ergibt Wahr, wenn die angegebene Zahl ungerade ist. Sonst ergibt sie Falsch.
ISODD(x)
ISODD(12) ergibt Falsch
ISODD(-7) ergibt Wahr
Die Funktion ISEVEN() ergibt Wahr, wenn die angegebene Zahl gerade ist. Sonst ergibt sie Falsch.
ISEVEN(x)
ISEVEN(12) ergibt Wahr
ISEVEN(-7) ergibt Falsch
Die Funktion ISERR() gibt Wahr zurück, wenn der Parameter ein anderer Fehler als„ N/A“ ist. Ansonsten gibt sie Falsch zurück. Wenn„ N/A“ ebenfalls behandelt werden soll, müssen Sie die Funktion ISERROR() benutzen.
ISERR(x)
Die Funktion ISERROR() ergibt Wahr, wenn der Parameter ein Fehler einer beliebigen Art ist. Sonst ergibt sie Falsch.
ISERROR(x)
Die Funktion ISNA() ergibt Wahr, wenn der Parameter ein„ N/A“ -Fehler ist. Sonst ergibt sie Falsch.
ISNA(x)
Die Funktion NA() ergibt den konstanten Fehlerwert„ N/A“.
NA()
Die Funktion TYPE() ergibt 1, wenn der Wert eine Zahl ist. Sie ergibt 2, wenn der Wert ein Text ist, sie ergibt 4, wenn er ein boolescher Wert ist, sie ergibt 16, wenn er ein Fehlerwert ist, und sie ergibt 64, wenn der Wert ein Feld ist. Wenn die Zelle, auf die der Wert zeigt, eine Formel enthält, ergibt die Funktion deren Rückgabetyp.
TYPE(x)
TYPE(A1) ergibt 2, wenn A1„ Text“ enthält.
TYPE(-7) ergibt 1
TYPE(A2) ergibt 1, wenn A2„ =CURRENTDATE( )“ enthält
Ergibt den aktuellen Dateinamen. Wenn das aktuelle Dokument noch nicht gespeichert wurde, wird eine leere Zeichenfolge zurückgegeben.
FILENAME()
Logik
Die Funktion Falsch() ergibt den booleschen Wert Falsch.
Falsch()
Falsch() ergibt Falsch
Die Funktion Wahr() ergibt den booleschen Wert Wahr.
Wahr()
Wahr() ergibt Wahr
Boolesche Werte
Die Funktion AND() ergibt Wahr, wenn alle angegebenen Parameter Wahr sind. Ansonsten ergibt sie Falsch (sofern nicht einer der Werte fehlerhaft ist - dann wird ein Fehler zurückgegeben)
AND(Wert;Wert;...)
AND(Wahr;Wahr;Wahr) ergibt Wahr
AND(Wahr;Falsch) ergibt Falsch
Die Funktion OR() ergibt Wahr, wenn mindestens ein Parameter Wahr ist. Sind alle Parameter Falsch, ergibt sie Falsch (sofern nicht einer der Werte fehlerhaft ist - dann wird ein Fehler zurückgegeben)
OR(Wert;Wert;...)
OR(Falsch;Falsch;Falsch) ergibt Falsch
OR(Wahr;Falsch) ergibt Wahr
Die Funktion NAND() ergibt Wahr, wenn mindestens ein Parameter Falsch ist. Sind alle Parameter Wahr, ergibt sie Falsch.
NAND(Wert;Wert;...)
NAND(Wahr;Falsch;Falsch) ergibt Wahr
NAND(Wahr;Wahr) ergibt Falsch
Die Funktion NOR() ergibt Wahr, wenn alle Parameter boolesch sind und den Wert Falsch haben. Ansonsten ergibt sie Falsch.
NOR(Wert;Wert;...)
NOR(Wahr;Falsch;Falsch) ergibt Falsch
NOR(Falsch;Falsch) ergibt Wahr
Die Funktion XOR() ergibt Falsch, wenn die Anzahl der Wahr-Werte gerade ist. Anderenfalls ergibt sie Wahr. Wenn eines der Argumente fehlerhaft ist, wird ein Fehler zurückgegeben.
XOR(Wert;Wert;...)
XOR(Falsch;Falsch;Falsch) ergibt Wahr
XOR(Wahr;Falsch) ergibt Wahr
Boolescher Wert
Die Funktion NOT() ergibt Wahr, wenn der Parameter den Wert Falsch hat und ergibt Falsch, wenn der Parameter den Wert Wahr hat.
NOT(Bool)
NOT(Falsch) ergibt Wahr
NOT(Wahr) ergibt Falsch
Bedingung
If Wahr
If Falsch
Die IF() Funktion ist eine Bedingungs-Funktion. Die Funktion ergibt den zweiten Parameter, wenn die Bedingung Wahr ist, ansonsten ergibt sie den dritten Parameter.
IF(Bedingung;Wenn_Wahr;Wenn_Falsch)
A1=4;A2=6;IF(A1 > A2;5;3) ergibt 3
Mathematisch
Funktion
Die Funktion SUBTOTAL() gibt eine Zwischensumme von einer angegebenen Liste von Argumenten. Dabei werden andere Zwischensummen ignoriert. Funktion kann eine der folgenden Zahlen sein: 1 - Average, 2 - Count, 3 - CountA, 4 - Max, 5 - Min, 6 - Product, 7 - StDev, 8 - StDevP, 9 - Sum, 10 - Var, 11 - VarP.
SUBTOTAL(Funktion; Wert)
Wenn A1:A5 7, 24, 23, 56 und 9 enthält:
SUBTOTAL(1; A1:A5) ergibt 23,8
SUBTOTAL(4; A1:A5) ergibt 56
SUBTOTAL(9; A1:A5) ergibt 119
SUBTOTAL(11; A1:A5) ergibt 307,76
X ist die unabhängige Variable der Potenzreihe
N ist die Anfangspotenz, in die Sie x erheben möchten
M ist das Inkrement, um das Sie N in jedem Glied der Reihe vergrößern möchten
Koeffizienten ist eine Gruppe von Koeffizienten, mit denen die aufeinander folgenden Potenzen der Variablen X multipliziert werden
Die Funktion SERIESSUM() gibt die Summe einer Potenzreihe zurück.
SERIESSUM( X; N; M; Koeffizienten)
SERIESSUM(2;0;2;{1;2}) ergibt 9
Die Funktion LCM() ergibt das kleinste gemeinsame Vielfache von zwei oder mehr Fließkommawerten.
LCM(Wert;Wert)
LCM(6;4) ergibt 12
LCM(1,5;2,25) ergibt 4,5
LCM(2;3;4) ergibt 12
Dritte Zahl
Die Funktion GCD() ergibt den größten gemeinsamen Teiler von zwei oder mehr ganzzahligen Werten.
GCD(Wert;Wert)
GCD(6;4) ergibt 2
GCD(10;20) ergibt 10
GCD(20;15;10) ergibt 5
Die Funktion EPS() ergibt das Rechner-epsilon. Das ist die Differenz zwischen 1 und der nächstgrößeren Fließkommazahl. Da Computer eine begrenzte Anzahl an Stellen verwenden, sind Rundungsfehler in allen Berechnungen vorhanden, aber normalerweise unbedeutend klein.
EPS()
Auf den meisten Systemen ergibt diese Funktion 2^-52=2,2204460492503131e-16
0,5*EPS() ergibt die„ unit round“; dieser Wert ist interressant, weil es der größte Wert ist, bei dem durch Rundungsfehler (1+x)-1=0 ist.
EPS() ist so klein, dass KSpread 1+eps() als 1 darstellt
Wählen Sie eine Zahl x zwischen 0 und EPS(). 1+x rundet x unter Verwendung der Gleichung (1+x)-1 entweder zu 0 oder zu EPS().
Die Funktion POWER(x;y) ergibt dem Wert x potenziert mit y. (x„ hoch“ y).
POWER(Wert;Wert)
POWER(1,2;3,4) ergibt 1,8572
POWER(2;3) ergibt 8
Die Funktion POW(x;y) ergibt dem Wert x potenziert mit y. (x„ hoch“ y). Sie ist identisch mit der POWER-Funktion.
POW(Wert;Wert)
POW(1,2;3,4) ergibt 1,8572
POW(2;3) ergibt 8
Die Funktion EVEN() gibt die angegebene Zahl, aufgerundet zur nächsten geraden Zahl zurück.
EVEN(Wert)
EVEN(1,2) ergibt 2
EVEN(2) ergibt 2
Genauigkeit
Die Funktion TRUNC() beschneidet einen Wert auf eine angegebene Genauigkeit. Wenn der Parameter Genauigkeit fehlt, wird 0 angenommen.
TRUNC(Wert; Genauigkeit)
TRUNC(1,2) ergibt 1
TRUNC(213,232; 2) ergibt 213,23
Die Funktion ODD() rundet eine Zahl auf die nächste ungerade ganze Zahl auf (oder ab für negative Zahlen). ODD(0) ist definitionsgemäß 1.
ODD(Wert)
ODD(1,2) ergibt 3
ODD(2) ergibt 3
ODD(-2) ergibt -3
Die Funktion GAMMA() gibt den Wert der Gamma-Funktion zurück.
GAMMA(Wert)
GAMMA(1) ergibt 1
Die Funktion MOD() ergibt den Rest einer Division des ersten Parameters mit dem zweiten Parameter. Wenn der zweite Parameter null ist, wird #DIV/0 zurückgegeben.
MOD(Wert;Wert)
MOD(12;5) ergibt 2
MOD(5;5) ergibt 0
Diese Funktion ergibt -1, wenn die Zahl negativ ist. Sie ergibt 0, wenn die Zahl null ist. Sie ergibt 1, wenn die Zahl positiv ist.
SIGN(Wert)
SIGN(5) ergibt 1
SIGN(0) ergibt 0
SIGN(-5) ergibt -1
Diese Funktion multipliziert jeden Wert mit -1
INV(Wert)
INV(-5) ergibt 5
INV(5) ergibt -5
INV(0) ergibt 0
Die Funktion COUNT() ergibt die Anzahl der übergebenen ganzzahligen und Fließkommawerte. Sie können einen Bereich zählen: COUNT(A1:B5). Sie können auch eine Liste von Werten zählen: COUNT(12;5;12,5).
COUNT(Wert;Wert;...)
COUNT(-5;"KSpread";2) ergibt 2
COUNT(5) ergibt 1
Diese Funktion gibt die Anzahl aller nicht leeren Argumente zurück. Sie können auch einem Zellbereich zählen. COUNTA(A1:B5) oder benutzen Sie eine Liste von Werten wie COUNTA(12;5;12,5).
COUNTA(Wert;Wert;Wert...)
COUNTA(-5;"KSpread";2) ergibt 3
COUNTA(5) ergibt 1
Zellbereich
Diese Funktion gibt die Anzahl von allen leeren Zellen in dem angegebenen Bereich zurück.
COUNTBLANK(Zellbereich)
COUNTBLANK(A1:B5)
Bereich
Kriterium
Die Funktion COUNTIF() ergibt die Anzahl der Zellen im gegebenen Bereich, die das gegebene Kriterium erfüllen.
COUNTIF(Bereich;Kriterium)
COUNTIF(A2:A3;"14 ") ergibt 1, wenn A2 = -4 und A3 = 14 sind
Ein Fließkommawert
Die Funktion fact() berechnet die Fakultät des Parameters. Der mathematische Audruck dazu ist x!.
FACT(Zahl)
FACT(10) ergibt 3628800
FACT(0) ergibt 1
Die Funktion FACTDOUBLE() berechnet die doppelte Fakultät des Parameters. Der mathematische Audruck dazu ist x!!.
FACTDOUBLE(Zahl)
FACTDOUBLE(6) ergibt 48
FACTDOUBLE(7) ergibt 105
Die Funktion SUM() berechnet die Summe von allen Werten, welche als Parameter angegeben wurden. Sie können die Summe eines Zellbereichs SUM(A1:B5) oder einer Werteliste SUM(12;5;12,5) berechnen lassen.
SUM(Wert;Wert;...)
SUM(12;5;7) ergibt 24
SUM(12,5;2) ergibt 14,5
Die Funktion SUMA() berechnet die Summe von allen als Parameter übergebenen Werten. Sie konnen die Summe von einem Zellbereich SUMA(A1:B5) oder eine Liste von Parametern wie SUMA(12;5;12,5) berechnen lassen. Wenn ein Parameter Text enthält, oder den booleschen Wert Falsch wird er als 0 gezählt. Wenn ein Parameter den booleschen Wert Wahr enthält wird dieser als 1 gezählt.
SUMA(12;5; 7) ergibt 24
SUMA(12,5; 2; Wahr) ergibt 15,5
Prüfbereich
Bereich
Die Funktion SUMIF() berechnet die Summe aller als Parameter übergebenen Werte, die die Bedingung erfüllen. Die Angabe des Summenbereichs ist optional. Wird er nicht übergeben, werden die Werte in Bereich summiert. Die Länge von Bereich sollte kleiner oder gleich der Länge von Summenbereich sein.
SUMIF(Bereich;Bedingung;Summenbereich)
SUMIF(A1:A4; "> 1") summiert alle Werte im Bereich A1:A4, die die Bedingung > 1 erfüllen
SUMIF(A1:A4;"=0";B1:B4) summiert alle Werte im Bereich B1:B4 wenn der entsprechendeWert in A1:A4 die Bedingung =0 erfüllt.
Die Funktion PRODUCT() berechnet das Produkt von allen als Parameter übergebenen Werten. Sie können das Produkt eines Zellbereichs: PRODUCT(A1:B5) oder der Liste von Parametern wie PRODUCT(12;5;12,5) berechnen lassen. Wenn keine numerischen Werte gefunden werden ergibt die Funktion 0.
PRODUCT(Wert;Wert;...)
PRODUCT(3;5;7) ergibt 105
PRODUCT(12,5;2) ergibt 25
Die Funktion KPRODUCT() berechnet das Produkt von allen als Parameter übergebenen Werten. Sie können das Produkt eines Zellbereichs: KPRODUCT(A1:B5) oder der Liste von Parametern wie KPRODUCT(12;5;12,5) berechnen lassen. Wenn keine numerischen Werte gefunden werden ergibt die Funktion 1.
KPRODUCT(Wert;Wert;...)
KPRODUCT(3;5;7) ergibt 105
KPRODUCT(12,5;2) ergibt 25
Die G_PRODUCT()-Funktion ist identisch mit der KPRODUCT-Funktion. Sie ist für die Gnumeric-Kompatibilität nötig.
G_PRODUCT(Wert;Wert;...)
Die Funktion DIV() teilt den ersten Wert der Reihe nach durch die anderen Werte.
DIV(Wert;Wert;...)
DIV(20;2;2) ergibt 5
DIV(25;2,5) ergibt 10
Die Funktion sumsq() berechnet die Summe der Quadrate der übergebenen Werte („ hoch 2“). Sie können die Summe eines Zellbereichs sumsq(A1:B5) oder einer Werteliste sumsq(12;5;12,5) berechnen lassen.
SUMSQ(Wert;Wert;...)
SUMSQ(12;5;7) ergibt 218
SUMSQ(12;5;2) ergibt 173
Die Funktion MAX() ergibt den größten Wert, der als Parameter angegeben wurde. Zeichenfolge und boolesche Werte werden ignoriert.
MAX(Wert;Wert;...)
MAX(12;5; 7) ergibt 12
MAX(12,5; 2) ergibt 12,5
MAXA(0,5; 0,4; Wahr; 0,2) ergibt 0,5
Die Funktion MAXA() gibt den grösßen als Parameter übergebenen Wert zurück ohne boolesche Werte zu ignorieren. Der boolesche Wert Wahr entspricht 1, der Wert Falsch entspricht 0. Zeichenfolgen werden ignoriert.
MAXA(Wert;Wert;...)
MAXA(12;5; 7) ergibt 12
MAXA(12,5; 2) ergibt 12,5
MAXA(0,5; 0,4; Wahr; 0,2) ergibt 1
Die Funktion MIN() ergibt den kleinsten Wert, welcher als Parameter angegeben wurde. Zeichenfolgen und boolesche Werte werden ignoriert.
MIN(Wert;Wert;...)
MIN(12;5; 7) ergibt 5
MIN(12,5; 2) ergibt 2
MIN(0,4, 2; Falsch, 0,7) ergibt 0,4
Die Funktion MINA() gibt den kleinsten als Parameter übergebenen Wert zurück ohne boolesche Werte zu ignorieren. Der boolesche Wert Wahr entspricht 1, der Wert Falsch entspricht 0. Zeichenfolgen werden ignoriert.
MINA(Wert;Wert;...)
MINA(12;5;7) ergibt 5
MINA(12,5; 2) ergibt 2
MINA(0,4, 2; Falsch, 0,7) ergibt 0
Die Funktion MULTIPLY() multipliziert alle als Parameter angegebenen Werte miteinander. Sie können einen Wertbereich MULTIPLY(A1:B5), aber auch eine Wertliste MULTIPLY(12;5;12,5) angeben. Sie ist mit der PRODUCT-Funktion identisch.
MULTIPLY(Wert;Wert;...)
MULTIPLY(12;5;7) ergibt 420
MULTIPLY(12,5;2) ergibt 25
Die Funktion MULTINOMIAL() berechnet das„ Multinom“ für die Zahlen in der Parameterliste. Die folgende Formel wird für MULTINOMIAL(a,b,c) verwendet:
(a+b+c)! / a!b!c!
MULTINOMIAL(Wert;Wert;...)
MULTINOMIAL(3;4;5) ergibt 27720
Die Funktion SQRT() ergibt die nicht negative Quadratwurzel des Arguments. Wenn das Argument negativ ist, wird ein Fehler zurückgegeben.
SQRT(x)
SQRT(9) ergibt 3
SQRT(-9) ergibt einen Fehler
Die Funktion SQRTPI() ergibt die nicht negative Quadratwurzel von x * PI. Wenn das Argument negativ ist, wird ein Fehler zurückgegeben.
SQRTPI(x)
SQRTPI(2) ergibt 2,506628
Die Funktion LN() ergibt den natürlichen Logarithmus von x.
LN(x)
LN(0,8) ergibt -0,22314355
LN(0) ergibt -unendlich
Die Funktion LOGn() ergibt den Logarithmus zur Basis n von x.
LOGn(Wert;Basis)
LOGn(12; 10) ergibt 1,07918125
LOGn(12;2) ergibt 3,5849625
Die Funktion ROOTN() ergibt die nicht negative n-te Wurzel von x.
ROOTN(x;n)
ROOTN(9;2) ergibt 3
Die Funktion CUR() ergibt die nicht negative kubische Wurzel von x.
CUR(x)
CUR(27) ergibt 3
Ein Fließkommawert größer als 0
Die Funktion LOG() ergibt den Logarithmus zur Basis 10 von x.
LOG(x)
LOG(0,8) ergibt -0,09691001
LOG(0) ergibt einen Fehler.
Ein positiver Fließkommawert
Die Funktion LOG10() ergibt den Logarithmus zur Basis 10 des Arguments.
LOG10(x)
LOG10(10) ergibt 1
LOG10(0) ergibt einen Fehler.
Die Funktion LOG2() ergibt den Logarithmus zur Basis 2 von x.
LOG2(x)
LOG2(0,8) ergibt -0,32192809
LOG2(0) ergibt -unendlich
Die Funktion EXP() ergibt e„ hoch“ x, wobei„ e“ die Basis des natürlichen Logarithmus ist und„ x“ der angegebene Parameter.
EXP(x)
EXP(9) ergibt 8 103,08392758
EXP(-9) ergibt 0,00012341
Die Funktion CEIL() ergibt den auf die nächste ganze Zahl nach oben gerundeten Wert als Fließkommawert.
CEIL(x)
CEIL(12,5) ergibt 13
CEIL(-12,5) ergibt -12
Signifikanz (optional)
CEILING(x)
CEILING(12,5) ergibt 13
CEILING(6,43; 4) ergibt 8
CEILING(-6,43; -4) ergibt -8
Modus (optional)
Die Funktion CEILING() ergibt den auf die nächste produkt der Signifikanz aufgerundeten Wert.
FLOOR(x)
FLOOR(12,5) ergibt 12
FLOOR(-12,5) ergibt -13
FLOOR(5; 2) ergibt 4
FLOOR(5; 2,2) ergibt 4,4
Die Funktion ABS() ergibt den absoluten Wert der Fließkommazahl x.
ABS(x)
ABS(12,5) ergibt 12,5
ABS(-12,5) ergibt 12,5
Die Funktion INT() ergibt den ganzzahligen Teil des angegebenen Parameters.
INT(x)
INT(12,55) ergibt 12
INT(15) ergibt 15
Die Funktion RAND() gibt eine pseudo-zufällige Zahl zwischen 0 und 1 zurück.
RAND()
RAND() ergibt z. B. 0,78309922...
Ein Fließkommawert (größer als 0)
Die Funktion RANDEXP() gibt eine exponentiell verteilte pseudo-zufällige Zahl zurück.
RANDEXP(x)
RANDEXP(0,88)
Die Funktion RANDPOISSON() gibt eine Poisson-verteilte pseudo-zufällige Zahl zurück.
RANDPOISSON(x)
RANDPOISSON(4)
Ein Fließkommawert (zwischen 0 und 1)
Versuche (größer 0)
Die Funktion RANDBINOM() gibt eine binomisch verteilte pseudo-zufällige zurück.
RANDBINOM(x)
RANDBINOM(4)
Fehler (größer 0)
Die Funktion RANDNEGBINOM() gibt eine negativ binomisch verteilte pseudo-zufällige Zahl zurück.
RANDNEGBINOM(x)
RANDNEGBINOM(4)
Die Funktion RANDBERNOULLI() gibt eine Bernoulli-verteilte pseudo-zufällige Zahl zurück.
RANDBERNOULLI(x)
RANDBERNOULLI(0,45)
Mittelwert der Normalverteilung
Standardabweichung der Normalverteilung
Die Funktion RANDNORM() gibt eine normal-(Gauß-)verteilte pseudo-zufällige Zahl zurück.
RANDNORM(mü; sigma)
RANDNORM(0; 1)
Unterer Wert
Oberer Wert
Die Funktion RANDBETWEEN() gibt eine pseudo-zufällige Zahl zwischen dem oberen und dem unteren Wert zurück. Ist der untere Wert größer als der obere, gibt diese Funktion„ Err“ zurück.
RANDBETWEEN(Unterer;Oberer)
RANDBETWEEN(12;78) ergibt z. B. 61,0811...
Vielfaches
Die Funktion MROUND() ergibt den Wert auf ein angegebenes Vielfaches gerundet zurück. Der Wert und das Vielfache müssen die selben Vorzeichen haben.
MROUND(Wert; Vielfaches)
MROUND(1,252; 0,5) ergibt 1,5
MROUND(-1,252; -0,5) ergibt -1,5
Ziffern
Die Funktion ROUND(Wert;[Ziffern]) gibt die gerundete Zahl zurück .„ Ziffern“ ist dabei die Anzahl der Nachkommaziffern, auf welche Sie die Zahl runden möchten. Falls Sie„ Ziffern“ weglassen oder auf 0 setzen, wird die angegebene Zahl auf den nächsten ganzzahligen Wert gerundet. Wenn„ Ziffern“ kleiner als 0 ist, wird die Zahl auf einen entsprechende ganzzahligen Wert gerundet.
ROUND(Wert;[Ziffern])
ROUND(1,252;2) ergibt 1,25
ROUND(-1,252;2) ergibt -1,25
ROUND(1,258;2) ergibt 1,26
ROUND(-12,25;-1) ergibt -10
ROUND(-1,252;0) ergibt -1
Die Funktion ROUNDUP(Wert;[Ziffern]) gibt die aufgerundete Zahl zurück .„ Ziffern“ ist dabei die Anzahl der Nachkommaziffern, auf welche Sie die Zahl runden möchten. Falls Sie„ Ziffern“ weglassen oder auf 0 setzen, wird die angegebene Zahl auf den nächsten ganzzahligen Wert aufgerundet.
ROUNDUP(Wert;[Ziffern])
ROUNDUP(1,252;2) ergibt 1,26
ROUNDUP(-1,252;2) ergibt -1,25
ROUNDUP(-1,252) ergibt -1
Die Funktion ROUNDDOWN(Wert;[Ziffern]) gibt die abgerundete Zahl zurück .„ Ziffern“ ist dabei die Anzahl der Nachkommaziffern, auf welche Sie die Zahl runden möchten. Falls Sie„ Ziffern“ weglassen oder auf 0 setzen, wird die angegebene Zahl auf den nächsten ganzzahligen Wert abgerundet.
ROUNDDOWN(Wert; [Ziffern])
ROUNDDOWN(1,252;2) ergibt 1,25
ROUNDDOWN(-1,252;2) ergibt -1,26
ROUNDDOWN(-1,252) ergibt -2
n-ter Term
Die Funktion FIB berechnet den n-ten Term einer Fibonacci-Folge (1, 1, 2, 3, 5, 8, 13, 21...). In dieser Folge ist nach den ersten beiden Zahlen jede Zahl die Summe der beiden direkt vorangegangenen Zahlen. FIB(0) ist als 0 definiert.
FIB(n)
FIB(9) ergibt 34
FIB(26) ergibt 121393
Zähler
Nenner
Die Funktion QUOTIENT() ergibt den ganzzahligen Teil des angegebenen Quotienten Zähler / Nenner.
QUOTIENT(Zähler;Nenner)
QUOTIENT(21;4) ergibt 5
Die Funktion MDETERM gibt die Determinate einer gegebenen Martix aus. Die Matrix muss vom Typ n x n sein.
MDETERM(Matrix)
MDETERM(A1:C3)
Erste Matrix
Zweite Matrix
Die Funktion MMULT multipliziert zwei Matrizen. Die Spaltenanzahl der ersten Matrix muss der Zeilenanzahl der zweiten entsprechen. Das Ergebnis ist eine Matrix.
MMULT(Matrix1;Matrix2)
MMULT(A1:C3)
Matrix
Berechnet die Inverse der Matrix.
Die Matrix multipliziert mit ihrer Inversen ergibt die Einheitsmatrix der selben Dimension.
Die Determinate invertierbarer Matrizen ist nicht 0.
MINVERSE(Matrix)
MINVERSE(A1:C3)
Dimension
Erstellt die Einheitsmatrix der angegebenen Dimension.
MUNIT(Dimension)
MUNIT(3) erstellt eine 3x3 Einheitsmatrix.
Ergibt die Transponierte einer Matrix. Das bedeutet, dass Zeilen und Spalten der Matrix ausgetauscht sind.
TRANSPOSE(Matrix)
TRANSPOSE(A1:C3)
Nachschlagen & Referenz
Zeilennummer
Spaltennummer
Absolute Zahl (optional)
A1-Stil (optional)
Tabellenname
Die Funktion ADDRESS erzeugt eine Zelladresse. Der Parameter Zeile ist die Zeilennummer und Spalte die Spaltennummer.
Absolut gibt den Typ der Referenz an: 1 oder weggelassen = Absolut, 2 = Absolute Zeile, relative Spalte, 3 = Relative Zeile, absolute Spalte und 4 = Relativ.
A1 Stil bezeichnet den Stil der Adresse, welche zurückgegeben wird. Wenn A1 auf Wahr gesetzt ist (Standard) dann ist die zurückgegebene Adresse im A1 Stil. Wenn A1 auf Falsch gesetzt ist, dann ist die zurückgegebene Adresse im R1C1 Stil.
Tabellenname ist der Text, welcher den Namen der Tabelle bezeichnet.
ADDRESS(Zeile; Spalte; Absolut; Stil; Tabellenname)
ADDRESS(6; 4) ergibt $D$6
ADDRESS(6; 4; 2) ergibt D$6
ADDRESS(6; 4; 2; Falsch; "Tabelle1") ergibt Tabelle1!R6C[4]
ADDRESS(6; 4; 1; Falsch; "Tabelle1") ergibt Tabelle1!R6C4
ADDRESS(6; 4; 4; Wahr; "Tabelle1") ergibt Tabelle1!D6
Verweis
Gibt die Anzahl der Bereiche in dem angegebenen Zellenverweis zurück. Ein Bereich kann eine einzelne Zelle oder ein Satz von Zellen sein.
AREAS(Zellenverweis)
AREAS(A1) ergit 1
AREAS((A1; A2:A4)) ergibt 2
Index
Argumente
Gibt den Parameter der dich den Index angegeben wird zurück.
CHOOSE(Index; Parameter1; Parameter2;...)
CHOOSE(1; "erster"; "zweiter") ergibt "erster"
CHOOSE(2; 3; 2; 4) ergibt 2
Die Funktion COLUMN gibt die Spalte eines angegebenen Zellenverweises zurück. Wenn kein Parameter angegeben wird, gibt die Funktion die Spalte der aktuellen Zelle zurück.
COLUMN(Zellenverweis)
COLUMN(A1) ergibt 1
COLUMN(D2) ergibt 4
Die Funktion COLUMNS gibt die Anzahl der Spalten in einem Zellenverweis zurück.
COLUMNS(Zellenverweis)
COLUMNS(A1:C3) ergibt 3
COLUMNS(D2) ergibt 1
Zeile
Spalte
Wenn ein Bereich angegeben ist, wird der in der entsprechenden Zeile/Reihe gespeicherte Wert zurückgegeben. Wenn eine Zelle angegeben ist, die ein Feld enthält, wird ein Element des Feldes zurückgegeben.
INDEX(Zelle, Zeile, Spalte)
INDEX(Bereich, Zeile, Spalte)
INDEX(A1:C3,2,2) ergibt den Inhalt von B2.
INDEX(A1,2,2) ergibt, falls A1 das Ergebnis einer Feldberechnung ist, sein (2,2) Element.
Gibt den Inhalt einer Zelle welche als Verweis angegeben wird zurück. Der zweite Parameter ist optional.
INDIRECT(Zellenverweis, A1 Stil)
INDIRECT(A1), A1 enthält„ B1“, und B1 1 = > ergibt 1
INDIRECT(„ A1“), ergibt den Inhalt von A1
Die Funktion ROW gibt die Zeile des angegebenen Zellenverweises zurück. Ohne Parameter gibt die Funktion die aktuelle Zeile zurück.
ROW(Zellenverweis)
ROW(A1) ergibt 1
ROW(D2) ergibt 2
Die Funktion ROWS gibt die Anzahl der Zeilen in einem Zellenverweis zurück.
ROWS(Zellenverweis)
ROWS(A1:C3) ergibt 3
ROWS(D2) ergibt 1
Suchwert
Suchvektor
Ergebnisvektor
Die Funktion LOOKUP sucht den ersten Parameter im Suchvektor. Sie ergibt einen Wert im Ergebnisvektor mit dem selben Index wie der entsprechende Wert im Suchvektor. Wenn der Wert nicht im Suchvektor ist, wird der nächstkleinere verwendet. Wenn kein Wert im Suchvektor passt, wird ein Fehler ausgegeben. Der Suchvektor muss aufsteigend sortiert sein und Such- und Ergebnisvektor müssen die selbe Größe haben. Numerische Werte, Zeichenfolgen und boolesche Werte werden akzeptiert.
LOOKUP(Wert; Suchvektor; Ergebnisvektor)
LOOKUP(1,232; A1:A6; B1:B6) für A1 = 1, A2 = 2 ergibt den Wert von B1.
Datenquelle
Sortiert (optional)
HLOOKUP(Suchwert; Datenquelle; Zeile; Sortiert)
VLOOKUP(Suchwert; Datenquelle; Spalte; Sortiert)
Formel
Zelle entfernen
Ersetzung
Modus (optional)
Absolute Zahl (optional)
Statistik
Fließkommawerte
Die Funktion AVEDEV() berechnet den Durchschnitt der absoluten Abweichungen eines Wertbereiches AVEDEV(A1:B5) oder einer Liste von Werten AVEDEV(12;5;12,5) von seinem Mittelwert.
AVEDEV(Wert;Wert;...)
AVEDEV(11,4;17,3;21,3;25,9;40,1) ergibt 7,84
AVEDEV(A1:A5)...
Die Funktion AVERAGE() berechnet den Durchschnitt aller als Parameter angegebenen Werte. Sie können einen Wertbereich AVERAGE(A1:B5), aber auch eine Liste von Werten AVERAGE(12;5;12,5) berechnen.
AVERAGE(Wert;Wert;...)
AVERAGE(12;5;7) ergibt 8
AVERAGE(12,5;2) ergibt 7,25
Zeichenfolgen
Die Funktion AVERAGEA() berechnet den Durchschnitt der angegebenen Parameter. Sowohl Zahlen als auch Text und boolesche Werte werden in der Berechnung verwendet. Wenn die Zelle Text oder„ Falsch“ enthält, wird sie als null (0) gewertet. Wenn ein boolesches„ Wahr“ in der Zelle steht, wird es als 1 gewertet. Leere Zellen werden nicht in die Berechnung mit einbezogen.
AVERAGEA(Wert;Wert;...)
AVERAGEA(11,4;17,3;"eintext";25,9;40,1) ergibt 18,94
Alpha-Parameter
Beta-Parameter
Start
Ende
Kumulativ
Die Funktion BETADIST() gibt die kumulierte Beta wahrscheinlichkeitsdichte Funktion zurück.
Der dritte und vierte Parameter sind optional. Sie geben die untere und die obere Schranke an. Wenn sie weggelassen werden, werden Standardwerte von 0,0 bzw. 1,0 verwendet.
BETADIST(Zahl;Alpha;Beta;Start;Ende;[kumulativ=WAHR])
BETADIST(0,2859;0,2606;0,8105) ergibt 0,675444
BETADIST(0,2859;0,2606;0,8105;0,2;0,9) ergibt 0,537856
Die Funktion BETAINV() ergibt die Umkehrfunktion von BETADIST(x;Alpha;Beta;a;b;WAHR()).
Die Start- und Endparameter sind optional. Sie geben die untere und die obere Schranke an. Wenn sie weggelassen werden, werden Standardwerte von 0,0 bzw. 1,0 verwendet.
BETAINV(Zahl;Alpha;Beta [; Start=0 [; Ende=1]])
BETADIST(BETAINV(0,1;3;4);3;4) ergibt 0,1
BETADIST(BETAINV(0,3;3;4);3;4) ergibt 0,3
Freiheitsgrade
Die Funktion CHIDIST() berechnet aus einem angegebenen Chi-Quadrat den Wahrscheinlichkeitswert, dass eine Hypothese bestätigt wird.
CHIDIST vergleicht den für eine Zufallsstichprobe zu gebenden Chiquadratwert, der aus folgender Summe errechnet wird: (beobachteter Wert-erwarteter Wert)^2/erwarteter Wert für alle Werte mit der theoretischen Chiquadratverteilung und berechnet daraus die Wahrscheinlichkeit des Fehlers, um die Hypothese zu prüfen.
CHIDIST(Zahl;Freiheitsgrade)
CHIDIST(13,27;5) ergibt 0,021
Anzahl der Elemente
Anzahl der auszuwählenden Elemente
Die Funktion COMBIN() berechnet die Zahl der möglichen Kombinationen. Der erste Parameter ist die Gesamtzahl der Elemente. Der zweite Parameter ist die Anzahl der zu wählenden Elemente. Diese beiden Parameter müssen positiv sein, sonst gibt die Funktion einen Fehler zurück. Der erste Parameter muss größer als der zweite sein, sonst gibt die Funktion auch einen Fehler zurück.
COMBIN(gesamt;gewählt)
COMBIN(12;5) ergibt 792
COMBIN(5;5) ergibt 1
Die Funktion COMBINA() berechnet die Zahl der möglichen Kombinationen. Der erste Parameter ist die Gesamtzahl der Elemente. Der zweite Parameter ist die Anzahl der zu wählenden Elemente. Diese beiden Parameter müssen positiv sein, sonst gibt die Funktion einen Fehler zurück. Der erste Parameter muss größer als der zweite sein, sonst gibt die Funktion auch einen Fehler zurück.
Ebene des Konfidenzintervalls
Standardabweichung für die gesamte Population
Grösse der ganzen Population
Die Funktion CONFIDENCE() gibt den Vertrauensbereich eines Populationsmittel zurück.
Der Alpha-Parameter muss zwischen 0 und 1 liegen (exklusive 0 und 1 selbst), stddev muss positiv und Grösse muss größer gleich 1 sein.
CONFIDENCE(alpha;stddev;Grösse)
CONFIDENCE(0,05;1,5;100) ergibt 0,294059
Zellbereich von Werten
Zweiter Zellbereich von Werten
Die Funktion CORREL() berechnet den Korrelationskoeffizienten von zwei Zellbereichen.
CORREL(Bereich1; Bereich2)
CORREL(A1:A3; B1:B3)
Die Funktion COVAR() berechnet die Kovarianz von zwei Zellbereichen.
COVAR(Bereich1; Bereich2)
COVAR(A1:A3; B1:B3)
Die Funktion DEVSQ() berechnet die Summe von quadratischen Abweichungen.
DEVSQ(Wert; Wert;...)
DEVSQ(A1:A5)
DEVSQ(21; 33; 54; 23) ergibt 684,75
Lambda-Parameter
0 = Dichte, 1 = Verteilung
Die Funktion EXPONDIST() gibt die exponentielle Verteilung zurück.
Der lambda Parameter muss positiv sein.
Kumulativ = 0 berechnet die Dichtefunktion, Kumulativ = 1 berechnet die Verteilung.
EXPONDIST(Zahl;lambda;kumulativ)
EXPONDIST(3;0,5;0) ergibt 0,111565
EXPONDIST(3;0,5;1) ergibt 0,776870
Freiheitsgrade 1
Freiheitsgrade 2
Die Funktion FDIST() gibt die f-Verteilung zurück.
FDIST(Zahl;Freiheitsgrade_1;Freiheitsgrade_2)
FDIST(0,8;8;12) ergibt 0,61
Zahl r1
Zahl r2
Die Funktion FINV() ergibt die eindeutige, nicht negative Zahl X, so dass gilt FDIST(x;r1;r2) = p.
FINV(Zahl; r1; r2)
FDIST(FINV(0,1;3;4);3;4) ergibt 0,1
Die Funktion FISHER() ergibt die Fisher-Transformation für x und erzeugt eine der Normalverteilung ähnliche Funktion.
FISHER(Zahl)
FISHER(0,2859) ergibt 0,294096
FISHER(0,8105) ergibt 1,128485
Die Funktion FISHERINV() ergibt die Inverse der Fisher-Transformation für x und erzeugt eine der Normalverteilung ähnliche Funktion.
FISHERINV(Zahl)
FISHERINV(0,2859) ergibt 0,278357
FISHERINV(0,8105) ergibt 0,669866
Fließkommawerte, die gezählt werden sollen.
Fließkommawerte, die die oberen Grenzen der Intervalle angeben.
Zählt die Anzahl an Werten für jedes, durch die Grenzwerte im zweiten Parameter definierte, Intervall.
Die Werte des zweiten Parameters bestimmen die obere Grenze der Intervalle. Die Intervalle schließen die obere Grenze mit ein. Der ausgegebene Wert ist ein Spaltenvektor und hat ein Element mehr als der zweite Parameter. Das letzte Element repräsentiert die Anzahl aller Elemente, die größer sind als der letzte Wert im zweiten Parameter. Wenn der zweite Parameter nicht angegeben wird, werden alle Werte des ersten Parameters gezählt.
FREQUENCY(Daten; Klassen)
Kumuliert-Schalter
Die Funktion GAMMADIST() gibt die Gamma-Verteilung zurück.
Wenn der letzte Parameter (kumuliert) 0 ist, wird die Dichtefunktion berechnet. Wenn der Parameter 1 ist, wird die Verteilung berechnet.
Die ersten drei Parameter müssen positiv sein.
GAMMADIST(Zahl; Alpha; Beta; kumuliert)
GAMMADIST(0,758;0,1;0,35;1) ergibt 0,995450
GAMMADIST(0,758;0,1;0,35;0) ergibt 0,017179
Die Funktion GAMMAINV() ergibt die eindeutige Zahl x > =0, so dass gilt GAMMAINV(x;Alpha;Beta;WAHR()) = p.
GAMMAINV(Zahl; Alpha; Beta)
GAMMADIST(GAMMAINV(0,1;3;4);3;4) ergibt 0,1
GAMMADIST(GAMMAINV(0,3;3;4);3;4) ergibt 0,3
Die Zahl, für die der Integralwert der Standardnormalverteilung berechnet werden soll.
Die Funktion GAUSS() berechnet die Integralwerte für die kumulative Standardnormalverteilung.
GAUSS(Wert)
GAUSS(0,25) ergibt 0,098706
Die Funktion GEOMEAN() gibt das geometrische Mittel der angegebenen Argumente zurück. Dies entspricht der N-ten Wurzel des Produkts der Werte.
GEOMEAN(Wert; Wert;...)
GEOMEAN(A1:A5)
GEOMEAN(21; 33; 54; 23) ergibt 30,45886
Die Funktion HARMEAN() berechnet das harmonische Mittel von den N Datenpunkten (N dividiert durch die Summe des Inversen der Datenpunkte).
HARMEAN(Wert; Wert;...)
HARMEAN(A1:A5)
HARMEAN(21; 33; 54; 23) ergibt 28,588
Anzahl der Erfolge in der Probe
Anzahl der Versuche
Anzahl der Erfolge insgesamt
Populationsgröße
Die Funktion HYPGEOMDIST() gibt die Hypergeometrische Verteilung zurück.
HYPGEOMDIST(x; n; M; N)
HYPGEOMDIST(2; 5; 6; 20) ergibt 0,3522
Y-Werte (Feld)
X-Werte (Feld)
Die Funktion INTERCEPT() berechnet den Schnittpunkt der Regressionsgeraden mit der Y-Achse.
INTERCEPT(y;x)
Die Funktion KURT() berechnet eine erwartungstreue Schätzung der Kurtosis eines Datensatzes. Sie müssen mindestens 4 Werte angeben, sonst wird ein Fehler zurückgegeben.
KURT(Wert; Wert;...)
KURT(A1:A5)
KURT(21; 33; 54; 23) ergibt 1,344239
Die Funktion KURTP() berechnet eine Population-Kurtosis eines Datensatzes. Sie müssen mindestens 4 Werte angeben, sonst wird ein Fehler zurückgegeben.
KURTP(Wert; Wert;...)
KURTP(A1:A5)
KURTP(21; 33; 54; 23) ergibt -1,021
Position (von dem größten)
Die Funktion LARGE() gibt die„ k“ größte Zahl aus dem Datensatz zurück.
LARGE(Bereich; k)
gibtA1: 3, A2: 1, A3: 5 = > LARGE(A1:A3; 2) ergibt 3
Die Funktion LEGACYFDIST() gibt die f-Verteilung zurück.
LEGACYFDIST(Zahl;Freiheitsgrade_1;Freiheitsgrade_2)
LEGACYFDIST(0,8;8;12) ergibt 0,61
Wahrscheinlichkeit
Mittelwert der logarithmischen Standardverteilung
Standardabweichung der logarithmischen Standardverteilung
Die Funktion LOGINV() berechnet das Inverse der lognormal kumulativen Verteilung.
LOGINV(p; Mitte; Standardverteilung)
LOGINV(0,1;0;1) ergibt 0,2776
Wahrscheinlichkeitswert, für den die logarithmische Standardverteilung berechnet werden soll
Die Funktion LOGNORMDIST() gibt die kumulative lognormale Verteilung zurück.
LOGNORMDIST(Number;MV;STD)
LOGNORMDIST(0,1;0;1) ergibt 0,01
Fließkommawert oder Wertbereich
Fließkommawerte oder Wertbereich
Die Funktion MEDIAN() berechnet den Median von allen Werten, die als Parameter angegeben wurden. Sie können den Median eines Zellbereichs MEDIAN(A1:B5) oder einer Werteliste MEDIAN(12; 5; 12,5) berechnen lassen. Leere Zellen werden wie Zellen, die eine 0 enthalten, behandelt. Zellen, die Text enthalten, werden ignoriert.
MEDIAN(Wert;Wert;...)
MEDIAN(12; 5; 5,5) ergibt 5,5
MEDIAN(12; 7; 8;2) ergibt 7,5
Fließkommawert
Die Funktion MODE() gibt die am häufigsten vorkommende Zahl in einem Satz von Daten zurück.
MODE(Zahl1; Zahl2;...)
MODE(Bereich)
MODE(12; 14; 12; 15) ergibt 12
Zahl der Misserfolge
Anzahl erfolgreicher Versuche
Wahrscheinlichkeit des Erfolges
Die Funktion NEGBINOMDIST() gibt die negative binomische Verteilung zurück.
NEGBINOMDIST(Fehler; Erfolge; Wahrscheinlichkeit des Erfolges)
NEGBINOMDIST(2;5;0,55) ergibt 0,152872629
Lineare Mitte der Verteilung
Standardabweichung der Verteilung
Die Funktion NORMDIST() gibt die normale kumulative Verteilung zurück.
Die Zahl für die Verteilung auf welcher die Standardnormalverteilung berechnet werden soll.
MV ist die lineare Mitte der Verteilung.
STD ist die Standardabweichung der Verteilung.
K = 0 berechnet die dichte Funktion, K = 1 berechnet die Verteilung.
NORMDIST(Zahl;MV;STD;K)
NORMDIST(0,859;0,6;0,258;0) ergibt 0,934236
NORMDIST(0,859;0,6;0,258;1) ergibt 0,842281
Mittelwert der Normalverteilung
Standardabweichung der Normalverteilung
Die Funktion NORMINV() ergibt die Inverse der kumulativen Normalverteilung. Die Zahl muss zwischen 0 und 1 liegen (exklusive 0 und 1 selbst) und STD muss positiv sein.
NORMINV(Zahl;MV;STD)
NORMINV(0,9;63;5) ergibt 69,41
Wert für welche die Standardnormalverteilung berechnet werden soll
Die Funktion NORMSDIST() gibt die standard normal Verteilung zurück.
NORMSDIST(Zahl)
NORMSDIST(1) ergibt 0,84
Die Funktion NORMSINV() ergibt die Inverse der kumulativen Standardnormalverteilung. Die Zahl muss zwischen 0 und 1 liegen (jedoch exklusive 0 und 1 selbst).
NORMSINV(Zahl)
NORMSINV(0,908789) ergibt 1,3333
Die Funktion PEARSON() berechnet den Korrelationskoeffizienten von zwei Zellbereichen. Sie ist identisch mit der Funktion CORREL.
PEARSON(Bereich1; Bereich2)
PEARSON(A1:A3; B1:B3)
Anzahl der Elemente zum Permutieren
Die PERMUT() Funktion ergibt die Anzahl der Permutationen. Der erste Parameter ist die Anzahl der Elemente und der zweite Parameter ist die Anzahl in der Permutation verwendeten Elemente.
PERMUT(gesamt;verwendet)
PERMUT(8;5) ergibt 6720
PERMUT(1;1) ergibt 1
Die Zahl, für die die Standardnormalverteilung berechnet werden soll.
Die Funktion PHI() berechnet die Verteilungsfunktion für die Standardnormalverteilung.
PHI(Wert)
PHI(0,25) ergibt 0,386668
Lambda-Parameter (Mittelwert)
Die Funktion POISSON() gibt die Poisson-Verteilung zurück.
Der„ Lambda“ und der„ Zahl“ Parameter müssen positiv sein.
POISSON(Zahl;lambda;kumulativ)
POISSON(60;50;0) ergibt 0,020105
POISSON(60;50;1) ergibt 0,927840
Daten (Feld)
Reihenfolge
Die Funktion RANK() ergibt den Rang, den eine Zahl innerhalb einer Liste von Zahlen einnimmt.
Die Reihenfolge gibt an, wie der Rang der Zahlen bestimmt werden soll:
Wenn die Reihenfolge 0 oder nicht angegeben ist, werden die Daten in absteigender Reihenfolge ermittelt.
Wenn die Reihenfolge ungleich 0 ist, werden die Daten in aufsteigender Reihenfolge ermittelt.
RSQ(Wert; Daten; Reihenfolge)
RANK (2;{1;2;3}) ergibt 2
BekanntesY (Feld)
BekanntesX (Feld)
Die Funktion RSQ() ergibt das Quadrat des Pearsonschen Produktmomentkorrelationskoeffizienten entsprechend Datenpunkten in bekannten X- und Y-Werten.
Wenn„ BekanntesY“ und„ BekanntesX“ leer sind oder eine unterschiedliche Anzahl von Datenpunkten haben, wird #N/A zurückgegeben.
RSQ(BekanntesY; BekanntesX)
Die Funktion SKEW() gibt die voraussichtliche Schräge einer Verteilung zurück
SKEW(Zahl1; Zahl2;...)
SKEW(Bereich)
SKEW(11,4; 17,3; 21,3; 25,9; 40,1) ergibt 0,9768
Die Funktion SKEWP() gibt die Grundschräge einer Verteilung zurück
SKEWP(Zahl1; Zahl2;...)
SKEWP(Bereich)
SKEWP(11,4; 17,3; 21,3; 25,9; 40,1) ergibt 0,6552
Die Funktion SLOPE() berechnet die Steigung der Regressionsgeraden.
SLOPE(y;x)
Position (von dem kleinsten Wert)
Die Funktion SMALL() gibt den„ k“ kleinsten Wert von dem Datensatz zurück.
SMALL(Bereich; k)
A1: 3, A2: 1, A3: 5 = > SMALL(A1:A3; 1) ergibt 1
Zahl die normalisiert werden soll
Der Mittelwert der Verteilung
Standardabweichung
Die Funktion STANDARDIZE() berechnet einen normalisierten Wert.
STANDARDIZE(x; Mittel, Standardabweichung)
STANDARDIZE(4; 3; 7) ergibt 0,1429
Die Funktion STDEV() gibt die geschätzte Standardabweichung basierend auf einer Probe zurück. Die Standardabweichung ist ein Maß wie weit die Werte vom Mittelwert gestreut sind.
STDEV(Wert;Wert;...)
STDEV(6;7;8) ergibt 1
Die Funktion STDEVA() gibt die geschätzte Standardabweichung basierend auf einer Probe zurück. Die Standardabweichung ist ein Maß wie weit Werte vom Mittelwert gestreut sind. Wenn eine referenzierte Zelle Text oder den booleschen Wert Falsch enthält, wird er als 0 gezählt. Enthält eine Zelle den booleschen Wert Wahr, wird sie als 1 gezählt.
STDEVA(Wert;Wert;...)
STDEVA(6; 7; A1; 8) ergibt 1, wenn A1 leer ist
STDEVA(6; 7; A1; 8) ergibt 3,109, wenn A1 Wahr ist
Die Funktion STDEVP() berechnet die Abweichung basierend auf der gesamten Population.
STDEVP(Wert;Wert;...)
STDEVP(6;7;8) ergibt 0,816497...
Die Funktion STDEVPA() berechnet die Standardabweichung basierend auf der ganzen Population. Wenn eine referenzierte Zelle Text oder den booleschen Wert Falsch enthält, wird sie als 0 gezählt. Enthält die Zelle den booleschen Wert Wahr wird sie als 1 gezählt.
STDEVPA(Wert;Wert;...)
STDEVPA(6; 7; A1; 8) ergibt 0,816497..., wenn A1 leer ist
STDEVPA(6; 7; A1; 8) ergibt 2,69..., wenn A1 Wahr ist.
STDEVPA(6; 7; A1; 8) ergibt 3,11..., wenn A1 Falsch ist
Die Funktion STEYX() berechnet den Standardfehler des geschätzten Y-Wertes für jeden X-Wert der Regression.
Wert (Feld)
Die Funktion SUMPRODUCT() gibt die Summe der Produkte (SUM(X*Y) der angegebenen Werte zurück. Die Anzahl der Werte in beiden Feldern sollte gleich sein, sonst gibt die Funktion„ Err“ zurück.
SUMPRODUCT(Feld1;Feld2)
SUMPRODUCT(A1:A2;B1:B2) mit A1=2 A2=5 B1=3 und B2=5 ergibt 31
Die Funktion SUMX2PY2() gibt die Summe der Quadrate (SUM(X^2+Y^2)) der angegebenen Werte zurück. Die Anzahl der Elemente jedes Feldes sollte gleich sein, sonst gibt die Funktion„ Err“ zurück.
SUMX2PY2(Feld1;Feld2)
SUMX2PY2(A1:A2;B1:B2) mit A1=2 A2=5 B1=3 und B2=5 ergibt 63
Die Funktion SUMX2MY2() gibt die Differenz des Quadrats (SUM(X^2-Y^2)) der angegebenen Werte zurück. Die Anzahl der Werte beider Felder muss gleich sein, sonst gibt die Funktion„ Err“ zurück.
SUMX2MY2(Feld1;Feld2)
SUMX2MY2(A1:A2;B1:B2) mit A1=2 A2=5 B1=3 und B2=5 ergibt -5
Freiheitsgrade für die t-Verteilung
Modus (1 oder 2)
Die Funktion TDIST() gibt die t-Verteilung zurück.
Modus = 1 gibt den einseitigen Test zurück, Modus = 2 gibt den zweiseitigen Test zurück.
TDIST(Zahl;Freiheitsgrade;Modus)
TDIST(12;5;1) ergibt 0,000035
BekanntesY
BekanntesX
NeuesX
Konstante
Die Funktion TREND() berechnet eine Folge von Werten basierend auf einer linearen Regression von bekannten Wertepaaren.
Vorgabe: COUNT(BekanntesY) = COUNT(BekanntesX).
TREND(BekanntesY[;BekanntesX[;NeuesX[;Konstante = WAHR]]])
Datensatz
Grenzbruch
Die Funktion TRIMMEAN() berechnet den Mittelwert eines Datensatzes unter Auslassung der durch den Grenzbruch festgelegten Randwerte.
TRIMMEAN(Datensatz; Grenzbruch)
x (Feld)
y (Feld)
Modus
Die Funktion TTEST() berechnet die Wahrscheinlichkeit eines t-Tests.
TTEST(x; y; Typ; Modus)
Die Funktion VAR() berechnet die geschätzte Varianz, basierend auf einer Probe.
VAR(Wert;Wert;...)
VAR(12;5;7) ergibt 13
VAR(15;80;3) ergibt 1716,333...
VAR(6;7;8) ergibt 1
Die Funktion VARA() berechnet die Varianz basierend auf einer Probe.
VARA(Wert;Wert;...)
VARA(12;5;7) ergibt 13
VARA(15;80;3) ergibt 1716,333...
VARA(6;7;8) ergibt 1
Die Funktion VARIANCE() berechnet die geschätzte Varianz, basierend auf einer Probe. Sie ist mit der Funktion VAR identisch.
VARIANCE(Wert;Wert;...)
VARIANCE(12;5;7) ergibt 13
VARIANCE(15;80;3) ergibt 1716,333...
VARIANCE(6;7;8) ergibt 1
Die Funktion VARP() berechnet die Varianz basierend auf der gesamten Population.
VARP(Wert;Wert;...)
VARP(12;5;7) ergibt 8,666...
VARP(15;80;3) ergibt 1144,22...
VARP(6;7;8) eribt 0,6666667...
Die Funktion VARPA() berechnet die Varianz basierend auf der gesamten Population. Text und boolesche Werte, die Falsch ergeben, werden als 0 gewertet, boolesche Werte, die Wahr ergeben, werden als 1 gewertet.
VARPA(Wert;Wert;...)
VARPA(12;5;7) ergibt 8,666...
VARPA(15;80;3) ergibt 1144,22...
VARPA(6;7;8) ergibt 0,6666667...
Die Funktion WEIBULL() gibt die Weibull-Verteilung zurück.
Die Parameter Alpha und Beta müssen positiv sein, der erste Parameter Zahl darf nicht negativ sein.
WEIBULL(Zahl;Alpha;Beta;kumulativ)
WEIBULL(2;1;1;0) ergibt 0,135335
WEIBULL(2;1;1;1) ergibt 0,864665
Mittelwert
Standardabweichung
Die Funktion ZTEST() berechnet die zweiseitige Wahrscheinlichkeit eines z-Tests mit Normalverteilung.
ZTEST(x; Mittelwert; Standardabweichung)
Die Funktion BINO() gibt die binomische Verteilung zurück.
Der erste Parameter ist die Zahl der Versuche, der zweite Parameter ist die Zahl der Erfolge und der dritte Parameter ist die Wahrscheinlichkeit des Erfolgs. Die Zahl der Versuche sollte größer sein als die Zahl der Erfolge und die Wahrscheinlichkeit sollte kleiner oder 1 sein.
BINO(Versuche;Erfolge;Wahrsch_des_Erfolgs)
BINO(12;9;0,8) ergibt 0,236223201
Die Funktion SUMXMY2() gibt das Quadrat der Differenz (SUM((X-Y)^2)) der angegebenen Werte zurück. Die Anzahl der Werte in den beiden Feldern muss gleich sein, da die Funktion sonst einen Fehler zurückgibt.
SUMXMY2(Feld1;Feld2)
SUMXMY2(A1:A2;B1:B2) mit A1=2, A2=5, B1=3 und B2=5 ergibt 1
Wahrscheinlichkeit des Misserfolgs
Die Funktion INVBINO() ergibt die negative binomische Verteilung. Der erste Parameter ist die Zahl der Versuche, der zweite Parameter die Zahl der Misserfolge und die dritte Zahl ist die Wahrscheinlichkeit des Misserfolgs. Die Zahl der Versuche sollte größer sein als die Zahl der Misserfolge und die Wahrscheinlichkeit sollte kleiner oder gleich 1 sein.
INVBINO(Versuche;Misserfolge;Wahrsch_des_Misserfolgs)
INVBINO(12;3;0,2) ergibt 0,236223201
Die Funktion GAMMALN() gibt den natürlichen Logarithmus der Gamma-Funktion G(x) zurück. Der Parameter„ Zahl“ muss positiv sein.
GAMMALN(Zahl)
GAMMALN(2) ergibt 0
Dezimalstellen
Die Funktion DOLLAR() konvertiert eine Zahl unter Verwendung des Währungsformates in eine Zeichenfolge. Die Nachkommastellen werden entsprechend gerundet. Obwohl der Name der Funktion DOLLAR ist, wird in die aktuell eingestellte Landeswährung umgewandelt.
DOLLAR(Zahl;Dezimalstellen)
DOLLAR(1403,77) ergibt„ EUR 1 403,77“
DOLLAR(-0,123;4) ergibt„ EUR -0,1230“
Kein_Tausendertrennzeichen
Die Funktion FIXED() rundet eine Zahl auf die angegebene Anzahl von Dezimalstellen, formatiert die Zahl entsprechend der Ländereinstellung für Dezimalzahlen und gibt das Ergebnis als Text aus. Wenn„ Dezimalstellen“ negativ ist, wird entsprechend links vom Dezimalpunkt gerundet. Wenn Sie„ Dezimalstellen“ weglassen, wird 2 als Wert angenommen. Wenn der optionale Parameter Kein_Tausendertrennzeichen Wahr ist, werden keine Tausender-Trennzeichen angezeigt.
FIXED(Zahl;Dezimalstellen;Kein_Tausendertrennzeichen)
FIXED(1234,567;1) ergibt„ 1 234,6“
FIXED(1234,567;1;Wahr) ergibt„ 1234,6“
FIXED(44,332) ergibt„ 44,33“
Text, in dem ersetzt werden soll
Zu ersetzender Text
Ersatztext
Anzahl der Ersetzungen
Die Funktion SUBSTITUTE() ersetzt in einer Zeichenfolge alter_text durch neuer_text. Wenn Anzahl angegeben ist, wird nur die entsprechende Anzahl an Ersetzungen durchgeführt. Sonst wird jedes Vorkommen von alter_text durch neuer_text ersetzt. Verwenden Sie SUBSTITUTE(), wenn Sie bestimmten Text in einer Zeichenfolge ersetzen möchten. Verwenden Sie REPLACE(), wenn Sie Text, der an einer bestimmten Position steht, ersetzen möchten.
SUBSTITUTE(text; alter_text; neuer_text; Anzahl)
SUBSTITUTE("Kosten-Daten";"Kosten";"Verkaufs ") ergibt" Verkaufs-Daten "
SUBSTITUTE("Quartal 1, 2001";"1";"3";1) ergibt "Quartal 3, 2001"
SUBSTITUTE("Quartal 1, 2001";"1";"3";4) ergibt "Quartal 3, 2003"
Der zu suchende Text
Der Text, in dem gesucht werden soll
Startposition für die Suche
Die Funktion SEARCH() findet eine Zeichenfolge„ find_text“ in einer anderen Zeichenfolge„ within_text“ und gibt die Position des ersten Zeichens von„ find_text“ in„ within_text“ zurück.
Sie können die Platzhalter Fragezeichen (?) und Stern (*) verwenden. Ein Fragezeichen steht für ein einzelnes Zeichen und ein Stern steht für eine beliebige Folge von Zeichen.
Der Parameter start_num gibt den Buchstaben an, bei dem die Suche beginnen soll. Der erste Buchstabe steht an Position 1. Wenn start_num nicht angegeben ist, wird ein Wert von 1 angenommen. Die Funktion SEARCH() unterscheidet nicht zwischen Großbuchstaben und Kleinbuchstaben.
SEARCH(find_text;within_text;start_num)
SEARCH("e";"Kommentare";6) ergibt 10
SEARCH("schwelle";"Gewinnschwelle ") ergibt 7
Die Funktion T() ergibt den Text, auf den durch„ Wert“ verwiesen wird. Wenn„ Wert“ ein Text ist oder auf einen Text verweist, dann wird der entsprechende Text zurückgegeben. Wenn„ Wert“ nicht auf einen Text verweist, wird ein leerer Text zurückgegeben.
T(Wert)
T("KOffice ") ergibt" KOffice "
T(1,2) ergibt "" (leerer Text)
Die Funktion TEXT() konvertiert einen Wert in einen Text.
TEXT(Wert)
TEXT(1234,56) ergibt„ 1234,56“
TEXT("KSpread ") ergibt" KSpread "
Zeichenfolge
Die Funktion PROPER() wandelt den ersten Buchstaben jedes Wortes in einen Großbuchstaben und die restlichen Buchstaben in Kleinbuchstaben um.
PROPER(Zeichenfolge)
PROPER("das ist ein titel ") ergibt" Das Ist Ein Titel "
Erste Zeichenfolge
Zeichenfolge, mit der verglichen wird
Vergleiche mit Beachtung der Groß-/Kleinschreibung (wahr/falsch)
Die Funktion COMPARE() gibt 0 zurück, wenn die beiden Zeichenfolgen übereinstimmen. Sie ergibt -1, wenn die erste bei alphabetischer Sortierung vor der zweiten kommt. Ansonsten ergibt sie 1.
COMPARE(Zeichenfolge1; Zeichenfolge2; Wahr|Falsch)
COMPARE("KOffice ";" KOffice "; Wahr) ergibt 0
COMPARE("koffice ";" KOffice "; Wahr) ergibt 1
COMPARE("kspread ";" KOffice "; Falsch) ergibt 1
Die Funktion EXACT() gibt Wahr zurück, wenn die beiden Zeichenfolgen übereinstimmen, ansonsten Falsch.
EXACT(Zeichenfolge1;Zeichenfolge2)
EXACT("KOffice";"KOffice ") ergibt Wahr
EXACT("KSpread";"KOffice ") ergibt Falsch
Text, in dem einige Zeichen ersetzt werden sollen
Position des ersten zu ersetzenden Zeichens
Anzahl der zu ersetzenden Zeichen
Text, der die Zeichen im alten Text ersetzen wird
Die Funktion REPLACE() ersetzt einen Teil einer Zeichenfolge durch eine andere Zeichenfolge.
REPLACE(text;position;laenge;neuer_text)
REPLACE("abcdefghijk";6;5;"- ") ergibt" abcde-k "
REPLACE("2002";3;2;"03 ") ergibt" 2003 "
Gibt den Index an, an dem die Suche beginnt
Die Funktion FIND() sucht eine Zeichenfolge (find_text) in einer anderen Zeichenfolge (within_text) und gibt die Position des ersten Zeichens von„ find_text“ in„ within_text“ an.
Der Parameter„ start_num“ gibt das Zeichen an, bei dem die Suche gestartet werden soll. Das erste Zeichen hat die Position 1. Wenn„ start_num“ nicht gegeben ist, wird ein Wert von 1 dafür angenommen.
Sie können auch die Funktion SEARCH() verwenden, aber im Gegensatz zu SEARCH() beachtet FIND() Groß/Kleinschreibung und erlaubt keine Platzhalter.
FIND(find_text;within_text;start_num)
FIND("KOf";"KOffice ") ergibt 1
FIND("i";"KOffice ") ergibt 5
FIND("K";"KSpread in KOffice";4) ergibt 12
Quell-Zeichenfolge
Position
Länge
Die Funktion MID() ergibt eine Teil-Zeichenfolge, bestehend aus einer bestimmten Anzahl Zeichen ab der Indexposition
MID(Text;Position;Länge)
MID(Text;Position)
MID("KOffice";2;3) ergibt "ffi"
MID("KOffice";2) ergibt "ffice"
Die Funktion LEN() ergibt die Länge der übergebenen Zeichenfolge
LEN(Text)
LEN("Hallo ") ergibt 5
LEN("KSpread ") ergibt 7
Die Funktion TRIM() gibt die Zechenkette mit einzelnen Leerzeichen zwischen den Worten zurück.
TRIM(text)
TRIM( "Hallo KSpread") ergibt "Hallo KSpread"
Die Funktion CONCATENATE() ergibt eine Zeichenfolge, welche durch Aneinanderhängen aller als Parameter übergebenen Zeichenfolgen entsteht.
CONCATENATE(Wert;Wert;...)
CONCATENATE("KSpread";"KOffice";"KDE ") ergibt" KSpreadKOfficeKDE "
Anzahl an Zeichen
Die Funktion RIGHT() ergibt eine Teil-Zeichenfolge, welche aus der angegebenen Anzahl Zeichen von rechts aus der Quellzeichenfolge gebildet wird. Falls„ Länge“ die Gesamtlänge der Zeichenfolge überschreitet, wird die ganze Zeichenfolge zurückgegeben.
RIGHT(Text;Länge)
RIGHT("Hallo";2) ergibt "lo"
RIGHT("KSpread";10) ergibt "KSpread"
RIGHT("KSpread ") ergibt" d "
Die Funktion LEFT() ergibt eine Zeichenfolge, die der unter„ Länge“ festgelegte Anzahl von Zeichen vom Anfang des angegebenen Textes entspricht. Wenn der Wert„ Länge“ die Gesamtlänge der Zeichenfolge übersteigt, wird die ganze Zeichenfolge zurückgegeben. Negative Werte für„ Länge“ führen zu einem Fehler.
LEFT(Text;Länge)
LEFT("Hallo";2) ergibt "Ha"
LEFT("KSpread";10) ergibt "KSpread"
LEFT("KSpread ") ergibt" K "
Anzahl der Wiederholungen
Die Funktion REPT() wiederholt den ersten Parameter so häufig, wie durch den zweiten Parameter festgelegt. Der zweite Parameter darf nicht negativ sein. Die Funktion ergibt eine leere Zeichenfolge, wenn der zweite Parameter auf 0 gesetzt ist (oder auf 0 abgerundet wird).
REPT(Text;Anzahl)
REPT("KSpread";3) ergibt "KSpreadKSpreadKSpread"
REPT("KSpread";0) ergibt ""
Die Funktion ROT() verschlüsselt Text dadurch, dass jeder Buchstabe durch den Buchstaben, der 13 Zeichen später im Alphabet steht, ersetzt wird. Wenn die dreizehnte Position hinter dem Buchstaben Z ist, wird wieder bei A begonnen (Rotation).
Durch Anwenden der Verschlüsselungsfunktion auf den verschlüsselten Text kann der Text wieder entschlüsselt werden.
ROT(Text)
ROT("KSpread ") ergibt" XFcernq "
ROT("XFcernq ") ergibt" KSpread "
Die Funktion TOGGLE() verwandelt Großbuchstaben in Kleinbuchstaben und Kleinbuchstaben in Großbuchstaben.
TOGGLE(Text)
TOGGLE("hallo ") ergibt" HALLO "
TOGGLE("HALLO ") ergibt" hallo "
TOGGLE("HaLlO ") ergibt" hAlLo "
Die Funktion CLEAN() entfernt alle nicht druckbaren Zeichen aus einer Zeichenfolge.
CLEAN(Text)
CLEAN(AsciiToChar(7) + "HALLO") ergibt "HALLO"
Die Funktion SLEEK() entfernt alle Leerzeichen aus einer Zeichenfolge.
SLEEK(text)
SLEEK("Dies ist ein Text ") returns" DiesisteinText "
Die Funktion UPPER() konvertiert eine Zeichenfolge in Großbuchstaben.
UPPER(text)
UPPER("hallo ") ergibt" HALLO "
UPPER("HALLO ") ergibt" HALLO "
Die Funktion LOWER() konvertiert eine Zeichenfolge in Kleinbuchstaben.
LOWER(text)
LOWER("hallo ") ergibt" hallo "
LOWER("HALLO ") ergibt" hallo "
Zeichen-Code
Die Funktion CHAR() gibt den durch eine Zahl spezifizierten Buchstaben zurück. Die Zuordnung wird anhand des sogenannten ASCII-Zeichensatzes vorgenommen.
CHAR(code)
CHAR(65) ergibt "A"
Die Funktion CODE() gibt eine Zahl für das erste Zeichen in einer Zeichenfolge zurück. Die Zuordnung wird anhand des sogenannten ASCII-Zeichensatzes vorgenommen.
CODE(Text)
CODE("KDE ") ergibt 75
Konvertiert eine Zeichenfolge, die einen Wert darstellt, in den Wert.
VALUE(Text)
VALUE("14,03 ") ergibt 14,03
Suchtext
Regulärer Ausdruck
Standardwert (optional)
Rückverweis (optional)
Liefert den Teil einer Zeichenfolge, die einen regulären Ausdruck erfüllt. Erfüllt die Zeichenfolge den regulären Ausdruck nicht, wird der angegebene Standardwert zurückgeliefert.
Ist ein Rückverweis angegeben, wird der Wert des Rückverweises zurückgeliefert.
ist kein Standardwert angegeben, wird eine leere Zeichenfolge angenommen. Wird kein Rückverweis angegeben, wird 0 angenommen (so dass der Bereich der Zeichenfolge, der den regulären Ausdruck erfüllt, vollständig zurückgeliefert wird).
REGEXP(Zeichenfolge, regulärer Ausdruck, Standardwert, Rückverweis)
REGEXP("Anzahl ist 15.";"[0-9]+ ") =" 15 "
REGEXP("15, 20, 26, 41";"([0-9]+), *[0-9]+$";"";1) = "26"
Ersetzung
Ersetzt alle Vorkommen eines regulären Ausdrucks mit dem Ersetzungstext.
REGEXPRE(Text, regulärer Ausdruck, Ersetzungstext)
REGEXPRE(„ 14 und 15 und 16“ ;„ [0-9]+“ ;„ Zahl“) liefert„ Zahl und Zahl und Zahl“
Die Funktion UNICODE() gibt die Unicode-Zahl für das erste Zeichen in einer Zeichenfolge zurück.
UNICODE(Text)
UNICODE("KDE ") ergibt 75
Die Funktion UNICHAR() gibt den durch eine Unicode-Zahl spezifizierten Buchstaben zurück.
UNICHAR(Code)
UNICHAR(65) ergibt "A"
Zeichen voller Breite
Die Funktion ASC() gibt die, dem Argument voller Breite entsprechenden, Zeichen halber Breite zurück.
ASC(Text)
Zeichen halber Breite
Die Funktion JIS() gibt die, dem Argument halber Breite entsprechenden, Zeichen voller Breite zurück.
JIS(Text)
Die Funktion TEXT() konvertiert einen Wert in einen Text.
FACT(Zahl)
Trigonometrisch
Die Funktion COS() gibt den Kosinus von x zurück, wobei x im Bogenmaß gegeben ist.
COS(Fließkommawert)
COS(0) ergibt 1,0
COS(PI/2) ergibt 0,0
Die Funktion ACOT() liefert den inversen Kotangens einer Zahl.
ACOT(Fließkommawert)
ACOT(0) ergibt 1,57079633
Die Funktion SIN() gibt den Sinus von x zurück, wobei x im Bogenmaß gegeben ist.
SIN(Fließkommawert)
SIN(0) ergibt 0
SIN(PI/2) ergibt 1
Die Funktion TAN() gibt den Tangens von x zurück, wobei x im Bogenmaß gegeben ist.
TAN(Fließkommawert)
TAN(0,7) ergibt 0,84228838.
TAN(0) ergibt 0
Die Funktion ACOS() gibt den Arcuskosinus im Bogenmaß zurück. Der Wert ist mathematisch zwischen 0 und PI definiert (inklusive).
ACOS(Fließkommawert)
ACOS(0,8) ergibt 0,6435011
ACOS(0) ergibt 1,57079633
Die Funktion ASIN() gibt den Arcussinus im Bogenmaß zurück. Der Wert ist mathematisch zwischen -PI/2 und PI/2 definiert (inklusive).
ASIN(Fließkommawert)
ASIN(0,8) ergibt 0,92729522
ASIN(0) ergibt 0
Die Funktion ATAN() gibt den Arcustangens im Bogenmaß zurück. Der Wert ist mathematisch zwischen -PI/2 und PI/2 definiert (inklusive).
ATAN(Fließkommawert)
ATAN(0,8) ergibt 0,67474094
ATAN(0) ergibt 0
Die Funktion COSH() gibt den Kosinus Hyperbolicus von x zurück. Er ist mathematisch als (exp(x) + (exp(-x)) / 2 definiert.
COSH(Fließkommawert)
COSH(0,8) ergibt 1,33743495
COSH(0) ergibt 1
Die Funktion SINH() gibt den Sinus Hyperbolicus von x zurück. Er ist mathematisch als (exp(x) - (exp(-x)) / 2 definiert.
SINH(Fließkommawert)
SINH(0,8) ergibt 0,88810598
SINH(0) ergibt 0
Die Funktion TANH() gibt den Tangens Hyperbolicus von x zurück. Er ist definiert als sinh(x) / cosh(x)
TANH(Fließkommawert)
TANH(0,8) ergibt 0,66403677
TANH(0) ergibt 0
Die Funktion ACOSH() berechnet den inversen Kosinus Hyperbolicus von x. Das ist der Wert, dessen Kosinus Hyperbolicus gleich x ist. Wenn x kleiner als1,0 ist, gibt ACOSH() einen ungültigen Wert (NaN) zurück und errno wird entsprechend gesetzt.
ACOSH(Fließkommawert)
ACOSH(5) ergibt 2,29243167
ACOSH(0) ist ungültig
Die Funktion ASINH() berechnet den inversen Sinus Hyperbolicus von x. Das ist der Wert, dessen Sinus Hyperbolicus gleich x ist.
ASINH(Fließkommawert)
ASINH(0,8) ergibt 0,73266826
ASINH(0) ergibt 0
Die Funktion ATANH() berechnet den inversen Tangens Hyperbolicus von x. Das ist der Wert, dessen Tangens Hyperbolicus gleich x ist. Wenn der Betrag von x größer als 1,0 ist, gibt ATANH() einen ungültigen Wert (NaN) zurück.
ATANH(Fließkommawert)
ATANH(0,8) ergibt 1,09861229
ATANH(0) ergibt 0
Diese Funktion berechnet den Arcustangens der beiden Variablen x und y. Es ist ähnlich dazu, den Arcustangens von y/x auszurechnen, nur dass die Vorzeichen der beiden Argumente dazu benutzt werden, den Quadranten des Ergebnisses zu bestimmen.
ATAN2(Wert;Wert)
ATAN2(0,5;1,0) ergibt 1,107149
ATAN2(-0,5;2,0) ergibt 1,815775
Diese Funktion transformiert einen Winkel vom Bogenmaß ins Gradmaß.
DEGREE(Fließkommawert)
DEGREES(0,78) ergibt 44,69
DEGREES(1) ergibt 57,29
Winkel (grad)
Diese Funktion transformiert einen Winkel vom Gradmaß ins Bogenmaß.
RADIANS(Fließkommawert)
RADIANS(75) ergibt 1,308
RADIANS(90) ergibt 1,5707
Die Funktion PI() gibt den Wert von PI zurück.
PI()
PI() ergibt 3,141592654...
Die Verarbeitung ist nicht möglich, da einige Zellen geschützt sind.
Die Verarbeitung ist nicht möglich, da einige Zellen als Elemente einer Matrix gesperrt sind.
Filter anwenden
Januar
Februar
März
April
Mai
Juni
Juli
August
September
Oktober
November
Dezember
Jan
Feb
Mär
AprMay short
Jun
Jul
Aug
Sep
Okt
Nov
Dez
Montag
Dienstag
Mittwoch
Donnerstag
Freitag
Samstag
Sonntag
Mo
Di
Mi
Do
Fr
Sa
So
Automatisch füllen
Automatisch filtern
Automatische Formatierung
Farbe der Umrandung ändern
Kommentar entfernen
Kommentar hinzufügen
Bedingte Formatierung entfernen
Bedingte Formatierung hinzufügen
Wert ändern
Reihe einfügen
Auswahl füllen
Groß-/Kleinschreibung ändern
Zellen einfügen
Zellen entfernen
Einzug vergrößern
Einzug verkleinern
Verknüpfung entfernen
Verknüpfung einfügen
Zellen waagerecht verbinden
Zellen senkrecht verbinden
Zellen trennen
Das Verbinden von Spalten oder Zeilen wird nicht unterstützt.
Benannten Bereich hinzufügen
Benannten Bereich entfernen
Genauigkeit vergrößern
Genauigkeit verringern
Spaltenbreite ändern
Zeilenhöhe ändern
Spalten/Zeilen anpassen
Spalten anpassen
Zeilen anpassen
Spalten einfügen
Spalten entfernen
Zeilen einfügen
Zeilen entfernen
Tabelle umbenennen
Tabelle %1 ausblenden
Tabelle ausblenden
Tabelle %1 anzeigen
Tabelle anzeigen
Tabelle hinzufügen
Tabelle duplizieren
Tabelle entfernen
Tabelleneigenschaften ändern
Daten sortieren
Möchten Sie die Rechtschreibung in der nächsten Tabelle überprüfen?
Falsch geschriebene Wörter korrigieren
Stil zurücksetzen
Stil ändern
Zeilen ausblenden
Spalten ausblenden
Zeilen anzeigen
Spalten anzeigen
Seitenlayout festlegen
Format ändern
Winkel ändern
Sortieren
Drag & Drop
Größe ändern
Text ändern
Zelle einfügen
Zelle entfernen
Bedingte Stile
Einfügen
Einfügen & & Hinzufügen
Zellenstil
Daten aus Datenbank einfügen
Gültigkeitsprüfung entfernen
Gültigkeitsprüfung hinzufügen
Alle
Leer
Nicht leer
Namen des Bereichs eingeben:
Der benannte Bereich‚ %1‘ existiert bereits. Möchten Sie ihn ersetzen?
Benannten Bereich ersetzen
Winkel:
Tabellenstil
Wählen Sie den Tabellenstil der übernommen werden soll:
Bild %1 kann nicht gefunden werden
Bild %1 kann nicht geladen werden.
XML-Datei für Tabellenstil„ %1“ kann nicht gefunden werden.
Lesefehler in XML-Datei für Tabellenstil %1.
Zellenkommentar
< keine >
gleich
größer als
kleiner als
größer oder gleich wie
kleiner oder gleich wie
zwischen
außerhalb des Bereichs
verschieden von
Erste Bedingung
Zweite Bedingung
Dritte Bedingung
Zelle ist
Zellenstil
verschieden von
Wenn der erste Wert eine Zahl ist, muss der zweite Wert auch eine Zahl sein.
Wenn der erste Wert eine Zeichenfolge ist, dann muss der zweite auch eine Zeichenfolge sein.
Zusammenfassen
& Funktion:
Summe
Durchschnitt
Anzahl
Maximum
Minimum
Produkt
Standardabweichung
Varianz
& Verweis:
& Eingegebene Verweise:
Beschreibung in & Zeile
Beschreibung in & Spalte
Daten & kopieren
& Hinzufügen
& Entfernen
Der Bereich %1 ist zu klein
Der Bereich %1 ist zu groß
Die Bereiche %1 und %2 haben verschiedene Größen
Die Quelltabellen überschneiden sich mit der Zieltabelle
Der Bereich %1 ist fehlerhaft
Einfügen aus der Zwischenablage
Es sind keine Daten in der Zwischenablage.
Es sind keine nutzbaren Daten in der Zwischenablage.
Textdatei einfügen
Text auf Spalten aufteilen
Die Eingabedatei kann nicht geöffnet werden.
Typ:
Benutzername: (wenn nötig)
Rechner:
Port: (wenn nötig)
Datenbankname:
Passwort: (wenn nötig)
Tabellen auswählen:
Tabellen
Spalten auswählen:
Tabelle
Erfülle alle folgenden Bedingungen (UND)
Erfülle eine der folgenden Bedingungen (ODER)
ergibt
ist ungleich
in
nicht in
wie
größer als
kleiner als
größer oder gleich
kleiner oder gleich
Sortieren nach
Aufsteigend
Absteigend
keine Duplikate
Abfrage-Einstellungen
SQL-Abfrage:
In Region einfügen
Beginnend in Zelle:
Sie können hier keine Tabelle angeben.
Sie müssen eine gültige Region angeben.
Sie müssen eine gültige Zelle angeben.
Sie dürfen keine Daten in der Datenbank ändern.
Das Ausführen der Abfrage ist fehlgeschlagen.
Diese Abfrage hat kein Ergebnis zurückgeliefert.
Der Port muss eine Zahl sein.
Verbindung zur Datenbank wird aufgebaut...
Verbunden. Tabelleninformationen werden geladen...
Diese Datenbank enthält keine Tabellen.
Fehler beim Laden des Treibers
Meta-Daten der Tabellen werden geladen...
Sie müssen mindestens eine Tabelle auswählen.
Sie müssen mindestens eine Spalte auswählen.
Kein
„ *“ oder„ ?“ sind in SQL keine gültigen Platzhalter. Die entsprechenden Ersetzungen sind„ %“ oder„ _“. Sollen sie ersetzt werden?
Dokumenteinstellungen
Regionaleinstellungen
Regionaleinstellungen des Dokuments
Regionaleinstellungen des Systems & verwenden
Sprache: %1
Standardformat für Zahlen: %1
Langformat für Datum: %1
Kurzformat für Datum: %1
Zeitformat: %1
Währungsformat: %1
Weitere Einstellungen
Gesamte Tabelle durchsuchen
Suchen in:
Zellwerte
Kommentare
Suchrichtung:
Quer dann Abwärts
Abwärts dann Quer
Weniger Einstellungen
Funktion einfügen
Hilfe
Diese Funktion besitzt keine Parameter.
Die Beschreibung ist nicht verfügbar.
Zielwertsuche
Zelle festlegen:
Auf Wert:
Durch Änderung von Zelle:
& Start
Gegenwärtiger Wert:
Neuer Wert:
Zielwertsuche mit Zelle < zelle > fand Lösung:
Der Zellenverweis ist ungültig.
Der Zielwert ist ungültig.
Die Startzelle muss einen numerischen Wert enthalten.
Die Zielzelle muss eine Formel enthalten.
& OK
Starte Suche...
Durchlauf:
Zielwertsuche mit Zelle %1 fand eine Lösung:
Zielwertsuche mit Zelle %1 fand KEINE Lösung.
Gehe zu Zelle
Zelle eingeben:
Einfügen
Nach rechts verschieben
Nach unten verschieben
Zeilen einfügen
Spalten einfügen
Entfernen
Nach links verschieben
Nach oben verschieben
Zeilen entfernen
Spalten entfernen
Stil
Name:
Stil ableiten von:
Ein Stil mit diesem Namen existiert bereits.
Der Stilname darf nicht leer sein.
Ein Stil kann nicht von sich selbst abgeleitet werden.
Der Stil kann nicht von‚ %1‘ abgeleitet werden wegen rekursiven Verweisen.
Zellenformat
& Allgemein
& Datenformat
& Schriftart
& Position
& Umrandung
& Hintergrund
& Zellenschutz
Dies ist das Standardformat. KSpread erkennt den aktuellen Datentyp automatisch abhängig vom aktuellen Zelleninhalt. Standardmäßig richtet KSpread Zahlen, Daten und Uhrzeiten in der Zelle rechts, alles weitere links aus.
Die Zahlen-Schreibweise verwendet die Schreibweise, die Sie global in den Systemeinstellungen unter Regionaleinstellungen & Zugangshilfen festgelegt haben. Zahlen werden standardmäßig rechts ausgerichtet.
Wenn Sie in der aktuellen Zelle eine Zahl haben und das Zellenformat von Allgemein auf Prozent umstellen, wird die Zahl mit 100% multipliziert. Wenn Sie z. B. 12 eingeben und das Zellenformat auf Prozent umstellen, wird die Zahl zu 1200%. Wenn Sie das Zellenformat wieder auf Allgemein zurückstellen, wird die Zahl wieder 12. Sie können alternativ auch das Prozent-Symbol in der Format-Werkzeugleiste verwenden.
Das Währungsformat konvertiert Ihre Zahl in die Währungs-Schreibweise. Dabei werden die global in den Systemeinstellungen unter Regionaleinstellungen & Zugangshilfen festgelegten Einstellungen verwendet. Das Währungssymbol und die entsprechende Anzahl an Dezimalstellen werden angezeigt. Sie können alternativ auch das Währungs-Symbol in der Format-Werkzeugleiste verwenden, um das Zellenformat Ihrer aktuellen Währung anzupassen.
Wissenschaftlich
Das wissenschaftliche Format ändert die Anzeige ihrer Zahlen unter Verwendung der wissenschaftlichen Schreibweise. Beispielsweise wird 0,0012 zu 1,2E-03. Wenn Sie das Zellenformat wieder auf Allgemein zurückstellen, wird die Zahl wieder zu 0,0012.
Das Bruch-Format ändert die Anzeige Ihrer Zahlen in Brüche. Beispielsweise kann 0,1 zu 1/8, 2/16, 1/10 usw. werden. Die Art des Bruchs stellen Sie im Feld rechts ein. Wenn die Anzeige des exakten Bruchs im gewählten Modus nicht möglich ist, wird der am nächsten liegende Bruch verwendet. Wenn wir beispielsweise 1,5 als Zahl haben und Bruch sowie Sechzehntel 1/16 auswählen, wird in der Zelle„ 1 6/16“ angezeigt, was dem am nächsten liegendem Sechzehntel-Bruch entspricht.
Um ein Datum einzugeben, sollten Sie eines der in den Systemeinstellungen unter Regionaleinstellungen & Zugangshilfen - > Zeit & Datum eingestellten Formate verwenden. Es werden hier zwei Formate eingestellt: das Datumsformat und Kurzformat für Datum. Genau wie Sie Zahlen nach unten ziehen können, können sie auch Daten nach unten ziehen. Die nächsten Zellen enthalten dann die folgenden Daten.
Diese Einstellung formatiert Ihren Zelleninhalt als Uhrzeit. Um eine Uhrzeit einzugeben, sollten Sie eines der in den Systemeinstellungen unter Regionaleinstellungen & Zugangshilfen - > Zeit & Datum eingestellten Formate verwenden. Im Menü Zellenformat können Sie festlegen, wie die Uhrzeit angezeigt werden soll, indem Sie eines der verfügbaren Formate auswählen. Das Standard-Format ist das global in den Systemeinstellungen festgelegte. Wenn die Zahl in der Zelle als Uhrzeit keinen Sinn ergibt, zeigt KSpread 00:00 im Standard-Format an.
Diese Einstellung formatiert Ihren Zelleninhalt als Uhrzeit. Um eine Uhrzeit einzugeben, sollten Sie eines der in den Systemeinstellungen unter Regionaleinstellungen & Zugangshilfen - > Zeit & Datum eingestellten Formate verwenden. Im Menü Zellenformat können Sie festlegen, wie die Uhrzeit angezeigt werden soll, indem Sie eines der verfügbaren Formate auswählen. Das Standard-Format ist das global in den Systemeinstellungen festgelegte. Wenn die Zahl in der Zelle als Uhrzeit keinen Sinn ergibt, zeigt KSpread 00:00 im Standard-Format an.
Diese Einstellung formatiert Ihren Zelleninhalt als Text. Das kann nützlich sein, wenn eine Zahl als Text und nicht als Zahl behandelt werden soll, beispielsweise Postleitzahlen. Eine als Text formatierte Zahl wird links ausgerichtet. Wenn Zahlen als Text formatiert werden, können sie nicht in Berechnungen oder Formeln verwendet werden. Außerdem ändert sich dadurch die Zellausrichtung.
Benutzerdefiniert
Das benutzerdefinierte Format funktioniert derzeit noch nicht. Es soll im nächsten Release aktiviert werden.
Dieses Feld zeigt eine Vorschau Ihrer Auswahl, damit Sie den Effekt beurteilen können, bevor sie auf OK klicken.
Dieses Feld zeigt die Auswahlmöglichkeiten der Formate für Brüche, Datum und Uhrzeit an.
Sie können hier einen Postfix wie ein $HK-Symbol an das Ende jedes Zellinhalts im gewählten Format anhängen.
Variable
Mit dieser Einstellung können Sie kontrollieren, wie viele Dezimalstellen nach dem Komma für numerische Werte angezeigt werden. Sie können dies auch alternativ über die Symbole Genauigkeit vergrößern bzw. Genauigkeit verringern in der Format-Werkzeugleiste ändern.
Sie können hier einen Präfix wie ein $-Symbol vor jeden Zellinhalts im gewählten Format einfügen.
Sie können hier einstellen, ob postiven Werten ein + vorangestellt wird und ob negative Werte in rot dargestellt werden.
Automatisch
Hälften 1/2
Viertel 1/4
Achtel 1/8
Sechzehntel 1/16
Zehntel 1/10
Hundertstel 1/100
Einstellig 5/9
Zweistellig 15/22
Dreistellig 153/652
System:
(=[mm]:ss)
(=[hh]:mm:ss)
(=[hh]:mm)
Dolor Ipse
Standardbreite (%1 %2)
Standardhöhe (%1 %2)
Umrandung
Vorauswahl
Muster
Benutzerdefiniert
Hintergrundfarbe:
Keine Farbe
Verknüpfung einfügen
Internet
Verknüpfung mit Internetadresse
Textanzeige:
Internetadresse:
Mail
Verknüpfung mit E-Mail-Adresse
E-Mail:
Betreff:
Datei
Verknüpfung mit Datei
Speicherort für Datei:
Zuletzt geöffnete Datei:
Keine Einträge
Zelle
Verknüpfung mit Zelle
Zelle oder benannter Bereich:
Die Internetadresse ist leer
Die E-Mail-Adresse ist leer
Der Dateiname ist leer
Die Zielzelle ist leer
Benutzerdefinierte Listen
Liste:
Eintrag:
Hinzufügen
Abbrechen
Neu
Ändern
Kopieren
Möchten Sie diese Liste wirklich entfernen?
Liste entfernen
Der Eintrag ist nicht leer. Möchten Sie fortsetzen?
Auswählen
& Bearbeiten...
& Neu...
Benannte Bereiche
Bereich: %1
Neuer benannter Bereich
Benannten Bereich bearbeiten
Möchten Sie diesen benannten Bereich wirklich entfernen?
Zellen:
Tabelle:
Bereichsname:
Beim Einfügen neue Zellen erstellen
Reihe
Werte einfügen
Fügt die Reihe senkrecht ein, alle Werte untereinander.
Fügt die Reihe waagerecht ein, von links nach rechts.
Typ
Linear (2,4,6,...)
Erzeugt eine Reihe von„ Anfangswert“ bis„ Endwert“ und addiert für jeden Schritt den durch„ Schrittweite“ angegebenen Wert. Dadurch wird eine Reihe erzeugt, bei der jeder Wert um„ Schrittweite“ größer als sein Vorgänger ist.
Geometrisch (2,4,8,...)
Erzeugt eine Reihe von„ Anfangswert“ bis„ Endwert“ und multipliziert für jeden Schritt den durch„ Schrittweite“ angegebenen Wert. Mit einer Schrittweite von 5 ergibt sich die folgende Reihe: 5, 25, 125, 625..., da 5 multipliziert mit 5 (Schrittweite) gleich 25 ist, und das mit 5 multipliziert gleich 125 ist. Dieser Wert multipliziert mit 5 ist dann 625.
Anfangswert:
Endwert:
Schrittweite:
Anfangswert und Endwert müssen positiv sein.
Der Endwert muss größer als der Startwert sein, oder die Schrittweite muss kleiner als 1 sein.
Startwert, Endwert oder Schrittweite dürfen nicht 0 sein.
Die Schrittweite darf nicht 1 betragen
Die Schrittweite ist negativ.
Die Schrittweite muss größer als Null sein. Ansonsten ergibt sich eine unendliche lineare Reihe.
Wenn der Startwert größer als der Endwert ist, muss die Schrittweite kleiner als 0 sein.
Wenn die Schrittweite negativ ist, muss der Startwert größer als der Endwert sein.
Wähle ausgeblendete Spalten zum Anzeigen:
Wählen ausgeblendete Zeilen zum Anzeigen:
Spalte: %1
Zeile: %1
Wähle ausgeblendete Tabellen die angezeigt werden sollen:
Sortierung
Layout
& Zeilen sortieren
& Spalten sortieren
Sortieren nach
Dann nach
Sortierkriterien
Erster Schlüssel
Benutzerdefinierte Liste & verwenden
Zellenformatierung kopieren (Umrandungen, Farben, Textstil)
Sortieren unter Beachtung von Groß- und Kleinschreibung
(Spalte %1)
Spalte %1
(Zeile %1)
Zeile %1
& Erste Zeile enthält Überschrift
& Erste Spalte enthält Überschrift
Einfügen spezial
& Ändern...
& Löschen...
Stilverwaltung
Alle Stile
Benutzerdefinierte Stile
Hierarchisch
Stil %1
Zwischensummen
Alles löschen
Sie müssen mindestens eine Spalte auswählen um Zwischensummen addieren zu können.
Gesamttotal
Spalte‚ %1‘
AnzahlA
StDev
StDevP
Var
VarP
Gültigkeit
& Alles löschen
& Kriterium
Zulassen:
Ganzzahl
Textlänge
Liste
Erlaube Leerzeichen
Daten:
Minimum:
Maximum:
Datum:
Kleinstes Datum:
Grösstes Datum:
Zeit:
Kleinste Zeit:
Grösste Zeit:
Zahl:
Einträge:
& Fehlerbenachrichtigung
Bei Eingabe ungültiger Werte Fehlermeldung anzeigen
Aktion:
Anhalten
Warnung
Titel:
Nachricht:
Eingabehilfe
Eingabehilfe anzeigen, wenn die Zelle ausgewählt ist
Dies ist kein gültiger Wert.
Dies ist keine gültige Zeit.
Dies ist kein gültiges Datum.
Bit-Operation-Funktionen
Konvertierungsfunktionen
Datenbankfunktionen
Datum-Zeit-Funktionen
Ingenieurwesen-Funktionen
Finanzfunktionen
Informationsfunktionen
Logikfunktionen
Mathematische Funktionen
Verweisfunktionen
Statistikfunktionen
Textfunktionen
Trigonometrische Funktionen
KOffice-Tabellenkalkulations-Programm
KSpread
(c) 1998-2008, Das KSpread-Team
Torben Weis
Urspünglicher Autor
Betreuer
Laurent Montel
John Dailey
Philipp Müller
Ariya Hidayat
Norbert Andres
Shaheed Haque
Entwickler der Import-/Exportfilter
Werner Trobin
Nikolas Zimmermann
David Faure
Helge Deller
Percy Leonhart
Eva Brucherseifer
Phillip Ezolt
Enno Bartels
Graham Short
Lukáš Tinkl
Tomas Mecir
Raphael Langerhorst
John Tapsell
Robert Knight
Stefan Nikolaus
Sascha Pfau
Entwickler (Funktionen)
Sebastian Sauer
Skripting-Modul
Brad Hards
Implementierte, überarbeitete und testete diverse Funktionen
Kommentar:
Druckbereich festlegen
Druckbereich in der aktuellen Tabelle festlegen
Verknüpfung %1 aktiviert
Diese Verknüpfung zeigt auf das Programm oder Skript‚ %1‘. Bösartige Programme können Ihrem Computer schaden. Sind Sie sicher, dass Sie dieses Programm ausführen möchten?
Verknüpfung öffnen?
Zellenwerkzeug
Ungültige OASIS OpenDocument-Datei: Keine office:body-Markierung gefunden.
Ungültige OASIS OpenDocument-Datei: Keine Markierung in office:body gefunden.
Dieses Dokument ist keine Tabelle, sondern vom Typ„ %1“. Bitte versuchen Sie es mit der entsprechenden Anwendung zu öffnen.
Ungültiges Dokument. Erwarteter Mime-Typ application/x-kspread oder application/vnd.kde.kspread, vorhandener Mime-Typ :„ %1“.
Dieses Dokument wurde mit einer neueren Version von KSpread erstellt (Syntaxversion %1) Wenn Sie das Dokument mit dieser Version von KSpread öffnen, kann vielleicht einige Information verloren gehen.
Dateiformatkonflikt
Stile können nicht geladen werden.
Ungültiges Dokument. Es ist kein„ map“ -Tag enthalten.
Der Bereich ist zu groß.
Höhe: %1 %2
Zeile ausblenden
Breite: %1 %2
Spalte ausblenden
Zu öffnende Datei
Skriptdatei nach dem Start ausführen.
Die Tabelle %1 kann nicht zum Drucken gefunden werden
Nichts zu drucken für Tabelle(n) %1.
Tabelleneigenschaften
Eigenschaften der aktuellen Tabelle ändern
Tabelle
Tabelle einfügen
Eine neue Tabelle einfügen
Die ausgewählte Tabelle duplizieren
Die aktuelle Tabelle entfernen
Tabelle umbenennen...
Die aktuelle Tabelle umbenennen
Tabelle anzeigen...
Eine ausgeblendete Tabelle anzeigen
Die aktuelle Tabelle ausblenden
Seitenlayout...
Das Layout der Tabellen für den Ausdruck einrichten
Druckbereich zurücksetzen
Den Druckbereich in der aktuellen Tabelle zurücksetzen
Seitenumrandungen
In der Tabelle die Seitenumrandungen anzeigen
Tabelle neu berechnen
Neu berechnen
Den Wert aller Zellen in der aktuellen Tabelle neu berechnen
Dokument neu berechnen
Den Wert aller Zelle in allen Tabellen neu berechnen
& Tabelle schützen...
Die Tabelle vor Veränderungen schützen
& Dokument schützen...
Das Dokument vor Veränderungen schützen
& Vorlage aus Dokument erstellen...
Anker
Seite
Objektverankerung umschalten
Nächste Tabelle
Weiter
Zur nächsten Tabelle gehen
Vorherige Tabelle
Zurück
Zur vorherigen Tabelle gehen
Erste Tabelle
Erste
Zur ersten Tabelle gehen
Letzte Tabelle
Zur letzten Tabelle gehen
Spaltenüberschrift
Spaltenüberschrift anzeigen
Zeilenbeschriftung
Zeilenbeschriftung anzeigen
Waagerechte Bildlaufleiste
Waagerechte Bildlaufleiste anzeigen
Senkrechte Bildlaufleiste
Senkrechte Bildlaufleiste anzeigen
Statusleiste
Statusleiste anzeigen
Tabellenleiste
Tabellenleiste anzeigen
Diverse KSpread-Einstellungen festlegen
Keine Berechnung
Unter Verwendung der Summe berechnen
Unter Verwendung des Minimum berechnen
Unter Verwendung des Maximum berechnen
Unter Verwendung des Durchschnitts berechnen
Unter Verwendung der Anzahl berechnen
Unter Verwendung der AnzahlA berechnen
Werkzeuge
Textfarbe ändern
Hintergrundfarbe ändern
Umrandung ändern
Sie können eine geschützte Tabelle nicht verändern.
Sie können die letzte sichtbare Tabelle nicht ausblenden.
Geben Sie ein Passwort ein.
Dokument schützen
Passwort eingeben.
Dokumentschutz aufheben
Das Passwort ist ungültig.
Tabelle schützen
Tabellenschutz aufheben
Sie können nicht die einzige Tabelle entfernen.
Sie sind dabei, die aktive Tabelle zu entfernen. Möchten Sie fortfahren?
& Löschen
Namen eingeben:
Der Tabellenname darf nicht leer sein.
Tabellennamen ändern
Dieser Name wird bereits verwendet.
Summe:
Durchschnitt:
Minimum:
Maximum:
Anzahl:
AnzahlA:
%1%
Keine Einschränkung
KSpread einrichten
Oberfläche
Nach unten
Nach oben
Nach unten, erste Spalte
Öffnen/Speichern
Funktionsmodule
Module
Rechtschreibung
Verhalten der Rechtschreibprüfung
Maximum Rückgängig/Wiederherstellen:
& Vervollständigungsmodus:
Hier können Sie einen Modus für die automatische Vervollständigung aus der Liste auswählen.
Manuell
Aufklappmenü
Halbautomatisch
Tabellen
Zellenformat...
Zellenformat festlegen
Auf das Standardformat zurücksetzen
Zellstile bearbeiten und verwalten
Einen vordefinierten Stil auf die ausgewählten Zellen anwenden
Stil basierend auf dieser Zelle erstellen...
Stil aus Zelle
Einen neuer Stil basierend auf der aktuell ausgewählten Zelle erstellen
Durchgestrichen
Schriftart auswählen...
Schriftgröße auswählen
Schriftgröße
Schrift vergrößern
Schrift verkleinern
Textfarbe
Linksbündig
Zelleninhalte linksbündig ausrichten
Zentriert
Zelleninhalte zentriert ausrichten
Rechtsbündig
Zelleninhalte rechtsbündig ausrichten
Oben ausrichten
Zelleninhalte am oberen Rand der Zellen ausrichten
Mittig ausrichten
Zelleninhalte senkrecht in der Mitte der Zellen ausrichten
Unten ausrichten
Zelleninhalte am unteren Rand der Zellen ausrichten
Randlinie links
Eine linke Randlinie für den ausgewählten Bereich setzen
Randlinie rechts
Eine rechte Randlinie für den ausgewählten Bereich setzen
Randlinie oben
Eine obere Randlinie für den ausgewählten Bereich setzen
Randlinie unten
Eine untere Randlinie für den ausgewählten Bereich setzen
Randlinien überall
Eine Umrandung um alle Zellen im ausgewählten Bereich setzen
Keine Randlinien
Alle Umrandungen im ausgewählten Bereich entfernen
Umrandung außen
Umriss
Eine Umrandung außen um den ausgewählten Bereich setzen
Farbe der Umrandung
Wählen Sie eine neue Farbe für die Umrandung
Text umbrechen
Umbrechen
Eingabe des Zellentext in mehreren Zeilen erlauben
Senkrechter Text
Zelleninhalt senkrecht schreiben
Einzug vergrößern
Einzug vergrößern
Einzug verkleinern
Einzug verkleinern
Winkel ändern...
Winkel
Den Winkel ändern, in dem der Zelleninhalt geschrieben wird
Prozent-Format
Setzt das Zellenformat als Prozentwert.
Währungsformat
Zellenformat an Landeswährung anpassen
Anzahl der angezeigten Nachkommastellen erhöhen
Anzahl der angezeigten Nachkommastellen reduzieren
Großbuchstaben
Großbuchstaben
Alle Buchstaben groß schreiben
Kleinbuchstaben
Kleinbuchstaben
Alle Buchstaben klein schreiben
Ersten Buchstaben groß schreiben
Ersten Buchstaben groß
Ersten Buchstaben groß schreiben
Hintergrundfarbe
Hintergrundfarbe einstellen
Den ausgewählten Bereich zu einer Zelle verbinden
Den ausgewählten Bereich waagerecht zu einer Zelle verbinden
Den ausgewählten Bereich senkrecht zu einer Zelle verbinden
Den ausgewählten Bereich wieder in einzelne Zellen auftrennen
Spaltenbreite ändern...
Die Breite einer Spalte ändern
Fügt eine neue Spalte in die Tabelle ein
Entfernt eine Spalte aus der Tabelle
Die Spalte ausblenden
Spalten anzeigen...
Ausgeblendete Spalten anzeigen
Spalten ausgleichen
Für die ausgewählten Spalten die selbe Breite festlegen
Ausgeblendete Spalten in der Auswahl anzeigen
Zeilenhöhe ändern...
Die Höhe einer Zeile ändern
Zeilen
Fügt eine neue Zeile in die Tabelle ein
Entfernt eine Zeile aus der Tabelle
Eine Zeile ausblenden
Zeilen anzeigen...
Ausgeblendete Zeilen anzeigen
Zeilen ausgleichen
Für die ausgewählten Zeilen die selbe Höhe festlegen
Ausgeblendete Zeilen in der Auswahl anzeigen
Zeile und Spalte anpassen
Die Zeilen- und Spaltengröße so anpassen, dass die Zelleninhalte vollständig angezeigt werden
Zellen...
Zellen einfügen...
Eine leere Zelle in die Tabelle einfügen
Zellen entfernen...
Entfernt die Zellen aus der Tabelle
Alles löschen
Den Inhalt und die Formatierung der aktuellen Zelle löschen
Inhalt
Inhalt löschen
Entfernt den Inhalt der aktuellen Zelle
Kommentar...
Den Kommentar für diese Zelle bearbeiten
Den Kommentar dieser Zelle entfernen
Bedingte Stile...
Zellenformat aufgrund von bestimmten Bedingungen festlegen
Bedingte Stile entfernen
Die bedingten Zellstile entfernen
& Verknüpfung...
Einen Internet-Hyperlink einfügen
Verknüpfung
Eine Verknüpfung entfernen
Gültigkeit...
Tests festlegen, um die Gültigkeit der Zelldaten sicherzustellen
Gültigkeitstests entfernen
Die Gültigkeitstests von dieser Zelle entfernen
& Sortieren...
Eine Gruppe von Zellen sortieren
Absteigend sortieren
Eine Gruppe von Zellen in absteigender Reihenfolge sortieren
Aufsteigend sortieren
Eine Gruppe von Zellen in aufsteigender Reihenfolge sortieren
& Automatisch filtern
Einen automatischen Filter für einen Zellbereich hinzufügen
& Links
& Rechts
Nach & oben
Nach & unten
Automatisch Summieren
Fügt die Funktion„ sum“ ein
& Reihe...
Eine Reihe einfügen
& Funktion...
Einen mathematischen Ausdruck einfügen
& Sonderzeichen...
Symbole und Zeichen einfügen, die nicht über Ihre Tastatur verfügbar sind
Aus & Datenbank...
Daten aus einer SQL-Datenbank einfügen
Aus & Textdatei...
Textdatei
Daten aus einer Textdatei an der aktuellen Cursorposition bzw. in den aktuellen Bereich einfügen
Aus & Zwischenablage...
Zwischenablage
CSV-Daten aus der Zwischenablage an der aktuellen Cursorposition bzw. in den aktuellen Bereich einfügen
& Text auf Spalten aufteilen...
Den Inhalt der Zellen auf mehrere Spalten aufteilen
Benutzerdefinierte Listen...
Benutzerdefinierte Listen zum Sortieren oder automatischem Füllen erstellen
& Zusammenfassen...
Erstellt aus mehreren gleichartigen Bereichen eine Zusammenfassung in einem Bereich.
& Zielwertsuche...
Berechnung wird mehrfach wiederholt, um einen bestimmten Zielwert zu finden
& Zwischensummen...
Verschiedene Zwischensummen in eine Liste oder Datenbank erstellen
Bereichsname...
Einem Bereich in der Tabelle einen Namen geben
Benannte Bereiche...
Benannte Bereiche bearbeiten oder auswählen
Formelauswahl
Eine Funktion einfügen
Sonstige...
Zelle bearbeiten
Die hervorgehobene Zelle bearbeiten
Zellobjekt in die Zwischenablage verschieben
Zellobjekt in die Zwischenablage kopieren
Inhalt der Zwischenablage an Cursorposition einfügen
Einfügen spezial...
Inhalt der Zwischenablage mit speziellen Optionen einfügen
Einfügen und Zellen verschieben
Fügt eine Zelle aus der Zwischenablage in die Tabelle ein
Wählt alle Zellen in der aktuellen Tabelle aus
Gehe zu Zelle...
Gehe zu
Zu einer bestimmten Zelle gehen
Rechtschreibung prüfen
Prüfung starten...
QTableView anzeigen...
Automatische Formatierung...
Formatierung der Tabelle festlegen
Dokumenteinstellungen...
Dokumenteinstellungen-Dialog anzeigen
Formel
Anwenden
Änderungen anwenden
Änderungen verwerfen
Stil basierend auf dieser Zelle erstellen
Der Stilname darf nicht leer sein.
Schriftart ändern
Waagerechte Ausrichtung ändern
Senkrechte Ausrichtung ändern
Prozentformat
Währungsformat
In Großbuchstaben ändern
In Kleinbuchstaben ändern
Ersten Buchstaben groß schreiben
Text löschen
Verknüpfung bearbeiten
Sie müssen mehrere Zellen auswählen.
Keine Datenbanktreiber verfügbar. Um diese Funktion zu nutzen, müssen Sie die notwendigen Qt3-Datenbanktreiber installieren.
Ersetzen
Zahlenformat
Währungsformat
Prozent-Format
Zeitformat
Datumsformat
Wissenschaftliches Format
Spalte anpassen
Spalten löschen
Zeile anpassen
Zeilen löschen
Auswahlliste...
Zeichen auswählen
Ausgewähltes Zeichen in den Text einfügen
Einzelne Zelle auswählen
Mehrere Zellen auswähl
Datumsformat
Zeitformat
Datentyp
Optionen für Zellenwerkzeug
XOR(Wahr;Falsch) ergibt Falsch
Textfeld
Rechtschreibung
Eingebettes Objekt
Diagramm
Stile anwenden
Objekt benennen
Objekt schützen
Objektgröße ändern
Objekt ausschneiden
Objekt entfernen
Objekt einfügen
Werte festlegen
Auf & alle Tabellen anwenden
Allgemeine Einstellungen
& Gitterlinien zeichnen
& Kommentarmarkierung anzeigen
& Formelmarkierung anzeigen
& Diagramm drucken
Bereiche
Druckbereich:
Spalten auf jeder Seite wiederholen:
Zeilen auf jeder Seite wiederholen:
Druckbereich ungültig, Änderungen werden ignoriert.
Der Bereich der wiederholten Spalten ist ungültig, Änderungen werden ignoriert. Der Bereich muss im Format Spalte:Spalte sein, z. B. B:C.
Der Bereich der wiederholten Zeilen ist ungültig, Änderungen werden ignoriert. Der Bereich muss im Format Zeile:Zeile sein, z. B. 2:3.
Diverses
Seitenlayout
& Anzahl der am Anfang geöffneten Tabellen:
& Reiter anzeigen
& Formelleiste anzeigen
Statusleiste anzeigen
Drücken der & Eingabetaste bewegt den Zellcursor nach:
Berechnungsmethode:
& Gitterfarbe:
Standard-Seitengröße:
Standard-Seitenausrichtung:
Hochformat
Standard-Längeneinheit:
Formelleiste anzeigen
Fehler in Zelle %1
Bei ungültigen & Formeln Fehlermeldung anzeigen
Die Groß-/Kleinschreibung des Titels nicht überprüfen
Rechtschreibprüfung
Die Rechtschreibprüfung ist beendet.
ISpell konnte nicht gestartet werden. Stellen sie sicher, dass ISpell richtig konfiguriert wurde und in ihrem„ PATH“ liegt.
ISpell scheint abgestürzt zu sein.
& Mehrfachoperationen...
Die selbe Formel auf verschiedene Zellen mit unterschiedlichen Werten für den Parameter anwenden
Objekte verschieben
& Eigenschaften
& Objekt
Ein Objekt aus einem anderen Programm einfügen
& Diagramm
Ein Diagramm einfügen
Ein Bild einfügen
Objekte ausschneiden
Eigenschaften
Der Bereich ist zu groß.
Es ist keine Diagramm-Komponente registriert.
Tabellenauswahl
KSpread einrichten...
& Stil
Zelle:
Umrandungen entfernen