# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDEdoc
# source:	https://object.pouta.csc.fi/OPUS-KDEdoc/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/KDEdoc.php
# copyright_long:	http://opus.nlpl.eu/KDEdoc.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Das KSirc Handbuch
Diese Dokumentation beschreiben das KDE IRC -Programm KSirc 1.1.
Einleitung
KSirc ist f\xFCr KDE das Standard- IRC -Programm.
Es unterst\xFCtzt Skripte in der Sprache Perl und ist im wesentlichen kompatibel zu mIrc.
KSirc verwenden
Falls man IRC noch nie verwendet hat...
Im Dialog w\xE4hlt man eine Gruppe aus dem linken Listenfeld und einen Server aus dem mittleren Listenfeld.
Die Portnummer ist in der Regel 6667.
Es erscheint ein neues Fenster, das die vom Server gesendeten Nachrichten anzeigt.
Wenn diese Nachrichten beendet sind, kann man einen Kanal ausw\xE4hlen.
Eine Liste der verf\xFCgbaren Kan\xE4le erh\xE4lt man durch den Befehl /list.
Um einen Kanal zu verlassen, dient der Befehl /part.
Grundlagen von KSirc
Server
Mit KSirc kann man gleichzeitig Verbindung zu vielen Servern aufnehmen.
Im Verbindungsdialog kann man zun\xE4chst die gew\xFCnschte Gruppe, dann einen Server und schlie\xDFlich einen Port w\xE4hlen.
Danach klickt man auf Verbinden und ein neues Fenster erscheint.
Das Fenster Server-Kontrolle erm\xF6glicht eine Kontrolle \xFCber die Server, mit denen KSirc verbunden ist.
Kan\xE4le (Channels)
Ge\xF6ffnete Kan\xE4le werden im Fenster Server-Kontrolle unter dem zugeh\xF6rigen Server angezeigt.
Kanal-Einstellungen
Das Kanal -Men\xFC im Kanal-Fenster enth\xE4lt einige n\xFCtzliche Einstellungen:
Zeigt den Kanal wie einen B\xF6rsen- oder Nachrichtenticker an.
Zu beachten ist, das man in diesem Modus nicht an der Unterhaltung im Kanal teilnehmen kann.
Um den Ticker-Modus zu beenden, klickt man mit der rechten Maustaste auf den Ticker und w\xE4hlt aus dem Men\xFC Verstecken....
Speichert den Inhalt des Kanals in einer Datei.
Jeder Aussage im Kanal wird die Zeit in der Form HH:MM:SS vorangestellt.
Benutzer
In jedem Kanal wird die Benutzerliste rechts in einer Spalte angezeigt.
Klickt man mit der rechten Maustaste auf einen der Namen, so erscheint ein Men\xFC mit einigen selbst erkl\xE4renden Funktionen:
Spitznamen aktualisieren
Fordert vom Server die aktuelle Teilnehmerliste dieses Kanals an.
Folgen
Folgt einem bestimmten Teilnehmer in den Kanal, in den er geht.
Nicht folgen
Beendet die Verfolgung eines Teilnehmers.
Wer ist
Sendet eine CTCP -whois-Anfrage \xFCber einen Teilnehmer.
Es werden verschiedene Informationen \xFCber einen Teilnehmer (z.B.
Computername, Server-Verbindung usw.) abgefragt.
Ping
Sendet ein CTCP -Ping zu einem Teilnehmer, um dessen Antwortzeit zu testen.
Version
Sendet eine CTCP -Version-Anfrage, um die Programmversion eines Teilnehmers zu ermitteln.
Abuse
Einen Teilnehmer in einer von mehreren Weisen schlecht behandeln.
Die folgenden Befehle sind nur f\xFCr Kanal-Operatoren zug\xE4nglich:
Kick
Den Teilnehmer aus dem Kanal werfen.
Ban
Den Teilnehmer von der Teilnahme im Kanal ausschlie\xDFen.
unBan
Den Teilnahmeausschlu\xDF f\xFCr einen Benutzer aufheben.
Op
Dem Teilnehmer Operator-Rechte geben.
DeOp
Die Operator-Rechte f\xFCr einen Teilnehmer widerrufen.
KSirc Einrichtung
Einf\xFChrung zur Einrichtung
Die Karteikarte Allgemein
Fenstermodus
SDI-Modus (bisheriges Verhalten)
In diesem Modus verwendet KSirc den Ein-Dokumenten-Modus, bei dem jeder neue Kanal und jedes /query -Fenster separat erscheint.
Seitenweiser MDI-Modus (XChat)
KSirc verwendet ein Mehr-Dokumenten-Fenster im Stile von XChat, bei dem jeder neue Kanal und jedes /query -Fenster als Karteikarte in einem KSirc -Hauptfenster erscheint.
Durch Klicken auf den zugeh\xF6rigen Karteireiter kann man ein Fenster in den Vordergrund bringen.
Der Abschnitt Verschiedenes
Fenster automatisch erstellen
Falls man dieses Ankreuzfeld markiert, erstellt KSirc f\xFCr jeden Benutzer, der einen /msg -Befehl sendet, ein neues Fenster.
Ansonsten wird jeder von anderen Benutzern mit dem /msg -Befehl gesendete Text im aktuellen Fenster dargestellt.
Spitznamen vervollst\xE4ndigen
Zun\xE4chst tippt man die ersten Buchstaben eines Spitznamens ein.
Dann bet\xE4tigt man Tabulator.
Der eingetippte Text wird zu einem Spitznamen vervollst\xE4ndigt.
Dabei werden automatisch notwendige \xC4nderungen der Gro\xDFschreibung vorgenommen, also wird phi<TAB> zu PhilRod, falls ein Benutzer mit dem Namen PhilRod im Kanal ist.
Falls der Text auf mehr als einen Benutzer zutrifft, wird zun\xE4chst der erste passende Name eingef\xFCgt.
Durch wiederholtes Dr\xFCcken von Tabulator werden die folgenden Namen nacheinander eingesetzt.
Falls z.B. die Benutzer PhilA und PhilRod im Kanal sind, und man phi<TAB> eintippt, wird der Text zun\xE4chst zu PhilA vervollst\xE4ndigt, ein weiteres Bet\xE4tigen von Tabulator \xE4ndert den Text zu PhilRod.
Thema im Fenster-Titel anzeigen
Zeigt das Thema des Kanals im Fenstertitel.
Falls das Ankreuzfeld nicht markiert ist, wird das Thema nur innerhalb des Fensters angezeigt.
Zeitmarke
Jeder Aussage im Kanal wird die Zeit in der Form [HH:MM:SS] vorangestellt.
Signalton als Benachrichtigung
Markiet man das Ankreuzfeld, wird ein Signalton erzeugt, wenn ein Benutzer der eigenen /notify -Liste dem aktuellen IRC beitritt.
Farbauswahl-Dialog
Ansonsten muss man die Farbkodierung manuell eintippen.
Sie auch.
Automatisch wieder teilnehmen
Nimmt am Kanal nach einem Verbindungsabbruch automatisch wieder teil.
L\xE4nge des Verlaufs
Speichert maximal so viele Zeilen des Chats in jedem Fenster, wie angegeben.
Der Verlauf erm\xF6glicht einen R\xFCckblick auf das, was bereits gesagt worden ist.
Der Abschnitt Hintergrundmuster
Im Abschnitt Hintergrundmuster kann man das Bild einstellen, das f\xFCr den Hintergrund von KSirc -Fenstern verwendet wird.
Man kann den Dateinamen in das Eingabefeld eintippen oder durch Klicken auf den Knopf rechts davon einen Dateidialog aufrufen.
Bilddateien der Formate GIF, JPEG und PNG werden unterst\xFCtzt.
Eine Bildvorschau wird rechts des Eingabefeldes angezeigt.
Die Karteikarte Programmstart
Hier kann man die Starteinstellungen von KSirc ver\xE4ndern.
Identit\xE4t
Spitzname
Legt den eigenen IRC -Spitznamen fest.
Alternativer Spitzname
Legt einen zweiten Spitznamen fest f\xFCr den Fall, dass der erste Spitzname bereits von einem anderen Benutzer verwendet wird.
Wirklicher Name
Der wirkliche Name, der bei einer /query -Anfrage zur\xFCckgegeben werden soll.
Benachrichtigungsliste
Hier k\xF6nnen die Namen von Benutzern angegeben werden, die beim Programmstart zur eigenen /notify -Liste hinzugef\xFCgt werden sollen.
Es erfolgt eine Benachrichtigung, wenn einer dieser Benutzer am Chat teilnimmt.
Die Karteikarte Farben
Hier kann man die Farben einstellen, die KSirc verwenden soll.
Der Abschnitt Chat-Farben
Hier kann man f\xFCr jeden Texttyp eine Farbe festlegen.
Klickt man auf den Farbknopf neben einem der Texttypen, so erscheint der Farbauswahl-Dialog, mit dessen Hilfe man die Farbe w\xE4hlen kann, in der dieser Texttyp angezeigt wird.
Farben f\xFCr Spitznamen
Hier kann die Vordergrund - und Hintergrund -Farbe f\xFCr die Darstellung der Spitznamen im Chat-Fenster ausgew\xE4hlt werden.
Die Option Farbe f\xFCr Nachrichten, die den eigenen Spitznamen enthalten legt die Farbe f\xFCr alle Nachrichten fest, die den eigenen Spitznamen enthalten.
Farbkodierung
Hier kann man festlegen, ob die Farbkodierung des Programms KSirc (siehe auch) und/oder die Kodierung des Programms mIrc verwendet werden k\xF6nnen.
Farben von KSirc
Kompatibilit\xE4t zu mIrc
Der Befehl 0x03<fg>[,<bg>] \xE4ndert die Farbe f\xFCr den Vordergrund und den Hintergrund
Der Befehl 0x03 stellt f\xFCr diese Zeile auf die Standardeinstellung zur\xFCck
KSirc Standard
Format:
<fg>[,<bg>] <fg>[,<bg>] \xE4ndert die Vordergrund- und Hintergrundfarbe
c stellt auf Standardeinstellungen zur\xFCck
b \xE4ndert das Schriftattribut in fett
u \xE4ndert das Schriftattribut in unterstrichen
i \xE4ndert das Schriftattribut in kursiv
r \xE4ndert das Schriftattribut in invertiert
Erstens ist es schwer 0x03 in Skripten zu verwenden und zweitens haben einige C-Funktionen Probleme damit.
Zeichen; erm\xF6glicht mehr Befehle, ohne Probleme mit zuk\xFCnftigen Erweiterungen von mIrc zu bekommen.
Farbnummern
wei\xDF
schwarz
blau
gr\xFCn
rot
braun
violett
orange
gelb
hellgr\xFCn
rosa
hellrosa
hellblau
rosa
grau
hellgrau
Sendet die Attribute fett, unterstrichen, invertiert und die Farbe
Mit den folgenden Tastenk\xFCrzeln kann man Steuerzeichen in den Text einf\xFCgen:
Beispiele
Tippe das Wort ein
Um beispielsweise ein einzelnes Wort einzuf\xE4rben:
Nun tippt man eine Zahl zwischen 0 und 15
Nun tippt man das Wort
Wenn man au\xDFerdem noch die Hintergrundfarbe eines Wortes ver\xE4ndern will, muss man zwei durch ein Komma getrennte Zahlen anstatt einer einzigen angeben.
Die erste Zahl gibt die Textfarbe an, die zweite steht f\xFCr die Hintergrundfarbe.
Der Farbbereich reicht von 0 bis 15.
Die Tabelle der Farben befindet sich im vorigen Abschnitt.
Filter
Filterregeln und ihre Erstellung
Falls man diese Anleitung nicht versteht, kann man auf den f\xFCr die n\xE4chste Programmversion geplanten Filterassistenten warten.
Das kann allerdings noch ein wenig dauern.
Der Filter versucht den Text in match zu finden und durch den Text in From und To zu ersetzen.
Die Texte in diesen drei Feldern k\xF6nnen jeweils regul\xE4re Ausdr\xFCcke von Perl sein.
Die Regeln werden in absteigender Reihenfolge ausgewertet.
Die oberste Regel zuerst, dann die zweite Regel, usw.
Alle Texte werden wie folgt ausgewertet:
Diese Ersetzung wird allerdings bei der Eingabe der Regel bereits vorgenommen und sp\xE4ter auch nicht mehr ver\xE4ndert.
Damit ist diese Ersetzung vermutlich von geringem Wert.
Dabei kann es sich um Zeichenketten wie $1, $2 oder normale Variablen handeln, die in sirc vorhanden sind (wie z.B. $nick, $channel, usw.).
Name genau einmal am Zeilenanfang sendet die Textzeile an das Fenster mit dem Titel Name.
Falls das Fenster nicht existiert, wird der Text an das Fenster gesendet, das zuletzt den Fokus hatte.
Es gibt einige Spezialfenster, deren Name von einem vorangestellten! eingeleitet wird.
!default
Das aktuelle Fenster.
Es existiert immer.
!all
An jedes Fenster senden.
Der Text erscheint eventuell nicht in allen Fenstern, da die angezeigten Texte von der Fensterart abh\xE4ngen.
Zum Beispiel zeigen Kanal-Fenster keine /part - oder /quit -Nachrichten, es sei denn der zugeh\xF6rige Spitzname nimmt am Kanal teil.
!discard
l\xF6scht den Text.
Der Rest des Textes wird wie ein normaler regul\xE4rer Ausdruck in Perl behandelt.
Ein gutes Verst\xE4ndnis der Manualseite perlre ist von Vorteil, ein grundlegendes Verst\xE4ndnis von regex sollte man mindestens haben.
Beispiele:
Um in jedem Text alle Vorkommen von kde durch KDE zu ersetzen
Jeder Text wird untersucht und darin jedes Vorkommen von kde durch KDE ersetzt.
Gesucht ist jeder Text, der kde enth\xE4lt.
Dieser Text soll an das Fenster mit dem Namen kde gesendet werden
Sucht nach dem Wort kde und ersetzt im Erfolgsfall den Textanfang (^) durch kde.
Obwohl das Beispiel funktioniert, erh\xE4lt man f\xFCr den Fall, das der Text bereits ein wrgendein_Fenster enth\xE4lt, kdeirgendein_Fenster....
Stattdessen kann man das Folgende tun:
Hier ist die "From"-Zeile ein wenig kompliziert.
Sie bedeutet: suche 0 oder 1 Vorkommen von \S+.
Das ist 1 Tilde, ein oder mehrere Zeichen und eine weitere Tilde.
Der ganz Vorsichtige k\xF6nnte stattdessen (*:\S+) verwenden, was KSirc veranlasst, nach 0 oder mehr Kanalbefehlen zu suchen, f\xFCr den Fall, dass vorherige Regeln unkorrekt sind.
Kill-Nachrichten des Server sind meistens lang, h\xE4\xDFlich und nervig.
Eine grundlegende Nachricht auf dalnet sieht etwa folgenderma\xDFen aus:
Wenn man die Option +s verwendet, erh\xE4lt man Hunderte davon; sie huschen schnell \xFCber den Bildschirm.
Man kann 3 Regeln erstellen, um diese Nachrichten Schritt f\xFCr Schritt zu verarbeiten.
Man kann auch mit weniger als 3 Regeln auskommen, aber dieses Beispiel eignet sich, um in mehreren Schritten zu zeigen, wie mit mehreren Regeln eine umfangreiche Nachricht analysiert wird.
Im ersten Schritt wird der Pfad-Anteil entfernt:
Match sucht nach einer Nachricht, die mit *** beginnt.
Den * -Zeichen muss jeweils\ vorangestellt werden, da sie selbst als Sonderzeichen dienen und f\xFCr 0 oder mehr Vorkommen des vorangestellten Textes stehen. .* passt auf beliebige Zeichen bis zum Text KILL message for.
Damit kann man vermeiden, -- Received... usw. einzutippen.
Das angeh\xE4ngte .* passt auf alle Zeichen bis zum Zeilenende (das ist aber soviel ich wei\xDF \xFCberfl\xFCssig).
Die From-Zeile bedeutet: ersetze "Path:" und alle Zeichen bis zum n\xE4chsten Zwischenraum (whitespace) durch To.
To enth\xE4lt lediglich ".", weshalb der gesamte Pfad durch einen einzelnen Punkt ersetzt wird.
Die Nachricht hat nun folgendes Aussehen:
Beachtenswert ist der neue "." hinter NickServ.
Damit ist die Nachricht bereits wesentlich klarer, aber KILLs von NickServ sind nicht so wichtig, also wollen wir die Nachricht an das Spezialfenster !discard weiterleiten.
Die Match-Regel sucht nach der KILL-Nachricht und \xFCberpr\xFCft, ob sie von NichServ ist.
Man beachte die Zeichen \( und\).
Beide Klammern haben in regul\xE4ren Ausdr\xFCcken eine besondere Bedeutung, daher muss jeweils\ vorangestellt werden.
Das ist \xE4hnlich zum vorletzten Beispiel.
Jetzt sind die Kills von NickServ herausgefiltert, aber das Lesen der Nachricht ist immer noch nicht einfach.
Daher soll die Nachricht jetzt umorganisiert werden:
Wir k\xF6nnen nicht ^ verwenden, da wir gerade <wenster> an die Nachricht angeh\xE4ngt haben.
Die From-Zeile wird interessant.
Der Abschnitt "for (.*?)" sucht nach dem Wort "for" gefolgt von weiteren Zeichen. .*? sucht nach 0 oder mehr Zeichen mit Ausnahme eines Zeilenumbruches.
Diese Suche stoppt, wenn die erste Bedingung f\xFCr einen Abbruch gegeben ist.
Mit anderen Worten passt die Zeichenkette auf alles bis zum n\xE4chsten Leerzeichen.
Die umgebenden () sorgen f\xFCr das Speichern des gefundenen Textes.
Jedes Auftreten von () speichert die gefundene Zeichenkette in $#, wobei # bei 1 f\xFCr die erste Teilzeichenkette beginnt usw..
Im Beispiel wird $1 der Spitzname/Benutzername des "gekillten"Teilnehmers zugeordnet. $2 enth\xE4lt den Namen der killenden Person.
Zwischen () haben wir den Grund. (und \( sind ein wenig verwirrend.
Man muss bedenken, dass \( f\xFCr das Zeichen '(' steht.
Wie man das Leben farbiger gestaltet.
Im n\xE4chsten Beispiel wird gezeigt, wie man ein wenig Farbe in KSirc bringen kann.
Weitere Informationen zu Farben findet man im Abschnitt Farben.
Im folgenden wird ein Filter vorgestellt, der den Spitznamen <NICK> in jeder Zeile hervorhebt:
Nimmt den Spitznamen und f\xFCgt die Farbe #4 zwischen <> hinzu. c l\xF6scht die Farbe wieder.
Tastenk\xFCrzel
Tastenk\xFCrzel
Mitwirkende und Lizenz
KSirc Copyright 1997-2001, die KSirc Entwickler.
Teile der Dokumentation Copyright 1997, Andrew Stanley Jones
Dokumentation aktualisiert f\xFCr KDE 2.2 von Philip Rodrigues phil.rod@ntlworld.com
Deutsche \xDCbersetzung Frank Sch\xFCtte F.Schuette@t-online.de
Installation
Wie bekommt man KSirc
KSirc ist Teil des KDE -Projekts http://www.kde.org /.
KSirc k\xF6nnen Sie im kdenetwork-Paket finden auf ftp://ftp.kde.org/pub/kde /, der Haupt- FTP -Site des KDE -Projekts.
Kompilation und Installation
Um KSirc auf Ihrem System zu kompilieren und zu installieren, schreiben Sie das Folgende in das Hauptverzeichnis in der KSirc -Distribution:
Da KSirc autoconf und automake benutzt, sollte es dabei keine Schwierigkeiten geben.
Sollten dennoch Probleme auftauchen, wenden Sie sich bitte an die KDE -Mailinglisten.