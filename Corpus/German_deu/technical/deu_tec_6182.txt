# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	2013
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	GNOME
# source:	https://object.pouta.csc.fi/OPUS-GNOME/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/GNOME.php
# copyright_long:	http://opus.nlpl.eu/GNOME.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Mario Blättermann <mariobl\@freenet\.de>, 2010
Christian Kirbach <Christian\.Kirbach\@googlemail\.com>, 2010, 2011.
Vivien Malerba
Hilfe zum Gda-Browser

Mehrere Verbindungen zu Datenbanken können auf einmal geöffnet werden, wodurch dem Benutzer die Arbeit mit mehreren Datenbanken gleichzeitig ermöglicht wird. Es ist ebenfalls möglich, Befehle auf verschiedenen Datenbanken gleichzeitig auszuführen.
Da
Präsentation
Perspektiven
Verbindungsverwaltung
translated
translated
translated
translated
1
Aktionen
Aktionen sind Teile von SQL-Code, der von Variablen abhängt und aus dem Kontextmanü eines jeden Datensatzes im Raster ausgeführt werden kann.
Wenn es zum Beispiel eine Tabelle »products« gibt, die irgendwelche Produkte auflistet, und eine Tabelle »comments« gibt, welche alle Benutzerkommentare zu einem Produkt enthält (vorausgesetzt, dass die Tabelle »comments« einen Fremdschlüssel mit Bezug auf die Tabelle »products« enthält).
Es kann eine Aktion definiert werden, um alle Einträge in der Tabelle »comments« anzuzeigen, vorausgesetzt dass der Schlüssel ein Produkt definiert. Sobald dann ein Produkt in der Ergebnismenge aufgeführt wird, erlaubt das Kontextmenü diese Aktion auszuführen und damit alle Kommentare des gewählten Produkts anzuzeigen. Diese Situation ist in der folgenden Abbildung gezeigt.
Der erste Schritt besteht in der Definition einer Aktion, welche genau genommen ein Favorit in der
Aktion - eine Aktion definieren
Definieren Sie die Aktion zur Auflistung der Kommentare zu einem Produkt in der Abfrageausführungs-Perspektive
Aktion - eine Liste von Produkten anzeigen
Wählen Sie in der Abfrageausführungs-Perspektive alle Produkte. Wie Sie sehen, gibt es zwei definierte Aktionen: »Kommentare für Produkt hinzufügen« und »Kommentare für Produkte auflisten«.
Nun wird das Kontextmenü eingeblendet:
Aktion - Kontextmenü
Öffnen Sie das Kontextmenü und wählen Sie
Nach der Bestätigung der Ausführungsparameter der Aktion wird das Ergebnis angezeigt:
Aktion - ausgeführt
Die Aktion ist nun ausgeführt
translated
translated
translated
translated
Die Datenverwaltungs-Perspektive
Verwenden Sie die Datenmanager-Perspektive, um durch die Daten in der Datenbank zu navigieren. Wechseln Sie zu dieser Perspektive mit Hilfe des Menüs
Der Arbeitsablauf in dieser Perspektive baut auf der Definition einer oder mehrerer
Die Perspektive besteht aus zwei horizontalen Bereichen: dem linken Bereich, in dem bevorzugte Datenquellendefinitionen enthalten sind, sowie dem rechten Bereich, welcher den Aktionsbereich bildet. In diesem Aktionsbereich werden die Datenquellen ausgeführt und die Ergebnisse in einer tabellarischen Ansicht angezeigt.
Datenverwaltungs-Perspektive
Die Datenverwaltungs-Perspektive mit zwei Datenquellen
Im Bild oben gibt es zwei Datenquellen: eine für die Tabelle »customers« und eine für »orders«. Die letztgenannte Quelle listet die Bestellungen für einen Kunden (customer) auf und hängt somit von der ersten Quelle ab, da es einen Fremdschlüssel aus »orders« gibt, welcher »customers« referenziert. Die beiden Datenquellen wurden ausgeführt und das Ergebnis in zwei tabellarischen Ansichten nebeneinander dargestellt.
Da die Datenquelle »orders« von der Datenquelle »customers« abhängt, befindet sich deren korrespondierende Ansicht rechts von der Datenquelle »customers«. Wenn sich die Zeilenauswahl in der »customers«-Ansicht ändert, wird der gesamte Inhalt der »orders«-Ansicht ebenfalls aktualisiert.
Definieren von Datenquellen
Die einfachste Datenquelle ist diejenige, die alle Daten aus einer Tabelle repräsentiert und bei Ausführung als einzelne tabellarische Ansicht angezeigt wird. Dies ist identisch mit Ausführung der
Die folgende Abbildung zeigt den Bearbeitungsmodus für Datenquellen. Wechseln sie in den Bearbeitungsmodus mit dem Werkzeugleistenknopf
Datenquellen können per
Bearbeiten der Datenquellen
Bearbeiten von Datenquellen in der Datenmanager-Perspektive aus der XML-Syntax
Datenquellen in der Datenverwaltungs-Perspektive mittels der voreingestellten Oberfläche zu bearbeiten: Zwei Datenquellen sind definiert, welche den Inhalt der Tabellen »customers« und »orders« auflisten. Die Anordnung ist die gleiche wie in der Abbildung oben mit der XML-Syntax.
Folgende Befehle sind über die Befehlsknöpfe erreichbar:






Ausführen definierter Datenquellen
Um eine definierte Reihe von Datenquellen auszuführen, wechseln Sie mit dem Werkzeugleistenknopf
Das Layout der tabellarischen Ansicht für jede Datenquelle wird automatisch nach der folgenden Regel in Spalten erzeugt: Falls eine Datenquelle B von einer Datenquelle A abhängt, dann wird deren tabellarische Ansicht rechts von der Ansicht für A angezeigt.
Wenn Sie die ausgewählte Zeile einer Tabellenansicht der Datenquelle A ändern, werden die tabellarischen Ansichten aller von der Datenquelle A abhängenden Datenquellen aktualisiert.
Die XML-Syntax der Datenverwaltung
Der Wurzelknoten des XML-Baums muss
»id« zum Angeben einer Kennung in Form einer Datenquellen-Zeichenkette. Dies wird benutzt, wenn Datenquellen miteinander verknüpft werden sollen.
»title« zum Angeben eines Titels.
Es ist natürlich möglich, sowohl die
Exportierte Variablen
Jede Datenquelle exportiert einige Variablen, welche von anderen Datenquellen wiederverwendet werden können, um eine Abhängigkeit zu erzeugen. Wenn die Datenquellen ausgeführt werden, wird der Inhalt der exportierten Variablen abhängig von der aktuell ausgewählten Zeile in der sich ergebenden Tabellenansicht zurückgesetzt. Falls keine Zeile ausgewählt ist, dann wird die Variable nicht gesetzt.
Jede von einer Variable abhängige Datenquelle wird erneut ausgeführt, wenn sich die betreffende Variable ändert. Im Falle einer nicht gesetzten Variable ergibt die Ausführung der Datenquelle einen leeren Datensatz.
Die
Verwenden Sie die
Beispielsweise definiert die vorige XML-Spezifikation zwei Datenquellen:
Die Datenquelle
Die Datenquelle
Die Ausführung dieser Datenquellenspezifikation erstellt zwei Tabellenansichten: Eine, in der Sie einen Kunden auswählen können, und eine weitere, welche alle Attribute des ausgewählten Kunden anzeigt.
Jede durch eine

&lt;data source IDgt;@lt;column namegt;, falls die Spalte des Datensatzes eine Tabellenspalte ist.
Die
Verwenden Sie die
benötigt das »name«-Attribut, welches den Namen der Tabelle repräsentiert.
kann ein »id«-Attribut enthalten, welches zur Kennung der Datenquelle korrespondiert. Falls nicht vorhanden, wird eine Kennung automatisch zugewiesen.
kann einen
Die
benötigt ein »foreign_key_table«-Attribut, welches den Namen der Tabelle definiert, zu welcher Fremdschlüssel referenziert sind, um die Abhängigkeit zu bezeichnen
kann ein »id«-Attribut enthalten, korrespondierend zur Kennung der referenzierten Datenquelle. Falls nicht angegeben, kann die Abhängigkeit ungültig sein, falls es keine Datenquelle gibt, deren Kennung dem »foreign_key_table«-Attribut entspricht.
kann eine oder mehrere
die
die
In diesem Beispiel ist Folgendes zu beachten:
Sie müssen die beteiligten Felder im Fremdschlüssel nicht angeben, der die Tabellen
Den Datenquellenkennungen werden die Namen der ausgewählten Tabellen zugeordnet, weil kein »id«-Attribut für die
Jede durch eine
&lt;Datenquellenkennunggt;@lt;Spaltennamegt;
Der Datenquellen-Editor der Datenverwaltung
Muss noch geschrieben werden.
translated
translated
Deklarierte Fremdschlüssel
Alle eingeschränkten fremden Schlüssel (d.h. die auf eine oder mehrere Spalten einer anderen Tabelle eingeschränkten Inhalte einer oder mehrerer Spalten einer Tabelle) werden in der
Jedoch hat manchmal der Designer einer Datenbank eingeschränkte fremde Schlüssel vergessen oder wollte diese nicht einsetzen, so dass es möglich ist, »fremde Schlüssel zu deklarieren«, die nur eine Deklaration im Werkzeug sind, aber tatsächlich nicht in der Datenbank definiert sind.
Deklarierte Fremdschlüssel in Diagrammen
In Diagrammen werden deklarierte Fremdschlüssel durch eine gestrichelte Linie an Stelle einer durchgezogenen Linie für tatsächliche Fremdschlüssel dargestellt
Hinweise:
das Triple (Name des Fremdschlüssels, Tabelle, Bezugstabelle) identifiziert eindeutig einen deklarierten Fremdschlüssel. Eine Deklaration eines neuen Fremdschlüssels mit dem selben Triple löscht damit alle vorgerhenden Deklarationen.
Wenn die selbe Beschränkung tatsächlich durch einen echten Fremdschlüssel und durch einen deklarierten repräsentiert wird, so überdeckt die Definition des echten Fremdschlüssels die des deklarierten.
Deklarierte Fremdschlüssel haben keine Richtlinie, welche Aktionen im Falle von UPDATE oder DELETE auszuführen sind. Die gemeldete Richtlinie wird immer »nicht erzwungen« sein.
Deklarieren eines neuen Fremdschlüssels
Wenn in der
Eine andere Möglichkeit zur Deklaration von Fremdschlüsseln ist die Verwendung eines Kontextmenüs einer Tabelle in einem Diagramm und der Auswahl der Option
In jedem Fall müssen beim Deklarieren eines neuen Fremdschlüssels folgende Informationen angegeben werden:
Ein Fremdschlüsselname
Die Bezugstabelle
Spalten und referenzierte Spalten für jede in den Fremdschlüssel einbezogene Spalte
Informationen zum Deklarieren eines neuen Fremdschlüssels
Einblenddialog zur Deklaration eines neuen Fremdschlüssels. Die Bezugstabelle ist in diesem Fall »warehouses«, und die einbezogenen Spalten sind »country« und »city«.
Einen deklarierten Fremdschlüssel entfernen
Ein deklarierter Fremdschlüssel kann durch Klicken auf den Verweis
Eine weitere Möglichkeit, einen deklarierten Fremdschlüssel zu entfernen, besteht darin, in einer
translated
Diagramme
Diagramme werden über den
Diagramm
Ein Diagramm, das einige Tabellen und deren Bezüge darstellt, die durch eingeschränkte fremde Schlüssel repräsentiert werden (Lesen Sie auch
Die Objekte können innerhalb der Darstellungsfläche bewegt werden. Beachten Sie hierbei, dass das Diagramm auf der Fläche zentriert wird, solange es vollständig hineinpasst. Weitere Anpassungen sind möglich:
Ändern des Vergrößerungsmaßstabes mit Hilfe des Mausrades oder über das Kontextmenü, welches Sie mit einem Klick mit der rechten Maustaste auf die Darstellungsfläche erreichen. Ein vordefinierter Vergrößerungsmaßstab zum korrekten Einpassen des Diagramms in die Darstellungsfläche ist ebenfalls im Kontextmenü vorhanden.
Ändern der Abstände der einzelnen Objekte zueinander mit Hilfe des Mausrades, wobei die
Lineare oder radiale Anordnung von Objekten mit Hilfe des Kontextmenüs
Drucken mit Hilfe des Kontextmenüs
Exportieren als PNG-Bild oder SVG-Grafik mit Hilfe des Kontextmenüs
Hinzufügen von Objekten mit Hilfe des Kontextmenüs
Entfernen von Objekten mit Hilfe des Kontextmenüs des jeweiligen Objekts
Funktionsmerkmale
Die gegenwärtigen Funktionsmerkmale von
Allgemeiner Aufbau der Benutzeroberfläche
Unabhängigkeit: Jede Verbindung wird als eigener Thread geführt, was bedeutet, dass eine bestimmte Verbindung die Anwendung nicht blockieren kann.
Mehrere Fenster können für eine einzelne Verbindung geöffnet sein.
Ein Vollbildmodus ist zur vollständigen Nutzung des verfügbaren Platzes auf dem Bildschirm verfügbar.
Verbindungsverwaltung
Mehrere Verbindungen können gleichzeitig geöffnet werden.
Verbindungsbündelung: es ist möglich, mehrere Verbindungen in eine zu
Aktivitäten
Die Aktivitäten sind nach Thema um den Begriff
Analyse der Datenbank-Schemata (Tabellen, Beziehungen usw.). Lesen Sie bitte dazu auch über die
Die
Die
für
Lesen Sie auch den Abschnitt
Offenheit
CSV- und andere Textdateien können importiert und in Verbindung mit
das allgemeine Framework ist offen genug, um neue integrierte Funktionsmerkmale hinzufügen zu können. Genau genommen kann jeder neue
translated
Allgemeiner Aufbau der Benutzeroberfläche
Der
Ein Verbindungsfenster
Für die Verbindung »c1« geöffnetes Fenster (und die Schema-Browser-Perspektive)
In jedem Fenster sind einige
Die
Die
Die
Die aktuell angezeigte Perspektive kann individuell für jedes Fenster angepasst werden. Alle Fenster haben ein aus Reitern gebildeten Aktionsbereich, dessen Reiter von einem in ein anderes Fenster verschoben werden können, sofern Ausgangs- und Zielfenster zur gleichen Datenbankverbindung gehören und auch die gleiche Perspektive anzeigen. Ziehen Sie dazu einfach mit der Maus einen Reiter in ein anderes Fenster, indem Sie die Reiterbeschriftung als Anfasser benutzen.
Als besondere Ausnahme erteilen Ihnen die Urheberrechtsinhaber die Genehmigung, den in diesem Dokument enthaltenen Beispielcode ohne Einschränkung unter den Bedingungen Ihrer Wahl zu verbreiten.
translated
Die Abfrageausführungs-Perspektive
Verwenden Sie die Abfrageperspektive zur Ausführung von SQL-Anweisungen. Um in diese Perspektive zu wechseln, verwenden Sie das Menü
Abfrageausführungs-Perspektive
Die Abfrageausführungs-Perspektive mit einer ausgeführten SELECT-Anweisung
Die Perspektive ist horizontal in zwei Bereiche unterteilt: der linke Bereich für benutzerdefinierte bevorzugte Anweisungen und der rechte Bereich als Bedienfläche.
In der obigen Abbildung sind zwei Favoriten zu sehen: Eine SELECT-Anweisung (»Kunden auflisten« genannt) und eine INSERT-Anweisung (»Neuer Kunde …« genannt). Die INSERT-Anweisung benötigt den Parameter »Name«, wohingegen die SELECT-Anweisung zur Ausführung keinen Parameter erfordert.
Die unterschiedlichen Symbole zeigen hier, dass der INSERT-Favorit auch als
Der linke Teil der Perspektive listet die bevorzugten Anweisungen auf, die durch den Benutzer definiert wurden. Die Aktivierung eines dieser Favoriten durch Doppelklick setzt den Inhalt des SQL-Textbereichs auf die SQL der aktuellen Anweisung.
Die rechte Leiste wird aus null oder mehr Reitern gebildet, in denen der SQL-Code eingegeben und ausgeführt wird. In jedem der Reiter gibt es:
Einen SQL-Bereich links oben
Befehlsknöpfe im oberen rechten Bereich
Die Ausführungschronik im linken unteren Bereich
Die Ausführungsergebnisse im rechten unteren Bereich
SQL-Bereich
Der SQL-Bereich ist ein SQL-Editor. Dabei ist jeder von der Datenbank akzeptierte SQL-Code möglich, mit Ausnahme von
Folgende Tastenkombinationen stehen im SQL-Editor zur Verfügung:




Befehlsknöpfe





Ausführungschronik
Die Ausführungschronik enthält eine Liste der bereits ausgeführten Anweisungen, geordnet nach Ausführungsdatum, mit einem Hinweis, wann die Anweisung ausgeführt wurde (11 Minuten im Bild oben). Durch die Auswahl eines Chronikeintrags wird das zugehörige Ergebnis in den Ausführungsergebnissen angezeigt.
Der Knopf
Beachten Sie, dass jeder angegebene Chronikeintrag auch einzeln mit Hilfe der
Ergebnisse der Ausführung
Der Bildbereich der Ausführungsergebnisse zeigt die Ergebnisse des aktuell ausgewählten Eintrags der Ausführungschronik als eine Tabelle mit SELECT-Anweisungen an, mit angegebenen Informationen anderer Anweisungstypen oder die Fehlermeldung der Ausführung, falls diese fehlgeschlagen ist.
translated
Die Perspektive des Schema-Browsers
Mit Hilfe der Perspektive des Schema-Browsers können Sie die Organisation (das Schema) der Datenbank besser verstehen. Um in diese Perspektive zu wechseln, verwenden Sie das Menü
Die Perspektive ist horizontal in zwei Bereiche unterteilt: der linke Bereich für die benutzerdefinierten Favoriten und der rechte Bereich als Bedienfläche.
Standardansicht der Schema-Browser-Perspektive
Die voreingestellte Schema-Browser-Perspektive
Der linke Bereich der Perspektive listet die bevorzugten Objekte oder Diagramme der Datenbank auf. Durch Doppelklick auf einen der Favoriten werden dessen Eigenschaften im rechten Bereich geöffnet.
Die rechte Leiste besteht aus verschiedenen Reitertypen:
Einem Reiter, der alle Tabellen und Ansichten der Datenbank in einer
Null oder mehr Reitern, die die Eigenschaften einer Tabelle oder Ansicht darstellen: Die Liste der Spalten, die Liste der Beschränkungen (Primär- oder Fremdschlüssel), ein
Null oder mehr
Karteireiter mit Informationen zu einer Tabelle
Ein Beispiel der für jede Tabelle angezeigten Datensätze. Beachten Sie den Unterschied zwischen fremden Schlüsseln, die in der Datenbank implementiert sind, und
translated
translated
translated
Transaktionen
Transaktionen können verbindungsbezogen gestartet, eingespielt oder zurückgenommen werden:
Verwenden Sie den
Verwenden Sie den
Verwenden Sie den
Eine Transaktion kann automatisch durch Ausführen einer SELECT-Anweisung gestartet werden, wobei binäre Objekte beteiligt sind (BLOBs). Die Transaktion kann dabei gesperrt werden und der Ergebnisdatensatz wird im Speicher vorgehalten. Um Daten in einer
translated
Einfügen von Daten in eine Tabelle
Wenn in der
Ein Einblendfenster ähnlich Folgendem wird geöffnet:
Einblendfenster zum Einfügen von Daten in eine Tabelle
Einblendfenster zum Einfügen von Daten in eine Tabelle
Erwähnenswert wäre hier:
Es gibt für jede Spalte der Tabelle nur einen Dateneintrag, mit Ausnahme von mehrfachen Fremdschlüsselfeldern (in der Abbildung nicht angezeigt), für die nur ein einzelnes Auswahlfeld angezeigt wird;
Für jeden Dateneintrag gibt es einen kleinen Knopf rechts davon, welcher Informationen zum korrespondierenden Dateneintrag anzeigt. Dieser Knopf ermöglicht Ihnen das Zurücksetzen des Dateneintrags auf den Wert vor der Änderung, auf den Wert Null oder auf einen Standardwert. Die Farbe des Knopfes zeigt dabei Folgendes an:
Rot: Der Wert des Dateneintrages ist ungültig
Blau: Der aktuelle Wert des Dateneintrages ist ungenutzt und der Standardwert der Spalte wird stattdessen angenommen (beispielsweise sinnvoll für Spalten mit automatisch hochgezählten Werten)
Grün: Der aktuelle Wert des Dateneintrages ist Null
Gleiche Farbe wie die umgebende Programmoberfläche: Keiner der oben beschriebenen Zustände
Spalten, die Fremdschlüssel für andere Tabellen bezeichnen, werden als ausklappbares Auswahlfeld dargestellt, wobei Sie nur aus den Werten der referenzierten Tabelle wählen können. Zum Aktualisieren der aufgelisteten Werte sollten Sie den Einblenddialog schließen und erneut öffnen.
Variablen im SQL-Code
Variablen (gelegentlich als
Variablen sind in jeglichem SQL-Code verwendbar und werden durch folgende Syntax definiert:
Der
Der

Beispiele:
##name::string
##id::int::NULL
##sales@3::date::NULL
##customers@id::int
translated
translated
translated
translated
translated
Verbindungsbündelung (d.h. virtuelle Verbindungen)
Verbindungsbündelung ist ein Funktionsmerkmal, das es ermöglicht, verschiedene Verbindungen und/oder importierte Datensätze in eine einzige Verbindung »zu bündeln«, die beinahe wie eine gewöhnliche Verbindung genutzt werden kann.
Dieses Funktionsmerkmal ist nützlich, wenn ein SQL-Befehl ausgeführt werden soll (zum Beispiel zum Extrahieren von Daten) und dabei Daten in verschiedenen Datenbanken berücksichtigt werden müssen. Ohne dieses Merkmal müssen für den gleichen Vorgang die erforderlichen Daten aus jeder Datenbank exportiert werden und dann damit weiter gearbeitet werden.
Verwenden Sie zum Erstellen einer neuen »gebündelten« (oder virtuellen) Verbindung das Menü
Dialog zum Erstellen einer neuen virtuellen Verbindung
In diesem Fall wird die aktuelle Verbindung c1 in dem Schema »c1« gebündelt
Verwenden Sie den Knopf
eine Verbindung so zu bündeln, dass sie alle Tabellen dieser Verbindung enthält: Verwenden Sie die Option
einen Datensatz zum Importieren von Daten aus einer Textdatei als eine Tabelle zu bündeln: Verwenden Sie die Option
Anwendungsfälle für virtuelle Verbindungen
Zur Veranschaulichung des Einsatzes von virtuellen Verbindungen soll ein einfacher Anwendungsfall betrachtet werden. Angenommen, es gibt eine Datenbank mit der Liste der Server, für die Sie verantwortlich sind. Zur Vereinfachung soll angenommen werden, dass die Datenbank eine Tabelle namens »server« mit den folgenden Definitionen enthält:
CREATE TABLE servers (name string, location string);
Nehmen wir an, diese Tabelle enthält die folgenden Informationen:
&gt; select * from servers ;
name | location
---------+---------
moon | room1 
darkstar | room2 
flag | room3 
alf | room2 
vador | room3 
(5 rows)
&gt;
Angenommen, es gäbe ein Programm eines Drittanbieters, welches eine Liste aller Server ausgibt, die ein potenzielles Problem haben. Die Ausgabe erfolgt als CSV-Datei mit einer Spalte für den Server-Namen, einer für den Fehlercode und einer Spalte mit der Problembeschreibung. Die CSV-Datei soll folgenden Inhalt haben:
$ cat problems.csv 
Server name,Error code,Error description
darkstar,0,file system full
vador,1,outdated AV signature
darkstar,2,overloaded
flag,0,file system full
$
Sie möchten nun alle Server sehen, die ein Problem mittels Fehlercode 0 melden und den Standort erfahren. Die Lösung besteht darin, die Verbindung zur Datenbank zu öffnen (zum Beispiel mit dem Schema »c1«), die CSV-Datei zu importieren (zum Beispiel in die Tabelle »Reiter«) und den folgenden SQL-Befehl auszuführen:
SELECT 
 "server name", 
 location
FROM tab
 INNER JOIN c1.servers AS s ON (tab."server name" = s.name)
WHERE "Error code"=0
womit das gesuchte Ergebnis ermittelt wird, wie in der folgenden Abbildung zu sehen ist:
Erwartete Ergebnisse von der virtuellen Verbindung
Importieren eines Datensatzes in eine virtuelle Verbindung
Um einen Datensatz in eine Tabelle mittels einer virtuellen Verbindung (z.B. die Datei »problems.csv« des Anwendungsfalls) zu importieren, verwenden Sie die Option
Importieren eines Datensatzes in eine virtuelle Verbindung - 1.
Wählen Sie dort den Knopf
Importieren eines Datensatzes in eine virtuelle Verbindung - 2
Die resultierende virtuelle Verbindung, hier als »c2« identifiziert, wird in ihrem eigenen neuen Fenster geöffnet:
Neu geöffnete virtuelle Verbindung
Verwendung von SQL mit virtuellen Verbindungen
Sie können das von
Lesen Sie auch den Abschnitt
translated
translated
translated
Die LDAP-Browser-Perspektive
Mit Hilfe der LDAP-Browser-Perspektive können Sie die im LDAP-Verzeichnis hinterlegten Daten einsehen und manipulieren. Um in diese Perspektive zu wechseln, verwenden Sie das Menü
Die Perspektive ist horizontal in zwei Bereiche unterteilt: der linke Bereich für benutzerdefinierte bevorzugte Anweisungen (zum Vorhalten von Bezügen auf bestimmte LDAP-Einträge oder -Klassen) und der rechte Bereich als Bedienfläche.
Reiter für LDAP-Browsereinträge
Reiter für LDAP-Einträge
Der linke Bereich der Perspektive listet die bevorzugten LDAP-Einträge oder Klassen auf. Durch Doppelklick auf einen der Favoriten werden dessen Eigenschaften im rechten Bereich geöffnet. Beachten Sie, dass die LDAP-Einträge hierbei stets vor den LDAP-Klassen angezeigt werden.
Reiter zum Ermitteln der LDAP-DIT (Directory Information Tree): Wenn ein Eintrag im Baum ausgewählt wird, werden dessen Attribute angezeigt (nur die Attribute mit Wert werden angezeigt, alle anderen verborgen). Der DN (Distinguished Name) des Eintrags wird immer zuerst angezeigt. Beachten Sie auch, dass die Unterelemente jedes Eintrags nur bei Bedarf geholt werden, um unnötige Anfragen an den LDAP-Server zu vermeiden.
Reiter zum Erforschen der LDAP-Klassen. Schauen Sie dazu auch die Abbildung unten an. Alle Informationen einer ausgewählten Klasse werden angezeigt (Beschreibung, OID, Typ …)
Reiter zum Suchen in der LDAP. Sehen Sie sich dazu die Abbildung unten an. Eine Definition für eine LDAP-Suche kann als eine virtuelle Tabelle gespeichert werden. Lesen Sie dazu auch
Klassenreiter des LDAP-Browsers
Reiter für LDAP-Klassen
Suchreiter des LDAP-Browsers
LDAP-Suchreiter
(Durch blauen unterstrichenen Text markierte) Verknüpfungen in diesen Reitern öffnen einen neuen Reiter oder verwenden den Reiter neben dem aktuellen, um die Informationen über die ausgewählte Verknüpfung anzuzeigen. Zum Beispiel zeigt die Abbildung oben einen Reiter mit LDAP-Einträgen. Ein Klick auf »inetOrgPerson« öffnet einen neuen Reiter »LDAP-Klassen« und zeigt Informationen über diese Klasse an.
translated
LDAP-Verbindungen
LDAP-Verbindungen unterscheiden sich von anderen Verbindungen dadurch, dass LDAP-Datenbanken Daten als hierarchische Struktur in einem DIT (Directory Information Tree) speichern. Andere Datenbanken sind relationale Datenbanken, die mit Hilfe der Anwendung
Aus diesem Grund werden LDAP-Verbindungen gesondert behandelt, und zwar als normale Verbindungen mit Tabellen (lesen Sie dazu Tabellen-Abbildung weiter unten) und einer eigenen
Beachten Sie, dass LDAP-Verbindungen nicht verfügbar sein könnten, wenn entweder der LDAP-Datenbanktreiber nicht installiert ist oder die LDAP-Unterstützung beim Kompilieren deaktiviert wurde.
LDAP-Tabellenzuordnung
In einer LDAP-Verbindung ist es möglich, virtuelle Tabellen zu deklarieren, die einer LDAP-Suche zugeordnet werden können. Diese virtuellen Tabellen können dann wie jede andere Tabelle verwendet werden. Die erste Spalte jeder virtuellen LDAP-Tabelle enthält immer den DN (Distinguished Name = Eindeutiger Name) des durch die Zeile dargestellten Eintrags. Die anderen Spalten ergeben sich aus der Tabellendefinition.
Eine virtuelle LDAP-Tabelle wird über die folgenden Attribute definiert:
einen Tabellennamen
die Basis-DN für die Suche: der LDAP-Eintrag, bei welchem die Suche beginnt. Falls nicht angegeben, wird der Eintrag der obersten Ebene der verwendeten LDAP-Verbindung angenommen
den Suchfilter: ein gültiger LDAP-Suchfilter. Falls keiner angegeben ist, ist der vorgegebene Suchfilter »(objectClass=*)«, der jeden LDAP-Eintrag berücksichtigt
die Attribute: die zu holenden Attribute, wobei jedes Attribut einer Tabellenspalte zugeordnet wird. Die Attribute müssen in einer durch Kommata getrennten Liste angegeben werden, wobei jedes Attribut optional einem Typ und einer Multiwert-Option zugeordnet werden kann (siehe unten).
der Bereich: der Suchbereich, »subtree« zum Durchsuchen der Basis-DN und der gesamten nachgeordneten Hierarchie, »onlevel«, wenn ausschließlich die Basis-DN und deren direkte Untereinträge berücksichtigt werden sollen, oder »base«, wenn nur die Basis-DN durchsucht werden soll
LDAP-Tabelleneigenschaften
Im Bild oben
Attribute zur Spaltenzuordnung
Wie im vorangegangenen Abschnitt bereits erwähnt, wird jedes Attribut einer Spalte zugeordnet. Der Spaltentyp wird dabei normalerweise automatisch bestimmt (Zeichenkette, Zahl usw.), kann aber durch Anhängen von »::lt;typegt;« an den Attributnamen auf einen bestimmten Typ erzwungen werden.
Weil auch einige Attribute mehrere Werte besitzen können, behandelt die Tabellenkonstruktion diese Attribute auf verschiedene Arten, abhängig von den Optionen jedes Attributs. Optionen können durch Anhängen von »::lt;Optiongt;« an den Attributnamen angegeben werden. Gültige Optionen sind:
»NULL« oder »0«: Ein NULL-Wert wird für das Attribut zurück gegeben
»CSV«: Eine durch Kommata getrennte Liste mit allen Werten eines Attributs wird zurück gegeben. Dies funktioniert nur für Attributtypen mit Zeichenketten.
»MULT« oder »*«: Eine Zeile wird für jeden der Attributwerte zurück gegeben, womit effektiv die Anzahl der zurückgegebenen Zeilen multipliziert wird
»1«: Nur der erste Attributwert wird verwendet, alle anderen werden ignoriert
»CONCAT«: Die Attributwerte werden aneinander angehängt (mit einem Zeilenumbruch-Zeichen zwischen jedem Wert)
»ERROR«: Ein Fehlerwert wird zurück gegeben (dies ist das Standard-Verhalten)
Verwenden von SQL mit LDAP-Verbindungen
Sie können das von
Somit ist es absolut sicher, zum Beispiel eine Tabelle zum Speichern irgendwelcher LDAP-Daten zu erstellen, welche längere Zeit zum Holen erfordern, aber nach dem Schließen der LDAP-Verbindung werden die Tabelle und die enthaltenen Daten verloren gehen.
SQL-Erweiterung für die Handhabung von LDAP-Tabellen
LDAP-Tabellen könne mit Hilfe eines erweiterten Satzes von SQL-Befehlen erstellt werden:




Zum Beispiel sollte der folgende SQL-Code
CREATE LDAP TABLE users FILTER='(objectClass=inetOrgPerson)'
 ATTRIBUTES='cn,sn,givenName,seeAlso::*' SCOPE='subtree';
 SELECT * FROM users WHERE cn like '%john%';
 ALTER LDAP TABLE users FILTER='(amp;(objectClass=inetOrgPerson)(cn=*john*))';
 SELECT * FROM users;
 DROP LDAP TABLE users;
zweimal das gleiche Ergebnis liefern, d.h. alle LDAP-Einträge der Klasse »inetOrgPerson« aufführen, die im CommonName (cn) die Zeichenkette »john« enthalten.
Diese Arbeit ist lizenziert unter einer
malerba@gnome-db.org
