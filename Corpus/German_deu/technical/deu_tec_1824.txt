# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Exit-Anweisung [Laufzeit]
/text/sbasic/shared/03090412.xhp
Sun Microsystems, Inc.
converted from old format - fpe
Exit-Anweisung
Exit-Anweisung [Laufzeit]
Do...Loop
oder
For...Next
, eine Funktion oder eine Subroutine.
Syntax:
siehe Parameter
Parameter:
Exit Do
Do...Loop
-Anweisung zulässig, um die Schleife zu verlassen.
Die Programmausführung wird bei der Anweisung fortgesetzt, die auf die Loop-Anweisung folgt.
Bei verschachtelten
Do...Loop
-Anweisungen wird die Kontrolle an die Schleife der nächsthöheren Ebene übergeben.
Exit For
For...Next
-Schleife zulässig, um die Schleife zu verlassen.
Die Programmausführung wird bei der Anweisung fortgesetzt, die auf die
Next
-Anweisung folgt.
Bei verschachtelten Anweisungen wird die Kontrolle an die Schleife der nächsthöheren Ebene übergeben.
Exit Function
Function
-Prozedur unverzüglich.
Die Programmausführung wird bei der Anweisung fortgesetzt, die auf den
Function
-Aufruf folgt.
Exit Sub
Sub
-Aufruf folgt.
Eine Exit-Anweisung definiert nicht das Ende einer Struktur und ist nicht mit der End-Anweisung zu verwechseln.
Beispiel:
Sub ExampleExit
Dim sReturn As String
Dim sListArray(10) as String
Dim siStep as Single
For siStep = 0 to 10 REM Array mit Testdaten füllen
sListArray(siStep) = chr(siStep + 65)
msgbox sListArray(siStep)
next siStep
sReturn = LinSearch(sListArray(), &quot; B &quot; )
Print sReturn
end sub
Function LinSearch( sList(), sItem As String ) as integer
dim iCount as Integer
REM LinSearch durchsucht ein TextArray:sList() nach einem Texteintrag:
REM Rückgabe ist der Index des Eintrags oder 0 ( Null)
for iCount=1 to Ubound( sList() )
if sList( iCount ) = sItem then
exit for REM sItem gefunden
end if
next iCount
if iCount = Ubound( sList() ) then iCount = 0
LinSearch = iCount
end function