# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	2014
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	GNOME
# source:	https://object.pouta.csc.fi/OPUS-GNOME/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/GNOME.php
# copyright_long:	http://opus.nlpl.eu/GNOME.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Nemiver ist eine fortlaufende Bemühung, eine eigenständige grafische Fehlerdiagnose zu erstellen, die sich gut in die GNOME-Arbeitsumgebung integriert. Es enthält derzeit ein Backend, das die bekannte GNU-Fehlerdiagnose gdb zum Diagnostizieren von C/C++-Programmen verwendet.
Wir sind überzeugt, dass Nemiver ausgereift und robust genug ist, so dass Sie Ihre Lieblings-C/C++-Anwendung bequem diagnostizieren können.
Nemiver
C/C++-Fehlerdiagnose
Nemiver Fehlerdiagnose für C/C++
Anwendungen diagnostizieren
gdb;disassembler;debugger;Diagnose;c;c++;
Umgebung des zu diagnostizierenden Programms festlegen
An einen Prozess anhängen
Core-Datei laden
Gespeicherte Diagnose-Sitzungen auflisten
Gespeicherte Diagnose-Sitzungen löschen
Programm mit Sitzungsnummer N diagnostizieren
Letzte Sitzung ausführen
Protokollierungsdomänen DOMAINS anschalten
Diagnose-Ausgabe protokollieren
Dieses Terminal als Terminal zur Fehlerdiagnose verwenden
Zum entfernten Ziel verbinden, das mit HOST:PORT angegeben wurde
Wo nach gemeinsamen Bibliotheken geschaut wird, die durch den Unterständigen geladen werden. Wird in Verbindung mit »--remote« verwendet.
Den Pfad zum GDB-Binary angeben, das zum Diagnostizieren des Unterständigen verwendet wird
Keinen Haltepunkt in »main« setzen und Unterständigen auch nicht ausführen
Die Versionsnummer von Nemiver anzeigen
[<prog\-to\-debug> [prog-args]]
Eine C/C++-Diagnose für GNOME
Bitte stellen Sie eine lokale Kopie der Binärdatei bereit, die Sie entfernt diagnostizieren möchten.
Auf diese Weise:
Andernfalls finden Sie unten die vollständigen Einstellungen von Nemiver.
Bitte geben Sie auch den Pfad zur Binärdatei an, welche die Core-Datei erzeugt hat.
Auf diese Weise:
Kennung
Dateiname
Zeile
Funktion
Adresse
Bedingung
_Zählpunkt setzen/entfernen
Typ
Treffer
Ausdruck
Anzahl ignorieren
Haltepunkt
Überwachungspunkt
Zählpunkt
unbekannt
_Löschen
Diesen Haltepunkt entfernen
_Gehe zu Quelldatei
Haltepunkt im Quelltext-Editor finden
_Kopieren
Aufruf-Stack in die Zwischenablage kopieren
Frame
Parameter
Ort
Binär
Funktionsname
Kontext
Ziel-Terminal
Haltepunkte
Register
Speicher
Ausdrucksüberwachung
Ende der Datei ist erreicht
Zeichenkette %s konnte nicht gefunden werden
Zum vorgegebenen Haltepunkt ändern
Zu Zählpunkt ändern
Haltepunkt _entfernen
Haltepunkt deaktivieren
Haltepunkt aktivieren
_Haltepunkt setzen
Zählpunkt setzen
%s (Pfad=»%s«, Kennung=%i)
Verbindung zum entfernten Ziel hergestellt!
Programm wurde beendet
Der Prozess der darunterliegenden Diagnoseeinheit wurde beendet.
Ziel erhielt ein Signal: %s, %s
Ein Fehler ist aufgetreten: %s
Datei %s wurde geändert. Wollen Sie diese neu laden?
Vom laufenden Programm _lösen
Diagnose vom laufenden Ziel lösen, ohne es abzuwürgen
Sitzung auf Platte _speichern
Die laufende Diagnose-Sitzung auf Platte speichern
Ausführen oder _Neustart
Das Ziel ausführen oder neu starten
Haltepunkt mittels Dialog setzen …
In der gegenwärtigen Zeile einen Haltepunkt mittels Dialog setzen
Haltepunkt setzen …
In einer Funktion oder Zeilennummer einen Haltepunkt setzenSet Breakpoint", or "Remove Breakpoint
_Haltepunkt setzen/entfernen
An der jetzigen Cursor-Position einen Haltepunkt setzen/entfernenEnable Breakpoint", or
Haltepunkt aktivieren/deaktivieren
An der jetzigen Cursor-Position gesetzten Haltepunkt aktivieren/deaktivierenSet Countpoint", or "Change to CountpointChange to Standard Breakpoint
_Zählpunkt umschalten
An der jetzigen Cursor-Position einen Zählpunkt setzen/entfernen
Überwachungspunkt mittels Dialog setzen …
Überwachungspunkt mittels Dialog setzen
_Weiter
Nächste Zeile ausführen, die nächste Funktion überspringen, falls vorhanden
Einzel_schritt
Nächste Zeile ausführen, in nächste Funktion springen, falls vorhanden
Heraus_springen
Ausführung der aktuellen Funktion beenden
Asm nachfolgen
Der nächsten Assembler-Anweisung nachfolgen
Asm abarbeiten
Die nächste Assembler-Anweisung abarbeiten und überspringen
_Fortsetzen
Programmausführung bis zum nächsten Haltepunkt fortsetzen
Bis zum Cursor ausführen
Programmausführung bis zur ausgewählten Zeile fortsetzen
Zum Cursor springen
Zur aktuell ausgewählten Zeile springen
Bis zum Cursor springen und anhalten
In der gegenwärtigen Zeile einen Haltepunkt setzen und dorthin springen
Zu einem angegebenen Ort springen
Eine Codeposition auswählen und dorthin springen
Einen Ausdruck untersuchen
Globalen oder lokalen Ausdruck untersuchen
Eine Funktion aufrufen
Im zu diagnostizierenden Programm eine Funktion aufrufen
Alle globalen Variablen anzeigen
Alle globalen Variablen anzeigen
Lokal auffrischen
Variablenliste lokal zur aktuellen Funktion auffrischen
Assembler anzeigen
Den Assemblercode des Quelltextes, der gerade diagnostiziert wird, in einem neuen Reiter anzeigen
Auf Assembleransicht umschalten
Den Assemblercode des Quelltextes anzeigen, der gerade diagnostiziert wird
Auf Quellansicht umschalten
Den Quelltext anzeigen, der diagnostiziert wird
Anhalten
Diagnose anhalten
_Ansicht
Auf Ziel-Terminalansicht umschalten
Auf Kontext-Ansicht umschalten
Auf Haltepunkt-Ansicht umschalten
Auf Registeransicht umschalten
Auf Speicheransicht umschalten
Auf die Ansicht der Variablenüberwachung umschalten
_Diagnose
_Quelldatei öffnen …
Quelldatei zur Ansicht öffnen
_Ausführen …
Ein Programm ausführen
Core-Datei _laden …
Core-Datei von Platte laden
An ein laufendes Programm an_hängen …
Bereits laufendes Programm diagnostizieren
Mit entferntem Ziel _verbinden …
Zum Diagnostizieren eines entfernten Ziels eine Verbindung zu einem Diagnose-Server herstellen
Gespeicherte Sitzung _wiederherstellen...
Eine vorher gespeicherte Diagnose-Sitzung öffnen
_Einstellungen
Einstellungen der laufenden Sitzungen bearbeiten
Den markierten Text _kopieren
Den markierten Text in der aktuellen Quelldatei kopieren
Quelldatei neu _laden
Lädt die Quelldatei neu
_Quelldatei schlieẞen
Offene Datei schlieẞen
_Suchen
Text-Zeichenkette in Datei suchen
%s s_chlieẞen
Entschuldigung, aber es ist unmöglich, einen entfernten Unterständigen neu zu starten.
Datei »%s« konnte nicht gefunden werden
Das Programm konnte nicht geladen werden: %s
Sie können nicht an Nemiver selbst anhängen
Sie können nicht an die darunterliegende Diagnoseeinheit anhängen
Diagnose konnte nicht angehalten werden
Ungültige Zeilennummer: %i
Die Diagnose für ein Programm läuft derzeit. Wollen Sie die Diagnose wirklich verlassen?
Vorgabeansicht
Vorgabeansicht von Nemiver
Quelltext
Dynamische Ansicht
Eine anpassbare Ansicht
Zwei Statusleisten
Eine Ansicht mit zwei Statusleisten
Breite Ansicht
Eine Ansicht für sehr große Bildschirme
Au_gewählte ausklappen
_Alle ausklappen
Ein_klappen
Dateien des ausführbaren Ziels werden geladen …
Variablentyp ist: 
 %s
Lokale Variablen
Funktionsargumente
Variablenname ko_pieren
Variablenpfad-Ausdruck in die Zwischenablage kopieren
Variablenwert _kopieren
Variablenwert in die Zwischenablage kopieren
Überwachungspunkt erzeugen
Einen Überwachungspunkt erzeugen, welcher auslöst, wenn sich der Wert des Ausdrucks ändert
Byte
Wort
Langes Wort
Adresse:
Zeigen
Gruppieren nach:
Ordner auswählen
Quellordner
Benutzername
Proc Args
Name
Wert
Sitzung
Ausnahme verwerfen
Ausnahme empfangen
Systemaufruf fork()
Systemaufruf vfork()
Systemaufruf exec()
Thread-Kennung
Variable
Ausdrücke innerhalb des Bereichs
Ausdrücke außerhalb des Bereichs
Entfernen
Ausgewählte Ausdrücke aus der Überwachung entfernen
Neu …
Einen neuen Ausdruck zur Überwachung hinzufügen
Eine Funktion aufrufen:
Haltepunkt setzen
Überladene Funktion wählen
Mehrere Funktionen stimmen mit dem angegebenen Namen überein. Bitte wählen Sie eine Funktion aus der nachfolgenden Liste.
Text suchen
_Suchen:
Übereinstimmungsoptionen:
Gr_oẞ/Kleinschreibung berücksichtigen
Nur ganz_e Wörter
Durchlaufoptionen:
_Zeilenumbruch
_Rückwärts suchen
Globale Variablen
Core-Datei zum Diagnostizieren wählen
Eine Core-Datei auswählen
Core-Datei:
Ausführbare Datei wählen, welche die Core-Datei erzeugt hat
Ausführbare Datei:
Quelldateien öffnen
Aus _ausführbarem Ziel wählen
Im _Dateisystem auswählen
Quelldateien zum Öffnen auswählen
Einstellungen
Dicktengleiche Schrift des Systems verwenden
Benutzerdefinierte Schrift:
Editor-Schrift
Erscheinungsbild
Zeilennummern anzeigen
Zeilennummern
Terminal verwenden
Terminal
Beim Ändern einer Quelldatei:
Datei neu laden
Datei nicht neu laden
Jedes Mal nachfragen
Dateiüberwachung
Syntax-Hervorhebung aktivieren
Syntax-Hervorhebung
Editor
Bei jedem Halt aktualisieren
Lokale Variablen
Reines Assembler
Quelle und Assembler gemischt
Assemblerstil
Assembler-Variante
Datei auswählen
Pfad zur verwendeten GDB-Binärdatei
GDB-Binärdatei
Voreingestellte Anzahl der Anweisungen, die disassembliert werden sollen
Anweisungen
Quellcodeformatierung aktivieren (Neustart der Diagnose erforderlich)
GDB-Quellcodeformatierung
Elternprozess folgen
Kindprozess folgen
GDB-Modus »fork folgen«
Diagnose
Ansicht
An ein laufendes Programm anhängen
Einen Prozess zum Diagnostizieren auswählen
_Filterliste:
Zum entfernten Ziel verbinden
Zu ladende ausführbare Datei
Ort der gemeinsam genutzten Bibliotheken
Entfernter Diagnose-Server
TCP/IP-Verbindung
Port:
Serielle Verbindung
Programm zum Ausführen auswählen
Ausführbare Datei wählen
Programm:
Parameter:
Arbeitsordner wählen
Arbeitsordner:
_Hinzufügen
_Entfernen
Umgebungsvariablen:
Gespeicherte Sitzungen
Sitzung zum Diagnostizieren auswählen
Haltepunkt setzen:
Bedingung:
_Ereignis:
Ort der _Binärdatei
_Quellort:
F_unktionsname:
Dateiname:
Funktion:
Zeile:
Als Zählpunkt setzen
Zielposition auswählen
Springen zur Position:
Haltepunkt am Ziel
Zur Überwachung hinzufügen
_Variablenname:
_Untersuchen
Überwachungspunkt setzen:
Ausdruck:
Untersuchen
Löst aus bei:
Lesen
Schreiben
Ort für %s auswählen
Datei »%s« kann nicht gefunden werden.
Bitte geben Sie den Ort dieser Datei an:
Zeile: %i, Spalte: %i
Datei %s kann nicht geladen werden, da sich die Kodierung von %s unterscheidet
Die Auswahl kopieren
_Einfügen
Inhalt der Zwischenablage einfügen
_Neustart
Das Terminal zurücksetzen
Nicht wieder nachfragen
Projekt-Webseite
Carsten Reith <carsten\.reith\@arcor\.de>
Mario Blättermann <mario\.blaettermann\@gmail\.com>
Christian Kirbach <christian\.kirbach\@googlemail\.com>
Jakob Kramer <jakob\.kramer\@gmx\.de>
_Datei
_Beenden
Die Anwendung beenden
_Bearbeiten
_Hilfe
_Info
Info zu dieser Anwendung anzeigen
_Inhalte
Benutzerhandbuch zu dieser Anwendung öffnen
Ort der Datei auswählen
Datei angeben
Dateiname
Ziel neu starten, diesen Prozess abwürgen und einen neuen starten
Variable untersuchen
Ordner auswählen
Quellordner
Systemaufruf vfork()

Funktion aufrufen


Datei auswählen
Adresse:


bodycontainer
Befehle anzeigen
Den Debugger-Befehls-Reiter anzeigen
Fehler anzeigen
Fehler-Reiter anzeigen
Ausgabe anzeigen
Das Debug-Ziel im Ausgabe-Reiter zeigen
Befehle
Ausgabe
Protokolle
gtk-cancel
gtk-ok
Aufruf-Stack
Variablen
Die Kodierung der Datei %s wird nicht in den Werten des GConf-Schlüssels %s aufgelistet. Bitte fügen Sie diese Kodierung zu den Schlüsselwerten hinzu und setzen Sie das Debugging fort.
Zur Ansicht des Aufruf-Stacks wechseln