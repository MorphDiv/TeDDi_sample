# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

Gibt das Argument des an der arg_num stehenden Stelle in eine benutzer-definierte Liste zurück.
Der Zähler hierfür beginnt bei 0.
Der Aufruf von func_get_arg() ausserhalb einer Funktions-Definition erzeugt eine Warnung.
Ist arg_num grösser als die Anzahl der vorhandenen Argumente, wird eine Warnung aus - und FALSE zurück gegeben.
?php function foo() {$numargs = func_num_args(); echo "Anzahl der Argumente: $numargs br \n"; if ($numargs = 2) {echo "Das 2.
Argument ist: ". func_get_arg (1)." br \n";}} foo (1, 2, 3);?
func_get_arg() kann in Verbindung mit func_num_args() und func_get_args() gebraucht werden, um benutzer-definierte Funktionen mit variabler Argument-Liste zu erstellen.
Anmerkung:
Diese Funktion steht ab PHP 4 zur Verfügung.
Zurück
Zum Anfang
Nach vorne

Nach oben
