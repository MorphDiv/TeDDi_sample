# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

Sendet eine Fehlermeldung an das Log-File des Webservers, einen TCP Port oder eine Datei.
Der erste Parameter, message, ist die Fehlermeldung, die mitgeschrieben werden soll.
Der zweite Parameter, message_type gibt an, wo die Meldung abgelegt werden soll:
Tabelle 1. error_log() Typem

Message wird mit Hilfe des internen Log-Systems des Betriebssystemes oder einer Datei geschrieben, je nachdem, wie error_log eingestellt ist.

Message wird via Email an die Adresse gesendet, die mit destination amnngegeben wurde.
Dies ist der einzige Punkt, bei dem der vierte Parameter extra_headers verwendet wird.
Die Nachricht verwendet die selbe interne Funktion wie mail().

Message wird über den PHP-Debugger gesendet.
Diese Option ist nur verfügbar, wenn der Debugger gestartet wurde.
Ist das der Fall, so wird mit dem destination Parameter der Hostname oder die IP-Adresse gesetzt.
Optional auch der Port, unter dem der Debugger läuft.

Message wird an die Datei angefügt, die mit destination angegeben wurde.
Beispiel 1. error_log() Beispiele
/ / Server sendet eine Nachricht an den Administrator, / / dass keine Verbindung zur Datenbank möglich ist. if (!Ora_Logon($username, $password)) {error_log ("Oracle database not available !", 0);} / / Server sendet eine Nachricht an den Administrator, dass FOO langsam ausgeht if (!($foo = allocate_new_foo()) {error_log ("Big trouble, we're all out of FOOs !", 1, "operator@mydomain.com");} / / AndereMöglichkeiten, error_log() aufzurufen: error_log ("You messed up !", 2, "127.0.0.1:7000"); error_log ("You messed up !", 2, "loghost"); error_log ("You messed up !", 3, "/ var / tmp / my-errors.log");
Zurück
Zum Anfang
Nach vorne

Nach oben
