# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Tony Bloomfield
2009-08-05 1.0
Datenbank
Die Datenbank erstellen
Einleitung
Seit der Version 1.0 erlaubt es Ihnen & kappname;, Ihre Daten in einer relationalen Datenbank zu speichern. Ein Vorteil der Nutzung dieses Industriestandards ist, dass Sie mit anderen Softwareprodukten auf Ihre Daten zugreifen und sie visualisieren können, z.B. mit OpenOffice, vielleicht in einem Format, das & kappname; derzeit noch nicht bietet. Ein wenig SQL-Kenntnisse (SQL - Structured Query Language, die weltweit verwendete Standardsprache, um auf relationale Datenbanken zuzugreifen) sollten es Ihnen erleichtern, Ihre Daten zu externen Programm zu exportieren, & eg; zu Budgetierungs-Programmen.
Vorbereitung
Um auf die Datenbank zuzugreifen, nutzt & kappname; das SQL-Modul der & Qt; Software als Teil der & Qt;-Bibliotheken. Dieses Modul unterstützt diverse Datenbanksysteme durch eine Auswahl an Datenbanktreibern. Für verbreitete Open-Source Systeme sind diese Treiber verfügbar: MySQL, SQLite und PostgreSQL. Das Modul unterstützt ebenso größere, vorwiegend in der Industrie genutzte Systeme, wie Oracle und IBM DB2.
Mit Ausnahme von SQLite arbeiten alle Systeme nach dem Client/Server Modell, wobei die Client-Software auf "Ihrer" Maschine läuft, während der Server auf der gleichen Maschine läuft wie die eigentliche Datenbank, welche aber auch irgendwo anders im Netzwerk platziert werden kann. Natürlich wird Ihr Computer bei & kappname; als "Persönlicher Finanzmanager" in einem normalen Szenario sowohl als Server, als auch Client fungieren. Nachdem Sie sich für ein Datenbankprodukt entschieden haben, ist der Schritt die Installation die Installation der Client und i.d.R. auch Server-Software.
Zusätzlich zur eigentlichen Datenbanksoftware müssen Sie das entsprechende & Qt;-Treibermodul installieren. Die meisten Distributionen bieten passende Treibermodule für die bekannten Datenbanken an. Ansonsten schauen Sie auf die Qt; Software Webseite und suchen Sie dort nach SQL-Treibern.
SQLite arbeitet nicht nach dem Client-/Server-Modell. Jede Datenbank befindet sich in einer herkömmlichen Datei, lokal oder in Netzwerk, auf die über die normalen Dateizugriffsfunktionen des Betriebssystem zugegriffen wird. In diesem Fall ist nur ein Softwarepaket zu installieren. Weiterhin sind einige der nachfolgenden Informationen, speziell zur Administration, nicht für SQLite relevant.
Verwaltung
Datenbanken sind etwas komplexer als die Verwendung einfacher Dateien. Jedes System hat unterschiedliche Methoden zur Verwaltung der Datenbank, wie das Erzeugen einer neuen Datenbank, die Zuordnung von Zugriffsrechten für verschiedene Datenbankbenutzer, das Erstellen von Datensicherungen, & etc;. Diese Dinge werden nicht in diesem Handbuch beschrieben, aber für alle der unterstützten Datenbankprodukte sind im Internet eine Vielzahl an Anleitungen und Handbücher zu finden.
Die Datenbank erstellen
Es wird Code bereitgestellt, um eine initiale Datenbank, die Ihre Daten aufnehmen wird, zu erzeugen, wenn noch keine existiert. Es wird dringend angeraten, dass Sie vorher eine Datenbank Datenbank erstellen, da die meisten Datenbankprodukte eine Vielzahl an Optionen verwendet, die relevant sein können. Eine solche wichtige Eigenschaft ist der verwendete Zeichensatz (z.B. UTF-8) für Textfelder.
Zum gleichen Zeitpunkt müssen Sie auch Zugriffsrechte für verschiedene Datenbanknutzer definieren, um unterschiedliche Datenbankoperationen durchführen zu können. Bei den meisten Systemen wird dem Benutzer, der die Datenbank anlegt, automatisch sämtliche Rechte auf die Datenbank eingeräumt, aber näheres hierzu finden Sie in der Dokumentation der von Ihnen verwendeten Datenbank.
Beim ersten Zugriff auf die Datenbank, und evtl. zu einem späteren Zeitpunkt wenn sich die Datenbankstruktur ändert, benötigen Sie Rechte (auch Privilegien, eng. "privileges" genannt), um Tabellen und Ansichten (views) anzulegen und zu ändern. Es können verschiedene Bezeichnung für diese Rechte bei den unterschiedlichen Datenbankprodukten verwendet werden, aber meist ist die Rede von CREATE und ALTER. Für die tägliche Arbeit benötigen Sie Zugriffsrechte zum Lesen und Schreiben von Datensätzen. Diese werden in SQL als SELECT, INSERT, UPDATE und DELETE Berechtigungen bezeichnet.
Tabellen erstellen
Bei der ersten Verwendung wird & kappname; versuchen, die benötigten Tabellenstrukturen anzulegen. Um eine größtmögliche Kompatibilität zu möglichst vielen Datenbanken zu erreichen, wird nur eine Teilmenge von gängigen Datentypen verwendet. Nichtsdestotrotz kann es vorkommen, dass ein bestimmter Datentyp von Ihrem Datenbankprodukt nicht unterstützt wird. In diesem Fall müssen Sie den notwendigen SQL-Code zur Erzeugung der Tabellen selbst bereitstellen. Dieser Code kann dann nach den eigenen Bedürfnissen modifziert werden und außerhalb von & kappname; zur Erzeugung der Tabellen verwendet werden. Sollten Sie sich in einer solchen Situation befinden, wird Ihnen in der & devlist; sicherlich geholfen.
Die Datenbank erstellen
Öffnen oder importieren Sie eine existierende Datei in & kappname;, oder erzeugen Sie eine Neue. Anschließend wählen Sie Speichern in Datenbank aus dem Menü Datei. Dann öffnet sich folgendes Dialogfenster:
Datenbank-Typ
Die Box listet alle & Qt; SQL Treiber, die auf Ihrem System installiert sind, auf. Wählen Sie den für Ihre Datenbank passenden Treiber aus. Wenn diese sich nicht in der Liste befindet, müssen Sie einen passenden Treiber installieren. Schauen Sie in der Dokumentation zu Ihrer Distribution, oder besuchen Sie die Qt; Software Webseite und suchen Sie nach "SQL drivers".
Anmerkung: Für SQLite Datenbanken sind die Felder Rechnername, Benutzername und Passwort nicht relevant. Die SQLite Datei muss die entsprechenden Schreib-/Leserechte auf der Betriebssystemebene besitzen, damit der gerade angemeldete Benutzer darauf zugreifen kann.
Datenbank-Name
Der Datenbankname ist standardmäßig "KMyMoney", aber Sie können auch einen anderen wählen, wenn Sie wünschen. SQLite speichert jeweils eine Datenbank in einer Datei; wenn Sie diesen Treiber auswählen, öffnet sich der Standard Datei-Öffnen-Dialog, mit dessen Hilfe Sie eine bestehende Datei auswählen oder eine neue Datei erzeugen können. Für einige Datenbanken ist & kappname; evtl. nicht in der Lage, die Datenbank zu erzeugen, so dass sie vorher erzeugt werden muss. Je nach Datenbankprodukt gibt es hierfür entsprechende Werkzeuge. Erzeugt & kappname; automatisch die benötigten Tabellenstrukturen.
Rechnername
Für den normalen Benutzer ist der vorgegebene Name localhost, der für Ihren Rechner steht an dem Sie gerade arbeiten, korrekt. Für eine Datenbank im Netzwerk müssen Sie den entsprechenden Rechnernamen eingeben.
Benutzername und -passwort
In den Einstellungen der Zugriffsrechte in Ihrer Datenbank finden Sie die notwendigen Informationen, die Sie hier eintragen müssen, oder kontaktieren Sie Ihren Datenbankadministrator. Der hier eingegebene Datenbankbenutzer muss die Berechtigungen für SELECT, INSERT, UPDATE und DELETE haben. Wenn der Benutzername der gleiche ist wie Ihr Anmeldungs-Name, ist ein Passwort normalerweise nicht notwendig.
Auf Ihre Daten zugreifen
Tabellen-Design
Um auf Ihre Daten in & kappname; zuzugreifen, wählen Sie aus dem Menü Datei den Menüpunkt Datenbank öffnen. Es öffnet sich ein ähnliches Dialogfenster wie oben beschrieben.
Um auf Ihre Daten mit anderen Formaten zuzugreifen, müssen Sie wissen, wie sie in der relationalen Datenbank gespeichert sind. Der einfachste weg, um ein Gefühl dafür zu bekommen, ist es, die Datenbank mit einem entsprechenden Frontend wie OpenOffice zu öffnen und sich diese anzusehen. Sie werden eine Liste der verschiedenen Tabellen sehen, aus denen die Datenbank besteht. Weiterhin können Sie sich die Tabellenstrukturen anschauen.
Um Daten z.B. in eine Tabellenkalkulation oder eine externe Datei zu extrahieren ist es meist unausweichlich, die Daten nicht nur aus einer, sondern aus mehreren Tabellen auszulesen. Dies wird erreicht, in dem die Tabellen miteinander Verknüpft werden (engl. JOIN). Die verknüpften Tabellen müssen jeweils Felder mit identischen Inhalten haben. Viele weitere Informationen über diese grundlegenden Themen finden Sie in den weiter oben schon erwähnten Tutorials. Die nachfolgende Tabelle listet alle Felder auf, die für die Tabellenverknüpfungen verwendet werden.
Beziehung
Verknüpfung
mit
Geldinstitute und Konten
kmmInstitutions.id
kmmAccounts.institutionId
Konten Eltern/Kind
kmmAccounts.id
kmmAccounts.parentId
Buchungen und Splittbuchungen (siehe Fußnote 1)
kmmTransactions.id
kmmSplits.transactionId
Konten und Splittkonten
kmmSplits.accountId
Empfänger und Splitt
kmmPayees.id
kmmSplits.payeeId
Geplante Buchungen und Buchungen
kmmSchedules.id
Buchungen und Währungen
kmmTransactions.currencyId
kmmCurrencies.ISOCode
Konten und Securities (siehe Fußnote 2)
kmmAccounts.currencyId
kmmSecurities.id
Securities und Preise
kmmPrices.fromId oder kmmPrices.toId
Währungskurse
Fußnoten:
1 & #x2013; txType = & #x201C;N#x201D; für normale Buchungen, & #x201C;S#x201D; für geplante Buchungen
2 & #x2013; wenn kmmAccounts.isStockAccount = & #x201C;Y#x201D;
Feldformate
Einige Datenfelder werden in einem internen Datenformat vorgehalten, welche nicht direkt für externe Programme nutzbar sind. In diesen Fällen werden die Informationen doppelt, einmal im internen und externen Format, vorgehalten.
Geldbeträge und Aktienkurse werden beide im Format Zähler/Nenner und zusätzlich, wenn der Feldname mit dem Suffix "Formatted" beginnt, in dem Format wie Sie es am Bildschirm sehen, gespeichert.
Ebenso werden einige Felder, wie & eg; der Kontotyp, sowohl als numerische ID als auch zusätzlich in einem Feld mit dem Suffix "String" im Format und Sprache der Anwendung gespeichert.
Ihre Daten aktualisieren
Dadurch, dass Ihre Daten in einem Standardformat gespeichert sind, könnten Sie diese selbst außerhalb von & kappname; ändern. MACHEN SIE DAS NICHT, außer Sie wissen wirklich, was Sie tun und Sie stets eine Datensicherung Ihrer Daten angefertigt haben. Wenn etwas schiefgeht, wird & kappname; nicht mehr in der Lage sein, Ihre Daten zu lesen und im schlimmsten Fall wären diese komplett verloren. Sie wurden also gewarnt!
Stored Queries
Viele Datenbanksystem erlauben es, gemeinsam genutzte Abfragen und Prozeduren zu hinterlegen. In einigen Fällen werden diese als Tabellen oder andere Objekte innerhalb der Datenbank vorgehalten. Wie Sie sicherlich aus dem oben genannten schon sehen, beginnen die Namen aller von & kappname; verwendeten Tabellen mit den Kleinbuchstaben "kmm". Dieser Standard wird gepflegt und nur solche Tabellen, die damit beginnen, werden aktualisiert. Wenn Sie sich bei der Benennung Ihrer eigenen Abfragen, etc. an diese Konvention halten, sind keine Probleme zu erwarten.
SQL erzeugen
Öffnen oder importieren Sie eine existierende Datei in & kappname;, oder erzeugen Sie eine Neue. Anschließend wählen Sie Speichern in Datenbank aus dem Menü Datei. Dann öffnet sich folgendes Dialogfenster:
Verschlüsselung
Eine Verschlüsselung Ihrer Daten in der Datenbank wird derzeit nicht unterstützt.
Vorsicht beim Gebrauch der Datenbank
Zum aktuellen Zeitpunkt ist die in diesem Kapitel beschriebene Software noch in einem experimentellen Status und Datenverlust daher möglich. Bitte stellen Sie sicher, dass Sie stets ein Sicherung Ihrer Daten anfertigen, bevor Sie die Datenbank verwenden.
Durch Beschränkungen in früheren Version wird nur Version 3 von SQLite unterstützt. Unglücklicherweise gibt es für die von & kappname; verwendete & Qt;-Bibliothek leider keine Treiber für diese Version. Ein inoffizieller, intensiv getesteter Treiber ist verfügbar; wenn Sie SQLite einsetzen möchten, fragen Sie in der & devlist; nach weiteren Informationen.
Initialisierung
Dieser Knopf erzeugt die CREATE TABLE Befehle und speichert sie in eine Textdatei, welche Sie anschließend editieren können, falls die von & kappname; generierten SQL-Anweisungen auf Ihrem Datenbanksystem nicht funktionieren (siehe vorhergehenden Abschnitt).