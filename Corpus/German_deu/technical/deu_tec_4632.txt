# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Kapitel 5.
Sicherheit
Nach vorne
Generell ist Sicherheit durch Unklarheit eine der schwächsten Formen von Sicherheit.
Aber in manchen Fällen ist ein klein Wenig mehr an extra Sicherheit wünschenswert.
Ein paar einfache Techniken helfen PHP zu Verstecken, um einen nach Schwächen in Ihrem System suchenden Angreifer möglicherweise langsamer zu machen.
Wenn Sie in Ihrer php.ini expose_php = off setzen, reduzieren Sie damit die ihm zur Verfügung stehenden Informationen.
Eine andere Taktik ist, den Webserver wie z.B.
Apache entweder mittels einer .htaccess Direktive oder in der Apache Konfigurationsdatei selbst so konfigurieren, dass dieser verschiedene Dateitypen durch PHP parst.
So können Sie irreführende Dateierweiterungen verwenden:
Beispiel 5-18.
PHP als andere Sprache ausgeben
# Lasse PHP Code wie andere Arten von Code aussehen AddType application / x-httpd-php .asp .py .pl
Beispiel 5-19.
Verwenden von unbekannten Typen für PHP Dateierweiterungen
# Lasse PHP Code wie unbekannte Typen aussehen AddType application / x-httpd-php .bop .foo .133t
Beispiel 5-20.
Verwenden von html Typen für PHP Dateierweiterungen
# Lasse PHP code wie html aussehen AddType application / x-httpd-php .htm .html
Zurück
Zum Anfang
Nach vorne
Vom Nutzer übermittelte Daten
Nach oben
Aktuell bleiben