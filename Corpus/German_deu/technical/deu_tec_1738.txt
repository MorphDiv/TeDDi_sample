# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

CreateUnoValue-Funktion [Laufzeit]
/text/sbasic/shared/03132300.xhp
Sun Microsystems, Inc.
converted from old format - fpe
CreateUnoValue-Funktion
CreateUnoValue-Funktion [Laufzeit]
Gibt ein Objekt zurück, das einen in Bezug auf das Uno-Typensystem strikt typisierten Wert darstellt.
Das Objekt wird bei der Übergabe an Uno automatisch in einen Any des entsprechenden Typs konvertiert.
Der Typ muss durch seinen voll qualifizierten Uno-Typennamen angegeben werden.
Die $[officename]-API verwendet häufig den Typ &quot; Any &quot; .
Dieser ist das Gegenstück zu dem aus anderen Umgebungen bekannten Typ &quot; Variant &quot; .
Der Typ &quot; Any &quot; nimmt einen beliebigen Uno-Typ auf und wird in generischen Uno-Schnittstellen verwendet.
Syntax:
oUnoWert = CreateUnoValue( &quot; []byte &quot; , MeinBasicWert ) zum Abrufen einer Bytefolge.
Kann CreateUnoValue nicht in den angegebenen Uno-Typ konvertiert werden, so tritt ein Fehler auf.
Für die Konvertierung kommt der Service TypeConverter zum Einsatz.
Diese Funktion ist für den Einsatz in Situationen gedacht, in denen der Standard-Konvertierungsmechanismus von Basic nach Uno nicht ausreicht.
Dies kann beispielsweise der Fall sein, wenn Sie versuchen, aus $[officename] Basic auf generische Any-basierte Schnittstellen wie z.
B.
XPropertySet::setPropertyValue( Name, Wert ) oder X???Container::insertBy???( ???, Wert ) zuzugreifen.
Das Basic-Laufzeitsystem erkennt diese Typen nicht, da sie nur im entsprechenden Service definiert sind.
In dieser Situation wählt $[officename] Basic den Typ, der dem zu konvertierenden Basic-Typ am ehesten entspricht.
Wird jedoch der falsche Typ gewählt, so tritt ein Fehler auf.
Hier sollten Sie die Funktion CreateUnoValue() verwenden, um einen Wert für den unbekannten Uno-Typ zu erstellen.
Sie können diese Funktion auch zum Übergeben von Werten mit anderen Typen als &quot; Any &quot; verwenden.
Dies ist jedoch nicht empfehlenswert.
Wenn Basic den Zieltyp bereits kennt, resultiert der Aufruf von CreateUnoValue() lediglich in zusätzlichen Konvertierungsvorgängen, die die Basic-Programmausführung verlangsamen.