# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

get_browser() ermittelt die Möglichkeiten des auf das PHP-Skript zugreifenden Browsers.
Dies geschieht durch Auslesen der zum Browser vorhandenen Werte aus der Datei browscap.ini.
Per Voreinstellung wird der Wert von $HTTP_USER_AGENT als Browser-Typ benutzt.
Dieses Verhalten können sie ändern (so z.B. den Namen der INI-Datei), indem sie den optionalen user_agent -Parameter an die get_browser() -Funktion übergeben.
Die zurück gegebene Information ist ein Objekt, das verschiedene Datenelemente enthält.
Dazu gehören z.B. die Haupt - und Unterversions-Nummer des Browsers sowie TRUE / false-Werte für Browser - Fähigkeiten Dazu gehören z.B. die Haupt - und Unterversions-Nummer des Browsers sowie TRUE / false-Werte für Browser - Fähigkeiten (u.a.
Frame-, Java - und Cookies-Unterstützung).
Nicht gemeint ist hier die aktuell vorhandene Nutzung.
Ist der Browser so konfiguriert, dass er z.Zt. keine Cookies annehmen soll, wird trotzdem TRUE in Bezug auf die Cookie-Fähigkeiten zurückgegeben, wenn in der Datei browscap.ini der entsprechende Wert TRUE ist.
Da in browscap.ini Informationen vieler Browser stehen, obliegt es dem Skript-Schreiber, diese Datei auf dem Laufenden zu halten.
Das Format dieser Datei sollte selbsterklärend sein.
Das folgende Beispiel zeigt, wie man alle verfügbaren Informationen zu einem gerade benutzten Browser anzeigen könnte:
Beispiel 1. get_browser() -Beispiel:
?php function list_array ($array) {while (list ($key, $value) = each ($array)) {$str .= "b $key: / b $value br \n";} return $str;} echo "$HTTP_USER_AGENT hr \n"; $browser = get_browser(); echo list_array ((array) $browser);?
Die Ausgabe des obigen Skripts könnte so aussehen:
Mozilla / 4.5 [en] (X11; U; Linux 2.2.9 i586) hr b browser_name_pattern: / b Mozilla / 4\.5.* br b parent: / b Netscape 4.0 br b platform: / b Unknown br b majorver: / b 4 br b minorver: / b 5 br b browser: / b Netscape br b version: / b 4 br b frames: / b 1 br b tables: / b 1 br b cookies: / b 1 br b backgroundsounds: / b br b vbscript: / b br b javascript: / b 1 br b javaapplets: / b 1 br b activexcontrols: / b br b beta: / b br b crawler: / b br b authenticodeupdate: / b br b msn: / b br
Damit dieses Skript richtig funktioniert, muss die browscap -Einstellung ihrer Konfigurations-Datei auf die richtige browscap.ini -Datei zeigen.
Weitere Informationen (incl.
Bezugsquellen für browscap.ini -Dateien) finden sie in der PHP-FAQ unter http: / /www.php.net / FAQ.php.
Zurück
Zum Anfang
Nach vorne

Nach oben
