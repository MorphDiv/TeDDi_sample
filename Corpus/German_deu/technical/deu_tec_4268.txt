# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

Gibt einen String zurück, der den angegebenen Formatierungs-Merkmalen entspricht.
Dabei wird der gegebene Timestamp / Zeitstempel oder - falls dieser fehlt - die momentane lokale Zeit benutzt.
Der Monats - und Wochentagsname wird entsprechend des per setlocale() eingestellten Wertes gesetzt.
Nachfolgend die im Formatierungsstring gültigen / bekannten Platzhalter:
%a - abgekürzter Name des Wochentages, abhängig von der gesetzten Umgebung
%A - ausgeschriebener Name des Wochentages, abhängig von der gesetzten Umgebung
%b - abgekürzter Name des Monats, abhängig von der gesetzten Umgebung
%B - ausgeschriebener Name des Monats, abhängig von der gesetzten Umgebung
%c - Wiedergabewerte für Datum und Zeit, abhängig von der gesetzten Umgebung
%C - Jahrhundert (Jahr geteilt durch 100, gekürzt auf Integer, Wertebereich 00 bis 99)
%d - Tag des Monats als Zahl (Bereich 00 bis 31)
%D - so wie %m / %d / %y
%e - Tag des Monats als Dezimal-Wert, einstelligen Werten wird ein Leerzeichen voran gestellt (Wertebereich ´ 0´ bis ´31´)
%g - wie %G, aber ohne Jahrhundert.
%G - Das vierstellige Jahr entsprechend der ISO Wochennummer (siehe %V).
Das gleiche Format und der gleiche Wert wie bei %Y.
Besonderheit: entspricht die ISO Wochennummer dem vorhergehenden oder folgenden Jahr, wird dieses Jahr verwendet.
%h - so wie %b
%H - Stunde als Zahl im 24-Stunden-Format (Bereich 00 bis 23)
%I - Stunde als Zahl im 12-Stunden-Format (Bereich 01 bis 12)
%j - Tag des Jahres als Zahl (Bereich 001 bis 366)
%m - Monat als Zahl (Bereich 01 bis 12)
%M - Minute als Dezimal-Wert
%n - neue Zeile
%p - entweder `am' oder `pm '(abhängig von der gesetzten Umgebung) oder die entsprechenden Zeichenketten der gesetzten Umgebung
%r - Zeit im Format a.m. oder p.m.
%R - Zeit in der 24-Stunden-Formatierung
%S - Sekunden als Dezimal-Wert
%t - Tabulator
%T - aktuelle Zeit, genau wie %H:%M:%S
%u - Tag der Woche als Dezimal-Wert [1,7], dabei ist 1 der Montag.
Warnung
Sun Solaris scheint mit dem Sonntag als 1 zu starten, obwohl ISO 9889:1999 (der aktuelle C Standard) klar festlegt, dass es der Montag sein sollte.
%U - Nummer der Woche des aktuellen Jahres als Dezimal-Wert, beginnend mit dem ersten Sonntag als erstem Tag der ersten Woche.
%V - Kalenderwoche (nach ISO 8601:1988) des aktuellen Jahres.
Als Dezimal-Zahl mit dem Wertebereich 01 bis 53, wobei die Woche 01 die erste Woche mit mindestens 4 Tagen im aktuellen Jahr ist.
Die Woche beginnt montags (nicht sonntags). (Benutzen Sie %G or %g für die Jahreskomponente, die der Wochennummer für den gegebenen Timestamp entspricht.)
%w - Wochentag als Dezimal-Wert, Sonntag ist 0
%W - Nummer der Woche des aktuellen Jahres, beginnend mit dem ersten Montag als erstem Tag der ersten Woche.
%x - bevorzugte Datumswiedergabe (ohne Zeit), abhängig von der gesetzten Umgebung.
%X - bevorzugte Zeitwiedergabe (ohne Datum), abhängig von der gesetzten Umgebung.
%y - Jahr als 2-stellige-Zahl (Bereich 00 bis 99)
%Y - Jahr als 4-stellige-Zahl inklusive des Jahrhunderts
%Z - Zeitzone, Name oder eine Abkürzung
%% - ein %-Zeichen
Anmerkung:
Es ist durchaus möglich, dass Ihre C-Bibliothek nicht alle angegebenen Formatierungszeichen erkennt.
In diesem Fall werden diese Zeichen von der PHP-Funktion strftime() nicht unterstützt.
Das bedeutet, dass z.B. %e, %T, %R und %D (vielleicht noch weitere) auf Windowssystemen nicht funktionieren.
Beispiel 1. strftime() Beispiel
setlocale (LC_TIME, "C"); print (strftime ("%A in Finnland ist ")); setlocale (LC_TIME, "fi_FI"); print (strftime ("%A, in Frankreich ")); setlocale (LC_TIME, "fr_FR"); print (strftime ("%A und in Deutschland ")); setlocale (LC_TIME, "de_DE"); print (strftime ("%A.\n"));
Siehe auch setlocale(), mktime() und die Open Group Spezifikation von strftime().
Zurück
Zum Anfang
Nach vorne

Nach oben
