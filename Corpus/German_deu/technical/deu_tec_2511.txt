# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDEdoc
# source:	https://object.pouta.csc.fi/OPUS-KDEdoc/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/KDEdoc.php
# copyright_long:	http://opus.nlpl.eu/KDEdoc.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Weitentwickelte Editierwerkzeuge
Kommentar/Kommentar entfernen
Die Befehle Kommentar und Kommentar entfernen im Men\xFC Bearbeiten erlauben das Hinzuf\xFCgen oder Entfernen von Kommentarzeichen zur Auswahl, oder der aktuellen Textzeile, wenn kein Text markiert wurde.
Diese Funktionen stehen nur zur Verf\xFCgung, wenn das benutzte Textformat Kommentare unterst\xFCtzt.
Die Regeln f\xFCr Kommentare werden in den Definitionen f\xFCr die Syntax festgelegt, wenn Hervorhebungen f\xFCr Syntax nicht benutzt werden, ist die Nutzung der Befehle also nicht m\xF6glich.
Einige Formate nutzen Kommentarzeichen f\xFCr einzelne Zeilen, manche nutzen Kommentarzeichen f\xFCr mehrere Zeilen, manche beides.
Wenn Kommentarzeichen f\xFCr mehrere Zeilen nicht verf\xFCgbar sind, kann eine Auswahl nicht auskommentiert werden, deren letzte Zeile nicht vollst\xE4ndig in die Auswahl einbezogen ist.
Wenn Kommentarzeichen f\xFCr einzelne Zeilen definiert sind, werden diese bevorzugt eingesetzt, dies hilft, Probleme mit eingebetteten Kommentaren zu vermeiden.
Wenn Sie Kommentarzeichen entfernen, sollte nur kommentierter Text ausgew\xE4hlt sein.
Wenn mehrzeilige Kommentare entfernt werden, werden Leerzeichen und Tabulatoren (whitespaces) au\xDFerhalb der Kommentarzeichen ignoriert.
Bearbeitungsbefehl...
Die folgenden Befehle sind verf\xFCgbar:
Zeit
Dieser Befehl gibt die aktuelle Uhrzeit Ihres Systems im Format HH:MM:SS aus.
Rufen Sie den Dialog Bearbeitungsbefehl... auf und schreiben Sie in das Eingabefeld das Wort time
Zeichen
Dieser Befehl erlaubt das Einsetzen von Zeichen in Text durch die Eingabe Ihrer Kodierung in dezimaler, oktaler oder hexadezimaler Form.
Rufen Sie den Dialog Bearbeitungsbefehl... auf, schreiben Sie in das Eingabefeld das Wort char:[nummer] und klicken Sie auf OK.
Beispiele zu char
Eingabe: char:234
Ausgabe: \xEA
Eingabe: char:0x1234
Ausgabe: \xEA
Eingabe: char:1232
Ausgabe: \xEA
s///[ig] %s///[ig]
Dieser Befehl f\xFChrt Suchen/Ersetzen auf der aktuellen Zeile oder in der gesamten Datei aus (%s / / /).
Kurz gesagt, der Text wird nach dem Suchtext, dem regul\xE4ren Ausdruck zwischen dem ersten und dem zweiten Schr\xE4gstrich, durchsucht und wenn der Suchtext gefunden wurde, wird der \xFCbereinstimmende Teil des Textes durch den Ausdruck zwischen dem mittleren und dem hinterem Schr\xE4gstrich ersetzt.
Runde Klammern im Suchtext erzeugen Referenzen, die dann sp\xE4ter dazu benutzt werden, die Zeichenketten wiederzuverwenden.
Diese Referenzen werden wie folgt aufgerufen: \1 f\xFCr die erste Referenz, \2 f\xFCr die zweite und so weiter.
Um nach einem Sonderzeichen, (oder), zu suchen, m\xFCssen Sie dieses durch einen R\xFCckw\xE4rtsschr\xE4gstrich kenntlich machen. \(\)
Wenn Sie ein i an das Ende des regul\xE4ren Ausdrucks setzen, dann wird Gro\xDF- und Kleinschreibung bei der Suche ignoriert.
Ersetzen von Text in der aktuellen Zeile
Ihr lieber Computer verweigerte gerade die Ausf\xFChrung eines Programms, mit der Bemerkung, dass die Class myClass, die in der Zeile 3092 im Quelltext verwendet wird, nicht definiert ist.
"Nat\xFCrlich!", denken Sie, das muss MyClass hei\xDFen!
Sie gehen zur Zeile 3092, rufen den Bearbeitungsbefehl auf, geben s/myclass/MyClass/i ein und klicken auf OK, Speichern die Datei und komplilieren ohne Fehlermeldungen.
Ersetzen von Text in der gesamten Datei
Stellen Sie sich vor, Sie h\xE4tten eine Datei, in der eine Miss Jensen einige Male erw\xE4hnt wird.
Jemand kommt zur T\xFCr herein und erz\xE4hlt Ihnen, dass sie gerade Mr Jones geheiratet hat.
Sie stehen nun vor der Aufgabe, jedes Miss Jensen durch Ms Jones zu ersetzen.
Rufen Sie den Bearbeitungsbefehl auf, geben Sie %s/Miss Jensen/Ms Jones / ein und klicken Sie auf OK - fertig.
Ein etwas komplizierteres Beispiel
Dieses Beispiel benutzt Referenzen und auch eine Wortklasse (wenn Sie nicht wissen, was das bedeutet, sehen Sie bitte in der unten angegebenen Dokumentation nach).
Stellen Sie sich vor, Sie h\xE4tten folgende Zeile: void MyClass::DoStringOps( String &foo, String &bar String *p, int &a, int &b)
Sie erkennen, dass nicht gut lesbar ist und entscheiden, das Schl\xFCsselwort const f\xFCr alle address of -Argumente zu verwenden (diese sind durch den vorangestellten Operator & gekennzeichnet).
Au\xDFerdem wollen Sie die Zwischenr\xE4ume vereinfachen, so dass nur noch ein Leerzeichen zwischen den W\xF6rtern steht.
Rufen Sie den Bearbeitungsbefehl auf, geben Sie s/\s+(\w+)\s+(&) / const \1 \2/g und klicken Sie auf OK.
Das g am Ende des regul\xE4ren Ausdrucks bewirkt, dass der regul\xE4re Ausdruck jedesmal neu kompiliert wird, um die Referenz zu sichern.
Ausgabe: void MyClass::DoStringOps( const String &foo, const String &bar String *p, const int &a, const int &b)
Erledigt!
Was passierte hier?
Es wurde nach Leerzeichen (\s+) gefolgt von einem oder mehreren alphanumerischen Zeichen (\w+) gefolgt von einem oder mehreren Leerzeichen (\s+) gefolgt von einem Ampersand (&) gesucht und dabei der alphanumerische Abschnitt und das Ampersand (&) gesichert, um diese beim Ersetzen wiederzuverwenden.
Dann haben wir den \xFCbereinstimmenden Teil der Zeile ersetzt durch ein Leerzeichen gefolgt von const gefolgt von einem Leerzeichen gefolgt vom gesicherten Abschnitt (\1) gefolgt von einem Leerzeichen gefolgt vom gesicherten Ampersand (&) (\2).
In einigen F\xE4llen war war der gesicherte Abschnitt String, in einigen int, so dass das Benutzen der Wortklasse \w und des + -Zeichens zum Angeben von ein oder mehrere sich als wertvoll erwies.
Diese Befehle sind extrem vielseitig, aber obwohl sich deren Ausf\xFChrung R\xFCckg\xE4ngig machen lassen, empfehlen wir ein wenig zu \xFCben, bevor Sie diese Befehle f\xFCr ernsthafte Arbeit einsetzen.
Wenn Sie ge\xFCbt im Umgang mit regul\xE4ren Ausdr\xFCcken in Perl oder mit sed sind, ist dies sehr hilfreich dabei.