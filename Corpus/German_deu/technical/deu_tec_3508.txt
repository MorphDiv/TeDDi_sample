# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

Sortiert ein Array nach Schlüsseln, wobei die Zuordnungen zwischen Schlüssel und Wert erhalten bleiben.
Dies ist hauptsächlich bei assoziativen Arrays hilfreich.
Beispiel 1. ksort()
$fruits = array ("d"= "Zitrone", "a"= "Orange", "b"= "Banane", "c"= "Apfel"); ksort ($fruits); reset ($fruits); while (list ($key, $val) = each ($fruits)) {echo "$key = $val\n";}
Dieses Beispiel würde folgendes ausgeben:
a = Orange b = Banane c = Apfel d = Zitrone
Sie können das Verhalten der Sortierung mittels dem optionalen Parameter sort_flags beeinflussen, für Details siehe sort().
Siehe auch asort(), arsort(), krsort(), uksort(), sort(), natsort() und rsort().
Anmerkung:
Der zweite Parameter wurde mit PHP 4 eingeführt.
Zurück
Zum Anfang
Nach vorne

Nach oben
