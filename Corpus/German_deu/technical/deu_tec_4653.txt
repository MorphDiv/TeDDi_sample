# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Kapitel 2.
Kleines Tutorial
Nach vorne
Erstellen Sie eine Datei mit dem Namen hallo.php unterhalb des Root-Verzeichnisses Ihres Web-Servers mit dem folgenden Inhalt:
Beispiel 2-1.
Unser erstes PHP-Skript: hallo.php
html head title PHP-Test / title / head body ?php echo "Hallo Welt p";? / body / html
Dieses Skript wird folgende Ausgabe erzeugen:
html head title PHP-Test / title / head body Hallo Welt p / body / html
Beachten Sie, dass dies nicht mit einem CGI-Skript vergleichbar ist.
Die Datei muss nicht ausführbar oder sonst irgendwie speziell sein.
Stellen Sie sich die Datei wie eine normale HTML-Datei vor, die eine spezielle Menge von Tags zur Verfügung stellt, mit denen Sie viele interessante Dinge machen können.
Das Beispiel ist extrem einfach und natürlich brauchen Sie PHP nicht, um eine Seite wie diese zu erstellen.
Denn es macht nicht mehr, als Hallo Welt mit der echo() -Anweisung von PHP auszugeben.
Wenn Sie dieses Beispiel ausprobiert haben und Sie aber keine Ausgabe erhalten haben oder zum Download aufgefordert worden sind oder die komplette Datei als Text erhalten haben, dann ist es sehr wahrscheinlich, dass auf Ihrem Server PHP nicht aktiviert ist.
Fragen Sie in diesem Fall Ihren Administrator und weisen Sie ihn auf das Installations-Kapitel hin.
Wenn Sie PHP-Skripte lokal entwickeln möchten, dann schauen Sie auf die Download-Seite.
Sie können lokal auf jedem Betriebssystem entwickeln, aber sie müssen natürlich auch einen passenden Web-Server installieren.
Der wichtigste Punkt im Beispiel ist, Ihnen das spezielle PHP Tag-Format zu zeigen.
Im Beispiel wurde ?php verwendet, um den Beginn eines PHP-Tags zu kennzeichnen.
Anschließend folgte die PHP-Anweisung.
Mit dem schließenden Tag,?, wurde der PHP-Modus wieder verlassen.
Sie können an jeder Stelle und so oft Sie wollen, in den PHP-Modus wechseln und ihn wieder verlassen.
Anmerkung zu Text-Editoren:
Es gibt eine ganze Reihe von Text-Editoren und Integrated Development Environments (IDEs), mit denen Sie Ihre PHP-Dateien erstellen, bearbeiten und managen können.
Eine Liste solcher Programme finden Sie hier:
PHP Editor 's List.
Wenn Sie einen Editor vorschlagen möchten, besuchen Sie bitte die genannte Seite und bitten Sie den Betreiber der Seite, dass er den Editor der Liste hinzufügt.
Anmerkung zu Textverarbeitungen:
Textverarbeitungen wie StarOffice Writer, Microsoft Word und Abiword sind keine gute Wahl, um PHP-Dateien zu bearbeiten.
Wenn Sie eines dieser Programme für dieses Test-Skript nutzen möchten, dann müssen Sie sicherstellen, dass die Datei als "Nur Text "-Datei gespeichert wird, da PHP sonst das Skript nicht lesen und nicht ausführen kann.
Anmerkung zu Notepad, dem Windows-Standard-Editor:
Wenn Sie Ihre PHP-Skripte mit Notepad schreiben, müssen Sie sicherstellen, dass Ihre Dateien mit der Endung .php gespeichert werden. (Notepad fügt die Endung .txt automatisch an den Dateinamen an, wenn Sie das nicht mit einem der folgenden Schritte verhindern.)
Wenn Sie die Datei speichern und einen Namen für die Datei eingeben sollen, dann setzen Sie den Dateinamen in Anführungszeichen (z.B. "hallo.php ").
Alternativ können Sie auch im "Datei speichern"-Fenster in der Drop-Down-Liste "Dateityp" die Einstellung auf "Alle Dateien "ändern.
Sie können dann den Dateinamen ohne Anführungszeichen eingeben.
Zurück
Zum Anfang
Nach vorne
Kleines Tutorial
Nach oben
Nützliches