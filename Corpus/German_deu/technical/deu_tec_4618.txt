# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne
Diese Funktionen arbeiten mit WDDX zusammen.
Es ist zu beachten, dass alle Funktionen, die Variablen serialisieren, immer das erste Element eines Arrays benutzen, um festzustellen, ob das Array in ein Array oder eine 'Structure' serialisiert wird.
Wenn das erste Element einen String als Schlüssel hat, wird das Array in eine 'Structure' serialisiert, andernfalls in ein Array.
Beispiel 1.
Einen einzelnen String serialisieren

dieses Beispiel erzeugt:

Beispiel 2.
Die Verwendung von inkrementierenden Paketen
?php $pi = 3.1415926; $packet_id = wddx_packet_start("PHP"); wddx_add_vars($packet_id, "pi"); / * So tun, als ob $cities aus einer Datenbank kommt * / $cities = array("Austin", "Novato", "Seattle"); wddx_add_vars($packet_id, "cities"); $packet = wddx_packet_end($packet_id); print $packet;?
Diese Beispiel wird erzeugen:

Zurück
Zum Anfang
Nach vorne

Nach oben
