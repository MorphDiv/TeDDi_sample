# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

Warnung
Diese Funktion ist EXPERIMENTELL.
Das Verhalten, der Funktionsname und alles Andere was hier dokumentiert ist, kann sich in zukünftigen PHP-Versionen ohne Ankündigung ändern.
Seien Sie gewarnt und verwenden Sie diese Funktion auf eigenes Risiko.
Rückgabewert:
Gibt bei Erfolg TRUE zurück, im Fehlerfall FALSE.
Ist der Aufruf der Funktion erfolgreich, steht die Signatur im Parameter signature zur Verfügung.
Die Funktion openssl_sign() errechnet eine Unterschrift für die im Parameter data angegebenen Daten.
Für das hashing der Daten wird SHA1 benutzt und anschliessend wird mit dem privaten Schlüssel verschlüsselt, angegeben mit priv_key_id.
Beachten Sie, dass die Daten selbst nicht verschlüsselt werden.
Beispiel 1. openssl_sign() Beispiel
/ / Annahme: $data enthält die Daten, die signiert werden sollen. / / holen und vorbereiten des privaten Schlüssels aus einer Datei. $fp = fopen( "/ src / openssl-0.9.6 / demos / sign / key.pem", "r"); $priv_key = fread($fp, 8192); fclose($fp); $pkeyid = openssl_get_privatekey($priv_key); / / errechnen der Unterschrift openssl_sign($data, $signature, $pkeyid); / / Löschen des Schlüssels aus dem Speicher openssl_free_key($pkeyid);
Siehe auch openssl_verify().
Zurück
Zum Anfang
Nach vorne

Nach oben
