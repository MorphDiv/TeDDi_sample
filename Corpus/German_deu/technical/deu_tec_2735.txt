# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

Diese Funktion sortiert ein Array so, dass der Zusammenhang zwischen den Indizes und den entsprechenden Arrayelementen erhalten bleibt.
Dies wird hauptsächlich bei assoziativen Arrays verwendet, bei denen die aktuelle Reihenfolge der Elemente bedeutend ist.
Beispiel 1. asort()
$fruits = array ("d"= "Zitrone", "a"= "Orange", "b"= "Banane", "c"= "Apfel"); asort ($fruits); reset ($fruits); while (list ($key, $val) = each ($fruits)) {echo "$key = $val\n";}
Dieses Beispiel würde folgendes ausgeben:
c = Apfel b = Banane a = Orange d = Zitrone
Die Früchte wurden alphabetisch sortiert, und die Zuordnung zwischen Index und Element blieb beibehalten
Sie können das Verhalten der Sortierung mittels dem optionalen Parameter sort_flags beeinflussen, für Details siehe sort().
Siehe auch arsort(), rsort(), ksort() und sort().
Zurück
Zum Anfang
Nach vorne

Nach oben
