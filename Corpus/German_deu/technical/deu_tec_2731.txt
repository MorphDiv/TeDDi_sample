# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

Gibt ein den Parametern entsprechendes Array zurück.
Mit dem = Operator können die Parameter indiziert werden.
Die Syntax "Index = Werte", durch Kommas getrennt, definiert Index und Werte.
Index kann vom Typ String oder numerisch sein.
Wird der Index weggelassen, erstellt die Funktion automatisch einen numerischen Index, der bei 0 beginnt.
Ist der Index als Integer-Wert angegeben, wird der nächste generierte Index der größte Integer Index + 1.
Beachten Sie, dass wenn zwei identische Indexe definiert sind, der letzte den ersten überschreibt.
Das folgende Beispiel zeigt wie man ein zweidimensionales Array erstellt, wie man Schlüssel für assoziative Arrays festlegt, und wie man numerische Indizes in normalen Arrays überspringt und fortsetzt.
Beispiel 1. array()
$fruits = array ("Früchte "= array ("a"= "Orange", "b"= "Banane", "c"= "Apfel"), "Zahlen" = array (1, 2, 3, 4, 5, 6), "Löcher "= array ("erstes", 5 = "zweites", "drittes"));
Beispiel 2.
Automatischer Index mit array()

wird folgendes anzeigen:

Dieses Beispiel erstellt ein auf dem Index 1 basierendes Array.
Beispiel 3.
1-basierter Index mit array()
$erstesquartal = array( 1 = 'Januar', 'Februar', 'März'); print_r($erstesquartal);
wird folgendes ausgeben:
Array ([1] = 'Januar '[2] = 'Februar' [3] = 'März ')
Siehe auch array_pad(), list() und range().
Zurück
Zum Anfang
Nach vorne

Nach oben
