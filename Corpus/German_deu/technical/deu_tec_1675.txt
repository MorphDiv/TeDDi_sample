# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Debuggen von Basic-Programmen
/text/sbasic/shared/01030300.xhp
Debuggen von Basic-Programmen
Variablen;Werte beobachten
Beobachten von Variablen
Laufzeitfehler in Basic
Fehlercodes in Basic
Haltepunkte
Kommandostapel-Fenster
mw deleted &quot; Basic; &quot;
Debuggen von Basic-Programmen
Haltepunkte und Einzelschritt-Ausführung
Mit der Einzelschritt-Ausführung können Sie Ihr Basic-Programm zeilenweise auf Fehler überprüfen.
Da Sie die Ergebnisse eines jeden Einzelschritts sofort sehen können, lassen sich Fehler leicht zurückverfolgen.
Ein Zeiger in der Haltepunkte-Spalte des Editors zeigt die aktuelle Zeile an.
Wenn Sie erzwingen möchten, dass die Programmausführung an einer bestimmten Stelle unterbrochen wird, können Sie auch einen Haltepunkt setzen.
Haltepunkt
-Spalte links im Editorfenster, um in der entsprechenden Zeile einen Haltepunkt zu setzen bzw. zu entfernen.
Wenn das Programm an einen Haltepunkt gelangt, wird die Ausführung unterbrochen.
Einzelschritt
-Ausführung über das Symbol
Einzelschritt
wird auch in Prozeduren und Funktionen verzweigt.
Prozedurschritt
überspringt das Programm Prozeduren und Funktionen als einen einzigen Schritt.
Haltepunkt-Eigenschaften
Die Eigenschaften eines Haltepunkts können Sie über dessen Kontextmenü aufrufen.
Klicken Sie hierzu mit der rechten Maustaste in der Haltepunkte-Spalte auf den Haltepunkt.
aktivieren
und
deaktivieren
, indem Sie im Kontextmenü die Option
Aktiv
auswählen.
Deaktivierte Haltepunkte unterbrechen die Programmausführung nicht.
Eigenschaften
, oder wählen Sie im Kontextmenü der Haltepunkte-Spalte
Haltepunkte
, um den Dialog
Haltepunkte
aufzurufen, in dem Sie weitere Haltepunktoptionen festlegen können.
Haltepunkte
mit den dazugehörigen Zeilennummern im Quelltext an.
Sie können einen ausgewählten Haltepunkt aktivieren oder deaktivieren, indem Sie das Markierfeld
Aktiv
aktivieren bzw. deaktivieren.
Durchlauf
legt fest, wie oft ein Haltepunkt durchlaufen werden kann, bevor das Programm unterbrochen wird.
Wenn Sie 0 eingeben (Standardeinstellung), wird das Programm immer unterbrochen, wenn es auf einen Haltepunkt trifft.
Löschen
, können Sie in diesem Dialog ebenfalls den Haltepunkt ganz entfernen.
Beobachten von Variablenwerten
Beobachter
hinzufügen.
Um der Liste beobachteter Variablen eine Variable hinzuzufügen, geben Sie den Variablennamen in das Textfeld
Beobachter
ein und drücken dann die Eingabetaste.
Der Wert von Variablen wird nur angezeigt, wenn sie sich im Gültigkeitsbereich befinden.
Für Variablen, die an der aktuellen Quelltextposition nicht definiert sind, wird statt eines Werts der Text &quot; Out of Scope &quot; angezeigt.
Sie können auch Arrays zur Beobachtung aufnehmen.
Geben Sie direkt in die Beobachter-Eingabezeile den Namen der Array-Variablen ohne Index an, so wird der Inhalt des gesamten Array angezeigt.
Wenn Sie zur Laufzeit den Mauszeiger über einer vordefinierten Variable im Editorfenster ruhen lassen, wird der Variablenwert in einem Tipp-Hilfefeld angezeigt.
UFI: removed help id
Arbeiten mit dem Aufrufe-Fenster
Bietet einen Überblick der Aufrufhierarchie von Prozeduren und Funktionen.
Sie können am aktuellen Punkt im Quellcode ermitteln, welche Prozeduren und Funktionen andere Prozeduren und Funktionen aufgerufen haben.
Laufzeitfehler