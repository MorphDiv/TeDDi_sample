# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

unserialize() nimmt eine einzelne Variable aus einer serialisierten Datenmenge (siehe unter serialize()) und wandelt sie in einen PHP-Wert um.
Dieser Wert wird als Funktionsergebnis zurück gegeben.
Er kann vom Typ integer, double, string, array oder object sein.
Wurde ein Objekt serialisiert, können dessen Methoden nicht zurück gegeben werden.
Beispiel 1. unserialize() -Beispiel:
/ / Als Beispiel benutzen wir unserialize() um Daten aus einer / / Datenbank nach $session_data zu laden.
Das Beispiel vervollständigt / / das unter serialize() beschriebene. $conn = odbc_connect ("webdb", "php", "moorhuhn"); $stmt = odbc_prepare ($conn, "SELECT data FROM sessions WHERE id = ?"); $sqldata = array ($PHP_AUTH_USER); if (!odbc_execute ($stmt, $sqldata) | | !odbc_fetch_into ($stmt, $tmp)) {/ / wenn execute oder fetch fehlschlägt, initialisiere ein leeres Array $session_data = array();} else {/ / die serialisierten Daten sollten nun in $tmp[0] stehen $session_data = unserialize ($tmp[0]); if (!is_array ($session_data)) {/ / etwas ging schief, also wieder ein leeres Array initialisieren $session_data = array();}}
Zurück
Zum Anfang
Nach vorne

Nach oben
