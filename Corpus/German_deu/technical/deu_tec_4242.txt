# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

Diese Funktion sortiert ein Array.
Die Elemente werden aufsteigend vom niedrigsten zum höchsten Wert sortiert.
Beispiel 1. sort()
?php $fruits = array ("Zitrone", "Orange", "Banane", "Apfel"); sort ($fruits); reset ($fruits); while (list ($key, $val) = each ($fruits)) {echo "fruits[".$key ."] = ".$val ."\n";}?
Dieses Beispiel würde folgendes anzeigen:
fruits[ 0] = Apfel fruits[1] = Banane fruits[2] = Orange fruits[3] = Zitrone
Die Früchte wurden in alphabetischer Reihenfolge sortiert.
Der optionale zweite Parameter sort_flags kann benutzt werden, um das Sortierverhalten mit den folgenden Flags zu beeinflussen.
Flags für Sortiertypen:
SORT_REGULAR - Vergleiche Einträge normal
SORT_NUMERIC - Vergleiche Einträge numerisch
SORT_STRING - Vergleiche Einträge als Strings
Siehe auch arsort(), asort(), ksort(), natsort(), natcasesort(), rsort(), usort(), array_multisort() und uksort().
Anmerkung:
Der zweite Parameter wurde in PHP 4 eingeführt.
Zurück
Zum Anfang
Nach vorne

Nach oben
