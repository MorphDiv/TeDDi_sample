# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Kapitel 12.
Kontroll-Strukturen
Nach vorne
While -Schleifen sind die einfachste Form von Schleifen in PHP.
Sie funktionieren genau wie in C.
Die Grundform einer while -Anweisung lautet:
while (ausdr) Anweisung
Die Bedeutung einer while -Anweisung ist einfach.
Sie weist PHP an, einen in ihr eingebetteten Befehl so lange zu wiederholen, wie die while -Bedingung als TRUE ausgewertet wird.
Der Wert der Bedingung wird immer am Anfang der Schleife geprüft.
Wird der Wert während der Ausführung der Anweisungen innerhalb der while -Schleife verändert, endet die Ausführung dieses Anweisungsblocks erst mit dem Ende der Iteration (Jeder Schleifendurchlauf ist eine Iteration).
Falls die while -Bedingung bereits zu Beginn FALSE ist, werden die Anweisungen der while -Schleife nicht ein einziges Mal durchlaufen.
Wie bei der if -Anweisung kann man mehrere Anweisungen innerhalb der gleichen while -Schleife angeben, indem man sie mit geschweiften Klammern umschließt oder die alternative Syntax gebraucht:
while (ausdr):
Anweisung... endwhile;
Die folgenden Beispiele sind identisch; beide geben Zahlen von 1 bis 10 aus:
/* Beispiel 1 * / $i = 1; while ($i = 10) {print $i++; / * es wird erst $i ausgegeben, bevor der Wert erhöht wird (Post-Inkrement) * /} / * Beispiel 2 * / $i = 1; while ($i = 10): print $i; $i++; endwhile;
Zurück
Zum Anfang
Nach vorne
Alternative Syntax für Kontroll-Strukturen
Nach oben
