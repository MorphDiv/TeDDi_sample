# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

Die Berechnung der Ähnlichkeit zweier Strings erfolgt nach der in "Oliver" [1993] beschreibenen Methode.
Beachten Sie, dass diese Implementierung keinen Stack verwendet wie in Olivers Pseude-Code, dafür aber rekursive Aufrufe, die die Performance erhöhen können (aber nicht müssen).
Beachten Sie auch, dass die Komplexität dieses Algorithmus O( N**3) beträgt, wobei N die Länge der längsten Zeichenkette ist.
Falls Sie als Referenz ein drittes Argument angeben, wird similar_text() ihnen die Ähnlichkeit als Prozentwert errechnen.
Es wird die Anzahl der in beiden Strings übereinstimmenden Zeichen zurück gegeben.
Zurück
Zum Anfang
Nach vorne

Nach oben
