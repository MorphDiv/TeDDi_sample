# language_name_wals:	German
# language_name_glotto:	German
# iso639_3:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Anhang C.
Migration von PHP / FI 2.0 zu PHP 3.0
Nach vorne
Most internal functions have been rewritten so they return TRUE when successful and FALSE when failing, as opposed to 0 and -1 in PHP / FI 2.0, respectively.
The new behaviour allows for more logical code, like $fp = fopen( "/ your / file") or fail("darn !");.
Because PHP / FI 2.0 had no clear rules for what functions should return when they failed, most such scripts will probably have to be checked manually after using the 2.0 to 3.0 convertor.
Beispiel C-9.
Migration von 2.0:
Rückgabewerte, alter Code
$fp = fopen( $file, "r"); if ($fp == -1); echo("Konnte $file zum lesen nicht ouml;ffnen lt;br gt;\n"); endif;
Beispiel C-10.
Migration von 2.0:
Rückgabewerte, neuer Code
$fp = @fopen( $file, "r") or print("Konnte $file zum lesen nicht ouml;ffnen br ;\n");
Zurück
Zum Anfang
Nach vorne
Short-circuited boolean evaluation
Nach oben
Andere Inkompatibilitäten