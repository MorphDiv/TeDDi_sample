# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Waldo Bastian bastian@kde.org
& Philip.Rodrigues; & Philip.Rodrigues.mail;
& kde; für Systemverwalter
& kde; Interna
Überblick
noch nicht verfügbar
Aufbau der Ordner
& kde; gibt eine Ordnerhierarchie vor, die sowohl von der & kde;-Umgebung, als auch von allen & kde;-Programmen benutzt wird. & kde; speichert alle zu & kde; gehörigen Dateien grundsätzlich in einer festgelegten Struktur.
In der Voreinstellung verwendet & kde; zwei Ordnerbäume:
Einen auf Systemebene (zum Beispiel /opt/kde3.
Einen auf Benutzerebene im Persönlichen Ordner eines jeden Benutzers (üblicherweise ~/.kde).
Als Systemverwalter können Sie zusätzliche Ordnerbäume anlegen, die Sie als Profile benutzen können.
& SuSE; & Linux; zum Beispiel verwendet:
$HOME /.kde
/opt/kde3. (Dies ist eine Eigenart von & SuSE;, andere Distributionen verwenden auch /usr oder /usr/kde3
/etc/opt/kde3. (Dies wurde von & SuSE; hinzugefügt).
Wenn Sie das KIOSK Admin Tool v0.7 oder neuer installiert haben, können Sie mit dem folgenden Befehl überprüfen, welche Ordnerbäume benutzt werden: kiosktool-kdedirs --check
& kde; und die & kde;-Programme suchen in allen & kde;-Ordnerbäumen nach Dateien. Die Ordnerbäume werden nach einer Rangfolge durchsucht. Gibt es eine Datei in mehreren Ordnerbäumen, wird die Datei im letzten Ordnerbaum verwendet. Normalerweise hat der Ordnerbaum im Persönlichen Ordner die höchste Priorität. In diesem werden auch alle Änderungen gespeichert.
& eg; werden Informationen über den text/plain & MIME;-Typ in den folgenden Dateien gesucht:
$HOME /.kde/share/mimelnk/text/plain.desktop
/opt/kde3/share/mimelnk/text/plain.desktop
/etc/opt/kde3/share/mimelnk/text/plain.desktop
Änderungen des Benutzers werden in der Datei $HOME /.kde/share/mimelnk/text/plain.desktop gespeichert
Einrichtungsdateien werden etwas anders verarbeitet. Gibt es mehrere Einrichtungsdateien mit gleichem Namen in den Ordnerbäumen, so wird ihr Inhalt zusammengefasst. Maßgebend ist dafür die Rangfolge der Ordnerbäume. Wenn in zwei Dateien der gleiche Schlüssel definiert ist, wird der Wert des Schlüssels aus der Datei mit der höchsten Priorität benutzt.
Wenn zum Beispiel die folgenden beiden Dateien mit diesen Inhalt vorhanden sind:
$HOME /.kde/share/config/foobar
Color=red Shape=circle
/etc/opt/kde3/share/config/foobar
Color=blue Position=10,10
so werden die Dateien zum folgenden Ergebnis zusammengefasst:
Color=red Shape=circle Position=10,10
Ordner festlegen
Umgebungsvariablen
Beispieleinstellung(en)
Kommentar
KDEHOME
~/.kde
KDEROOTHOME
/root/.kde
Eine andere Variable, um zu verhindern, dass nach dem Ausführen von su durch den Systemverwalter in $KDEHOME geschrieben wird.
KDEDIR
/opt/kde3, /usr, /usr/kde3
Distibutionsabhängig. Wird von & kde; 2. benutzt. Falls nicht gesetzt, wird der Standard im Quelltext verwendet.
KDEDIRS
Neu in & kde;3. Kann mehrere durch Komma getrennte Werte enthalten. Wenn nicht gesetzt, wird $KDEDIR verwendet.
Muss nicht gesetzt werden, funktioniert mit den Standardeinstellungen.
Wollen Sie & kde;2 und & kde;3 gleichzeitig benutzen? Setzen Sie $KDEDIR auf & kde; 2 und $KDEDIRS auf & kde; 3.
Ein Mitarbeiter einer Universität könnte beispielsweise diese Einstellung verwenden:
KDEHOME='~/.kde3 'KDEROOTHOME='/root/.kde3' KDEDIRS='/opt/kde_staff:/opt/kde3 '
Benutzerprofile
Im vorigen Beispiel enthält /opt/kde_staff weitere Einstellungen nur für Mitarbeiter. Benutzerprofile ermöglichen Ihnen, diesen Ordner für bestimmte Benutzer zu setzen und für andere wiederum nicht. Fügen Sie das folgende zu /etc/kderc hinzu:
[Directories-staff] prefixes=/opt/kde_staff
Dadurch wird ein Benutzerprofil mit dem Namen staff erzeugt, welches den Ordnerbaum /opt/kde_staff setzt. (Beachten Sie bitte, dass & SuSE; Linux /etc/kde3rc statt /etc/kderc verwendet.) Nun gibt es also ein Benutzerprofil, welches wiederum bestimmten Benutzer zugeordnet werden kann.
Um Profile bestimmten Benutzern zuzuordnen, muss in /etc/kderc eine Zuordnungsdatei festgelegt werden:
[Directories] userProfileMapFile=/etc/kde-user-profile
Nun können Benutzerprofile Benutzern oder & UNIX;-Gruppen zugeordnet werden.
Um das staff-Profil allen Benutzern der & UNIX;-Gruppe staff_members zuzuweisen, fügen Sie das folgende in /etc/kde-user-profile hinzu:
[General] groups=staff_members [Groups] staff_members=staff
Sie können auch ein Profil für einen einzelnen Benutzer erstellen:
[Users] bastian=staff
Nochmal zum Ordnerlayout
Jeder von & kde; benutzte Ordnerbaum hat eine feste Struktur. Ordner, die für einen Ordnerbaum ohne Bedeutung sind oder einfach nicht verwendet werden, müssen nicht zwingend vorhanden sein. Zum Beispiel befinden Sich die Ordner für temporäre Dateien üblicherweise nur unterhalb von $KDEHOME, nicht aber in anderen Ordnerbäumen.
Architektur-spezifische Ordner
Architektur-spezifische (Betriebssystem und CPU-Typ) Ordner:
bin
Für & kde;-Programme.
lib
Für & kde;-Bibliotheken.
lib/kde3
Dieser Ordner enthält Komponenten, Module und andere zur Laufzeit geladene Objekte für & kde; 3. x -Programme.
Gemeinsam genutzte Ordner
Gemeinsam bedeutet in diesem Zusammenhang: Nicht Architektur-spezifisch, können von unterschiedlichen Architekturen gemeinsam benutzt werden.
share/applnk
.desktop -Dateien für das & kde;-Menü (veraltet)
share/applications
.desktop -Dateien für das & kde;-Menü (ab & kde; 3.2)
share/apps
Enthält Dateien für Programme. Jedes Programm legt hier einen Unterordner für programmeigene Daten an.
share/config
Einrichtungsdateien. Diese Dateien erhalten den Namen der zugehörigen Programme mit den angehängten Buchstaben rc. Ein Sonderfall ist die Datei kdeglobals. Diese Datei wird von allen & kde;-Programmen eingelesen.
share/config/session
Dieser Ordner wird von der Sitzungsverwaltung verwendet und findet sich normalerweise unter $KDEHOME. Wenn eine Sitzung beendet wird, speichern Anwendungen Ihren Status in diesem Ordner. Die Dateinamen setzen sich aus dem Programmnamen und einer Nummer zusammen. Die Sitzungsverwaltung ksmserver speichert Referenzen zu diesen Nummern in der Datei ksmserverrc.
share/doc/HTML
Dieser Ordner enthält die Dokumentationen zu & kde;-Programmen. Die Dokumentationen sind kategorisiert in Sprache und Programm zu dem sie gehören. In jedem Ordner finden sich üblicherweise zumindest zwei Dateien: index.docbook, welche die Dokumentation im unformatierten DocBook-Format enthält, und index.cache.bz2, die die gleiche Dokumentation als bzip2 -komprimiertes & HTML; enthält. Die & HTML;-Version wird von & khelpcenter; benutzt. Falls die & HTML;-Version fehlen sollte, wird & khelpcenter; die formatierte Dokumentation aus der DocBook-Version erzeugen, aber das ist ein sehr zeitintensiver Vorgang.
share/icons
In diesem Ordner werden Symbole abgelegt. Die Symbole sind sortiert nach Thema, Größe und Kategorie.un
share/mimelnk
In diesem Ordner befinden sich die .desktop -Dateien, die Informationen über & MIME;-Typen enthalten. & kde; verwendet & MIME;-Typen um Dateitypen zu bestimmen.
share/services
In diesem Ordner befinden sich die .desktop -Dateien, die Dienste beschreiben. Dienste sind so ähnlich wie Programme, werden aber üblicherweise von Programmen anstatt von Benutzer gestartet. Dienste erscheinen nicht im & kde;-Menü.
share/servicetypes
Dieser Ordner enthält die .desktop -Dateien, die Diensttypen beschreiben. Ein Diensttyp repräsentiert üblicherweise eine bestimmte Programmierschnittstelle. Programme und Dienste beschreiben in ihren .desktop -Dateien, welche Diensttypen sie verwenden.
share/sounds
Dieser Ordner enthält Audiodateien.
share/templates
Dieser Ordner enthält Vorlagen zum Erstellen von Dateien verschiedenster Arten. Eine Vorlage besteht aus einer .desktop -Datei, die die Datei beschreibt und eine Referenz auf eine Datei im Unterordner .source enthält. Die Vorlagen in diesem Ordner erscheinen im Menü Neu erstellen... auf der Arbeitsfläche und im Dateibrowser. Wenn ein Benutzer eine Vorlage aus dem Menü auswählt, wird die entsprechende Quelldatei kopiert.
share/wallpapers
Dieser Ordner enthält Bilder, die Sie als Bildschirmhintergrund verwenden können.
Rechner-spezifische Ordner
Es gibt drei Rechner-spezifische Ordner, die normalerweise zu anderen Ordner verlinkt sind. Wenn die Ordner nicht schon existieren, werden mit dem Befehl lnusertemp die folgenden Verknüpfungen und Ordner erzeugt:
$KDEHOME /socket-$ HOSTNAME
Üblicherweise wird /tmp/ksocket-$ USER / für verschiedene & UNIX;-Sockets benutzt.
$KDEHOME /tmp-$ HOSTNAME
Üblicherweise wird /tmp/kde-$ USER / für temporäre Dateien benutzt.
$KDEHOME /cache-$ HOSTNAME
Üblicherweise für /var/tmp/kdecache-$ USER / zwischengespeicherte Dateien benutzt.
Da beide Ordner /tmp und /var/tmp von jedem beschreibbar sind, ist es möglich, das die obigen Ordner bereits existieren und einem anderen Benutzer gehören. In diesem Fall erzeugt lnusertemp einen neuen Ordner mit einem alternativen Namen und setzt die Verknüpfung auf diesen Ordner.
Einrichtungsdateien
& kde; benutzt ein einfaches, textbasiertes Format für alle Einrichtungsdateien. Es besteht aus Schlüssel/Wert-Paaren die in Gruppen angeordnet sind. Alle & kde; Einrichtungsdateien benutzen die UTF -8 Kodierung für Texte außerhalb des ASCII-Bereiches.
Der Beginn einer Gruppe wird von einem Gruppennamen zwischen eckigen Klammern angezeigt. Alle darauf folgenden Schlüssel/Wert-Paare gehören zu dieser Gruppe. Die Gruppe ist zuende, wenn entweder eine neue Gruppe startet oder das Dateiende erreicht wurde. Einträge am Kopf der Datei ohne voranstehende Gruppe gehören zur Standardgruppe.
Das folgende Beispiel zeigt eine Einrichtungsdatei mit zwei Gruppen. Die erste Gruppe enthält die Schlüssel LargeCursor und SingleClick, die zweite Gruppe enthält die Schlüssel Show hidden files und Sort by:
[KDE] LargeCursor=false SingleClick=true
[KFileDialog Settings] Show hidden files=false Sort by=Name
Einträge einer Gruppe enthalten Schlüssel/Wert-Paare getrennt von einem Gleichheitszeichen. Der Schlüssel darf Leerzeichen enthalten und kann Optionen in eckigen Klammern enthalten. Der Teil hinter dem Gleichheitszeichen ist der Wert zu dem Schlüssel. Leerzeichen um das Gleichheitszeichen werden ignoriert, ebenso wie folgende Leerzeichen nach dem Wert. Kurzgesagt, das Format ist:
Schlüssel = Wert
Wenn ein Wert führende Leerzeichen haben soll, so erreicht man diese mit einem linksgerichteten Schrägstrich und einem folgenden s.
Es gibt noch weitere Codes mit linksgerichteten Schrägstrichen; hier eine vollständige Liste:
\\s kann als Leerzeichen benutzt werden.
\ kann als Tabulator benutzt werden.
\\r kann als Wagenrücklaufzeichen benutzt werden.
\ kann als Zeilenvorschubzeichen benutzt werden.
\\\\ kann als linksgerichteter Schrägstrich benutzt werden.
Im folgenden Beispiel beginnt der Wert Caption mit zwei Leerzeichen, während der Wert Description aus drei Zeilen besteht. Zeilenvorschübe in der Backslash-Notation werden zum trennen mehrerer Zeilen benutzt.
[Preview Image] Caption=\\s My Caption Description=This is\ a very long\ description.
Leere Zeilen in Einrichtungsdateien werden einfach ignoriert, genauso wie Zeilen, die mit einem Doppelkreuz beginnen (#). Das Doppelkreuz kann zum Beispiel für Kommentare in Einrichtungsdateien benutzt werden. Wenn die Einrichtungsdatei allerdings von einem & kde;-Programm benutzt wird, so werden die Kommentare nicht beibehalten.
Es können sich mehrere Einrichtungsdateien mit dem selben Namen im Unterordner share/config der verschiedenen & kde;-Ordnerbäume befinden. In dem Fall werden die Inhalte aller gefundenen Dateien Schlüssel für Schlüssel kombiniert. Falls sich der gleiche Schlüssel in der gleichen Gruppe in mehreren Dateien befinden sollte, so wird der Wert von dem Schlüssel genommen, der aus dem Ordnerbaum mit der höchsten Priorität stammt. Einrichtungsdateien unter $KDEHOME haben immer die höchste Priorität. Falls ein Schlüssel einer bestimmten Gruppe innerhalb einer Datei mehrfach vorkommt, so wird der letzte Eintrag verwendet.
Beispiel: Falls $HOME /.kde/share/config/foobar dies enthält: [MyGroup] Color=red Shape=circle und /etc/opt/kde3/share/config/foobar dies: [MyGroup] Color=blue Position=10,10, so lautet das Ergebnis der Verschmelzung:
[MyGroup] Color=red Shape=circle Position=10,10
Wenn $HOME /.kde/share/config/foobar dies enthält: [MyGroup] Color=red Shape=circle [MyGroup] Color=green und /opt/kde_staff/share/config/foobar dies: [MyGroup] Color=purple Position=20,20 und /etc/opt/kde3/share/config/foobar dies: [MyGroup] Color=blue Position=10,10 so ist das Ergebnis:
[MyGroup] Color=green Shape=circle Position=20,20
Um Benutzer davon abzuhalten, eine Voreinstellung zu überschreiben, können Einstellungen als nicht überschreibbar markiert werden. Dies geht individuell, per Gruppe oder per Datei. Ein individueller Eintrag kann gesperrt werden, indem man [$i] hinter den Schlüssel einfügt. Beispiel:
Color[$i]=blue
Eine Gruppe lässt sich sperren, indem man [$i] hinter den Gruppennamen schreibt:
[MyGroup][$i]
Um die gesamte Datei vor dem Übergehen der Werte zu schützen, beginnen Sie die Datei mit [$i] auf einer eigenen Zeile:
[$i]
Wenn also $HOME /.kde/share/config/foobar dies enthält: [MyGroup] Color=red Shape=circle und /etc/opt/kde3/share/config/foobar dies: [MyGroup][$i] Color=blue Position=10,10, so ist das Ergebnis:
[MyGroup] Color=blue Position=10,10
Wenn $HOME /.kde/share/config/foobar dies enthält: [MyGroup] Color=red Shape=circle und /opt/kde_staff/share/config/foobar dies: [MyGroup] Color=purple Shape=rectangle und /etc/opt/kde3/share/config/foobar dies: [MyGroup][$i] Color=blue Position=10,10, so ist das Ergebnis:
[MyGroup] Color=purple Shape=rectangle Position=10,10
Um dynamischere Werte zu erhalten, kann man so genannte Shell Ersetzungen benutzen. Damit ist es möglich, einen Wert aus einer Umgebungsvariable auszulesen oder durch die Ausgaben einen Programms zu ersetzen. Um Shell Ersetzungen nutzen zu können, muss der jeweilige Schlüssel mit dem Parameter [$e] versehen werden. Die ersetzte Form wird üblicherweise nach der ersten Benutzung als Text in die benutzerdefinierte Einrichtungsdatei gespeichert. Um dies zu verhinden, kann man den Schlüssel zusätzlich sperren, indem man [$ei] benutzt. Natürlich kann der Benutzer dann den Wert nicht mehr selber festlegen.
Im folgenden Beispiel wird der Wert des Schlüssels Host durch die Ausgabe des Programms hostname festgelegt. Diese Einstellung ist zusätzlich gesperrt, um sicherzustellen, dass diese Einstellung immer dynamisch bestimmt wird.
Der Wert für den Schlüssel Email wird zusammengesetzt aus den Werten der Umgebungsvariablen $USER und $HOST. Wenn joe auf joes_rechner angemeldet ist, so ist das Ergebnis also joe@joes_rechner. Diese Einstellung ist nicht gesperrt.
[Mail Settings] Host[$ie]=$(hostname) Email[$e]=${USER}@${HOST}
Die meisten Schlüssel können mit einem Sprachcode indexiert werden. In dem Fall wird die vom Benutzer ausgewählte Sprache verwendet, um den korrekten Wert aufzufinden. Falls die Standardsprache (Amerikanisches Englisch) ausgewählt ist, wird der Schlüssel ohne Index herangezogen.
Im folgenden Beispiel ist der Wert von Caption abhängig von der Sprache des Benutzers. Falls der Benutzer Französisch ausgewählt hat (Ländercode fr), ist der Wert des Schlüssels Ma Leacute;gende. In allen anderen Fällen ist der Wert My Caption.
[Preview Image] Caption=My Caption Caption[fr]=Ma Leacute;gende
Im folgenden Beispiel ist der Wert von Caption abhängig von der Sprache des Benutzers. Falls der Benutzer Französisch ausgewählt hat (Ländercode fr), ist der Wert des Schlüssels Ma Leacute;gende. In allen anderen Fällen ist der Wert My Caption.
Im allgemein sind die möglichen Einträge in Einrichtungsdateien von & kde; nicht dokumentiert. Mit & kde; 3.2 wurde damit begonnen, diesen Nachteil zu ändern. Unter $KDEDIR /share/config.kcfg können Dateien liegen, die eine formale Beschreibung der möglichen Einträge einer Einrichtungsdatei enthalten. Diese werden (falls vorhanden) von dem & kde; Einrichtungsdatei-Editor benutzt.
Hier ist ein Beispiel für eine & XML;-Einrichtungsdatei:
& lt;?xml version="1.0 "encoding="UTF-8"?gt; & lt;!DOCTYPE kcfg SYSTEM" http://www.kde.org/standards/kcfg/1.0/kcfg.dtd"gt; & lt;kcfggt; & lt;kcfgfile name="korganizerrc"/gt; & lt;group name="General"gt; & lt;entry type="Bool "key="Auto Save"gt; & lt;labelgt;Enable automatic saving of calendarlt;/labelgt; & lt;defaultgt;truelt;/defaultgt; & lt;/entrygt; & lt;entry type="Int" key="Auto Save Interval"gt; & lt;defaultgt;10lt;/defaultgt; & lt;/entrygt; & lt;/groupgt; & lt;/kcfggt;
Dies hat die selbe Wirkung wie:
[General] Auto Save=false Auto Save Interval=25
Der & kde; Startvorgang
& kdm;
Wird immer als Systemverwalter (root) ausgeführt! Verwendet $KDEDIR /share/config/kdmrc und /etc/X11/xdm/Xservers. Die letztere Datei enthält Einträge der Art:
:0 local /usr/X11R6/bin/X :0 vt07
Wichtige Startdateien sind auch:
[X-*-Core] Sektion in kdmrc
Einrichtung - /etc/X11/xdm/Xsetup
Benutzer gibt Benutzername & Passwort ein
Startvorgang - /etc/X11/xdm/Xstartup - als root einrichten
Arbeitssitzung - /etc/X11/xdm/Xsession - startet die Arbeitssitzung als Benutzer
= Für eine KDE-Arbeitssitzung: kde oder startkde
= Wenn vorhanden ~/.xsession oder ~/.xinitrc
Reset - /etc/X11/xdm/Xreset - nach Beenden der Arbeitssitzung
Das & kde;-Startskript: startkde
Der & kde; Startvorgang beginnt mit dem Skript startkde. In den meisten Fällen wird das Skript vom Displaymanager aufgerufen (kdm;), sobald der Benutzer sich angemeldet hat. Es gibt zwei sehr wichtige Zeilen in diesem Skript:
LD_BIND_NOW=true kdeinit4 +kcminit_startup and kwrapper4 ksmserver $KDEWM
Die erste Zeile startet den Hauptprozess kdeinit4. kdeinit4 wird zum Starten aller anderen & kde;-Programme benutzt. Es erscheint in der Ausgabe von ps aux als kdeinit: Running.... Die Argumente nach kdeinit4 sind die Namen von zusätzlichen zu startenden Programmen. Das Zeichen + bestimmt, dass kdeinit4 warten soll, bis der Prozess sich beendet. kdeinit4 startet auch klauncher und kded.
Die zweite Zeile weist kdeinit4 an, die Sitzungsverwaltung ksmserver zu starten. Die Sitzungsverwaltung bestimmt die Laufzeit einer Sitzung. Wenn dieser Prozess beendet wird, ist der Benutzer abgemeldet.
Hintergrundprozesse
Alle & kde; Hintergrundprozesse sind Benutzer-spezifisch: anders als System-Daemons werden sie nicht unter mehreren Benutzern geteilt. Sie sind sowohl einmalig pro Benutzer, als auch einmalig pro X-Server. Diese Prozesse sind:
dcopserver
Arbeitsflächen-Kommunikation
kded
Allgemeiner Dienst-Daemon
Löst eine Sycoca Datenbankupdate aus, falls nötig.
kcminit
Initialisierungsdienst
Lesen Sie für weitere Informationen.
klauncher
Programmstarter (dies ist nicht der Dialog, den Sie mit Alt; F2 erhalten!)
Lesen Sie für weitere Informationen.
knotify
Benutzer-Benachrichtigungen.
Lesen Sie für weitere Informationen.
ksmserver
Sitzungsverwaltung
Lesen Sie für weitere Informationen.
kdeinit
kdeinit wird zum Starten aller anderen & kde;-Programme benutzt. kdeinit kann sowohl normale Binärprogramme als auch kdeinit -ladbare Module (KLM s) starten. KLM s funktionieren wie normale Binärprogramme, können aber wesentlich effizienter gestartet werden. KLM s befinden sich im Ordner $KDEDIR /lib/kde3.
Der Nachteil ist, dass diese Programme in der Ausgabe von top und ps als kdeinit erscheinen. Benutzen Sie top -c oder ps aux um den echten Programmnamen zu sehen:
% ps aux waba 23184 0.2 2.1 23428 11124? S 21:41 0:00 kdeinit4: Running... waba 23189 0.2 2.4 25136 12496? S 21:41 0:00 kdeinit4: klauncher waba 23192 0.7 2.8 25596 14772? S 21:41 0:00 kdeinit4: kded waba 23203 0.8 3.4 31516 17892? S 21:41 0:00 kdeinit4: knotify
kdeinit: Running... ist das Hauptprogramm von kdeinit. Die anderen aufgelisteten Programme wurden als KLM s gestartet.
Wenn kdeinit das erste Mal startet, lädt es klauncher und kded sowie jedes weitere auf der Befehlszeile in startkde angegebene Programm. Dies ist normalerweise kcminit_startup.
kcminit
kcminit startet die Initialisierungsdienste während dem Startvorgang. Initialisierungsdienste sind in den .desktop-Dateien von Programmen oder Diensten mit dem Schlüssel X-KDE-Init gekennzeichnet:
[Desktop Entry] Encoding=UTF-8 Exec=kcmshell4 energy Icon=energy_star Type=Application X-KDE-Library=energy X-KDE-Init=energy
Initialisierungsdienste werden üblicherweise zum Initalisieren von Hardware basierend auf benutzerdefinierten Einstellungen benutzt.
kcminit --list zeigt Ihnen alle Initialisierungsdienste an und kcminit dienst kann zum expliziten Start eines Dienstes verwendet werden. Dies kann & eg; bei der Fehleranalyse hilfreich sein, falls ein Dienst Probleme beim Start bereitet.
Der Daemon klauncher ist für die Aktivierung von Diensten in & kde; verantwortlich. Er arbeitet zum Starten neuer Prozesse Hand in Hand mit dem Hauptprozess kdeinit. & kde;-Programme kommunizieren zum Starten von neuen Programmen oder Diensten mit klauncher über & DCOP;.
Dies sieht man schnell an der Fehlermeldung KLauncher ist nicht via DBus erreichbar, die entweder auf ein ernsthaftes Problem mit dcopserver hinweist, oder bedeutet, dass klauncher abgestürzt ist.
klauncher kann mit dem Befehl kdeinit neugestartet werden. Wenn Sie dies tun, stellen Sie vorher bitte sicher, dass die Umgebungsvariablen $HOME, $DISPLAY und $KDEDIR(S) richtig eingestellt sind!
Die Hauptaufgabe von knotify ist das Durchreichen von Audio-Benachrichtigungen an den Sound-Server. Es werden auch andere Benachrichtigungsmethoden unterstützt.
KSMServer
ksmserver ist die Sitzungsverwaltung von & kde;. Beim Start lädt die Sitzungsverwaltung verschiedene Autostart-Programme und stellt Programme aus vorigen Sitzungen wieder her. Autostart-Programme werden durch .desktop -Dateien im Ordner $KDEDIR /share/autostart gekennzeichnet. Ob ein Programm tatsächlich automatisch gestartet wird, hängt von dem Schlüssel/Wert-Paar X-KDE-autostart-condition in der .desktop -Datei ab.
Die Datei ktip.desktop enthält zum Beispiel:
X-KDE-autostart-condition=ktiprc:TipOfDay:RunOnStart:true
Das bedeutet, dass die Datei ktiprc nach dem Eintrag RunOnStart in der Gruppe [TipOfDay] durchsucht wird. Wenn kein solcher Eintrag gefunden wird, wird true angenommen, was wiederum bedeutet, dass ktip automatisch gestartet wird.
Einige der von ksmserver automatisch gestarteten Programme sind:
kdesktop
Die & kde; Arbeitsfläche
& kicker;
Die & kde; Kontrollleiste
ktip
Der Tipp des Tages
kwrited
Ein Werkzeug für den Empfang von Systemmeldungen die an den Benutzer gesendet wurden
& klipper;
Die Zwischenablage in der Kontrollleiste
kalarm
Ein Programm, das Sie frühzeitig an Ereignisse und Termine erinnert.
kdesktop wiederum startet seinerseits die Programme in $KDEHOME /Autostart. kdesktop öffnet automatisch alle Dateien die in diesem Ordner gespeichert sind, inklusive Dokumente, Binärdateien oder Programm in der Form von .desktop -Dateien.
Die & kde; Sitzungsverwaltung stellt auch eine der vorherigen Sitzungen wieder her. Eine Sitzung besteht aus Programmen und Programm-spezifischen Informationen, die den Status eines Programms zum Zeitpunkt beschreiben, als die Sitzung beendet wurde. Sitzungen werden in der Datei ksmserverrc gespeichert, die wieder Referenzen auf die Programm-spezifischen Informationen enthält. Diese Informationen werden unter $KDEHOME /share/config/session abgelegt. Die Statusinformationen von & kwin; & eg; enthalten die Platzierung der Programmfenster aller anderen Programme in der Sitzung.
Umgebungsvariablen
Einige wichtige, von & kde; genutzte Umgebungsvariablen:
$KDEDIR
Muss gesetzt sein, falls KDEDIRS nicht gesetzt ist. Diese Variable zeigt auf den Basisordner von & kde;. Dadurch ist es & kde; möglich, die Datendateien wie Symbole, Menüs und Bibltiotheken aufzufinden.
$KDEDIRS
Überschreibt KDEDIR und kann mehrere durch Komma getrennte Ordner-Einträge enthalten, in denen & kde; nach seinen Daten sucht. Dies kann sinnvoll sein, wenn Sie einige Programme in einem anderen Präfix als & kde; installieren möchten bzw. müssen.
$KDEHOME
Falls nicht gesetzt, benutzt & kde; ~/.kde als Ordner zum Speichern aller persönlichen Daten und Änderungen.
$KDEROOTHOME
Wenn nicht gesetzt, benutzt & kde; ~root/.kde als Ordner für persönliche Daten des Systemverwalters (root). Diese Variable wurde eingeführt, um zu verhindern, dass normale Benutzerdaten als root überschrieben werden, wenn ein Programm mit su aufgerufen wurde.
$KDEWM
Falls die Variable KDMWM gesetzt wurde, so wird deren Wert innerhalb von startkde als & kde;s Fenstermanager benutzt. Voreinstellung ist sonst & kwin;.
$KDE_LANG
Ändert die & kde; Spracheinstellungen. Zum Beispiel bewirkt der Aufruf KDE_LANG=fr kprogram &, dass das Programm mit der französischen Übersetzung gestartet wird (sofern die nötigen Dateien installiert sind).
$KDE_MULTIHEAD
Wenn Sie diese Variable auf true einstellen, so teilen Sie & kde; mit, dass es auf einem System mit mehreren Monitoren läuft (ein sog. Multi-Head System).
$KDE_FORK_SLAVES
(Seit & kde; 3.2.3) Setzen Sie diese Variable, um KIO Ein-/Ausgabemodule direkt von dem Programm selbst starten zu lassen. Normalerweise werden Ein-/Ausgabemodule über klauncher / kdeinit gestartet. Diese Option ist nützlich, wenn das KIO Ein-/Ausgabemodul in der gleichen Umgebung laufen muss, wie das Programm selbst. Das kann & eg; bei der Anwendung Clearcase der Fall sein.
$KDE_HOME_READONLY
Setzen Sie diese Variable, um Ihren Persönlichen Ordner als nur-lesend eingehängt zu kennzeichnen.
$KDE_NO_IPV6
(Seit & kde; 3.2.3) - Setzen Sie diese Variable, um die Unterstützung für IPv6 und IPv6 DNS -Auflösung zu deaktivieren.
$KDE_IS_PRELINKED
(Seit & kde; 3.2) - Setzen Sie diese Variable, um anzuzeigen, dass Sie vorverlinkte & kde;-Programme und -Bibliotheken haben. Dies deaktiviert kdeinit.
$KDE_UTF8_FILENAMES
Wenn diese Umgebungsvariable gesetzt ist, geht & kde; davon aus, dass alle Dateinamen in UTF-8 kodiert sind, egal, wie das aktuelle Locale eingestellt ist.
$KDE_FULL_SESSION
(Seit & kde; 3.2) Wird automatisch beim & kde; Startvorgang gesetzt und wird & eg; von & konqueror; genutzt, um festzustellen, ob das Programm nach dem Beenden im Speicher gehalten werden soll (für zukünftige Nutzung) oder nicht. (kdesu; benutzt diesen Mechanismus ebenfalls, und er kann auch zur Fehlersuche nützlich sein.)
$KDESYCOCA
Mit dieser Variable können Sie den Pfad und den Namen der erzeugten & kde; Systemkonfiguration-Zwischenspeicherdatei angeben
$KDETMP
Ermöglicht Ihnen, einen anderen Pfad als /tmp für & kde;s temporäre Dateien zu verwenden.
$KDEVARTMP
Ermöglicht Ihnen, einen anderen Pfad als /var/tmp für & kde;s temporäre variable Dateien zu verwenden.
$XDG_DATA_HOME
(Seit & kde; 3.2) Gibt den Basisordner an, in dem Benutzer-spezifische Datendateien gespeichert werden sollen. Die Voreinstellung ist $HOME /.local/share.
$XDG_DATA_DIRS
(Seit & kde; 3.2) Gibt in einer Rangfolge zusätzlich zu $XDG_DATA_HOME weitere Basisordner für Benutzer-spezifische Datendateien an. Die Voreinstellung ist /usr/local/share/:/usr/share /.
& kde; fügt weitere Orte aus $KDEDIRS und Profilen hinzu. Wird für .desktop - und .directory -Menüdateien benutzt. .desktop -Dateien unter $XDG_DATA_DIRS /applications und .directory -Dateien unter $XDG_DATA_DIRS/desktop-directories.
$XDG_CONFIG_HOME
(Seit & kde; 3.2) Gibt den Basisordner an, unter dem Benutzer-spezifische Einrichtungsdateien gespeichert werden sollen. Die Voreinstellung ist $HOME /.config.
$XDG_CONFIG_DIRS
(Seit & kde; 3.2) Gibt in einer Rangfolge weitere Basisordner an, in denen Einrichtungsdateien zusätzlich zu $XDG_CONFIG_HOME gesucht werden. Die Voreinstellung ist /etc/xdg. & kde; fügt weitere Orte aus $KDEDIRS und Profilen hinzu. Wird von .menu -Beschreibungen unter $XDG_CONFIG_DIRS /menus genutzt.
Das Mysterium kdeinit
kdeinit wird zum Starten aller anderen & kde;-Programme benutzt. kdeinit kann normale Binärprogramme als auch kdeinit Ladbare Module (KLM s). KLM s funktionieren genauso, wie normale Binärprogramme, können jedoch wesentlich effizienter gestartet werden. KLM s befinden sich im Ordner $KDEDIR /lib/kde3.
% ps aux | grep bastian bastian 26061 0.0 2.2 24284 11492? S 21:27 0:00 kdeinit: Running... bastian 26064 0.0 2.2 24036 11524? S 21:27 0:00 kdeinit: dcopserver bastian 26066 0.1 2.5 26056 12988? S 21:27 0:00 kdeinit: klauncher bastian 26069 0.4 3.2 27356 16744? S 21:27 0:00 kdeinit: kded bastian 26161 0.2 2.7 25344 14096? S 21:27 0:00 kdeinit: ksmserver bastian 26179 1.1 3.4 29716 17812? S 21:27 0:00 kdeinit: kicker bastian 26192 0.4 3.0 26776 15452? S 21:27 0:00 kdeinit: klipper bastian 26195 1.0 3.5 29200 18368? S 21:27 0:00 kdeinit: kdesktop
Wahrscheinlich haben Sie bereits festgestellt, dass es auf diese Weise schwierig ist, einen Prozess gewaltsam zu beenden:
% killall kdesktop kdesktop: no process killed
Vielleicht haben Sie ja schonmal versucht, Ihr Ziel mittels killall kdeinit zu erreichen... doch das Beenden aller kdeinit-Prozesse beendet & kde; als Ganzes.
Es gib zwei einfache Lösungen:
% kdekillall kdesktop oder das gute alte% kill 26195
kdekillall ist Teil der & kde;-Pakets kdesdk.
& kde; Anpassen
Arbeitsflächensymbole
& kde; benutzt verschiedene Symboltypen:
Dokumente
Verknüpfungen zu Webseiten (mittels .desktop -Dateien)
Verknüpfungen zu Programmen (mittels .desktop -Dateien)
Geräte - Laufwerke, Partitionen & Peripherie:
Explizite Symbole mittels einer .desktop -Datei
Automatisch über das devices: / / Ein-/Ausgabemodul
Distributionsabhängige (eg; & SuSE;s Arbeitsplatz)
Webseiten
Verknüpfungen zu Webseiten benutzen .desktop -Dateien: Neu erstellen... Verknüpfung zu Adresse (URL).... Ändern Sie das Symbol über den Eigenschaften -Dialog. Die resultierende .desktop -Datei sieht so aus:
[Desktop Entry] Encoding=UTF-8 Icon=/opt/kde3/share/apps/kdesktop/pics/ksslogo.png Type=Link URL=http://www.kde.org /
Programme
Verknüpfungen auf Programme benutzen .desktop -Dateien: Neu erstellen... Datei Verknüpfung auf Programm. Die Details müssen Sie selbst eingeben. Oder ziehen Sie einen Eintrag aus dem & kde;-Menü auf die Arbeitsfläche, das ist einfacher.
[Desktop Entry] Encoding=UTF-8 GenericName=IRC Client GenericName[af]=Irc Klieuml;t GenericName[de]=IRC Programm... GenericName[zu]=Umthengi we IRC SwallowExec= Name=KSirc Name[af]=Ksirc Name[de]=KSirc...
Textbaustein
Übersetzte, allgemeine Beschreibung. Wird nicht auf der Arbeitsfläche benutzt.
Altlasten, können entfernt werden
Der übersetzte Name, so wie er auf der Arbeitsfläche erscheint
Arbeitsflächensymbole
... Name[zu]=Ksirc MimeType= Exec=ksirc %i %m Icon=ksirc TerminalOptions= Path= Type=Application Terminal=0 X-KDE-StartupNotify=true X-DCOP-ServiceType=Multi Categories=Qt;KDE;Network
Die unterstützten & MIME;-Typen, wird nicht auf der Arbeitsfläche genutzt.
Der auszuführende Befehl
Das Symbol. Aus dem Symbol-Design oder der gesamte Pfad.
Wird nur verwendet, wenn ein Terminal benutzt wird.
Der Arbeitsordner für den Befehl
Typinformationen
Benutzen Sie hier einen wahren Wert, wenn ein Terminal benötigt wird (Textprogramm).
Zeigt einen hüpfenden Cursor während dem Startvorgang an.
Wurde das Programm korrekt gestartet? Entfernen Sie dies, falls das nicht funktioniert.
Kategorien für das & kde;-Menü, wird nicht auf der Arbeitsfläche benutzt.
Die Exec -Option in .desktop -Dateien
Nach dem Befehl können Sie zahlreiche Platzhalter angeben, die durch echte Werte ersetzt werden, wenn das Programm gestartet wird:
%f
Ein einfacher Dateiname; wird & eg; benutzt, wenn eine Datei oder ein Symbol auf eine Verknüpfung gezogen wird.
%F
Eine Dateiliste; wird von Programmen benutzt, die mehrere Dateien gleichzeitig öffnen können.
%u
Eine einzelne Adresse (URL), falls das Programm mit & FTP;, oder & HTTP;-Adressen umgehen kann.
%U
Eine Liste von Adressen (URL;s). Allerdings werden erst die angegebenen Dateien heruntergeladen und dann die lokale Datei an das Programm übergeben!
%d
Der Ordner der zu öffnenden Datei. Dies ist nützlich, wenn das Programm die Datei im aktuellen Arbeitsordner erwartet.
%D
Eine Ordnerliste, nicht sonderlich nützlich.
%i
Das Symbol. Ist dasselbe wie die Option --icon. Das & kde;-Programm wird das Symbol aus der Zeile Icon = in der Fensterleiste anzeigen.
%m
Das Minisymbol; eine Altlast.
%c
Der Titel. Ist dasselbe wie die Option --caption. Das & kde;-Programm wird den Titel aus der Zeile Name = in der Fensterleiste anzeigen.
Beispiele:
Exec -Zeile
Ausgeführter Befehl
ksirc %i
ksirc --icon ksirc
cd %d; kedit $(basename %f)
cd /tmp; kedit file.txt
Geräte
Verknüpfungen zu Geräten benutzen .desktop -Dateien: Neu erstellen... - > Gerät
Definieren der Arbeitsflächensymbole
Es gibt mehrere Stellen, an denen Arbeitsflächensymbole definiert werden können:
~/Desktop: kopiert von /etc/skel/Desktop
$KDEDIR /apps/kdesktop/Desktop (zusammengeführt)
$KDEDIR /apps/kdesktop/DesktopLinks (kopiert)
Gerätesymbole (dynamisch zusammengeführt)
Dies ist Distributionsabhängig. SuSE Linux kopiert einige Symbole in startkde.theme aus /opt/kde3/share/config/SuSE/default /.
Das & kde;-Menü
Wie es funktioniert
Mit & kde; 3.2 wurde ein allgemeines, offenes Format eingeführt: http://freedesktop.org/Standards/menu-spec /.
Vor & kde; 3.2:
Eine Ordnerstruktur unter share/applnk.
Die Ordnerstruktur repräsentierte die Menüstruktur.
Jede einzelne .desktop -Datei stellte ein Programm dar.
Es war schwierig, die Menüstruktur in & kde; 3.2 neu zu ordnen. Daher wurde das neue Menüformat eingeführt:
Eine Menüstruktur wird in einer einzelnen .menu-Datei festgelegt.
Basiert auf Kategorien
Wird gemeinsam von GNOME und & kde; benutzt
Unterstützt auch weiterhin applnk-Menüeinträge
Ein Beispiel aus der Datei applications.menu:
& lt;Menugt; & lt;Namegt;Officelt;/Namegt; & lt;Directorygt;suse-office.directorylt;/Directorygt; & lt;Includegt; & lt;Filenamegt;Acrobat Reader.desktoplt;/Filenamegt; & lt;Filenamegt;kde-kpresenter.desktoplt;/Filenamegt; & lt;Filenamegt;kde-kword.desktoplt;/Filenamegt; & lt;/Includegt; & lt;Menugt;
Menüeintrag mit 3 Programmen:
/usr/share/applications/Acrobat Reader.desktop
/opt/kde3/share/applications/kde/kpresenter.desktop
/opt/kde3/share/applications/kde/kword.desktop
Und wo werden sie abgelegt?
.menu -Dateien beschreiben die Menüstruktur. Sie werden in $KDEDIR /etc/xdg/menus und /etc/xdg/menus gespeichert. Dort wird die systemweite Menüstruktur gespeichert; diese Ordner werden mit $XDG_CONFIG_DIRS bestimmt. In $HOME /.config/menus werden Benutzer-spezifische Änderungen an der Menüstruktur gespeichert. Dieser Ordner wird über $XDG_CONFIG_HOME bestimmt. Weitere Informationen zu diesem Thema finden Sie unter http://www.freedesktop.org/Standards/basedir-spec.
.desktop -Dateien beschreiben die einzelnen Programme und befinden sich in $KDEDIR /share/applications, /usr/share/applications, und /usr/local/share/applications. Dies sind die systemweiten .desktop -Dateien und die Speicherorte werden von $XDG_DATA_DIRS bestimmt.
$HOME ./local/applications enthält Benutzer-spezifische .desktop -Dateien und Änderungen. Dieser Speicherort wird von $XDG_DATA_HOME bestimmt. Weitere Informationen zu diesem Thema finden Sie unter http://www.freedesktop.org/Standards/basedir-spec.
.directory -Dateien, die die Untermenüs beschreiben, liegen in: $KDEDIR /share/desktop-directories, /usr/share/desktop-directories und /usr/local/share/desktop-directories. Dies sind die systemweiten .directory -Dateien, deren Speicherort von $XDG_DATA_DIRS bestimmt wird. Die Benutzer-spezifischen Dateien und Änderungen werden in $HOME /.local/desktop-directories gespeichert. Dieser Speicherort wiederum wird von $XDG_DATA_HOME bestimmt. Weitere Informationen zu diesem Thema finden Sie unter http://www.freedesktop.org/Standards/basedir-spec.
& lt;Menugt; & lt;Namegt;Artlt;/Namegt; & lt;Directorygt;suse-edutainment-art.directorylt;/Directorygt; & lt;Includegt; & lt;Categorygt;X-SuSE-Artlt;/Categorygt; & lt;/Includegt; & lt;/Menugt;
Art ist der interne Name für dieses Menü. suse-edutainment-art.directory legt den Namen und das Symbol für diesen Ordner fest, und das Menü enthält alle Programme, die X-SuSE-Art als ihre Kategorie auflisten. Beispiel:
Categories=Qt;KDE;Education;X-SuSE-Art
suse-edutainment-art.directory legt Name und Symbol für dieses Menü fest:
[Desktop Entry] Name=Art and Culture Icon=kcmsystem
Übliche Fallstricke
Programme die sich nicht im Menü befinden, sind im Hinblick auf andere Programme und Dateizuordnungen nicht existent: Wenn Sie ein Programm aus dem Menü entfernen, geht & kde; davon aus, dass Sie es nicht benutzen möchten.
Wenn bestimmte Menüeinträge unerwünscht sind, dann stellen Sie diese in ein .hidden -Untermenü oder in ein dafür bestimmtes Menü mit der Option NoDisplay=true in seiner .directory -Datei.
Notwendige Menüs
In $KDEDIR /etc/xdg/menus/applications-merged / befindet sich kde-essential.menu. Diese Datei inkludiert einige notwendige Menüs, die normalerweise nicht im & kde;-Menü angezeigt werden:
Das Kontrollzentrum hat ein verstecktes Einstellungsmenü, dessen Inhalt von kde-settings.menu bestimmt wird und dessen Symbol und Name von kde-settings.directory bestimmt wird.
Das KDE Infozentrum hat ein verstecktes Informationsmenü, dessen Inhalt in kde-information.menu und dessen Symbol und Name in kde-information.directory bestimmt wird.
Die Bildschirmschoner benutzen ein verstecktes System/Screensavers-Menü, dessen Inhalt von kde-screensavers.menu und dessen Symbol und Name von kde-system-screensavers.directory bestimmt wird. $KDEDIR /share/desktop-directories/kde-system-screensavers.directory enthält:
NoDisplay=true
Menüs im veralteten Stil
& kde; unterstützt auch weiterhin Menüs im alten Stil, der durch eine Ordnerstruktur in $KDEDIR /share/applnk (systemweit) und $HOME /.kde/share/applnk bestimmt wird. Die Platzierung des Programms wird durch den Speicherort in der Ordnerstruktur bestimmt, es sei denn, die .desktop -Datei enthält die Zeile Categories =. In dem Fall wird der Platz im Menü durch die Kategorie bestimmt.
KSycoca
KSycoca hält einen Zwischenspeicher der Menüstruktur und der Informationen über alle verfügbare Programme vor. Sie können die Datenbank mit dem Befehl kbuildsycoca4 neu aufbauen lassen. Die erzeugte Datenbank befindet sich in /var/tmp/kdecache-${ USER }/ksycoca. Sie wird automatisch von KDED auf dem aktuellen Stand gehalten, beim & kde; Startvorgang geprüft und während der Sitzung von KDED auf Änderungen überwacht.
Um das Überwachen auf Änderungen abzuschalten (schließlich könnte das über NFS zu Problemen führen), fügen Sie diesen Eintrag zu kderc hinzu:
[General] CheckSycoca=false
Sie können das Neuerzeugen auch erzwingen, indem Sie touch $KDEDIR /share/services/update_ksycoca ausführen.
& kmenuedit;
& kmenuedit; ist eigentlich für Ein-Benutzer-Umgebungen gedacht. Änderungen werden wie folgt abgelegt: Menüstruktur: ~/.config/menus/applications-kmenuedit.menu, Programme: ~/.local/share/applications / und Untermenüs (Symbole, Namen): ~/.local/share/desktop-directories /. Das KIOSK Admin Werkzeug benutzt & kmenuedit; und kopiert die gemachten Änderungen dann nachträglich in Profil- oder Systemweite Ordner.
Die & kde;-Kontrollleiste
Die & kde; Kontrollleiste ist auch unter dem Namen & kicker; bekannt. Sie ist modular aufgebaut und enthält die folgenden Komponenten:
Miniprogramme
Programmknöpfe
Spezialknöpfe
In der Voreinstellung enthält die Kontrollleiste diese Miniprogramme: Arbeitsflächenumschalter - zeigt virtuelle Arbeitsflächen an Fensterleiste Systembereich Uhr und die folgenden Spezialknöpfe:
Das & kde;-Menü
Der Knopf Arbeitsfläche anzeigen
Es werden (abhängig vom verfügbaren Platz) noch weitere Programmknöpfe hinzugefügt:
Der Knopf Persönlicher Ordner
Der Knopf Webbrowser
Der Knopf Mail-Programm
Dateizuordnungen
Mit Dateizuordnungen werden bestimmte Dateitypen einem oder mehreren Programmen zugeordnet. Der Typ einer Datei wird mit Hilfe seines & MIME;-Typs bestimmt. Die & kde; bekannten & MIME;-Typen befinden sich in $KDEDIR /share/mimelnk. Jede Programmeigene .desktop -Datei enthält eine Liste der vom Programm unterstützten & MIME;-Typen.
kview.desktop:
MimeType=image/gif;image/x-xpm;image/x-xbm;image/jpeg; image/x-bmp;image/png;image/x-ico;image/x-portable-bitmap; image/x-portable-pixmap;image/x-portable-greymap; image/tiff;image/jp2
kuickshow.desktop:
MimeType=image/gif;image/x-xpm;image/x-xbm;image/jpeg; image/png;image/tiff;image/x-bmp;image/x-psd;image/x-eim; image/x-portable-bitmap;image/x-portable-pixmap; image/x-portable-greymap
Beide können mit dem Typ image/gif umgehen. Welches Programm wird also nun benutzt um eine .gif -Datei zu öffnen?
Das Programm mit der höchsten Priorität! kview.desktop enthält den Eintrag InitialPreference=3, und kuickshow.desktop wiederum enthält InitialPreference=6. Also wird & kuickshow; zum Öffnen von .gif -Dateien benutzt.
Wie kann man & kview; als Voreinstellung festlegen?
Benutzer können die Dateizuordnungen im & kcontrolcenter; ändern. Dieses Änderungen werden in $HOME /.kde/share/config/profilerc gespeichert. Um die gleichen Einstellungen für mehrere Benutzer zu verwenden, speichern Sie die Änderungen in einem Profilordner oder dem globalen & kde; Einrichtungsordner.
kde;-Einstellungen sperren
Wie es funktioniert - die Grundlagen
& kde;s Möglichkeiten zum Sperren von Einstellungen drehen sich um diese Optionen:
Einstellungen nicht überschreibbar machen
Bestimmte Aktionen verbieten
Zugang zu bestimmten Adressen (URLs) verbieten
Zugang zu bestimmten Einrichtungs-Modulen verbieten
Nicht überschreibbare Einstellungen
kde;-Einstellungen sperren
Nicht überschreibbare Einstellungen ermöglichen dem Systemverwalter, Voreinstellungen zu vergeben, die vom Benutzer nicht geändert werden können.
Bereits bestehende Einstellungen des Benutzers werden ignoriert, sobald die globale Einstellung als nicht überschreibbar markiert wird.
Einstellungen können sowohl pro Eintrag, als auch pro Gruppe oder Einrichtungsdatei gesperrt werden.
Wenn eine Datei oder Gruppe gesperrt ist, sind alle darin enthaltenen Einstellungen gesperrt, selbst diese, für die der Systemverwalter keine Voreinstellung festgelegt hat.
Die Unterstützung für solche gesperrten Einstellungen kann in den Programmen verschieden sein. Auch wenn ein Benutzer nicht die Möglichkeit hat, eine Einstellung permanent zu speichern, so kann es dennoch möglich sein, ein Änderung temporär in einem Dialog vorzunehmen.
Unterbinden bestimmter Aktionen
& kde;-Programme sind nach dem Aktionen-Prinzip aufgebaut. Aktionen können auf verschiedenste Arten und Weisen ausgeführt werden; üblicherweise über die Menüleiste, eine der Werkzeugleisten oder über einen Kurzbefehl. Dokument speichern ist ein Beispiel für eine Aktion. Wenn Sie den internen Aktionsnamen eines Programms kennen, so können Sie diese verbieten. Wenn eine Aktion gesperrt wurde, erscheint sie nicht mehr im Menü oder der Werkzeugleiste. Der Interne Name für Dokument Speichern ist & eg; action/file_save. Das Grundgerüst zum Sperren bietet Ihnen aber auch eine Methode zum abstrakten Sperren von Funktionen an. Ein Beispiel dafür ist die Restriktion shell_access, wodurch grundsätzlich der Zugriff auf eine & UNIX;-Shell unterbunden wird.
Zugriff auf Shells unterbinden
Um den Zugriff auf eine Befehlszeile zu unterbinden, können Sie die Restriktion shell_access aktivieren. Fügen Sie dazu das Folgende zu kdeglobals hinzu:
[KDE Action Restrictions] shell_access=false
Da diese Änderung auch die & kde;-Menüs und die verfügbaren Programme betrifft, muss eine Aktualisierung der sycoca-Datenbank erzwungen werden:
touch $KDEDIR /share/services/update_ksycoca
Melden Sie sich nun erneut an & kde; an und prüfen Sie die folgenden Punkte:
Das & kmenu;
In & konqueror;, Extras Terminal öffnen
Der Ausführen-Befehl mit Alt; F2
Ein vollständige Dokumentation über die verfügbaren Aktionen finden Sie unter http://www.kde.org/areas/sysadmin /.
Unten sind noch ein paar weitere, interessante Aktionen aufgelistet:
action/options_configure
Dies betrifft den Dialog Einrichten aus dem Menü Einstellungen.
action/help_report_bug
Die Option Probleme oder Wünsche berichten... im Menü Hilfe.
action/kdesktop_rmb
Das Kontextmenü, welches durch die rechte Maustaste auf der Arbeitsfläche aufgerufen wird.
action/kicker_rmb
Das Kontextmenü der Kontrollleiste.
user/root
Unterbindet alle Aktionen, die den Zugriff als Systemverwalter benötigen würden.
shell_access
Unterbindet den Zugriff auf Programme, die Zugang zu einer Shell ermöglichen.
print/system
Schaltet die Option zum Wechseln des Drucksystems ab.
lock_screen
Dies entscheidet darüber, ob der Benutzer seinen Bildschirm sperren kann.
start_new_session
Legt fest, ob der Benutzer eine neue X-Sitzung starten kann (siehe auch & kdm;).
opengl_screensavers
Legt fest, ob OpenGL-Bildschirmschoner benutzt werden können.
manipulatescreen_screensavers
Bildschirmschoner zulassen, die nicht den gesamten Bildschirm verdecken.
Adressen-Restriktionen
Es gibt drei Arten von Sperren, die auf Adressen angewandt werden können:
list
Legt fest, ob das Auflisten von Ordnerinhalten erlaubt ist.
open
Legt fest, ob bestimmte Adressen geöffnet werden dürfen.
Redirect
Legt fest, ob durch eine Adresse eine weitere Adresse aufgerufen werden darf, automatisch oder über eine Verknüpfung.
Die Regeln werden in Ihrer Definitionsreihenfolge geprüft. Die letzte passende Regel auf eine Adresse legt fest, ob der Zugriff gewährt wird oder nicht.
Die folgenden Regeln sperren das Öffnen von http- und https-Adressen außerhalb der Domäne .ourcompany.com:
[KDE URL Restrictions] rule_count=2 rule_1=open,,,,http,,,false rule_2=open,,,,http,*.ourcompany.com,,true
Durch die ersten vier Kommas werden die Kriterien zur Adressherkunft übersprungen. Dieser Teil wird nur mit Redirect-Regeln verwendet.
rule_1 unterbindet grundsätzlich das Öffnen von http- und https-Adressen.
rule_2 erlaubt wiederum das Öffnen von http- und https-Adressen in der Domäne .ourcompany.com. Beachten Sie, dass der Platzhalter * nur am Beginn einer Domäne erlaubt ist.
Die folgenden Regeln sorgen dafür, dass der Benutzer keine lokalen Ordner mehr außerhalb seines Persönlichen Ordners durchsehen kann:
[KDE URL Restrictions] rule_count=2 rule_1=list,,,,file,,,false rule_2=list,,,,file,,$HOME,true
rule_1 verbietet das Auflisten sämtlicher lokaler Ordner.
rule_2 erlaubt wiederum das Auflisten von Ordnern unterhalb von $HOME.
$HOME und $TMP sind spezielle Werte, die auf den Persönlichen Ordner eines Benutzers bzw. & kde;s temporären Ordner zeigen (eg; /tmp/kde-thomas).
Die folgende Regel sorgt dafür, dass Benutzer keine Dateien mehr außerhalb ihrer Persönlichen Ordner öffnen können:
[KDE URL Restrictions] rule_count=3 rule_1=open,,,,file,,,false rule_2=open,,,,file,,$HOME,true rule_3=open,,,,file,,$TMP,true
rule_1 verbietet das Öffnen jeglicher lokaler Dateien.
rule_2 erlaubt wiederum das Öffnen von Dateien unter dem Persönlichen Ordner des Benutzers.
rule_2 erlaubt das Öffnen von Dateien in & kde;s temporärem Ordner des jeweiligen Benutzers. Dies ist notwendig, weil & kde;-Programme oftmals eine Datei erst im temporären Ordner ablegen und dann von dort aus öffnen.
Die Redirect-Option legt fest, ob Dokumente von einem bestimmten Ort auf einen anderen Ort verweisen dürfen (automatisch oder via Verknüpfung). Ein Satz an Voreinstellungen ist aus Sicherheitsgründen bereits festgelegt. Zum Beispiel darf ein Dokument im Internet nicht auf lokale Dateien verweisen.
Wenn wir beispielsweise dem Intranet-Server www.mycompany.com erlauben möchten, auf lokale Dateien zu verweisen, dann fügen Sie diese Regel hinzu:
[KDE URL Restrictions] rule_count=1 rule_1=redirect,http,www.mycompany.com,,file,,,true
Anstatt ein Protokoll anhand seines Namens zu bestimmen, können Sie auch eine Protokollgruppe angeben. Zu diesem Zweck wurden die folgenden Protokollgruppen definiert:
:local
Protokolle, die auf lokal gespeicherte Daten zugreifen, wie zum Beispiel file: /, man: /, fonts: /, floppy: /
:internet
Übliche Internetprotokolle wie http und ftp
Informationen zu Protokollen sind in *.protocol -Dateien unter $KDEDIR /share/services gespeichert.
Der Schlüssel Class = legt fest, zu welcher Gruppe ein Protokoll gehört: grep Class= $KDEDIR /share/services/*.protocol
Allgemeine Regeln:
Die :local-Protokolle können auf alle weiteren Protokolle verweisen
Es ist immer erlaubt, auf ein :internet-Protokoll zu verweisen
Nicht alle Protokolle gehören zu einer Gruppe, fish: / zum Beispiel.
Die Einrichtungsmodule
& kde; benutzt Einrichtungsmodule um die verschiedenen Bereich von & kde; anzupassen. Einrichtungsmodule erscheinen im & kcontrolcenter;, in einem Einrichtungsdialog oder in beiden.
Das Proxy-Einrichtungsmodul zum Beispiel erscheint sowohl im & kcontrolcenter; als auch im Dialog Konqueror einrichten....
Individuelle Einrichtungsmodule können mit dem Befehl kcmshell4 modul gestartet werden.
Um das Proxy-Modul zu starten, benutzen Sie:
kcmshell4 kde-proxy.desktop
kcmshell4 proxy
Nicht alle Programme benutzen Einrichtungsmodule. Oftmals ist der Einrichtungsdialog auch fester Bestandteil des Programms selbst.
Streng genommen sind alle Einrichtungsmodule auch Teil des & kde;-Menüs.
Die sichtbaren Einrichtungsmodule im & kcontrolcenter; haben eine .desktop -Datei in $KDEDIR /share/applications/kde und befinden sich im versteckten Menü Settings-Modules. Die Sortierung wird durch kde-settings.menu bestimmt, die wiederum von kde-essential.menu eingelesen wird.
kbuildsycoca4 --menutest 2gt; /dev/null | grep Settings-Modules
Programm-spezifische Module haben normalerweise eine .desktop -Datei in $KDEDIR /share/applnk/.hidden. Dies entspricht dem versteckten .hidden-Menü.
kbuildsycoca4 --menutest 2gt; /dev/null | grep .hidden
Seit & kde; 3.3 kann man mit Hilfe von kcontroledit das & kcontrolcenter; bearbeiten. kcontroledit funktioniert genauso wie kmenuedit, Änderungen werden nur für den aktuellen Benutzer geschrieben. Benutzen Sie kiosktool, um Änderungen für alle Benutzer vorzunehmen.
Es ist möglich, einzelne Einrichtungsmodule ganz abzuschalten. Fügen Sie dazu das Folgende zu kdeglobals hinzu:
[KDE Control Module Restrictions] module-id =false
Um beispielsweise das Proxy-Modul abzuschalten, benutzen Sie
[KDE Control Module Restrictions] kde-proxy.desktop=false
Schauen Sie nun ins & kcontrolcenter; und den Dialog Konqueror einrichten..., ob das Proxy-Modul noch erreichbar ist.
Der faule Systemverwalter
Verbindung zu einer entfernten Arbeitsfläche
Mit freigegebenen Arbeitsflächen ist es entfernten Benutzern möglich, die Arbeitsfläche des aktuellen Benutzers zu sehen und sogar zu übernehmen. Dem entfernten Benutzer muss eine Einladung gesendet werden. Diese Einladung kann mit einem Passwort geschützt sein. Dies ist & eg; für die technische Unterstützung oder für Systemverwalter nützlich, um Zugriff auf die Arbeitsfläche zu erhalten. Auf diese Weise ist die Fehleranalyse möglich, oder man kann einen Benutzer bei bestimmten Vorgängen leichter anleiten.
Zur Arbeitsflächenfreigabe gehören zwei Programme: & krfb; (kde; remote frame buffer, ein VNC-Server) und & krdc; (kde; remote desktop connection, ein VNC-Client).
Mit & krfb; ist es jedem Benutzer möglich, eine Einladung zur Übernahme der Arbeitsfläche auszusprechen. Eine Einladung erzeugt automatisch ein Einmal-Passwort, mit dem der Empfänger der Einladung eine Verbindung zur Arbeitsfläche herstellen kann. Dieses Passwort ist in der Voreinstellung nur ein einziges Mal gültig und läuft nach einer Stunde ab, wenn es nicht benutzt wurde.
Die eingehenden Verbindungen werden vom kded-Modul kinetd verwaltet. Verwenden Sie der Befehl dcop kded kinetd services, um zu sehen, ob kinetd läuft. & krfb; wartet normalerweise an Port 5900 auf eingehende Verbindungen. Wenn eine neue Verbindung eingeht, erscheint ein Bestätigungsdialog.
Der & kde; Heimwerker - Bauen Sie Ihre eigenen Werkzeuge
DCOP
Desktop COmmunication Protocol, DCOP, ist ein Mechanismus zur Kommunikation von & kde;-Programmen untereinander. DCOP ermöglicht einem Benutzer, mit derzeit laufenden Programmen zu interagieren. & kde; bringt zwei Programme zum Umgang mit DCOP mit: dcop, ein Befehlszeilenprogramm, und kdcop, ein grafisches Programm.
Einige Hinweise für die Anwendung des Befehls dcop:
dcop [options] [application [object [function [arg1] [arg2]...]]]
Programme, die gleichzeitig mehr als ein Fenster öffnen können, werden als & lt;applicationgt;- PID aufgeführt
Beachten Sie bei allen Argumenten die Groß- und Kleinschreibung. setFullScreen und setfullscreen bezeichnen zwei unterschiedliche Funktionen.
Sie können den Regulären Ausdruck * im Argument für Programme und Objekte verwenden.
percnt; dcop kon* konqueror-16006 konsole-8954
Im Folgenden finden Sie als Beispiele einige Befehle und deren Ausgabe:
percnt; dcop konsole* konsole-8954
Eine & konsole; läuft mit der PID 8954.
percnt; dcop konsole-8954 KBookmarkManager-.../share/apps/kfile/bookmarks.xml KBookmarkManager-.../share/apps/konqueror/bookmarks.xml KBookmarkNotifier KDebug MainApplication-Interface konsole (default) konsole-mainwindow#1 ksycoca session-1 session-2 session-3 session-4
Hier sehen Sie, dass vier Sitzungen laufen.
percnt; dcop konsole-8954 konsole QCStringList interfaces() QCStringList functions() int sessionCount() QString currentSession() QString newSession() QString newSession(QString type) QString sessionId(int position) void activateSession(QString sessionId) void nextSession() void prevSession() void moveSessionLeft() void moveSessionRight() bool fullScreen() void setFullScreen(bool on) ASYNC reparseConfiguration()
Hier sind die Optionen für das Hauptprogramm & konsole;.
percnt; dcop konsole-8954 session-1 QCStringList interfaces() QCStringList functions() bool closeSession() bool sendSignal(int signal) void clearHistory() void renameSession(QString name) QString sessionName() int sessionPID() QString schema() void setSchema(QString schema) QString encoding() void setEncoding(QString encoding) QString keytab() void setKeytab(QString keyboard) QSize size() void setSize(QSize size)
Hier sind die Optionen für die erste Sitzung, session-1
percnt; dcop konsole-8954 konsole setFullScreen true
Dieser Befehl stellt den Vollbildmodus für & konsole; ein.
Wenn es mehrere Programme für ein Programm/Objekt gibt, welches sollte man dann nutzen? Gibt es eine Referenz darauf?
percnt; echo $KONSOLE_DCOP DCOPRef(konsole-7547,konsole) percnt; dcop $KONSOLE_DCOP newSession session-6 percnt; dcopstart konsole konsole-9058 #!/bin/sh konsole=$(dcopstart konsole-script) session=$(dcop $konsole konsole currentSession) dcop $konsole $session renameSession Local session=$(dcop $konsole konsole newSession) dcop $konsole $session renameSession Remote session=$(dcop $konsole konsole newSession) dcop $konsole $session renameSession Code dcop $konsole $session sendSession 'cd /my/work/directory'
KDialog
Der & kde; Heimwerker - Bauen Sie Ihre eigenen Werkzeuge
Sie können & kde;-Dialoge in Ihren eigenen Skripten benutzen und damit die leistungsfähigen & UNIX;-Shell-Skripte mit der Einfachheit von & kde; verbinden.
kdialog --msgbox 'Sie haben eine neue E-Mail!'
kdialog --title 'Neue E-Mail' --msgbox 'Sie haben eine neue E-Mail!'
Die Überschrift KDialog kann mit der Option --caption ersetzt werden.
kdialog --title 'Neue Mail' --msgbox 'Sie haben eine neue Mail!' --dontagain myfile:mykey
Dadurch wird gespeichert, ob der Dialog erneut angezeigt werden soll. Dazu werden die folgenden Zeilen in $KDEHOME /share/config/myfile geschrieben:der
[Notification Messages] mykey=false
Es ist auch möglich, Dialog mit einer Ja/Nein-Antwort anzeigen zu lassen.
kdialog --yesno 'Möchten Sie eine Verbindung mit dem Internet?' echo $?
Rückgabewert
Bedeutung
0
Ja, Ok, Fortsetzen
1
Nein
2
Abbrechen
Speichern Sie das Ergebnis in einer Variablen, wenn Sie das Ergebnis nicht direkt weiterverwenden, denn der nächste Befehl weist ?$ einen neuen Wert zu. Sie können dafür aber auch die Option --dontagain verwenden, damit wird die Auswahl des Benutzers gespeichert und bei den nächsten Aufrufen des Befehls zurückgegeben, ohne den Dialog wieder anzuzeigen.
Weitere Optionen sind:
--warningyesno
wie --yesno aber mit einem anderen Symbol
--warningcontinuecancel
Mit den Knöpfen Fortsetzen und Abbrechen.
--warningyesnocancel
Mit den Knöpfen Ja, Nein und Abbrechen. Zum Beispiel:
kdialog --warningyesnocancel 'Wollen Sie die Änderungen speichern?'
kdialog --inputbox "Geben Sie Ihren Namen ein:" "Ihr Name"
Das Ergebnis wird auf stdout ausgegeben. Um es in eine Variable zu schreiben, können Sie dies benutzen: name=$(kdialog --inputbox "Geben Sie Ihren Namen ein:" "IhrName"). Das letzte Argument ist optional, es wird benutzt, um dem Textfeld einen Vorgabewert zu geben.
Passwort =$( kdialog --password "Geben Sie Ihr Passwort ein:")
Die Option --dontagain wird zusammen mit --inputbox oder --password nicht beachtet.
Es gibt zwei Dialoge, in denen der Benutzer einen Eintrag aus einer Liste wählen kann:
--menu
Der Benutzer kann einen einzelnen Eintrag aus einer Liste wählen.
--checklist
Der Benutzer kann einen oder mehrere Einträge aus einer Liste wählen.
city =$( kdialog --menu "Wählen Sie eine Stadt" a London b Madrid c Paris d Berlin)
$city gibt den Wert a, b, c oder d zurück.
city =$( kdialog --checklist "Wählen Sie Städte aus" a London off b Madrid on c Paris on d Berlin off)
Madrid und Paris sind bereits ausgewählt. Das Ergebnis mit der Auswahl von Madrid und Paris ist "b" "c".
Wenn Sie als Option --separate-output hinzufügen, wird b und c jeweils in einer eigenen Zeile ausgegeben, damit ist die Weiterbearbeitung der Rückgabewerte einfacher.
file=$(kdialog --getopenfilename $HOME) file=$(kdialog --getopenfilename $HOME "*.png *.jpg|Image Files") file=$(kdialog --getsavefilename $HOME/SaveMe.png) file=$(kdialog --getexistingdirectory $HOME)
& groupware-with-kontact;