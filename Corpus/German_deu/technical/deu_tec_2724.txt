# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Handbuch
Zurück
Nach vorne

array_slice() liefert die mittels offset und length spezifizierte Sequenz von Elementen des Arrays array
Ist offset positiv, beginnt die Sequenz bei diesem Offset in dem array.
Ist offset negativ, beginnt die Sequenz offset Elemente vor dem Ende von array.
Ist length positiv, enthält die Sequenz genauso viele Elemente.
Ist length negativ, enthält die Sequenz alle Elemente des Arrays von offset bis length Ist length negativ, enthält die Sequenz alle Elemente des Arrays von offset bis length Elemente vor dem Ende des Arrays.
Ist length nicht angegeben, enthält die Sequenz alle Elemente von offset bis zum Ende von array.
Beachten Sie, dass array_slice() Schlüssel ignoriert, und Offsets sowie Längen anhand der aktuellen Positionen berechnet.
Beispiel 1. array_slice()
$input = array ("a", "b", "c", "d", "e"); $output = array_slice ($input, 2); / / liefert "c", "d", und "e "$output = array_slice ($input, 2, -1); / / liefert "c", "d" $output = array_slice ($input, -2, 1); / / liefert "d "$output = array_slice ($input, 0, 3); / / liefert "a", "b", und "c"
Siehe auch array_splice().
Zurück
Zum Anfang
Nach vorne

Nach oben
