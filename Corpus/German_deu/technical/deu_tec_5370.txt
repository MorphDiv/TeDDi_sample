# language_name_wals:	German
# language_name_glotto:	German
# ISO_6393:	deu
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/de.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Fehlersuche in & quantaplus;
Christopher Hornbaker
chrishornbaker@earthlink.net
Linus McCabe
Linus@McCabe.nu
Georg Schuster gschuster@utanet.at Deutsche Übersetzung
Den PHP-Debugger benutzen
Für & quantaplus; ab Version 3.3, wurde die Fehlersuche völlig neu entwickelt. DieUnterstützung für den nicht mehr notwendigen eingebauten & PHP; (3) Debugger wurde eingestellt, so wie auch die Unterstützung für den dbg Debugger. Anstelle dessen wurde ein Debugger-Plugin Konzept umgesetzt, das verschiedene Implementationen über Plugins ermöglicht.
Derzeit ist nur ein Plugin verfügbar, das Unterstützung für die Benutzung von & gubed; inquantaplus; einfügt.
Die Benutzung des Debuggers für ein Projekt beginnt mit der Auswahl eines passenden Debugger-Plugins in den Projekteinstellungen. Mit der Schaltfläche Optionen neben dem Debugger-Plugin Auswahlfeld können die spezifischen Einstellungen geändert werden.
Generelle Verwendung
Wenn für ein Projekt ein Debugger aktiviert ist, erscheinen einige zusätzliche Elemente in der & quantaplus;-Benutzeroberfläche:
Debugger-Menü
Ein neues Menü mit den meisten Funktionen des Debuggers wird angezeigt.
Debugger-Werkzeugleiste
Eine Werkzeugleiste für den Zugriff auf die häufigsten Debugger-Befehle.
Variablen-Ansicht
Eine Ansicht, in der der Inhalt von überwachten Variablen angezeigt wird. Erscheint normalerweise im linken Dock.
Haltepunkte-Ansicht
Eine Ansicht, in der alle Haltepunkte, mit Zeilennummern und Bedingungen aufgelistet sind. Erscheint normalerweise im unteren Dock.
Debuggerausgabe-Ansicht
Eine Ansicht, in der die Ausgabe (wie in HTML) des Debuggers gezeigt wird. Erscheint normalerweise im unteren Dock.
Abhängig von den unterstützten Funktionen des Debuggers ist alles oder ein Teil der folgenden Funktionalität verfügbar.
Debuggen Sitzung Starte Sitzung
Mit dieser Aktion wird die Verbindung zum Debugger, falls erforderlich, hergestellt, oder sie teilt dem Plugin mit, auf Debuganforderungen zu lauschen. Diese Aktion wird standardmäßig ausgelöst, wenn ein Projekt geöffnet wird, das einen Debugger verwendet, sodass im Normalfall nicht darauf geachtet werden muss.
Debuggen Sitzung Beende die Sitzung
Das Gegenstück zu Debuggen Sitzung Starte die Sitzung. Schließt die Verbindung zum Debugger oder beendet das Lauschen nach Anforderungen.
Debuggen Ausführung Sende HTTP-Anforderung
Sendet eine HTTP-Anforderung an den Server um eine Debug-Anforderung einzuleiten. Dies ist gleichbedeutend mit der Verwendung eines Browsers, um das aktuelle Dokument anzuschauen. Die Ausgabe dieser Anforderung wird in der Ansicht Debugger-Ausgabe angezeigt.
Debuggen Ausführung Anhalten
Hält ein laufendes Skript an
Debuggen Ausführung Starten
Weist den Debugger an, mit der Ausführung des Skriptes zu beginnen und Information über die überwachten Variablen sowie die aktuell ausgeführte Zeile laufend zu senden. Wenn dies geschieht, während das Skript angehalten ist, wird die Ausführung fortgesetzt. Geschieht es, bevor eine Debuganforderung begonnen wurde, startet das Skript mit der Anforderung.
Debuggen Ausführung Sprung
Weist den Debugger an, mit der Ausführung des Skriptes zu beginnen, ohne Information zu überwachten Variablen und der aktuellen Zeilennummer zu senden. Wenn dies geschieht, während ein Skript angehalten ist, läuft die Ausführung weiter. Geschieht es, bevor eine Debuganforderung gegeben wurde, beginnt die Ausführung, sobald eine Anforderung gestellt wird.
Debuggen Ausführung Schritt
Der Debugger führt die nächste Anweisung im Skript aus, ohne in die Funktionen oder Includes hineinzugehen.
Debuggen Ausführung Einzelschritte Hinein
Der Debugger führt die nächste Anweisung im Skript aus, wobei wenn möglich in Funktionen und Includes hinein fehlerbereinigt wird.
Debuggen Ausführung Gehe heraus
Weist den Debugger an, bis zum Ende der aktuellen Funktion auszuführen.
Debuggen Ausführung Übergehen
Weist den Debugger an, die Anweisung zu übergehen und zur nächsten so zu gehen, als gäbe es die aktuelle nicht.
Debuggen Ausführung Breche ab
Weist den Debugger an, das aktuell laufende Skript abzubrechen.
Debuggen Haltepunkte Abbrechen, wenn...
Öffnet einen Dialog, in dem Abbruchbedingungen angegeben werden können.
Debuggen Haltepunkte Haltepunkt umschalten
Schaltet einen Haltepunkt an der aktuellen Zeile ein oder aus
Debuggen Haltepunkte Haltepunkte löschen
Löscht alle Haltepunkte.
Debuggen Variable Variable überwachen
Öffnet einen Dialog, in dem eine Variable oder ein Ausdruck eingegeben werden kann, der überwacht werden soll. Der überwachte Wert erscheint in der Variablenansicht.
Debuggen Variable Variablenwert setzen
Mit diesem Dialog kann eine Variable eingegeben oder ein neuer Wert einer Variable gesetzt werden.
Verwendung von & kxsl;, der & XSL; Debugger
& kxsl; ist ein Werk von Keith Isdale wie auch dieser Teil der Dokumentation. & kxsl; ist ein & kde; Front-end und ein KPart von xsldbg, das sie auf http://xsldbg.sf.net mit vielen weiteren Arbeiten von Keith finden können.
Um & kxsl; zu starten, wählen sie Plugins kxsl;.
Weitere Informationen zur Handhabung von & kxsl; finden sie in der & kxsl;-Dokumentation.