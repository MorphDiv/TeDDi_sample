# language_name_wals:	Hebrew (Modern)
# language_name_glotto:	Modern Hebrew
# iso639_3:	heb
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Hebr
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/he.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

מדריך PHP
קודם
פרק 34.

הבא




zval *new_array; MAKE_STD_ZVAL(new_array); if(array_init(new_array) != SUCCESS) {/ / do error handling here}
To add new elements to the array, you can use numerous functions, depending on what you want to do. טבלה 34-1, טבלה 34-2 and טבלה 34-3 describe these functions.

טבלה 34-1.



















טבלה 34-2.




















טבלה 34-3.






















This is done using zend_hash_update( )() for associative arrays (see דוגמה 34-3) and zend_hash_index_update() for indexed arrays (see דוגמה 34-4):
דוגמה 34-3.

zval *new_array, *new_element; char *key = "element_key"; MAKE_STD_ZVAL(new_array); MAKE_STD_ZVAL(new_element); if(array_init(new_array) == FAILURE) {/ / do error handling here} ZVAL_LONG(new_element, 10); if(zend_hash_update(new_array - value.ht, key, strlen(key) + 1, (void *) new_element, sizeof(zval *), NULL) == FAILURE) {/ / do error handling here}
דוגמה 34-4.

zval *new_array, *new_element; int key = 2; MAKE_STD_ZVAL(new_array); MAKE_STD_ZVAL(new_element); if(array_init(new_array) == FAILURE) {/ / do error handling here} ZVAL_LONG(new_element, 10); if(zend_hash_index_update(new_array - value.ht, key, (void *) new_element, sizeof(zval *), NULL) == FAILURE) {/ / do error handling here}





קודם
ראשי
הבא

למעלה
