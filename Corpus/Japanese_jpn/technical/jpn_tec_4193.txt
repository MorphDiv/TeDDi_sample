# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# ISO_6393:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

(PHP 3 = 3.0.9, PHP 4)
subject において pattern で指定した正規表現にマッチする かどうかを検索し、 order で指定した 順番で matches に結果を代入します。
最初にマッチするものが見つかった後、最後にマッチしたパターンの後から 検索が続行されます。
order は、次の2つのどちらかとなります。
$matches[0] がパターン全体にマッチする配列であり、 $matches[1] が最初の括弧で括られたサブパターンにマッチする 文字列の配列であり、といった順番となります。
$matches[0]は最初にマッチした組の配列であり、 $matches[1]は二番目にマッチした組の配列であり、 といった順序となります。
order が指定されない場合、PREG_PATTERN_ORDER を仮定します。
パターンがマッチした総数を返します。または、マッチしなかったか、 エラーが発生した場合に FALSE を返します。

例 1テキストから全ての電話番号を得る

例 2HTMLタグにマッチするものを見付ける(greedy)
preg_match(), preg_replace(), preg_split() も参照下さい。