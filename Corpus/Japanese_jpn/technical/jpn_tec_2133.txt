# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# iso639_3:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

アドイン関数
/text/scalc/01/04060111.xhp
アドイン; 関数
関数; アドイン関数
関数ウィザード; アドイン
アドイン関数
ここでは、利用できるアドイン関数の一部について説明します。
アドインコンセプト
$[officename] Calc のアドインインタフェースに関する説明
もこのヘルプにあります。そこでは、
共有ライブラリ
$[officename] Calc のアドイン DLL
に必要な、関数とパラメータについて説明しています。
用意されているアドイン
$[officename] には、$[officename] Calc のアドインインタフェースの例が含まれています。
分析関数 1
分析関数 2
ISLEAPYEAR 関数
閏年であるかどうかの判断
mw added one entry
ISLEAPYEAR
指定した日付の年が、閏年かどうかを調べます。
閏年の場合は値 1 (TRUE)、そうでない場合は 0 (FALSE) を返します。
構文
ISLEAPYEAR( &quot; 日付 &quot; )
日付
は、指定された日付がうるう年かどうかを指定します。日付パラメータは、%PRODUCTNAME のロケール設定に従う有効な日付とします。
例
A1 にロケール設定内の有効な日付 1968 年 2 月 29 日を表す 1968-02-29 が含まれている場合、=ISLEAPYEAR(A1) は 1 を返します。
=ISLEAPYEAR( &quot; 1968-02-29 &quot; ) または =ISLEAPYEAR( &quot; 2/29/68 &quot; ) も使用できます。
=ISLEAPYEAR(2/29/68) は最初 29 を 68 で割った数で 2 を割り、連続する日付番号としてこの小さい数から ISLEAPYEAR を計算するので、絶対に使用しないでください。
YEARS 関数
2 つの日付の間の年数
mw added one entry
YEARS
2 つの日付の間の年数を返します。
構文
YEARS(開始日; 終了日; タイプ)
開始日
は、最初の日付です。
終了日
は、2 番目の日付です。
タイプ
は違いの種類を計算します。使用可能な値は、0 (間隔) と 1 (暦月) です。
MONTHS 関数
2 つの日付の間の月数
mw added one entry
MONTHS
2 つの日付の間の月数を返します。
構文
MONTHS(開始日; 終了日; タイプ)
開始日
は、最初の日付です。
終了日
は、2 番目の日付です。
タイプ
は違いの種類を計算します。使用可能な値は、0 (間隔) と 1 (暦月) などです。
ROT13 関数
テキストを暗号化する
mw added one entry
ROT13
アルファベット文字を 13 文字ずらして文字列を暗号化します。
Z の後は A に戻ります。暗号化された文字列にもう一度この関数を適用すると、元の文字列に戻ります。
構文
ROT13(文字列)
テキスト
は、暗号化される文字列です。ROT13(ROT13(テキスト)) は、コードを復号化します。
DAYSINYEAR 関数
日数; 指定された年度内
mw added one entry
DAYSINYEAR
入力した日付を含む年の日数を計算します。
構文
DAYSINYEAR(日付)
日付
は、各年の任意の日付です。日付パラメータは、%PRODUCTNAME のロケール設定に従う有効な日付とします。
例
A1 に 1968 年の有効な日付、1968-02-29 が含まれている場合、=DAYSINYEAR(A1) は 366 日を返します。
DAYSINMONTH 関数
日数;指定された月内
mw added one entry
DAYSINMONTH
入力した日付を含む月の日数を計算します。
構文
DAYSINMONTH(日付)
日付
は、必要な年の各月の任意の日付です。日付パラメータは、%PRODUCTNAME のロケール設定に従う有効な日付とします。
例
A1 に 1968 年 2 月の有効な日付、1968-02-17 が含まれている場合、=DAYSINMONTH(A1) は 29 日を返します。
WEEKS 関数
週数;2 つの日付の間
mw added one entry
WEEKS
2 つの日付の間の週数を返します。
構文
WEEKS(開始日; 終了日; タイプ)
開始日
は、最初の日付です。
終了日
は、2 番目の日付です。
タイプ
は違いの種類を計算します。使用可能な値は、0 (間隔) と 1 (週数) です。
WEEKSINYEAR 関数
週数;指定された年度内
mw added one entry
WEEKSINYEAR
入力した日付を含むその年の週数を計算します。
週数は、次のように定義されます。 2 つの年にわたる週は、その週の日を多く含む方の年に加えられます。
構文
WEEKSINYEAR(日付)
日付
は、各年の任意の日付です。日付パラメータは、%PRODUCTNAME のロケール設定に従う有効な日付とします。
例
A1 に 1970 年の有効な日付、1970-02-17 が含まれている場合、WEEKSINYEAR(A1) は 53 を返します。
%PRODUCTNAME API によるアドイン
API
でも実装できます。