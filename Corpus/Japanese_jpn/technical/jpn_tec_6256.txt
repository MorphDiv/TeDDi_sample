# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# ISO_6393:	jpn
# year_composed:	NA
# year_published:	2014
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	GNOME
# source:	https://object.pouta.csc.fi/OPUS-GNOME/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/GNOME.php
# copyright_long:	http://opus.nlpl.eu/GNOME.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

プラットフォームの概要
GNOMEプラットフォームは、グラフィカルなアプリケーション、それ以外のアプリケーションにたいして使いやすい開発環境を提供します。GNOMEの技術を使用することで、あなたはユーザの期待を上回る高品質なソフトウェアを作ることができます。この章では、このドキュメントで議論しているコンポーネントのおおまかな概要を提供します。
中核となる技術
GNOMEは魅力的なグラフィカル・インタフェースを構築するために、いくつかのライブラリを提供します。それらのライブラリは一般的なユーザ・インタフェースのコントロールの表示と操作、多くの国々の書記体系によるテキストのレイアウトおよびレンダリング、複雑なベクタ・グラフィクスをスクリーンに描画します。GNOMEのグラフィック技術については
GLibのGIOライブラリはGVFSバックエンドとともに、ユーザがリモートサーバ上のファイルにたいしてローカルのファイルシステムと同じように作業することができる、抽象化されたファイルシステムを提供します。GIOはファイル操作のための高レベルのAPIを提供し、開発を迅速で簡単にします。GIOを使用することによりアプリケーションでリモートのファイルとフォルダを自動的にサポートすることができます。GIOとGVFSについては
GNOMEはユーザの設定を保存、取得するために、GConfライブラリとデーモンを提供します。GConfには、あなたのアプリケーションに設定を即時に適用するためのシンプルなAPIがあります。GConfを使用することにより、管理者はユーザにたいして既定、および必須のアプリケーション設定を提供することができます。GConfについては
GNOMEが提供するインターナショナライゼーションおよびアクセシビリティの仕組みにより、あなたは最大限可能な潜在的ユーザを獲得することができます。多くのインターナショナライゼーションおよびアクセシビリティのサポートは正しく構築されていますが、開発時には多くの考慮すべき点があります。インターナショナライゼーションについては
GNOMEにはオーディオやビデオのコンテンツを作成、編集、再生が可能な極めて強力なマルチメディア・フレームワークであるGStreamerが付属しています。GStreamerについては
GNOMEは可能な場合にはCUPSを利用する完全な印刷フレームワークを提供します。GNOMEの印刷フレームワークにより高品質な印刷のための統一されたインタフェースを提供することができます。印刷フレームワークについては
IPCとネットワーク
GNOMEデスクトップはクリップボード、ドラッグアンドドロップによるデータ転送をフルサポートしています。GTK+のAPIはデスクトップの他の部分と正常に相互作用するアプリケーションを作る助けとなります。クリップボードとドラッグアンドドロップの機能については

GNOMEはCORBA上に構築されたBonoboコンポーネントシステムを備えています。Bonoboはプログラマが他のプログラムで再利用することができる複雑な埋め込みコンポーネントを作成することを可能にします。Bonoboの使用は推奨されていないことに注意してください。新しく記述するコードには代わりにD-Busおよび、その他の技術を使用するべきです。Bonoboについては
ユーザがネットワークをより管理しやすくするために、GNOMEはDNSサービスディスカバリを提供します。。DNSサービスディスカバリは、ユーザにネットワークアドレスの入力を促すことなく、アプリケーションがローカルネットワーク上のサービスを自動的に探し出すことを可能にします。DNSサービスディスカバリについては
最後に、GNOMEはXMLとWebサービスを操作するためのライブラリをいくつか提供します。これらの技術はアプリケーションの開発者にとって重要性を増しています。XMLとWebサービスについては
デスクトップテクノロジ
GNOMEデスクトップはパネル・アプレットやファイルマネージャのプラグインのように、アプリケーションがよりよく統合されるための場所をいくつか提供します。それらの多くについては
GNOMEはより使いやすいアプリケーションを作成するための、包括的なヒューマンインターフェースのガイドラインを提供します。GNOMEのユーザビリティ標準は当初のフリーなデスクトップ環境の中に含まれていました。そしてGNOMEのコミットメントを通じてよりよいユーザ経験のために改善を続けていきます。ユーザビリティについては
GNOMEは完全なヘルプシステムと、ドキュメントを記述するためのスタイルガイドラインを提供します。アプリケーションが既に高い評価を受けていたとしても、上質なユーザ用のヘルプシステムによりソフトウェアを大幅に改善することができます。ドキュメンテーションについては
この文書を、フリーソフトウェア財団発行の GNU フリー文書利用許諾契約書 (GFDL) のバージョン 1.1 かそれ以降が定める条件の下で複製、頒布、あるいは改変することを許可します。変更不可部分、表カバーテキスト、裏カバーテキストは存在しません。この利用許諾契約書 (GFDL) の複製は
このマニュアルは GFDL の下で配布される GNOME マニュアルのコレクションの一部です。コレクションと別にこのマニュアルを配布したい場合は、ライセンスの第六節にあるようにライセンスのコピーをマニュアルに加えれば配布できます。
製品やサービスを区別するために企業によって利用されている名称の多くは登録商標です。これらの名称が GNOME ドキュメントで使われていて GNOMEドキュメントプロジェクトのメンバーが商標と認識している場合、これらの名前を大文字あるいは語句の最初の文字を大文字で記述しています。
DOCUMENT IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT THE DOCUMENT OR MODIFIED VERSION OF THE DOCUMENT IS FREE OF DEFECTS MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY, ACCURACY, AND PERFORMANCE OF THE DOCUMENT OR MODIFIED VERSION OF THE DOCUMENT IS WITH YOU. SHOULD ANY DOCUMENT OR MODIFIED VERSION PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE INITIAL WRITER, AUTHOR OR ANY CONTRIBUTOR) ASSUME THE COST OF ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF ANY DOCUMENT OR MODIFIED VERSION OF THE DOCUMENT IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS DISCLAIMER; AND
UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER IN TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL THE AUTHOR, INITIAL WRITER, ANY CONTRIBUTOR, OR ANY DISTRIBUTOR OF THE DOCUMENT OR MODIFIED VERSION OF THE DOCUMENT, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE LIABLE TO ANY PERSON FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER DAMAGES OR LOSSES ARISING OUT OF OR RELATING TO USE OF THE DOCUMENT AND MODIFIED VERSIONS OF THE DOCUMENT, EVEN IF SUCH PARTY SHALL HAVE BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.
ドキュメントおよび変更されているドキュメントは次の GNU フリー文書利用許諾契約書 (GFDL) の下で頒布されます:
クリップボードとドラッグアンドドロップ
ユーザが異なるアプリケーションでさまざまな種類のデータを処理するようになるにつれアプリケーション間でオブジェクトやデータを共有する必要は増加してきまた。GNOMEはアプリケーション間でのデータ転送に関連する２つの方法をサポートします:ドラッグアンドドロップ操作の使用と、システム規模のクリップボードを介したコピーおよびペーストです。クリップボードとドラッグアンドドロップは複数のアプリケーション間で機能し、GNOMEで開発されていないアプリケーションもそれに含まれます
クリップボードはアプリケーションのデータに対してユーザが明示的にコピーの操作を行ったときに使用されます。それによりアプリケーションはクリップボードの所有権を主張したことになります。ユーザが他のアプリケーションでペーストの操作を行ったときは、そのアプリケーションから最初のアプリケーションに対してクリップボードのデータが要求されます。クリップボードの操作はGTK+でフルにサポートされています。
ドラッグアンドドロップも同様の操作ですが、ポインタを追跡してドロップするターゲットとなる可能性がある対象の上を通過する場合は、カーソルを更新することが要求されます。アプリケーションはドラッグ中にポインタが上を通過すると通知を受けます。そのときアプリケーションはカーソルを更新すしてドロップを受け入れられるかどうかを示さなければなりません。GTK+はドロップされるターゲットをアプリケーションで管理するのを容易にする、洗練されたAPIによってドラッグアンドドロップをサポートします。
クリップボードとドラッグアンドドロップ操作はどちらもコンテンツのネゴシエーションをサポートします。アプリケーションが提供すべきデータを持っているときは、そのデータに関してどのようなフォーマットが有効なのかを提示します。データを受け取るアプリケーションは最も適切なフォーマットを要求します。たとえばユーザがウェブブラウザからテキストをコピーした場合、ワードプロセッサは受け取るデータがHTMLフォーマットでも管理できるためHTMLフォーマットを要求し、通常のテキストエディタはフォーマットなしのテキストを要求します。
あなたはあなたのアプリケーションで操作するデータにたいして、クリップボードとドラッグアンドドロップの機能を提供するべきです。クリップボードとドラッグアンドドロップはテキストにたいしてだけではなく、他のデータにたいしても便利な機能です: ファイル、グラフィック、そしてサウンド・クリップなどはどれもアプリケーション間で転送が可能なデータの例です。GTK+を使用すれば、テキストアリア、カラーボタン、ファイル選択、その他の組み込み済みのユーザインタフェース・コントロールで自動的にクリップボードとドラッグアンドドロップのサポートを享受することができます。アプリケーションで使用するその他のデータにたいするサポートを提供するためにもGTK+のAPIを使用するべきです。
詳細については
D-BUSメッセージ
D-Busはさまざまなアプリケーション、デスクトップ、システムの低レベルのコンポーネント間でイベントを送信するための、クロス・デスクトップのメッセージバスです。D-Busは特定のサービスのためにメッセージを転送したり、関心を持つサービスにたいしてメッセージをブロードキャストするためのシンプルなAPIを提供します。D-Busは異なる種類のアプリケーションとデスクトップが互いに通信、統合されることにより、よりよい相互作用とより豊かなユーザ経験を提供します。
D-Busはセッションとシステムバスを提供します。セッションバスは単一のユーザセッションでアプリケーションによって使用され、アプリケーションのデータ共有やイベントの通知、そしてユーザのデスクトップへの統合を可能にします。たとえば、ムービープレーヤーはD-BUSにメッセージを送ることによりユーザがムービーを見ているときはスクリーンセーバーの起動を抑止することができます。
システムバスはユーザセッションとは独立して実行される単一のメッセージバスです。システムバスはアプリケーションと通信することにより、それらのアプリケーションがシステムの低レベルな詳細を知ることなくシステムコンポーネントと相互作用することを可能にします。システムバスはユーザが彼らのシステムで動作することを期待するであろう重要な機能を提供します。たとえば、システムバスはネットワークインタフェースのUP/DOWNや外部デバイスがプラグインされたり、ラップトップのバッテリが低下するのをモニタするのに使用されます。
D-Busは
D-Busについての詳細は
Bonobo および CORBA
Bonobo、libIDL、および ORBitは、D-Busやその他の技術に置き換えられたため使用は推奨されていないことに注意してください(前記参照)。
Bonoboはアプリケーションで再使用可能なコンポーネントを作成するためのフレームワークです。業界標準であるCORBA(Common Object Request Broker Architecture)を基に構築され、GNOMEアプリケーションで安心して使用できるコンポーネントを作成、使用するために必要となるすべての共通インタフェースを提供します。
Bonoboのコンポーネントはさまざまな場面で使用でき、柔軟で拡張性のあるソフトウェアを作成する助けとなります。たとえば、マルチメディアのコンテンツを表示するコンポーネントをワードプロセッサに埋め込むことにより、ワードプロセッサが直接マルチメディアを処理することなく、ワードプロセッサにマルチメディアのサポートを追加することができます。BonoboコンポーネントはGNOMEパネルにアプレットを埋め込むのにも使用されています。Bonoboを使用することによりアプレットが効果的にパネルと通信することが可能になり、ユーザに統一されたインタフェースを提供することができます。
Bonoboのコンポーネントはグラフィカルなコントロールとは限りません。BonoboはGNOMEの電子メールクライアントでありグループウェア・スィートでもあるEvolutionで、アドレス帳やカレンダーへのアクセスに使用されていました。これによりユーザは自分の情報を１ヶ所に保存して、すべてのアプリケーションがアクセスできるようにしたのです。
BonoboはCORBA上に構築されているため、コンポーネントを独立したプロセスで実行することができます。コンポーネントは異なる言語で記述でき、異なるランタイム上で実行することができます。; 唯一必要なのはインタフェースがIDL(Interface Definition Language)で記述されていなければならないということだけです。CORBAの柔軟なデザインによりネットワーク上の異なるマシンのコントロールを実行することさえ可能です。
GNOMEは、高速で軽量なCORBA実装であるORBitを提供します。GNOMEにより供給されるツールとライブラリは、C言語や他のCORBA実装では使用できない言語でも効果的にコンポーネントを記述することが可能です。
BonoboはCORBAに欠けている、一貫したコンポーネントサポートするために必要な追加のインタフェースと仕様を提供することによって、そのギャップを埋める手助けをします。Bonoboを使わずにCORBAを使用することはほとんどないでしょうが、直接CORBAを使用することも可能です。たとえば、GNOMEアクセシビリティの基盤はCORBAにより、実行中のアプリケーションを調査・対話する援助ツールを実現しています。
あなたはグラフィカルで複雑な埋め込み可能コンポーネントを提供するためにBonoboを使用したいと思うかもしれません。しかし大部分のGNOMEにおけるIPCの必要性はD-Busへと移行しつつあります。アプリケーションをD-Busに統合することでそれらは大幅に簡単になります。
Bonoboについての詳細は
サービス・ディスカバリ
DNSサービス・ディスカバリやZeroconfは、ネットワーク上で使用可能なサービスを自動的に探し出すための技術です。Zeroconfはアドレスを明示的に提供したりアプリケーションの手動で設定することなしに、ユーザがネットワークのリソースにアクセスすることを可能にします。
DNSサービス・ディスカバリはGNOMEでもいくつかの場所で既に使用されており、今後もさらなるサポートが追加される予定です。たとえばGNOMEのファイルマネージャである
完全なDNSサービス・ディスカバリはAvahiライブラリによりサポートされています。Avahiについての詳細は
XMLとWebサービス
相互接続が進む私たちの世界においては、さらにより多くのアプリケーションが色々なWebサービスを提供していく必要があります。Webサービスが単に機能の追加を提供する場合もあるし、Webサービスがアプリケーションの主要な目的である場合もあります。スタンドアローンでユーザを何年も満足させていたアプリケーションをWebサービス化することにより、革新的なユーザを新たに獲得した例もあります。
GNOMEプラットフォームはアプリケーションでWebサービスを使用するためのサポートと、ウェブ上の言語であるXMLの使用、管理、変換のための理解しやすいライブラリを提供します。
SOAP
GNOMEはlibsoupライブラリによってHTTP上でXMLメッセージをやりとりするために広く用いられているSOAPにたいするサポートを提供します。SOAPは開発者がウェブ上で、アプリケーションが情報を取得するのに使用されたり、データ送信、トランザクションの生成、その他いくつものサービスを提供するためのインタフェースを公開することを可能にします。
SOAPは検索や情報の取得のために使用でき、オンラインストアでのやりとりや他のシステムでのユーザ管理、その他さまざまな目的のために使用されます。Webサービスはユーザのために重要な機能を提供するために今後ますます使用が期待できます。また、SOAPを使用するアプリケーションは、より統一され進化したユーザ経験を提供することができます。
ライブラリにはHTTP実装とSOAPメッセージを構築・使用するためのAPIが含まれています。これにより安全な認証も可能になるため、Webサービスを使用して安全な接続を使用してプライベートなアカウントにアクセスすることができます。
libsoupについての詳細は
XML処理
1998年に正式に紹介されて以来、XML(eXtensible Markup Langauge) を使用するアプリケーションは増加しつづけています。それはXHTMLやDocBookのようなドキュメントの書式から、SOAPやJabberのようなインターネット・プロトコルまで、さまざまな目的で広く使用されてきました。XMLは読みやすくてシンプルな基本文法を提供し、アプリケーションがアプリケーション固有の問題に専念することを可能にします。
GNOMEには libxml2ライブラリが付属しており、デスクトップを通じて広い範囲で使用できます。libxml2ライブラリは高速で、XML処理の標準に完全準拠したライブラリであり、アプリケーションでXMLを使用するときに必要となるすべてを提供します。
libxml2ライブラリはXMLを処理するための、いくつかの異なるAPIを提供するので、あなたはアプリケーション開発の要件に最適なAPIを使用することができます。ネイティブのツリーAPIに加えて、libxml2はコールバック・ベースのSAX2 API、ストリームからのXMLの読み込み・書き込みのためのインタフェース、そしてXPathの完全なサポートを提供します。
libxml2はDTDサポートに加えて、より柔軟な妥当性評価モデルを持ち、簡単に使用することができるRELAX NGを使用したドキュメントにたいするサポートを提供します。またW3Cが策定した新しいスキーマ言語であるXML Schemaも部分的にサポートします。
アプリケーションで直接XMLを処理する場合はlibxml2を使用するべきです。libxml2を使用することにより、XMLの構文解析・処理・出力で完全な標準準拠を保証することができます。これは開発者がアプリケーション間での非互換を心配する必要がないことを意味します。
libxml2についての詳細は
XSLTによるXMLの変換
XSLTはXMLを他の書式に変換するXMLベースの言語です。XSLTはテンプレートベースの言語であり、特定のタイプに一致するXML要素を見つけて適切な出力を生成することができます。XMLとXPathを基本として、XSLTは開発者がアプリケーションにより適した他の書式にXMLを変換するための読みやすくてモジュール化されたテンプレートを作成することを可能にします。
GNOMEにはXSLTの完全な実装であるlibxsltライブラリが含まれています。libxsltライブラリはlibxml2のXML、およびXPathのサポートを基に構築されていることから、高速で、標準に準拠しています。
XMLドキュメントを変換する場合はlibxsltを使用するべきです。XMLの処理において常にXSLTが正しい解決とは言えないものの、開発が簡単になる場合もあります。libxsltで拡張要素や拡張機能を追加できるようになってからは、アプリケーションに適するようにカスタマイズすることが可能になりました。
libxsltについての詳細は
イントロダクション
GNOMEはパワフルで、ユーザビリティとアクセシビリティ、そしてインターナショナライゼーションに焦点を置いたシンプルなデスクトップ環境です。GNOMEは誰にでも使えるようにデザインされており、技術的な経験やハンディキャップ、ユーザのネイティブ言語に左右されません。GNOMEは人々が簡単にコンピュータを使用できるようにします。
GNOMEは、使いやすくて心をとらえるプロのソフトウェアを作成することを可能にする、理解しやすい開発プラットフォームを提供します。このドキュメントはGNOMEプラットフォームの高レベルな概観と、プラットフォームの各部分についての詳細ドキュメントへのリンクを提供します。
誰がこのドキュメントを読むべきか
もしあなたがGNOMEプラットフォームで使用するソフトウェアを作りたいと望むなら、このドキュメントを読むべきです。GNOMEプラットフォームで開発することは、あなたがユーザのデスクトップに統合された首尾一貫したアプリケーションを作る助けとなります。このガイドではプラットフォームのさまざまなコンポーネントを紹介しているので、どのライブラリを使えばタスクを達成できるかを知ることができます。このガイドは追加の詳細ドキュメントへとリンクしているので、プラットフォームのそれぞれのコンポーネントについて掘り下げて調べることができます。
このガイドはソフトウェア・プロジェクトの開発プラットフォームを選択中の人にとっても有用です。ガイドではGNOMEプラットフォームで使いやすいソフトウェアを作る方法についての概要を提供しています。
このガイドは、プラグインによりGNOMEデスクトップを拡張する方法や、その他の有用なツールを説明しています。もしあなたがGNOMEデスクトップに機能を追加したい場合は、このガイド、特に
もしあなたが既にソフトウェアを開発していて、それをGNOMEプラットフォームに移植したい場合は、このガイドに加えて
GNOMEファミリー
GNOMEは世界中の大勢の貢献者によるグローバルな取り組みです。GNOMEは、GNOMEの貢献者とユーザによって成功しました。このセクションではGNOMEについて更に知るためのWebサイトやカンファレンスと、GNOMEとともに作業している他の団体について一覧します。
Webサイト
www.gnome.org
GNOMEユーザのための主要サイトです。リリース情報やダウンロード、それにドキュメントが含まれます。
library.gnome.org
すべてのGNOMEドキュメントの完全な情報源です。ここにはGNOMEによって製作されたユーザ用、開発者用のすべてのドキュメントが含まれていて、リリースにしたがって自動的に構築・更新されます。
foundation.gnome.org
GNOMEファウンデーションのWebサイトです。GNOMEファウンデーションはGNOMEの開発を監督する非営利的なファウンデーションです。
bugzilla.gnome.org
GNOMEのバグ追跡サイトです。バグ報告や要望の投稿と、それらの報告にたいする対応のステータスを追跡します。
live.gnome.org
GNOMEのWikiサイトです。現在ではGNOMEの多くのプロジェクトが、このWikiサイトプロジェクトの主要なWebスペースとして使用しています。さらにこのWikiサイトは将来の開発についての概要を掲示するために使用されることもあります。
developer.gnome.org
開発者のための情報を紹介する古いWebサイトです。かつては開発者用のドキュメントやユーザビリティのドキュメントや翻訳チームについての情報が含まれていました。このサイトに含まれる情報は内容が大きくなってきたことにより
mail.gnome.org
GNOMEメーリングリストについての情報です。このサイトにはすべてのGNOMEメーリングリストのアーカイブが含まれています。
git.gnome.org
GNOMEのGitレポジトリです。プロジェクト開始当初からの、GNOMEのすべてのソースコードを追跡できます。
メーリングリスト
gnome-list
GNOMEユーザのための主要なメーリングリストです。
gnome-devel-list
GNOMEプラットフォームでの開発に関する質問や情報です。
gnome-love
GNOMEにかかわるための最初の場所です。
gnome-accessibility-list
GNOMEアプリケーションのアクセシビリティについての情報です。
gnome-doc-list
GNOMEアプリケーションのドキュメント作成のための情報です。
gnome-i18n
GNOMEアプリケーションのインターナショナライゼーションとローカライゼーションについての情報です。
ユーザビリティ
GNOMEアプリケーションのユーザビリティについての情報です。
カンファレンス
GUADEC
GNOMEユーザと開発者のための主要なカンファレンスです。GUADECは毎年５月か６月に開催されます。ヨーロッパの色々な場所を見れるという上手い口実もあって、毎年ヨーロッパの異なる都市で開催されています。GUADECはユーザ、開発者、ベンダを対象にした講演が行われます。
GNOMEサミット
ハッカーの集まりです。サミットは主に既存のGNOME開発者に適していますが、しばしば新しい開発者に有用な情報もあります。サミットは毎年ボストンで開催されています。
GNOME.conf.au
linux.conf.auでは毎年カジュアルな集まりが開催されます。
その他の団体
freedesktop.org
共同してデスクトップ環境の相互運用と技術共有について努力しています。GNOMEはfreedesktop.orgを通じてKDEやXFCEのようなプロジェクトと共に、よりよいユーザ経験を提供するための作業をしています。
Mozilla
フリーのWebエンジンであり、それ以上のものも含んでいます。GNOMEはよりよいユーザインタフェースを提供するためにMozzilaの開発チームと密接な関係を維持しています。
OpenOffice.org
フリーのオフィス・スイートです。 GNOMEはGNOME上でフリーのオフィス・スイートを使用するときに統一されたインタフェースを提供するためにOpenOffice.orgの開発チームと作業しています。
Free Software Foundation
それは"自由"です。 フリーソフトウェア財団はユーザがソフトウェアを自由に使用・変更・再配布・変更できる、完全に無料のオペレーティングシステムを作成するために1985年に設立されました。GNUプロジェクトの一環として、GNOMEは完全に自由なデスクトップ環境を提供します。
アプリケーションとファイルタイプのレジストリ
アプリケーションを使いやすくするために、ユーザがアプリケーションを検索し、それらを実行できるようにする必要があります。GNOMEデスクトップのユーザはアプリケーションメニューからアプリケーションを探してアプリケーションを実行するか、ファイルマネージャからファイルを探してアプリケーションを実行します。GNOMEデスクトップではアプリケーションをインストールするときにアプリケーションをメニューに追加したりファイルタイプを追加することができます。これらのメカニズムは
アプリケーションをメニューに追加するには単にデスクトップのエントリファイルに必要な情報を提供するだけです。デスクトップのエントリファイルはシンプルなkey-value構文を使用し、値それぞれに翻訳されたテキストをオプションで提供することもできます。デスクトップのエントリファイルには以下の情報が含まれます：
名前とコメント。アプリケーションがサポートしている場合は多くの言語に翻訳されたテキストが設定されます
固定リストから選ばれたカテゴリのリスト。アプリケーションをアプリケーションメニューのに配置するために使用します
アイコン。アイコンファイルのフルパスか、単にシステムのアイコンテーマのアイコン名を指定します
アプリケーションがサポートするファイルタイプのリスト
アプリケーションを実行するコマンド
プリケーションがシステムでまだ知られていない独自のファイルタイプを処理する場合は、ファイルタイプのレジストリにこれらの型を追加する必要があります。すべてのファイルタイプはMIMEタイプによりアクセスされます。たとえば、Ogg Vorbisオーディオ・ファイルは
アプリケーションについての詳細は
パネルアプレット
GNOMEデスクトップは柔軟で強力なパネルを提供しています。パネルにはアプレットと呼ばれる小さなアプリケーションをユーザが追加することができます。パネルアプレットは迅速なアクセスと有用な情報と機能を提供します。たとえばGNOMEデスクトップに付属しているパネルアプレットでは、ウィンドウやワークスペースを移動できたり、現在の気象情報を表示したり、ネットワークの状況を表示したり、さまざまな機能を提供しています。
アプリケーションの機能を強化するためにパネルアプレットを提供したり、単純なスタンドアロンのパネルアプレットを提供することもできます。単に迅速に通知を表示する必要がある場合は代わりに、これもユーザーのパネルに表示される通知スペースの使用を検討すべきです。パネルアプレットはアイコンによる通知以上の機能を提供する必要がある場合に使用すべきです。
パネル・アプレットはパネルと通信するためにBonoboを使用する独立したプロセスです。Bonoboによりアプレットはパネルと統合され、一貫したユーザ経験を提供することができます。たとえばすべてのパネル・アプレットのコンテキストメニューにはアプレットを削除・移動。ロックするための項目が標準で含まれています。それぞれのパネル・アプレットはコンテキストメニューにそれ以外のアクションのための他の項目を追加することができます。たとえば
Bonoboは時代遅れでありD-Busおよび他の技術に置き換えられていることに注意してください。
パネル・アプレットについての詳細は
通知スペース(Notification Area)
ランチャやパネルアプレットに加えてGNOMEパネルは、アプリケーションがイベントをユーザに通知するために使用できる通知スペースを備えています。通知スペースは、新しい電子メールをユーザに知らせたり、使用可能なアップデートや会議、その他のさまざまなイベントを通知するのに使用できます。
通知は、アプリケーションがユーザのパネルの通知スペースに配置できるシンプルなアイコンです。ユーザがアイコンをクリックすることによりアプリケーションは、それ以上の処理を行うこともできます。現在のところ、通知システムは、実験的なエッグライブラリによって実装されていますが、GTK +の次のバージョンでは通知アイコンをサポートする予定です。
通知スペースは
ファイルマネージャ
GNOMEには直感的で強力なファイルマネージャである


プラグインはリストビューに列を追加でき、自動的にファイルのエンブレムを表示します。これにより適切な情報をユーザが一目で判別できるようになります。たとえば

柔軟なプラグインアーキテクチャに加えて、
ウィンドウマネージャ
ウィンドウマネージャはウィンドウの周囲の境界線やタイトルバーの描画受け持つ特別なプログラムです。ウィンドウにたいする移動やサイズ変更、最小化、ワークスペース勘の移動などのすべての操作にたいしてウィンドウマネージャが処理を受け持ちます。ウィンドウはアプリケーション開発者がほとんど処理することなくウィンドウマネージャにより一貫して管理されます。アプリケーションがウィンドウにたいして影響を与える必要がある場合は、GTK+の関数を使用してウィンドウに対するヒントを提供します。
しかし外部プログラムが直接ウィンドウマネージャと相互作用したり、動作をコントロールすることもできます。GNOMEのlibwnckライブラリを使用すれば、アプリケーションはすべてのウィンドウにたいして位置や情報を取得したり、ウィンドウマネージャに指示を出すことによりそれらのウィンドウにたいしてさまざまなアクションを実行することができます。
libwnckライブラリは、GNOMEのウィンドウマネージャに固有のものではありません。ライブラリのすべての機能は外部のウィンドウマネージャへのヒントかEWMHを通じて行われます。EWMHは複数のデスクトップで統一されたウィンドウマネージャとの対話を提供するために
libwnckを通じてウィンドウマネージャと相互作用することにより、ワークスペースを表示したりユーザパネルのウィンドウをアプレットで一覧したりする簡単な処理や、同様に複雑なアプリケーション、たとえば新しいウィンドウにたいしてウィンドウの特定のプロパティに基づき自動的にアクションを実行することにウィンドウマネージャを使用することができます。
コントロールセンター
GNOMEデスクトップはすべてのデスクトップ全体の設定とシステム管理のために単一のメニューを提供します。設定やシステム管理のダイアログはこのメニューに配置されることにより簡単にアクセスすることができます。アプリケーションを追加するときにカテゴリを
もしあなたが管理者がデスクトップシステムを設定できるダイアログを提供する場合は、そのダイアログをシステム管理メニューに追加するべきです。複数のアプリケーションに影響を及ぼす設定をユーザに許すようなダイアログを提供する場合は、そのダイアログを設定メニューに追加するべきです。アプリケーションに固有の設定については、これらのグローバルなメニューに追加するべきではありません。
パスワードの保存
GNOMEはユーザのパスワードやその他の機密データを格納するために、モダンで安全なキーリング・マネージャを提供します。アプリケーションはパスワードの取得と保存にキーリング・マネージャのライブラリを使用できます。また、ユーザはパスワードを管理するのにGNOMEのアプリケーションである
キーリング・マネージャはアイテムをいくつか含むことができる任意の個数のキーリングを提供します。キーリングのアイテムにはデータやパスワードが保存されます。それぞれのキーリングは個別にロックされ、ユーザはロックを解除するためのスワードを提供しなければなりません。キーリングのロックを解除すると、ユーザはキーリングに含まれるすべてのアイテムにアクセスできます。
キーリング・マネージャは、キーリングのアイテムにたいするアクセス制御リストを提供し、そのアイテムによりアクセスが許可されるアプリケーションを制御します。もし未知のアプリケーションがキーリングのアイテムにアクセスしようとした場合、キーリング・マネージャはユーザにプロンプトを表示してそのアプリケーションのアクセスを許可するか、拒否するかを尋ねます。これにより悪意のあるプログラムや質の悪いプログラムがユーザの機密データにアクセスすることを防ぐことができます。
ファイルシステムに保存されたキーリングのデータはAESブロック暗号化方式で暗号化されアイテムの属性にはハッシュ関数にはSHA1が使用されます。属性のハッシュを使用することにより、キーリング・マネージャはキーリングのロックを解除することなくアプリケーションに要求されたアイテムを見つけることができます。キーリングはアイテムが見つかったときにロックが解除され、アイテムにアクセスすることができるようになります。
キーリング・マネージャはセッションのためのキーリングも提供します。セッション・キーリングのアイテムはディスクには決して保存されず、ユーザがセッションを終了すると失われます。セッション・キーリングは現在のセッションだけで使用するパスワードに使用されます。
もしリモートサーバにアクセスする場合にGIOを使用している場合は、キーリング・マネージャによる恩恵を自動的に享受することができます。GVFSがユーザの認証を必要とする場合、認証に使用するパスワードを既定のキーリングかセッションのキーリングに保存するかのオプションを選択することができます。
アプリケーションがユーザのパスワードや機密データを保存する必要がある場合はキーリング・マネージャを使用するべきです。キーリング・マネージャを使用することによりユーザのデータを安全かつ確実に保つことができ、よりよいユーザ経験を提供することができます。
詳細については、
セッションマネージメント
GNOMEはセッション間でアプリケーションを円滑に実行するためのツールを提供します。ユーザがログアウトしたときに実行されていたアプリケーションは、ユーザが再びログインしたときに復元されます。この機能を提供するためにはアプリケーションがセッションマネージャと接続して、ユーザがログアウトしたときに状態を保存しなければなりません。
このセクションは GnomeClient と Libgnomeui が時代遅れになるのに伴い陳腐化していることに注意してください。新しく記述するコードでは
GNOMEはGNOMEユーザインタフェース・ライブラリによりシンプルなセッションマネージメントのAPIを提供します。GNOMEセッションマネージャについての詳細は
アドレス帳とカレンダー
Evolutionデータサーバにより、GNOMEはすべてのアプリケーションが情報を保存・取得することができる単一のアドレス帳とカレンダーを提供します。Evolutionデータサーバを使うということはユーザがそれぞれのアプリケーションの連絡先を分割管理する必要がなくなり、それらのカレンダーに手動でイベントをコピーする必要がなくなることを意味します。
人々が友人や同僚と対話するのにコンピュータを使用する機会はますます増加しています。電子メール、インスタント・メッセンジャー、テレフォニー、そしてビデオ会議はいずれも他の人と対話するのに使用されるアプリケーションです。これらのアプリケーションはユーザのためにしばしば連絡先一覧を提供します。Evolutionデータサーバを使用すればアプリケーションは連絡先の情報を１ヶ所に保存することができ、すべてのアプリケーションがユーザの連絡先と関連するデータを参照することができます。
Evolutionデータサーバを使用すればアプリケーションがユーザのカレンダーに予定を保存・取得することもできます。たとえば、パネルに表示されている時計をクリックするとシンプルなカレンダーが表示されます。もしユーザが予定をスケジュールしていた場合は、そのカレンダーに予定が表示されます。これによりユーザはカレンダーのためのアプリケーションを開くことなく簡単に予約を確認することができます。
アドレス帳についての詳細は
ユーザビリティ
GNOMEデスクトップは使いやすさを基にデザインされ、シンプルで一貫したユーザ経験を提供します。人々はコンピュータを使用して仕事(遊び?)をするのに複雑なユーザインタフェースのパズルを解読する必要はありません。アプリケーションをデザインする場合、どのようにしてユーザが一般的なユーザインタフェースの使い方を認識するか、アプリケーションに固有の要素についてどれだけ早く習熟することができるか、そしてユーザがそれらを習熟した後にどれだけ効果的に作業を行うことができるか、について考慮すべきです。
GNOMEはあなたが魅力的で使いやすいアプリケーションを作成するための包括的なヒューマンインターフェースのガイドラインを提供しますユーザビリティの問題について単一の解を提供できるガイドラインはありませんが、GNOMEヒューマンインタフェース・ガイドラインは簡単で使いやすいアプリケーションを作成するのを簡単にしてくれます。詳細については
ドキュメンテーション
すべてのアプリケーションは、ユーザがアプリケーションを理解し、問題解決を手助けするためのドキュメントを提供するべきです。うまくデザインされたアプリケーションでは使用する前にドキュメントを読む必要がないとしても、ドキュメントはユーザにとって、とくに複雑なアプリケーションの場合は重要なツールなのです。
GNOMEはユーザにドキュメントを提供するための統一されたフレームワークを提供します。それにより業界標準であるDocBook形式のドキュメントをユーザに提供することができます。DocBook形式を使用することは、あなたが書式の詳細に悩む必要がないことを意味します。その代わりに、あなたのドキュメントは他のシステムドキュメントと一貫性のある規則で自動的にフォーマットされます。
GNOMEのヘルプ・ビューアである
アプリケーションのドキュメントの記述についての詳細は
@@image: 'figures/graphics.png'; md5=d7ab482cbaaf268b4c439c57b2624826
@@image: 'figures/pango.png'; md5=e308eb839e5e70aea097a4cfe744e44c
@@image: 'figures/i18n.png'; md5=75f5d47d566817d32f1ed76e4c761ffb
グラフィカルなインタフェース
多くのアプリケーションではユーザと対話するためにグラフィカルなインタフェースを提供する必要があります。グラフィカルなインタフェースは人間がソフトウェアと対話するときに直感的かつ発見的な手段であり、ユーザはアプリケーションが使いやすく魅力的なユーザインタフェースを提供することを期待します。
GNOMEプラットフォームの特徴は洗練されたグラフィクス、およびユーザインタフェース技術であり、それは標準的なユーザインタフェースのコントロールから高品質なグラフィクスをスクリーンに描画するためのAPIまでを含みます。GNOMEのグラフィクス技術を使用することにより統一感があり、直感的で、心をとらえるアプリケーションを作成することができます。
グラフィクス・ライブラリの階層
GTK+
GTK+はGNOMEにおいてインタフェースを構築するときの主要なライブラリです。このライブラリは一般的なグラフィカルなアプリケーションで使用されるユーザインタフェースのコントロールやウィジェットのすべてを提供します。そのモダンでオブジェクト指向のAPIにより、描画やデバイスとの相互作用などの低レベルの詳細を処理することなく、魅力的で洗練されたユーザインタフェースを構築することができます。
GTK+はボタン、チェックボックス、テキスト・エントリ等の基本的なウィジェットに加え、ツリービュー、マルチラインのテキスト・フィールド、およびメニューやツールバーのアクションのためのモデル・ビュー・コントローラ(MVC)にもとづく強力なAPIを提供します。
GTK+のウィジェットはウィンドウ上にボックス・パッキング・モデルで配置されます。プログラマは位置を絶対的な座標を指定して配置するのではなく、コンテナ・ボックスにウィジェットをどのようにパックするか指定するだけです。GTK+はそれらのコンテンツを的確に配置し、ウィンドウのサイズ変更を自動的に処理することを保証します。
GTK+は柔軟なAPIを提供しているため、GTK+のアプリケーションで追加のウィジェットを開発するのは簡単です。追加のウィジェットを提供するサードパーティによるライブラリが数多く存在し、多くの開発者が自分のアプリケーションのために、特定の目的に使用するカスタム・ウィジェットを作成しています。
GTK+がユーザインタフェースやユーザとの相互作用にまつわる難解な詳細を処理し、シンプルで強力なAPIを提供するので、あなたはアプリケーションの詳細に集中することができます。GTK+を使用して開発されたアプリケーションは自動的にユーザのテーマやフォントの設定を引き継ぎ、アクセシビリティ技術と適切に対話し、ユーザの期待通りに動作します。
GTK+についての詳細は
Libglade
Libgladeは
LibgladeはXML定義からユーザインタフェースを動的に構築するためのライブラリです。あなたは
Libgladeによりインタフェースの構築でコードが分断されることなく、プログラマはアプリケーションのロジックに集中することができます。またグラフィカル・インタフェース・ビルダにより、デザイナはプログラムを知らずにインタフェースを構築することが簡単になります。
Libgladeについての詳細は
Pango
Pangoレイアウト・エンジンは異なるフォント・バックエンド、および描画バックエンドで使用することができます。大抵のGNOMEシステムでは、PangoはFreeType、fontconfig、およびフォントへのアクセスとテキストの描画にCairoを使用します。ほかのシステムではPangoはネイティブのフォントシステム、たとえばMicrosoft WindowsではUniscribe、MacOSではATSUIを使用します
PangoはGNOMEプラットフォームにおいてテキストとフォントを処理する際に中核となるライブラリです。このライブラリはGTK+を介してテキストのレイアウトとレンダリングを受け持ちます。
Pangoは世界中のさまざまな書記体系を広範囲にサポートします。言語により使用される多くの書記体系にはグリフのレイアウトや合成文字(composing characters)にたいする複雑なルールがあります。Pangoはほとんどすべての言語による記述を正しく表示し、すべての場所でユーザがネイティブの言語でテキストを閲覧できるようにします。Pangoは複数の書記体系を自動的にサポートします; アプリケーションのの開発者は他の言語をサポートするために特別なコードを記述する必要はありません。
Pangoによる複数言語の表示
スクリーンショットは
Pangoは特有のドキュメントとインタフェースにより斜体、フォントの太さ、アンダーラインを含めたテキストの整形をサポートします。PangoはPangoMarkupと呼ばれる、XMLに似たシンプルな言語を使用することで、フォントのサイズや色、スタイルやその他のテキストの属性を設定することを可能にします。PangoMarkupを使用することにより、テキストブロックに手動で挿入することなくインラインでスタイルを設定できます。PangoMarkupはGTK+から直接使用され、グラフィカルインタフェースのテキストを整形するのを容易にします。
スクリーンやその他のデバイスにテキストをレイアウトするときは常にPangoを直接使用するべきです。Pangoを使用することによりGTK+やGNOMEプラットフォームの他の部分とシームレスにテキストをレイアウトすることができます。また可搬性のあるコードを記述でき、あなたのアプリケーションが異なる数百の言語を表示できることを保証します。
Pangoについての詳細は
GDK
GDKはX Window System、Microsoft Windows、DirectFB、Quartzを含む、いくつもの異なるプラットフォームで実行されます。それらのさまざまなプラットフォームにおいてGDKは統一された同じAPIを提供することでGTK+、そしてGTK+によるアプリケーションを変更することなしに実行することを可能にします。
GDKはGTK+によって使用される、グラフィクスおよび入力デバイスにたいしてシステムを通してやりとりするための低レベルなライブラリです。あなたがアプリケーションのコードでGDKを直接使用するのは稀でしょうが、このライブラリにはオブジェクトやテキストをスクリーンに描画し、さまざまな入力デバイスとやりとりするのに必要なすべての機能が含まれています。
GDKの特徴は簡単なオブジェクトの描画や、スクリーンにイメージをレンダリングするのに適したグラフィクス・コンテキストと基本的な描画機能です。Cairoにより広範囲の描画システムが提供されるようになって以来、GDKはCairoのコンテキストを使用するためのフックを提供しています。
GDKはGTK+で使用される高レベルのシグナルによる接続ではなく、より低レベルのキーボードやマウスおよびその他の入力デバイスからのシグナルにアクセスすることを可能にします。GDKはドラッグアンドドロップやシステムのクリップボードにアクセスするための低レベルなルーチンも提供します。カスタムコントロールを実装するときは、これらのシグナルを通じたユーザとの適切なやりとりを実装するために、これらの特色の利用が必要となるでしょう。
GDKはGTK+のような完全なグラフィック・ツールキット実装するのに必要となる、その他の機能を提供します。GDKがプラットフォームの抽象化を提供するようになって以来、GDKはGTK+で必要となるすべてのシステムの機能をAPIとして提供し、GTK+複数の環境の元で実行できるようになりました。 これには複数のディスプレイ、解像度、カラーデプス、カラーマップ、カーソルなどが含まれます。
イベント、ウィンドウ、クリップボードを含む、背後のウィンドウシステムに対する低レベルのアクセスが必要な場合はGDKを使用するべきです。これらの処理にGDKを使用することにより可搬性のあるコードを記述できるとともに、GTK+で記述されたコードと統合することが可能になります。GDKで提供されるシンプルな描画ルーチンを使用することは通常ありません。かわりにCairoで提供される、拡張された機能が使用されます。
GDKについての詳細な情報は
Cairo
Cairoはベクタグラフィクスやパノラマ画像の描画、およびアンチエイリアスによるテキストのレンダリングといった機能のための、洗練されたAPIを特色とする２Dグラフィクス・ライブラリです。CairoはX Window System、Microsoft Windows、イメージ・バッファを含めた複数の出力デバイスへのサポートを提供し、異なるメディアにグラフィクスを描画するコードを、プラットフォームに依存せずに記述することを可能にします。
CairoはPostScriptやPDFと似た描画モデルを提供します。CairoのAPIは３次元のベジエ曲線の線描と塗りつぶし、パノラマ画像、およびアフィン変換処理といった描画のための操作を提供します。あなたのアプリケーションのコードでこれらのベクタ操作を使用することにより、高価な処理であるピクセル・ベースの描画を使用することなく、アンチエイリアスされた画像を使用することができます。
Cairoの豊富な描画モデルは複数メディアへの高品質なレンダリングを可能にします。同じAPIを使用して、スクリーンに魅力的なグラフィクスやテキストの描画、イメージのレンダリングができ、印刷に適した明瞭な出力を作成することもできます。
アプリケーションでGTK+により提供されるウィジェットへの描画という範囲を越えるグラフィクス描画が必要な場合は常にCairoを使用するべきです。GTK+内部の描画にはCairoが多く使用されています。カスタムな描画にCairoを使用することにより、アプリケーションは高品質でアンチエイリアスされた、解像度に依存しないグラフィクスを手にすることができます。
Cairoについての詳細は
仮想ファイルシステム
GLibの一部であるGIOはGNOMEアプリケーションでのファイル、およびフォルダに対する操作のための中核となるライブラリです。GIOは取り換え可能なバックエンドにたいする、統一された仮想的ファイルシステムというレイヤーを提供します。GNOMEでは、GIOのバックエンドとして、複数のネットワークプロトコル、およびローカルプロトコルを実装するGVFSライブラリが提供されます。アプリケーションでGIOをGVFSとともに使用することによりローカルにファイルと同じくらい容易に、リモートマシン上にあるファイルにたいして処理を行うことができます。
GIOはファイルやフォルダにたいして、MIMEタイプやファイルのアイコン、どのアプリケーションがそのファイルを開くことができるかといった広範な情報を提供します。GVFSがファイルタイプの決定と関連付けの標準として
GIOはGNOMEデスクトップを通じて使用されます。ファイルマネージャである
GIOについての詳細は
GNOMEの以前のバージョンでは、GnomeVFSライブラリがファイルおよびフォルダへのアクセスに使用されていました。 GnomeVFSでもリモートフォルダへの透過的アクセスを含めた同様な機能が提供されていましたが、いくつかの制限もあり、それはGIOによって解決されました。GnomeVFSはGNOME 2でも引き続きサポートされますが使用は推奨されていないので、新しく記述するコードで使用するべきではありません。GnomeVFSについての詳細は
コンフィギュレーションとロックダウン
GConfはGNOMEのコンフィギュレーション設定を保存および取得するシステムです。GConfは２つのパートからなります:設定にアクセスするためのクライアントライブラリと、それらの設定の保存および取得を受け持つセッションデーモンです。デーモンを使用することによりGConfは、異なるストレージをバックエンドとする、入力をチェックする、同時に複数のアプリケーションからのアクセスを可能にする、などのことができるようになります。
GConfにより保存された設定は、ユニークなキーもしくは識別文字列を使用して保存・取得します。キーは単純な階層による 名前空間を使用することにより他のアプリケーションやデスクトップの設定との衝突を避けいています。あなたはンフィギュレーション・キーの詳細をスキーマファイルとして提供することができます。これによりGConfはキーの入力タイプの確認、そしてキーにたいするローカライズされたドキュメントを表示することができます。またシステム管理者はこれにより、複数の設定を設定ダイアログを操作せずに一度で設定することができます。
GConfは異なる設定を一度に参照することができます。典型的な例は異なる場所のファイルシステムの参照です。システムソースを適切に設定することにより、GConfはすべてのユーザにたいする既定・必須の設定を適用することができます。GNOMEの
GConfのクライアントライブラリは設定の変更にたいする通知を提供します。それにより他のツールからアプリケーションの設定が変更された場合でも、変更された設定をアプリケーションに即時に適用することが容易になります。キーにたいする値の設定は、それに興味を持つすべてのアプリケーションに通知され、デスクトップや他のアプリケーションにまたがる設定を素早く簡単に処理することができます。
GConfは特定のキーを読み取り専用に設定にして、ユーザが値を変更できないようにすることによりシステムのロックダウンを容易にします。さらにGNOMEはディスクへの保存やパネルのレイアウト変更を禁止するために使用できる高レベルのキーをいくつか提供しています。
あなたのアプリケーションがすべてのユーザの設定を保存するような場合はGConfを使用すべきです。GConfを使用することにより即時に適用が可能な設定を提供でき、システム管理者や設定、バックアップツールから設定にアクセスすることが可能になります。
GConfについての詳細は、
インターナショナライゼーション
GNOMEデスクトップと開発者用プラットフォームはアプリケーションをインターナショナライズ(訳注：異なる言語環境において機能するソフトウェアをデザインすること)、ローカライズ(訳注：実際にアプリケーションのメッセージやラベル、その他のインタフェース要素を異なる言語に翻訳すること)へのフルサポートを提供します。インターナショナライゼーションはあなたのアプリケーションがローカライズできることを保証するためのプロセスです。そのローカライズには、アプリケーションで翻訳されるすべての文字列をマークすること、その文字列にたいして番号と書式を正しくマーキングすること、そして時刻や日付、単位や書式にたいする慣習の違いの調整などが含まれます。
GNOMEはローカライゼーションの機能にアクセスするために、標準のgettextと関連するルーチンを使用します。gettextを使用したローカライゼーションへのサポートは、GNOMEプラットフォームのすべてのコンポーネントに組み込まれています。あなたのソースコードは特別なツールのために、自動化されたツールによってスキャンされます。それらの文字列はPOファイルの中に配置され、翻訳者が翻訳を追跡できるようにします。gettextを使用することにより、あなたは簡単かつ効果的に実際にユーザが目にする翻訳されたバージョンの文字列、つまりアプリケーションがインストールされた翻訳ドメインにしたがって翻訳された文字列にアクセスすることができます。
これらの翻訳ドメインは、文字列の変更を追跡し、翻訳のための更新を適宜行うことができるPOファイルを使うことにより作り出すことができます。GNOMEにはintltoolという、POファイルの中の翻訳を管理するためのツールが付属しています。intltoolを使用することにより、アプリケーション中の文字列の翻訳だけではく、GConfのスキーマファイルやデスクトップのエントリファイル、そしてXMLファイルにもPOファイルを使用することができます。
GNOMEはgnome-doc-utilsパッケージの一部としてxml2poツールも提供します。このツールにより翻訳者はPOファイルからXHTML、DocBookを含めたさまざまな形式の翻訳済みXMLを作成することができます。
インターナショナライゼーションにはは文字列が翻訳されることを可能にするだけでなく、あなたのアプリケーションを開発するときに、インターナショナライゼーション・プロセスの各ステップをGNOMEサポートするということが含まれています。GTK+は右から左に読むような言語の表示を自動的に調整し、Pangoは両方向から読むようなテキストや、さまざまな異なる書記体系で記述されたテキストを完全にサポートします。GTK+は複数の入力メソッドをサポートし、すべての言語のユーザが自身のキーボードでテキストを効果的に入力することを可能にします。GNOMEプラットフォーム全体ではUnicodeの表記法の１つであるUTF-8エンコードをネイティブでサポートし、全世界の文字と書記体系へのアクセスを提供します。
複数言語による
スプレッドシート・アプリケーションである
あなたのアプリケーションをインターナショナライズすることは、世界中の多くのユーザがアプリケーションを使用する手助けとなります。経験を積んだ翻訳者がいくつもの言語への翻訳を提供しなければならない間、アプリケーションが完全にローカライズされるまでは、アプリケーションがインターナショナライズされていることをプログラマは保証しなければなりません。
GNOMEのインターナショナライゼーションについての詳細は
アクセシビリティ
アクセシビリティとは。あなたのアプリケーションをハンディキャップを持つさまざまな人が使えるよう保証するプロセスのことです。ハンディキャップはさまざまな形をとります: 視力障害、運動機能障害、聴覚障害、認知機能、および言語障害、そして発作障害などです。なんらかのハンディキャップをもつ人々が多数存在し、あなたのアプリケーションのアクセシビリティは、それら多くの人々がアプリケーションを効果的に使用することを可能にします。
GNOMEはATKフレームワークを使用することによりアクセシビリティのためのデバイスのサポートを提供します。このフレームワークはグラフィカル・インタフェースのコンポーネントと密接に結びついたいくつかのインタフェースを定義します。これによりたとえば、スクリーンリーダーはインタフェースのテキストを読み上げ、インタフェスのコントロールと相互作用を行うことができます。ATKのサポートはGTK+に組み込まれており、残りの部分はGNOMEプラットフォームではGAILライブラリが使用されます。そのためGTK+を使用する任意のアプリケーションは、何ら苦労することなく妥当なアクセシビリティのサポートを提供することができます。
それにもかかわらず、あなたはアプリケーションを開発するときはアクセシビリティの問題点を知っているべきです。GTK+のインタフェースが妥当なアクセシビリティを既定で提供するとしても、ATKに対して追加の情報を与えることでアクセシビリティツールに対するあなたのアプリケーションの振る舞いを改善できることがあります。もしあなたが独自のウィジェットを開発する場合、それらのプロパティをATKから使用できるよう保証すべきです。また、ユーザに情報を伝える際はサウンド、グラフィクス、色などのうちのどれか１つだけに頼るべきではありません。
GNOMEデスクトップにはハンディキャップを持つ人々がデスクトップやアプリケーションを最大限有効に使用することを可能にするためのいくつかのアクセシビリティツールが付属しています。ATKをフルに実装したアプリケーションはアクセシビリティツールと協調して動作します。GNOMEのアクセシビリティツールにはスクリーン・リーダー、スクリーン拡大鏡、オンスクリーン・キーボード、そしてグラフィカルな事前予測テキスト入力システムである
アクセシビリティについてのさらに広範な推奨については
マルチメディア
GStreamerはサウンド、ビデオ、その他のメディアを再生・作成・操作するための強力なマルチメディア・ライブラリです。GStreamerを使用することによりサウンドとビデオの再生、複数ソースからの記録、そしてマルチメディア・コンテンツの編集ができます。GStreamerは既定でいくつかの形式に対するエンコード・デコードをサポートします。その他の形式についてはプラグインにより追加することができます。
GStreamerはメディアをエレメントのパイプラインを通して処理する柔軟なアーキテクチャを提供します。それぞれのエレメントにはエンコード、デコード、複数ソースの合成、マルチメディアの変換などの、コンテンツにたいするフィルターを適用することができます。このアーキテクチャによりエレメントに任意の引数を指定することができるので、GStreamerを使ってさまざまなバーチャル・エフェクトを実現することができます。そのうえ、GStreamerはオーバーヘッドが低くなるようデザインされているので、潜在的に高い負荷を持つアプリケーションと実行することができます。
GStreamerはマルチメディアを取り扱うための強力なAPIを提供します。また、そのAPIは単純な再生のための便利なルーチンも提供します。GStreamerはあなたのアプリケーションで簡単にサウンドやビデオを使用するために、サポートしている形式のファイルを読み込み再生するためのパイプラインを自動的に構築することができます。
GStreamerのアーキテクチャにより、エンコーダ、デコーダ、そしてすべての種類のコンテンツのフィルタをプラグインにより追加することができます。サードパーティはGStreamerを使用する他のアプリケーションから自動的に使用可能になるGStreamerのプラグインを提供することができます。プラグインではほかのマルチメディア形式や追加の機能や効果の追加を提供できます
あなたのアプリケーションでマルチメディアのコンテンツを読み込んだり再生する必要がある場合や、サウンドやビデオを取り扱う必要がある場合はGStreamerを使用するべきです。GStreamerを使用することによりあなたのアプリケーションを開発することが簡単になり、GStreamerが提供する充分にテストされたエレメントをあなたの必要に応じて使用することができます。
GStreamerについてのわかりやすい情報は
印刷
印刷にたいするサポートを提供する必要のあるアプリケーションは多数存在します。ユーザはスクリーンに表示される内容と同様のものが印刷できることを期待します。GNOMEプラットフォームはあなたのアプリケーションで高品質な印刷をサポートするためのライブラリを提供します。
GNOME プリント
このドキュメントはすでに陳腐化しており、libgnomeprintとlibgnomeprintuiは
GNOMEプリントのフレームワークは、あなたのアプリケーションが統一されたインタフェースによって高品質な印刷を提供する手助けをするための２つのライブラリからなります。 プリントフレームワークの中核はPostScriptの出力を生成してプリンタに送信するlibgnomeprintです。その最上位に位置するのがlibgnomeprintuiであり、これはインタフェースのために標準的なプリント用のコントロールを提供します。
libgnomeprintライブラリは多くのプリンタで使用されているPostScriptのイメージングモデルを実装しています。PostScriptをサポートしないプリンタについては以降で説明するCUPSを通じてサポートされます。libgnomeprintは標準のPostScriptイメージングに加え、アルファ・チャンネルとアンチ・エイリアスをサポートします。
The libgnomeprintuiライブラリは標準的な印刷ダイアログ、印刷プレビューダイアログ、そしてその他のさまざまなコントロールを提供し、印刷の処理を構築するのに要求される機能を直感的なユーザインタフェースで提供します。GNOMEプリントフレームワークはプリンタの位置やスプールされた印刷ジョブの詳細を処理し、印刷ダイアログからPostScriptやPDFに直接エクスポートする機能を提供します。
印刷のためにPostScriptを出力する必要がある時は常にlibgnomeprintを使用すべきです。また、ユーザインタフェースを構築する場合はそれがたとえlibgnomeprint以外のソースによる出力のときでもlibgnomeprintuiを使用すべきです。GNOMEプリントフレームワークはユーザが印刷を行うアプリケーションに期待する統一されたユーザインタフェースを提供します
CUPS
大部分のGNOMEシステムでは、CUPS (Common UNIX Printing System)が低レベルの印刷システムとして機能します。CUPSはプリンタの検索、プリンタのオプションへのアクセス、そして異なるプリンタに対する印刷ジョブのスプーリングなどのモダンで機能豊富なアーキテクチャを提供します。
CUPSはローカルおよびネットワーク上にあるプリンタを自動的に検索するユーティリティを提供します。これによりユーザは使用可能なすべてのプリンタを検索できるだけでなく、手動で設定することなく異なる種類のプリンタを使用することができます
CUPSはプリンタの位置や種類に左右されない、印刷のための統一されたインタフェースを提供します。 複数の印刷プロトコルはCUPSによりシームレスに処理され、自動的にフィルタが適用された後に接続先のプリンタに送信されます。 アプリケーションは単純にPostScriptの出力を提供すれば, CUPSが自動的にPostScriptをネイティブでサポートしないプリンタに対する出力の変換を行います。
CUPSはPostScriptプリンタ記述(PostScript Printer Description: PPD)ファイルの形式によるプリンタの設定オプションも提供します。PPD設定によりアプリケーションは個々のプリンタの能力を引き出し、統一されたユーザインタフェースによる使用することが可能になります。たとえばPPDにより印刷ジョブに対してcollate(訳注：複数枚印刷する時の出力順序)やstaple(訳注：印刷物にホチキスを打つ位置)を指定できるプリンタを決定してユーザインタフェースにそのオプションを表示することができます。
ほとんどのケースではアプリケーションからCUPSを直接インタフェースをもつことはないでしょう。GNOMEプリントフレームワークを使用することにより、あなたはCUPSの柔軟さとパワーに自動的にアクセスできます。CUPSを下位にもつということは、プログラミングの量を少なくすることのよいユーザ経験です。
言語バインディング
GNOMEプラットフォームは主にC言語で書かれていますが、他のプログラミング言語に簡単にバインドできるように意図して記述されています。言語バインディングを使用することにより、GNOMEプラットフォームで好みのプログラミング言語による開発を行うことができます。
言語バインディングには、多くのプログラミング言語、およびGNOMEプラットフォームで公式にサポートされているのC++やJava、Perl、およびPython用のバインディングのサポートが存在します。
C++
C++バインディングはGTK+、Libglade、GConfを含むGNOMEプラットフォームを完全に網羅します。C++バインディングはすべてのオブジェクトをネイティブのC++オブジェクトにラップし、プログラマが独自のウィジェットを通常のC++インタフェースで提供できるようにします。C++バインディングは、タイプセーフなシグナルハンドラ、すべての標準C++ライブラリの使用、そして完全なC++メモリ管理をもつネイティブなAPIを提供します。
GNOMEのC++バインディングについての詳細は
Java
JavaバインディングはGTK+、Cairo、GConfを含むGNOMEプラットフォームを完全に網羅します。JavaバインディングはすべてのオブジェクトをネイティブのJavaオブジェクトにラップし、プログラマが独自のウィジェットを通常のJavaの継承により提供できるようにします。JavaバインディングはJavaのClassライブラリ、適切なインタフェースを使用して完全にネイティブなAPIを提供します。
GNOMEのJavaバインディングについての詳細は
Perl
PerlバインディングはGTK+、GnomeVFS、GConfを含むGNOMEプラットフォームのためのPerlのネイティブなインタフェースを提供します。PerlバインディングはすべてのオブジェクトをPerlオブジェクトにラップし、プログラマが通常Perlを使う標準的な方法でそれらを操作することを可能にします。PerlバインディングはPerlのネイティブなデータ型を適切に使用して、完全にネイティブなAPIを提供します。
GNOMEのPerlバインディングについての詳細は
Python
PythonバインディングはGTK+、GnomeVFS、GConfを含むGNOMEプラットフォームのためのPythonのネイティブなインタフェースを提供します。PerlバインディングはすべてのオブジェクトをPythonオブジェクトにラップし、プログラマが独自のウィジェットを通常のPythonの継承により提供できるようにします。Pythonバインディングはタイプキャストやメモリ管理などの詳細を自動的に処理して、完全にネイティブなPythonのためのAPIを提供します。
GNOMEのPythonバインディングについての詳細は
その他の言語
C#、Eiffel、JavaScript、Ruby、Scheme、その他の言語に完全または部分的に対応したバインディングが数多く存在します。それらがまだ正式にGNOMEでサポートされていないとしても、それらのバインディングはGNOMEで公式にサポートされているバインディングと同程度に高品質であり、それらのいくつかは将来のリリースでGNOMEの公式バインディングに含まれることでしょう。
言語バインディングについての詳細は
モジュールの早見表
この付録(
プラットフォームモジュール
GNOMEの開発者向けプラットフォームのモジュールは、APIとABIの安定性についての完全に保証します。プラットフォームモジュールにたいして開発されたアプリケーションは、GNOME2のリリース期間中は変更せずに実行できることが保証されます。
GConf
GConfは設定データを保存・取得するためのデーモンとライブラリを提供します。 GConfについては
ORBit
ORBitは非推奨のCORBAサーバーです。 GNOMEが推奨するコンポーネントアーキテクチャであるBonoboはCORBA上に構築されています。 CORBAについては、
atk
ATKは他のツールキットやアプリケーションで実装されるアクセシビリティのためのインタフェースを提供します。ATKのインタフェースを使用することにより、アクセシビリティツールは実行されているアプリケーションを完全に表示・制御することができます。ATKについては
gail
GAILはGTK+、GNOMEライブラリのためにATKインタフェースの実装を提供し、アクセシビリティツールがそれらのライブラリを使用して記述されたアプリケーションと相互作用することを可能にします。2009年にGAILはGTK+に移行されました。アクセシビリティについては
gio
GLibの一部であるGIOライブラリはファイルやフォルダにアクセスするための高レベルなAPIを提供します。GVFSライブラリと協調することにより、ローカルとリモートのファイルにたいして透過的にアクセスするための仮想的なファイルシステムを提供します。GIOについては
glib
GLibはCで記述されたライブラリやアプリケーションにたいしてアプリケーションを構築するブロックの中核を提供します。GLibはGNOMEのシステムで使用されているコアオブジェクト、mainループの実装、文字列や一般的なデータ型のための膨大なユーティリティ関数を提供します。
gnome-vfs
GnomeVFSはファイルやフォルダにアクセスするための非推奨なライブラリです。GnomeVFSはGIOとGVFSに置き換えられました。新しく記述されるコードではGIOを使用するべきです。
gtk+
GTK+はGNOMEアプリケーションでユーザインタフェースを構築するのに使用される主要なライブラリです。GTK+はユーザインタフェースのコントロールとそれを制御するためのシグナルのコールバックを提供します。GTK+については
gvfs
GVFSはGIOのバックエンドを実装します、GIOのAPIのさまざまなプロトコルによるアクセスを可能にします。開発者はGVFSに直接アクセスせずにGIOを使用してください。GIOにより記述されたアプリケーションは自動的にシステムで使用可能なGVFSを使用します。
libIDL
libIDLはCORBAインタフェースで必要となるインタフェース定義言語(IDL)のファイルを解析するための非推奨なライブラリです。libIDLはGNOMEの非推奨なCORBA実装であるORBitを使用しています。CORBAについては
libart_lgpl
libartはベクトルパスを描画することができる非推奨なライブラリです。libartはGnomeCanvasウィジェットで使用されています。新しく記述するコードではlibart_lgplの代わりにCairo、およびその他の技術を使用するべきです。
libbonobo
BonoboはGNOMEアプリケーションで再使用可能なコンポーネントを作成するための非推奨なライブラリであり、CORBA上に構築されています。Bonoboについては
libbonoboui
非推奨であるBonoboのUIライブラリです。Bonoboコンポーネント・フレームワークを使用したいくつかのインタフェース・コントロールを提供しています。Bonoboについては
libglade
libgladeは、XML記述から動的にユーザインタフェースを構築するための非推奨なライブラリです。Libgladeは
libgnome
非推奨であるlibgnomeライブラリはセッション管理、ファイルやURIに基づくアクティベーションやヘルプの表示などのモダンなアプリケーション構築のための便利なルーチンをいくつか提供しています。
libgnomecanvas
GnomeCanvasウィジェットは構造的なグラフィックを対話的に作成できる柔軟なウィジェットを提供しています。
libgnomeui
非推奨であるlibgnomeuiライブラリはアプリケーションのために追加のウィジェットを提供します。大部分のウィジェットはGTK+に移行済みです。
libxml2
libxml2ライブラリはXMLを標準に準拠した方法で処理するためのAPIをいくつか提供します。libxml2ライブラリについては
libxslt
libxsltライブラリはXMLを変換する言語であるXSLTの高速で完全な実装です。libxsltライブラリについては
pango
PangoはGNOMEアプリケーションでテキストやフォントを処理するための中核となるライブラリです。Pangoは世界中で使用されている異なる書記体系を広範にサポートします。Pangoについては
デスクトップモジュール
GNOMEデスクトップのモジュールは、たとえそれが比較的安定したものであるとしてもプラットフォームのモジュールとして同じAPI、ABIの安定性への保証を要求されていません。大抵、デスクトップのリリースではモジュールは成熟し、安定後にプラットフォームに取り入れられます。
eel
eelライブラリは主にGNOMEのファイルマネージャである
evolution-data-server
Evolutionデータサーバは複数のアプリケーションが同じデータを共有するために、アドレス帳とカレンダーのための統一された場所を提供します。Evolutionデータサーバについては
gnome-panel
パネルそのものに加えて、gnome-panelパッケージではユーザのパネルで実行することのできるにパネル・アプレットを構築するのに使用できるライブラリを提供しています。パネル・アプレットについては
gnome-keyring
GNOMEキーリング・マネージャはユーザのパスワードや機密データを保存するためのモダンで安全な手段を提供します。キーは暗号化され制限されたユーザ権限のみがアクセスできます。キーリング・マネージャについては
gstreamer
GStreamerはGNOMEでサウンドやビデオを再生、作成、操作するための強力なマルチメディア機能です。GStreamerについては
gtkhtml
gtkhtmlライブラリは豊かなテキスト編集をサポートする軽量なHTML描画を提供します。gtkhtmlは
gtksourceview
gtksourceviewライブラリはGtkTextViewウィジェットの拡張であり自動的な構文の強調表示やソースコード・エディタのために便利な機能を提供します。gtksourceviewは
libgail-gnome
GAILはGTK+とGNOMEライブラリのためのATKインタフェースの実装を提供し、それらのライブラリを使用して記述されたアプリケーションがアクセシビリティ・ツールと対話することを可能にします。アクセシビリティについては
libgnomeprint
非推奨のライブラリであるlibgnomeprintはPostScriptのイメージング・モデルを実装しています。libgnomeprintは
libgnomeprintui
非推奨のライブラリであるlibgnomeprintuiは標準の印刷ダイアログ、印刷プレビューダイアログ、その他の印刷のために必要となるさまざまなコントロールを提供します。libgnomeprintuiは
libgtop
libgtopライブラリは、実行中のプロセスについての情報を取得するためのポータブルAPIを提供します。libgtopは
librsvg
librsvgライブラリは、スケーラブルベクターグラフィックス（SVG）の実装を提供します。librsvgはデスクトップの解像度に依存しないベクタグラフィクスをレンダリングするために使用されます。
libsoup
libsoupライブラリはSOAP(Simple Object Access Protocol)と、同様にHTTPの実装を提供します。SOAPを使用することによりアプリケーションでWebサービスを構築することができます。libsoupライブラリについては
libwnck
libwnckライブラリはGNOMEの既定のウィンドウマネージャである
libxklavier
libxklavierライブラリはキーボードのレイアウトにアクセス・設定するための高レベルのAPIを提供します。libxklavierは設定メニューの
vte
VTEはGTK +アプリケーションで使用するための端末エミュレータウィジェットです。VTEは一貫したAPIとPangoによるテキストの描画を提供し、国際化されたテキストを表示することを可能にします。VTEはGNOMEの
GNOMEプラットフォームの概要
2005
2006
Shaun McCance
GNOME Foundation
2007-03-16
2.20
GNOMEプラットフォーム内部で使用されている強力なテクノロジの概要です。
Shaun
McCance
GNOME Documentation Project
shaunm@gnome.org
Hiroyuki Sekihara <hiroyuki\.sekihara\@gmail\.com>, 2010.