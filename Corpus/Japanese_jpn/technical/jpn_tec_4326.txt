# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# iso639_3:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

(PHP 4)
session_register() の引数の数は可変であり、 各引数は変数名を保持する文字列または変数名からなる配列 とすることが可能です。 各変数名が処理される毎に、 session_register() は、その変数名のグローバル変数を現在のセッションに登録します。
この関数は、 global 変数を登録します。セッショ ン変数を関数の内部で登録したい場合、 global() を用いてその変数をグローバルとするか、下記のようにsession配列を 使用して下さい。
$HTTP_SESSION_VARS/$_SESSIONを使用する場合、 session_register(), session_is_registered(), session_unregister() を使用しないで下さい。
この関数は全ての変数のセッションへの登録に成功した場合に TRUE を 返します。
この関数をコールする前に session_start() をコー ルしていない場合、暗黙のうちに引数を付けずに session_start() がコールされます。
配列$HTTP_SESSION_VARSまたは$_SESSION (PHP = 4.1.0)の適当なメン バに設定をするだけでもセッション変数を作成することが可能です。
注意 セッションにリソース変数を登録することは現在できません。例えば、 データベースへの接続を生成し、接続IDをセッション変数として登録し、 セッションが回復された時点で、接続が有効であることを期待すること はできません。リソースを返すPHP関数は、その関数定義に resource 型の返り値を有することが示されている。 リソースを返す関数のリストは、付録 resource types で見ることができま す。
$_SESSION (またはPHP 4.0.6以前は$HTTP_SESSION_VARS)が使用されて いる場合、$_SESSIONに変数を代入して下さい。 すなわち、$_SESSION['var'] = 'ABC';
session_is_registered() および session_unregister() も参照下さい。