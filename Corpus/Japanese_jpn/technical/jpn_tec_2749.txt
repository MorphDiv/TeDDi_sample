# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# iso639_3:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

(PHP 3, PHP 4)
eval() は、 code_str で与えられた文字列を PHP コードとして評価します。 中でも、データベースのテキストフィールドにコードを保存し、 後で実行するためには便利です。
eval() を使用する際、注意するべき点が いくつかあります。 パーサーが eval() の処理中に落ちないように、 渡す文字列はセミコロンで文が終了するといった有効なPHPコード である必要があります。また、 code_str の 中の文字を適切にエスケープする必要があります。
eval() の中で値を与えた変数は、 この後、メインスクリプトの中でもこれらの値を維持することも 覚えておいて下さい。
return 文は、文字列の評価をただちに終了します。 PHP4では、 eval() 関数は FALSE を返します。さも なくば、結果の値を返すために return を使用するこ とが可能です。一方、PHP3では、 eval() の型は void であり、値を何も返しません。

例 1 eval() の例 - 簡単なテキストのマージ
上の例は、以下を表示します。
ティップ ブラウザに直接結果を出力する全てのものと同様に、 出力制御関数 を使用してこの関数の出力をキャプチャーし、文字列等に保存することが可能です。