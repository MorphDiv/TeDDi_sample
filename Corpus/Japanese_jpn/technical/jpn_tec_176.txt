# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# ISO_6393:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

表計算ドキュメントの関数
/text/scalc/01/04060109.xhp
表計算ドキュメント; 関数
関数ウィザード; 表計算ドキュメント
関数; 表計算ドキュメント
表計算ドキュメントの関数
表計算ドキュメント
の関数について、例をあげながら説明します。
ADDRESS 関数
ADDRESS
数値で指定された行番号と列番号から、セルのアドレス (参照) をテキストとして返します。
アドレスの解釈は、絶対アドレス ($A$1)、相対アドレス (A1)、混在形式 (A$1 や $A1) のいずれにするかを指定できます。また、シート名も指定できます。
相互運用性のため、ADDRESS 関数 と INDIRECT 関数は、通常使われる A1 指定と、代替の R1C1 アドレス指定、どちらの形式のパラメータもサポートします。
ADDRESS 関数では、オプションのシート名パラメータを第 5 パラメータの位置に移動し、そのパラメータは第 4 パラメータとして挿入されます。
INDIRECT 関数では、そのパラメータは、第 2 パラメータとして追加されます。
どちらの関数も、もし引数が値 0 で挿入される場合、R1C1 指定が使用されます。引数が与えられていない、または 0 以外の値の場合、A1 指定が使用されます。
R1C1 指定の場合、ADDRESS 関数はシート名の区切り子として感嘆符 '!' を使用したアドレスの文字列を返し、INDIRECT 関数は感嘆符をシート名の区切り子として期待します。どちらの関数も A1 指定の場合、まだピリオド '.' でのシート名の区切り子を使用しています。
ODF 1.0/1.1 形式からドキュメントを開くとき、第 4 パラメータがシート名となっている ADDRESS 関数は、そのシート名を第 5 パラメータになるように移動します。値 1 の新しい第 4 パラメータが挿入されます。
ODF 1.0/1.1 形式で保存するとき、ADDRESS 関数が第 4 パラメータを持っていたら、そのパラメータは削除されます。
もし ADDRESS 関数の新しい第 4 パラメータが値 0 で使用されていたら、その表計算ドキュメントは古い ODF 1.0/1.1 形式で保存しないでください。
INDIRECT 関数は ODF 1.0/1.1 形式への変換なしで保存されます。もし第 2 パラメータがある場合、古いバージョンの Calc はこの関数についてエラーを返します。
構文
ADDRESS(行; 列; Abs; A1; &quot; シート &quot; )
行
は、セル参照の行番号を表します
列
は、セル参照の列番号 (文字でなく数字) を返します。
Abs
は、参照のタイプを決定します:
1: 絶対参照 ($A$1)
2: 行が絶対参照、列が相対参照 (A$1)
3: 行が相対参照、列が絶対参照 ($A1)
4: 相対参照 (A1)
A1
(オプション) 0 にセットすると、R1C1 指定が使用されます。このパラメータがない、または 0 以外の値にセットされると A1 指定が使用されます。
シート
は、シートの名前を表します。二重引用符で囲んでください。
例
=ADDRESS(1;1;2;; &quot; Sheet2 &quot; )
は、Sheet2.A$1 を返します。
-6
を含む場合は、
=ABS(INDIRECT(B2))
を入力して B2 の関数を使用し、参照先のセルを間接的に参照できます。結果は、B2 に指定されているセル参照の絶対値で、この場合は 6 です。
AREAS 関数
AREAS
参照内の範囲の個数を返します。
範囲には、連続するセルからなる範囲だけでなく、1 つのセルからなる範囲もあります。
この関数は1つの引数を受け取ります。複数の範囲を与える場合は追加の括弧で囲まなければなりません。複数の範囲を与えるには (;) を使用します。しかしこれは、自動的に ~(チルダ) に変換されます。チルダは範囲を加えるのに使用されます。
構文
AREAS(参照)
参照は、セルやセル範囲の参照です。
例
=AREAS((A1:B3;F2;G1))
は、 3 を返します。入力した後は =AREAS((A1:B3~F2~G1)) に変換されます。
「データ」 → 「範囲の指定」
で「All」という名前の範囲を定義している場合、
=AREAS(All)
は 1 を返します。
DDE 関数
DDE
DDE リンクの結果を返します。
編集 → リンク
を選択する必要があります。クロスプラットフォームリンク (たとえば、Windows マシンで動作している
%PRODUCTNAME
インストールから Linux マシン上で作成されたドキュメントへのリンク) を行なってはいけません。
構文
DDE( &quot; サーバー &quot; ; &quot; ファイル &quot; ; &quot; 範囲 &quot; ; モード)
サーバー
は、サーバーアプリケーションの名前です。
%PRODUCTNAME
アプリケーションはのサーバー名は &quot; Soffice &quot; です。
ファイル
は、絶対パスによるファイル名です。
範囲
は、データを取り出す範囲です。
モード
(オプション) は、DDE サーバーのデータがどのように数値に変換されるかを操作します
モード
効果
0 または指定なし
セルスタイル「標準」の数の書式
1
データは常に、英語 (米国) の標準書式で解釈されます。
2
データは文字列として受け取られ、数値には変換されません。
例
=DDE( &quot; soffice &quot; ; &quot; c:\office\document\data1.sxc &quot; ; &quot; sheet1.A1 &quot; )
は、
%PRODUCTNAME
Calc 表計算ドキュメント data1.sxc の sheet1 のセル A1 の内容を読み取ります。
=DDE( &quot; soffice &quot; ; &quot; c:\office\document\motto.sxw &quot; ; &quot; Today's motto &quot; )
は、この数式を含むセル内のモットーを返します。まず、モットーテキストを含む motto.sxw ドキュメントに行を入力し、
%PRODUCTNAME
Writer の
挿入 → セクション
で、入力した行を
Today's Motto
という名前のセクションの 1 行目として定義します。モットーは、変更されて
%PRODUCTNAME
Writer ドキュメントに保存されると、この DDE リンクが定義されているすべての
%PRODUCTNAME
Calc セルで更新されます。
ERRORTYPE 関数
ERRORTYPE
エラー値
この番号を使うと、独自のエラーテキストを表示させることなどが可能になります。
クリックしたセルに問題があると、$[officename] からの定義済みエラーコードがステータスバーに表示されます。
構文
ERRORTYPE(参照)
参照
は、エラーが発生したセルのアドレスを含んでいます。
例
=ERRORTYPE(A1)
は数字 518 を返します。
INDEX 関数
INDEX
INDEX は、行および列番号またはオプションの範囲インデックスで指定された部分範囲を返します。INDEX は、コンテキストによって参照または内容を返します。
構文
INDEX(参照; 行; 列; 範囲)
参照
は、直接または範囲名を指定して入力される参照です。参照が複数の範囲で構成される場合は、参照または範囲名をかっこで囲みます。
行
(オプション) は、値を返す参照範囲の行インデックスを表します。ゼロ (具体的な行がない) の場合は、参照されているすべての行が返されます。
列
(オプション) は、値を返す参照範囲の列インデックスを表します。ゼロ (具体的な列がない) の場合は、参照されているすべての列が返されます。
範囲
(オプション) は、多重範囲を参照する場合の部分範囲のインデックスを表します。
例
=INDEX(Prices;4;1)
は、
データ → 定義
で
取得価額
として定義されているデータベース範囲の 4 行 1 列から値を返します。
=INDEX(SumX;4;1)
は、
挿入 → 名前 → 指定
で定義されている範囲 SumX の行 4 列 1 の値を返します。
=INDEX(A1:B6;1)
は、A1:B6 の最初の行への参照を返します。
=INDEX(A1:B6;0;1)
は、A1:B6 の最初の列への参照を返します。
=INDEX((multi);4;1)
は、
挿入 → Names → 設定
で
multi
という名前を付けた複合範囲の行 4 列 1 にある値を示します。複合範囲は、それぞれが 4 行 1 列である複数の長方形の範囲で構成されている場合があります。この複合範囲の 2 番目のブロックを呼び出す場合は、数
2
を
範囲
パラメータとして入力します。
=INDEX(A1:B6;1;1)
は、A1 から B6 の範囲の左上にある値を示します。
=INDEX((multi);0;0;2)
は、複合範囲の 2 番目の範囲への参照を返します。
INDIRECT 関数
INDIRECT
参照
を返します。
この関数には、セル範囲を指定することもできます。
構文
INDIRECT(Ref; A1)
参照
は、内容を返すセルまたは領域の参照をテキスト形式で表します。
A1
(オプション) 0 にセットすると、R1C1 指定が使用されます。このパラメータがない、または 0 以外の値にセットされると A1 指定が使用されます。
文字列関数から計算される間接アドレスを使用する Excel スプレッドシートを開いている場合、シートアドレスは自動的には変換されません。たとえば、INDIRECT( &quot; filename!sheetname &quot; & B1) の Excel のアドレスは、INDIRECT( &quot; filename.sheetname &quot; & B1) の Calc のアドレスには変換されません。
INDIRECT は、INDIRECT( &quot; 範囲名 &quot; ) のように範囲名を解決できません。
例
100
を含む場合、
=INDIRECT(A1)
は 100 になります。
=SUM(INDIRECT( &quot; a1: &quot; & ADDRESS(1;3)))
は、A1 から行 1 と列 3 によって定義されているアドレスのセルまでの範囲のセルを合計します。つまり、範囲 A1:C1 が合計されます。
COLUMN 関数
COLUMN
セル参照の列番号を返します。
参照が単一のセルである場合、そのセルの列番号を返します。参照がセル範囲である場合、各セルの列番号からなる 1 行の
行列
を返します。この場合、数式は
行列式
として入力されている必要があります。参照がセル範囲であるが、数式が行列式として入力されていない場合、COLUMN 関数はセル範囲にある最初のセルの列番号だけを返します。
構文
COLUMN(参照)
参照
は、セルもしくは最初の列番号が見つかったセル範囲の参照です。
参照を指定しない場合は、数式が入力されているセルの列番号が返ります。$[officename] Calc は自動的に現在のセルの参照を指定します。
例
=COLUMN(A1)
は 1 に等しいです。列 A は、表の 1 番目の列です。
=COLUMN(C3:E3)
は、3 に等しいです。列 C は、表の 3 番目の列です。
=COLUMN(D3:G10)
は 4 を返します。この場合、行列の最初の値が常に結果として使用されます。
{=COLUMN(B2:B7)}
と
=COLUMN(B2:B7)
は 2 を返します。単一列の範囲の列番号は 1 つだけなので、数式が行列式として使用されているかどうかで違いはありません。
=COLUMN()
は 3 を返します。
{=COLUMN(Rabbit)}
は単一行行列 (3, 4) を返します。
COLUMNS 関数
COLUMNS
指定した範囲にある列の数を返します。
構文
COLUMNS(行列)
行列
は、列の合計を求めるセル範囲への参照です。この引数は、単一セルとすることもできます。
例
=COLUMNS(B5)
は 1 を返します。
=COLUMNS(A1:C5)
は、3 に等しいです。この参照は、3 列を含みます。
Rabbit
が名前の付いた範囲 (C1:D3) の場合、
=COLUMNS(Rabbit)
は 2 を返します。
縦方向の検索を行う関数
VLOOKUP 関数
VLOOKUP
右隣のセルへの参照を含む垂直検索。
この関数は、特定の値が行列の最初の列に含まれているかどうかをチェックします。この関数は、次に
Index
によって名前が付けられている列の同じ行の値を返します。
並べ替え順序
パラメータが省略されている場合や、TRUE か 1 が設定されている場合、データは昇順に並べ替えられると想定されます。この場合、完全一致の
検索条件
が見つからない場合は、条件より小さい最後の値が返されます。
並べ替え順序
に FALSE またはゼロが設定されている場合は、完全一致を見つける必要があります。見つからない場合は、結果はエラー
Error:
Value Not Available
になります。したがって、値がゼロの場合、データを昇順に並べ替える必要はありません。
構文
=VLOOKUP(検索条件; 行列; インデックス; 並べ替え順序)
検索条件
は、行列の最初の列で検索される値です。
行列
は、2 列以上を含む参照です。
インデックス
は、返される値を含む行列の列の番号です。最初の列の番号は、1 です。
並べ替え順序
は、行列の最初の列を昇順で並べ替えるかどうかを示すオプションのパラメータです。最初の列を昇順で並べ替えない場合は、ブール値の FALSE またはゼロを入力します。並べ替えた列はより一層高速に検索でき、並べ替えたリストの最小値と最大値の間にある場合は、検索値が完全に一致しなかったときでも、関数が値を返します。並べ替えていないリストでは、検索値は完全に一致する必要があります。そのほかの場合、関数は、
Error:
Value Not Available
というメッセージを返します。
例
100
を含み、E1 は名前
Vegetable Soup
を含むというようになります。列 D の番号は昇順に並べ替えられるので、オプションの
並べ替え順序
パラメータは必要ありません。
B1 に次の数式を入力します。
=VLOOKUP(A1;D1:E100;2)
A1 に番号を入力すると、B1 には 列D に入力されている該当番号の料理名が表示されます。存在しない番号を指定すると、その番号よりひとつ小さい番号の項目が表示されます。この表示が必要でない場合は、最後のパラメータに FALSE を指定します。こうすると、存在しない番号が入力された場合にエラーメッセージが表示されます。
シート番号; 検索する
SHEET 関数
SHEET
参照または文字列のシート名からシート番号を返します。
参照を指定しない場合は、この関数を入力したシートの番号になります。
構文
SHEET (参照)
参照
(オプション) は、セル、範囲、またはシート名への参照です。
例
=SHEET(Sheet2.A1)
は 2 を返します。
シートの数; 関数
SHEETS 関数
SHEETS
参照のシート数を返します。
パラメータを指定しない場合は、現在のドキュメントのシート数を返します。
構文
SHEETS (参照)
参照
はシートまたは範囲への参照です。このパラメータはオプションです。
例
=SHEETS(Sheet1.A1:Sheet3.G12)
は 3 を返します。
MATCH 関数
MATCH
指定された値に一致する項目の範囲内における相対的な位置を返します。
この関数は検索範囲で見つかった値の位置を数値で返します。
構文
MATCH(検索条件; ルックアップ行列; タイプ)
検索条件
は、単一行または単一列の行列で検索される値です。
ルックアップ行列
は、検索される参照です。ルックアップ行列は、単一行、単一列、または単一行や単一列の一部の場合があります。
型
には、1、0、または -1 の値を指定できます。型が 1 の場合 (または、オプションのパラメータを指定しない場合)、検索範囲の最初の列が昇順で並べ替えられていると仮定されます。型が -1 の場合、その列が降順で並べ替えられていると仮定されます。これは Microsoft Excel の同じ関数と対応します。
タイプ = 0 の場合、完全一致だけが検出されます。検索条件が複数回検出された場合、関数は最初に一致した値のインデックスを返します。タイプ = 0 の場合だけ、正規表現を検索できます。
タイプ = 1 または 3 番目のパラメータがない場合、検索条件以下の最後の値のインデックスが返されます。これは、検索行列が並べ替えられていない場合にも当てはまります。タイプ = -1 の場合は、検索条件以上の最初の値が返されます。
例
=MATCH(200;D1:D100)
は、列 D で並べ替えられる範囲 D1:D100 で値 200 を検索します。この値に到達するとすぐに、この値が見つかった行の番号が返されます。列の検索中により大きい値が見つかった場合は、前の行の番号が返されます。
OFFSET 関数
OFFSET
基準セルから指定の行数と列数を移動した位置にあるセルの値を返します。
構文
OFFSET(参照; 行; 列; 高さ; 幅)
参照
は、関数が新しい参照を検索する参照元です。
行
は、参照を上 (負の値) または下に修正した行の番号です。
列
(オプション) は、参照を左 (負の値) または右に修正した列の数です。
高さ
(オプション) は、新しい参照位置が開始される範囲の垂直方向の高さです。
幅
(オプション) は、新しい参照位置が開始される範囲の水平方向の幅です。
行
と
列
は、ゼロまたは負の開始行または列にならないようにします。
高さ
と
幅
は、ゼロまたは負の行または列数にならないようにします。
例
=OFFSET(A1;2;2)
は、セル C3 の値を返します。これは、A1 から 2 行と 2 列下に移動したからです。C3 が値
100
を含む場合、この関数は値 100 を返します。
=OFFSET(B2:C3;1;1)
は、B2:C3 から 1 行 1 列右下に移動した C3:D4 への参照を返します。
=OFFSET(B2:C3;-1;-1)
は、B2:C3 から 1 行 1 列左に移動した A1:B2 への参照を返します。
=OFFSET(B2:C3;0;0;3;4)
は、B2:C3 を3行4列にリサイズした B2:E4 への参照を返します。
=OFFSET(B2:C3;1;0;3;4)
は、B2:C3 を 3 行 4 列 のサイズに変更し、1 行下に移動した B3:E5 への参照を返します。
=SUM(OFFSET(A1;2;2;5;6))
はセル C3 から始まる範囲の合計を決定し、高さ 5 行、幅 6 列です (範囲 = C3:H7)。
LOOKUP 関数
LOOKUP
単一行または単一列範囲からセルの内容を返します。
場合によっては、同じインデックスの割り当てられた値が、別の列と行で返されます。
VLOOKUP
および
HLOOKUP
とは対照的に、検索および結果範囲は位置が異なる場合があります。隣り合っている必要はありません。さらに、LOOKUP の検索範囲は昇順に並べ替えます。並べ替えない場合、検索は使用できる結果をまったく返さない場合があります。
LOOKUP で検索基準を見つけることができない場合、検索基準以下の検索範囲で最大の値と一致します。
構文
LOOKUP(検索条件; 検索範囲; 結果範囲)
検索条件
は、直接または参照として入力される検索対象の値です。
検索範囲
は、検索される単一行または単一列の範囲です。
結果範囲
は、関数の結果が取得される別の単一行または単一列の範囲です。結果は、検索範囲で検出されたインスタンスと同じインデックスを持つ結果範囲のセルです。
例
=LOOKUP(A1;D1:D100;F1:F100)
は、範囲 D1:D100 で A1 で入力した数値に対応するセルを検索します。検索された例について、たとえば、この範囲の 12 番目のセル、というふうにインデックスが決定されます。次にその 12 番目のセルの内容が、関数の値 (一次元配列) として返されます。
STYLE 関数
STYLE
数式を含むセルにスタイルを割り当てます。
オプションで、指定時間の経過後に別のスタイルを割り当てることもできます。この関数は常に 0 を返すため、別の関数に付け加えても結果に影響を与えません。また CURRENT 関数と組み合わせて使用すると、値によって数値の色を変えることができます。たとえば、=...+STYLE(IF(CURRENT() > 3; &quot; 赤 &quot; ; &quot; 緑 &quot; ))は、値が 3 より大きいとセルスタイル「赤」、それ以外の場合は「緑」を適用します。(「赤」と「緑」の名前でセルスタイルがあらかじめ作成されていることが前提です。)
構文
STYLE( &quot; スタイル &quot; ; 時間; &quot; スタイル 2 &quot; )
スタイル
はセルに割り当てるセルスタイルの名前です。スタイル名は引用符で囲む必要があります。
時間
(オプション) に秒数を指定すると、指定の秒数後にスタイルが変更されます。
スタイル 2
は、一定の時間が過ぎるとセルに割り当てられるセルスタイルのオプション名です。このパラメータがない場合は、「デフォルト」が想定されます。
例
=STYLE( &quot; Invisible &quot; ;60; &quot; Default &quot; )
は、ドキュメントが再計算またはロード後 60 秒間、透明な形式にセルを書式設定し、その後、デフォルト書式を割り当てます。両方のセル書式を事前に定義する必要があります。
STYLE() はゼロの数値戻り値を持っているので、この戻り値は文字列に追加されます。これは、次の例のように、T() を使用して避けることができます。
= &quot; Text &quot; & T(STYLE( &quot; myStyle &quot; ))
別の例については、CURRENT() を参照してください。
CHOOSE 関数
CHOOSE
最大 30 個からなる値のリストから 1 つ返すためにインデックスを使用します。
構文
CHOOSE(インデックス; 値 1; ...; 値 30)
インデックス
は、1 から 30 までのどの値をリストから取り出すのかを指定する、参照または数値です。
値1 ～ 値30
は、値のリストです。参照または値で指定します。
例
=CHOOSE(A1;B1;B2;B3; &quot; Today &quot; ; &quot; Yesterday &quot; ; &quot; Tomorrow &quot; )
は、A1 = 2 の場合はセル B2 の内容を返します。A1 = 4 の場合は、テキスト「Today」を返します。
HLOOKUP 関数
HLOOKUP
選択した範囲の下にあるセルの値と参照を検索します。
インデックス
で指定された行の値を返します。
構文
HLOOKUP(検索条件; 行列; インデックス; 並べ替え)
VLOOKUP
も参照します。行と列が入れ替わります。
ROW 関数
ROW
セル参照の行番号を返します。
参照が単一のセルの場合、そのセルの行番号を返します。参照がセル範囲の場合、各セルの行番号からなる 1 列の
行列
を返します。この場合、数式を
行列式
として入力する必要があります。参照がセル範囲であるが、数式を行列式として入力しない場合、ROW 関数はセル範囲にある最初のセルの行番号だけを返します。
構文
ROW(参照)
範囲
は、セルか、範囲か、名前を付けた範囲です。
範囲を指定しない場合、数式を入力したセルの行番号が返ります。$[officename] Calc は自動的に現在のセル参照を範囲に適用します。
例
=ROW(B3)
は 3 を返します。
{=ROW(D5:D8)}
は単一列行列 (5, 6, 7, 8) を返します。
=ROW(D5:D8)
は 5 を返します。
{=ROW(A1:E1)}
と
=ROW(A1:E1)
は両方 1 を返します。単一行の範囲は 1 つの行番号だけを持つので、数式が行列式として使用されているかどうかで違いはありません。
=ROW()
は 3 を返します。
{=ROW(Rabbit)}
は単一列行列 (1, 2, 3) を返します。
ROWS 関数
ROWS
範囲内の行数を返します。
構文
ROWS(行列)
行列
は、列の合計を決定する参照または名前付きの範囲です。
例
=Rows(B5)
は 1 を返します。
=ROWS(A10:B12)
は、3 を返します。
=ROWS(Rabbit)
は 3 を返します。
HYPERLINK 関数
HYPERLINK
HYPERLINK 関数を含むセルをクリックすると、ハイパーリンクが開きます。
セルテキスト
パラメータを使用すると、数式は URL を決め、テキストまたは数字を表示します。
ハイパーリンクを開く
を選択します。
構文
HYPERLINK( &quot; URL &quot; ) または HYPERLINK( &quot; URL &quot; ; &quot; セルテキスト &quot; )
URL
は、リンクターゲットを指定します。オプションの
セルテキスト
パラメータは、セルに表示され、関数の結果として返される、テキスト、または数値です。
セルテキスト
URL
がセルテキストに表示され、関数の結果として返されます。
空のセルと行列要素のついては、値 0 が返されます。
例
=HYPERLINK( &quot; http://www.example.org &quot; )
は、セルにテキスト「http://www.example.org」を表示し、クリックされるとハイパーリンク http://www.example.org を実行します。
=HYPERLINK( &quot; http://www.example.org &quot; ; &quot; Click here &quot; )
は、クリックされると、セルにテキスト「Click here」を表示し、ハイパーリンク http://www.example.org を実行します。
=HYPERLINK( &quot; http://www.example.org &quot; ;12345) は 12345 を表示して、クリックするとハイパーリンクhttp://www.example.orgを実行します。
http://www.example.org
が含まれている場合、
=HYPERLINK($B4)
は、ハイパーリンクセルの URL に http://www.example.org を追加し、数式の結果として使用されるのと同じテキストを返します。
=HYPERLINK( &quot; http://www. &quot; ; &quot; Click &quot; ) & &quot; example.org &quot;
は、クリックされると、セルにテキスト「Click example.org」を表示し、ハイパーリンク http://www.example.org を実行します。
=HYPERLINK( &quot; #Sheet1.A1 &quot; ; &quot; Go to top &quot; )
は、テキスト Go to top を表示して、このドキュメントのセル Sheet1.A1 にジャンプします。
=HYPERLINK( &quot; file:///C:/writer.odt#Specification &quot; ; &quot; Go to Writer bookmark &quot; )
は、テキスト Go to Writer bookmark を表示し、指定された文書ドキュメントをロードし、ブックマーク「Specification」にジャンプします。
GETPIVOTDATA 関数
GETPIVOTDATA
GETPIVOTDATA 関数は、データパイロット表からの結果の値を返します。この値はフィールド名と項目名を使用して解決されるため、データパイロット表のレイアウトが変わっても有効です。
構文
2 種類の構文定義を使用できます。
GETPIVOTDATA(対象フィールド; データパイロット; [ フィールド 1; 項目 1; ... ])
GETPIVOTDATA(データパイロット; 制約)
2 番目の構文は、正確に 2 つのパラメータが設定され、そのうちの最初のパラメータがセルまたはセル範囲の参照であることを前提としています。1 番目の構文はその他のすべての場合を前提としています。関数ウィザードでは、1 番目の構文が表示されます。
1 番目の構文
ターゲットフィールド
は、データパイロット表のデータフィールドのいずれかを選択する文字列です。この文字列はソース列の名前、または「Sum - Sales」のように表に示されているとおりのデータフィールドの名前の場合があります。
データパイロット
は、データパイロット表内に置かれるか、データパイロット表を含むセルまたはセル範囲への参照です。セル範囲に複数のデータパイロット表が含まれる場合、最後に作成された表が使用されます。
フィールド名/項目名
のペアが指定されていない場合、総計が返されます。それ以外の場合は、各ペアが結果によって満たす必要のある制約を追加します。
フィールド名
は、データパイロット表からのフィールドの名前です。
項目名
は、そのフィールドからの項目の名前です。
データパイロット表にすべての制約を満たす 1 つの結果値、またはすべての一致する値をまとめた小計の結果しか含まれない場合、その結果が返されます。一致する結果がない場合や、結果の一部の結果があるだけで結果の小計がない場合、エラーが返されます。これらの条件は、データパイロット表に含まれる結果に適用されます。
ソースデータにデータパイロット表の設定によって非表示にされた項目が含まれる場合、それらの項目は無視されます。フィールド/項目ペアの順序は重要ではありません。フィールド名と項目名は大文字と小文字が区別されません。
ページフィールドに制約が設定されていない場合、フィールドで選択された値は暗黙的に使用されます。 ページフィールドに制約が設定されている場合、その制約はフィールドで選択した値と一致する必要があり、一致しない場合はエラーが返されます。 ページフィールドは、「データパイロットのレイアウト」ダイアログの「ページフィールド」エリアを使って生成された、データパイロット表の左上にあるフィールドです。 それぞれのページフィールドから項目 (値) を選択できます。これは、選択された項目が計算に含まれることのみを意味します。
2 番目の構文
を参照してください)。
2 番目の構文
データパイロット
は、1 番目の構文での意味と同じ意味です。
制約
は、スペースで区切られたリストです。 項目を引用できます (一重引用符)。 別のセルから文字列を参照するのでなければ、文字列全体を引用符 (二重引用符) で囲む必要があります。
項目の 1 つをデータフィールド名にすることができます。データパイロット表にデータフィールドが 1 つしか含まれない場合、データフィールド名を省略することができます。それ以外の場合は、データフィールド名が必要です。
Field[Item]
(文字 [ および ] を指定して) の形式で、または、項目名がデータパイロット表で使われるすべてのフィールド内で一意である場合は
Item
のみで制約を指定します。
Field[Item;Function]
形式で追加できます。これにより、その関数を使用する小計値だけに一致するような制限が課せられます。使用できる関数名は、Sum、Count、Average、Max、Min、Product、Count (数値のみ)、StDev (標本)、StDevP (母集団)、Var (標本)、および VarP (母集団) で、大文字と小文字は区別されません。
UFI:
Example from spec doc is quite difficult to localize.
Try to find other one