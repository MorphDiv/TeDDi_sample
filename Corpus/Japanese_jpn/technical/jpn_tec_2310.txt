# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# iso639_3:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHPはウェブプログラミングをするには最高の言語です。が、他の言語はどうなので しょうか？
1. PHP vs. ASP?
ASPそれ自体は言語ではなく、Active Server Pagesの頭文字です。ASPを作成す るのに使用される実際の言語はVisual Basic ScriptかJScriptです。ASPの最大 の欠点は、それがMicrosoft Internet Information Server (IIS)でのみ動作す るメーカー独自のシステムだという点です。これにより、ASPはWin32ベースのサー バ上でしか動作しません。ASPを他のプラットフォーム、ウェブサーバで動作さ せようといういくつかのプロジェクトが進行中です： Halcyon の InstantASP (商用)、 Chili!Soft の Chili!Soft ASP (商用)、そして ActiveScripting.orgのOpenASP です。 ASPはPHPに比べて遅く、面倒で安定性も低いといわれています。ASPのプロフェッ ショナルの人たちの中には、ASPでは主にVBScriptが使用されているのでVisual Basicでのプログラミングに慣れている人にとっては覚えるのが比較的簡単だ、 という人もいます。また、IISサーバではASPサポートがデフォルトで有効になっ ているので設定が簡単という利点もあります。ASPに組み込まれているコンポー ネントは非常に限られていて、もしFTPサーバと協調するといった「進んだ」機 能を使おうと思ったら別途コンポーネントを購入しなければなりません。
2. ASPからPHPへのコンバータはありますか？
はい。 asp2php が有名です。
3. PHP vs. Cold Fusion?
世間ではPHPはCold Fusionに比べて速く、複雑なプログラミングを 効率的に行うことができ、新しいアイデアを意欲的に取り込んでいる、と言われ ています。また、安定していてより少ないリソースで動作するというのが一般的 な意見です。Cold Fusionはエラー処理、データベースの抽象化、日付 の扱いにおいて優れていますが、データベースの抽象化についてはPHP 4で行わ れています。Cold Fusionの利点として挙げられることの一つに、その優れたサー チエンジンがありますが、サーチエンジンはウェブスクリプト言語に含まれるべ き機能ではないのではないか、という意見もあります。PHPはほとんど全てのプ ラットフォームで動作しますがCold Fusionが動作するのはWin32, Solaris, Linux, HP/UXだけです。PHPは初期段階から多少のプログラミングに関する知識 を必要としますが、Cold FusionにはすばらしいIDEがあって、一般にとっつ きやすいと言われています。Cold Fusionはプログラマではない人たちも意識し てデザインされていますが、PHPはプログラマ主なターゲットとしています。
Michael J Sheldonによるこのトピックに関するすばらしいサマリがPHPのメーリ ングリストに投稿されました。 こ こ でその内容を読むことができます。
4. PHP vs. Perl?
PHPのPerlに対して最も有利な点ははPerlが何もかもやろうとしてその結果複雑 になってきているのに対して、PHPはウェブスクリプティングを念頭においてデ ザインされていることです。Perlの柔軟さ/複雑さは、他人にとって非常に読み にくいコードが簡単に書けてしまうということでもあります。PHPは、柔軟さを 失うことなくそれほどややこしくもなく厳密でもない構成になっています。 PHPはPerlに比べ、簡単に既存のHTMLに統合することができます。PHPにはPerl で使用されている非常に多くの「良い」機能があります：構成や文法等です。そ してこれらがPerlほど複雑になることなく提供されます。Perlは80年代後半から 在る十分に枯れた真の言語ですが、PHPは急速に成長しています。