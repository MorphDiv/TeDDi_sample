# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# ISO_6393:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

(PHP 3, PHP 4)
パラメータの配列を返します。パラメータには、 = 演算子によりインデックスを指定することもできます。
注意 array() は、実際にはリテラル配列を表現するための 言語構成要素であり、通常の関数ではありません。
カンマ区切った構文 "index = values" は、インデックスと値を定 義します。インデックスは文字列または数値とすることが可能です。イ ンデックスが省略された場合、0から始まる整数インデックスが自動的に 生成されます。インデックスが整数の場合、次に生成されるインデック スは、整数インデックスの最大値 + 1 となります。同じインデックスを 2度定義した場合、後の定義により最初の定義が上書きされることに注意 して下さい。
以下の例では、2 次元配列の生成方法、連想配列のキーの指定方法、 および通常の配列において添字番号をスキップし、それに続く 要素にアクセスする方法についてご紹介しています。
例 1 array() の例

例 2 array() における自動インデックス
この例の出力は次のようになります。
次の例は、1から始まる配列を作成します。
例 3 array() で1から始まる配列を作成
この例の出力は次のようになります。
array_pad(), list(), range() も参照下さい。