# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# ISO_6393:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

これらの関数により様々な手法で配列にアクセスし、操作することが可能 になります。配列は、変数の組を保存、管理、操作する基本的な要素です。
通常の配列および多次元配列がサポートされており、ユーザが定義したり、 他の関数で作成することも可能です。いくつかのデータベース処理関数は、 データベースのクエリから配列を返しますし、いくつかの関数は配列を返 します。
PHPでの配列の実装や使用方法の詳細については、マニュアルの 配列 に関する節を参照下 さい。
これらの関数は、標準モジュールの一部と して利用可能であり、常に使用できます。
これらの関数はPHPコアに含まれるため、使用す る際にインストールは不要です。
この拡張モジュールは設定ディレクティブを全く 定義しません。
この拡張モジュールはリソース型を全く定義し ません。
この一覧にある定数は、PHPコアに含まれており常に利用可能です。

CASE_LOWER は、 array_change_key_case() で使用され、 配列のキーを小文字に変換するために使用されます。小文字は、 array_change_key_case() のデフォルトのケースで もあります。
CASE_UPPER は、 array_change_key_case() で使用され、配列のキー を大文字に変換するために使用されます。
ソース順のフラグ:
SORT_ASC は、 array_multisort() でソート順を昇順にするために 使用されます。
SORT_DESC は、 array_multisort() でソート順を降順にするために 使用されます。
ソート型のフラグ: 種々のソート関数で使用されます
SORT_REGULAR は通常の比較するために使用され ます。
SORT_NUMERIC は数値で比較を行うために使用さ れます。
SORT_STRING は文字列として比較を行うために使 用されます。
is_array(), explode(), implode(), split(), preg_split(), and join() も参照して下さい。