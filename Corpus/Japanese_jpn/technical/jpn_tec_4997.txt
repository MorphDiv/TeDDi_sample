# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# ISO_6393:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

多くのPHPで最も脆弱な部分は、言語自体に起因するものではなく、単に セキュリティを考慮して書かれていないコードの問題です。この原因につ いて、指定したコードの部分の意味を常に時間をかけて吟味し、予想外の 変数が投稿された場合に有り得る損害を確かめる必要があります。
例 5-17危険な変数の使用
このスクリプトは、意図したファイルのみを受け付けるか?
例外的なまたは意図したもの以外のデータにより実行することが可能 か?
このスクリプトは意図した以外の方法で使用することが可能か?
このスクリプトは、悪い意味で他のスクリプトと組み合わせて使用す ることが可能か?
トランザクションは適切に記録されているか?
register_globals,magic_quotes, または他の便利な設定は、有効性、発 信元、指定した変数の値について混乱を生じる可能性があるため、設定を オフにしたいと思うかもしれません。error_reporting(E_ALL) モードで PHPを動作させた場合、確認または初期化する前に使用された変数に関し て警告を発生させることも可能です。(これにより、処理時に通常とは異 なるデータを防止することが可能です)