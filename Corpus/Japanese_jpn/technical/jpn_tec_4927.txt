# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# iso639_3:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

以下の関数はMCVE API(libmcve)のインターフェイスで、 PHPスクリプトからMCVEを直接使用することができるようになります。 MCVEは、Main Street Softworksのソリューションであり、直接クレジッ トカード処理が可能です。MCVEは、*nixマシン、モデムまたはインター ネット接続により、直接クレジットカードを処理することを可能としま す。(Authorize.NetやPay Flow Proのような付加的なサービスは不要と なります)PHPでMCVEモジュールを使用することにより、PHPスクリプトで MCVEを通じて直接クレジットカード処理が可能となります。 以下のリファレンスに処理の概要を示します。
注意 MCVEは、RedHatのCCVSを置き換えるものです。MCVEは、2001末にRedHat に採用され、全ての既存システムをMCVEプラットフォームに移行するこ とになりました。
注意 この拡張モジュールはWindows環境では利用できません。
MCVEサポートをPHPで有効にするには、まず、システムのLibMCVEインストー ルディレクトリを調べて下さい。 --with-mcve[=DIR] オプションを指定 してPHPのconfigureを実行する必要があります。 このオプションをMCVEインストールパスを指定せずに使用した場合、PHPは デフォルトのLibMCVEインストールパス( /usr/local) を探します。MCVEが標準以外のパスにある場合、 --with-mcve=$mcve_path を指定して configureを実行して下さい。ただし、$mcve_pathはMCVEをインストールし たパスです。MCVEサポートは、$mcve_path/libおよび$mcve_path/includeが 存在し、includeディレクトリの下に mcve.h 、 libディレクトリの下に libmcve.so および libmcve.a が存在することを必要とすることに注意し て下さい。
MCVEは、サーバー/クライアントを完全に分離しているため、 PHPでMCVEサポートを実行する際に追加するべきものはありません。 PHPでMCVE拡張モジュールをテストするには、IPの場合は testbox.mcve.comのポート8333、SSLの場合はポート8444をMCVE PHP APIに より接続することができます。ユーザ名として'vitale'、 パスワードとして'test'を使用して下さい。 テスト機能に関する詳細な情報については、 www.mcve.com にあります。
MCVEのPHP APIに関する追加のドキュメントについては、 http://www.mcve.com/docs/phpapi.pdf にあります。 Main Streetのドキュメントは完全で、関数の最も重要なリファレンスと するべきです。