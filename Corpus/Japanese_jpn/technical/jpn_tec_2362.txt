# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# iso639_3:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

(PHP 4 = 4.0.6)
array_map() は、 arr1 の 各要素にコールバック関数を適用した後、その全ての要素を含む要素を 返します。コールバック関数が受け付けるパラメータの数は、 array_map() に渡される配列の数に一致している必 要があります。

例 1 array_map() の例
この例により $b には、 array (1, 8, 27, 64, 125); が代入されます。

例 2 array_map() - より多くの配列を使用
通常、二つ以上の配列を使用する場合、それらの長さは等しい必要があ ります。これは、コールバック関数が対応する要素に対して並行して適 用されるためです。配列の長さが等しくない場合、最も短い配列は空の 要素で拡張されます。
この関数の面白い使用方法として、配列の配列を構築するというものが あります。これは、コールバック関数の名前として NULL を使用することにより、簡単に実行できるもの です。

例 3配列の配列を作成する
array_filter(), array_reduce() も参照下さい。