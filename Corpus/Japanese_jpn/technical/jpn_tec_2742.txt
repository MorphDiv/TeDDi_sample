# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# iso639_3:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

(PHP 3, PHP 4)
この関数は、 pattern で指定した正規表現 により string を検索します。
pattern の括弧でくくられた部分文字列に マッチし、かつこの関数が3番目の引数 regs を指定 してコールされた場合、マッチした部分が配列 regs に格納されます。$regs[1]は最初の左括弧が始まる部分文字列を保持、 $regs[2]は二番目の左括弧が始まる部分文字列を保持、．．．、 といったようになっています。$regs[0]は string のコピーを保持しています。
注意 PHP 4.1.0より前のバージョンでは、 $regs にはちょ うど10個の要素が代入されました。これは、実際にマッチした括弧付き のサブ文字列が10より多くても少なくても同じでした。ただし、 ereg() にはより多くの部分文字列にマッチする能 力があります。マッチするものが見付からなかった場合、 $regs は、 ereg() により書き 換えられません。
検索においては、大文字と小文字を区別します。
string の中で pattern がマッチすると TRUE を返し、マッチしなかった場合またはエラーとなっ た場合は FALSE を返します。
以下のサンプルコードは、ISOフォーマット(YYYY-MM-DD)で格納 されている日付をDD.MM.YYYYフォーマットで表示するものです。
例 1 ereg() の例
eregi(), ereg_replace(), eregi_replace(), preg_match() も参照下さい。