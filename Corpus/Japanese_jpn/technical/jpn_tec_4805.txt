# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# ISO_6393:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

定数は簡単な値のためのID(名前)です。この名前が示すように、定数の値 はスクリプト実行中に変更できません。(特別な定数 __FILE__ および __LINE__ は例外です。) デフォルトで定数では大文字小文字を区別します。慣習的に定数は常に大 文字で表記されます。
定数の名前は、PHPのラベルと同じ規則に従います。有効な定数の名前は、 文字またはアンダースコアで始まり、任意の数の文字、数字、アンダース コアが後に続きます。正規表現で示すと、次のようになります。 [a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*
注意 本節の目的においては、文字は a-z, A-Z, および127から255まで (0x7f-0xff)のASCII文字を指します。
定数のスコープはグローバルです。つまり、スコープによらずスクリプト の中ではどこでも定数にアクセスできます。
define() 関数を使用することにより、定数を定義す ることが可能です。定数が一度定義されると、変更または未定義とするこ とはできません。
スカラーデータ( boolean, integer, double, string) のみが定数の中に含むこと が可能です。
単に定数の名前を指定することにより、その値を得ることが可能です。 変数とは異なり、その前に $は不要です。 定数の名前を動的に得る必要がある場合、定数の値を読むために関数 constant() を使用することも可能です。 定義済の定数の一覧を得るには、 get_defined_constants() を使用して下さい。
注意 定数と(グローバル)変数は、異なる名前空間にあります。 例えば、 TRUE と $TRUE は違うものを意味します。
未定義の定数を使用した場合、PHPはその定数自体の名前を使用したと仮 定します。この際、 notice が発生します。 ある定数が設定されているかどうかを知るには、 defined() 関数を使用して下さい。
変数との違いは次のようになります。
定数は、前にドル記号( $)を要しません。
定数を定義することができるのは、 define() 関数 のみです。単なる代入による定義はできません。
定数は、定義することができ、変数のスコープ規則に関係なく、あら ゆる場所からアクセス可能です。
定数は一度設定されると再定義または未定義とすることはできません。
定数は、スカラー値としてのみ評価可能です。

例 9-1定数の定義