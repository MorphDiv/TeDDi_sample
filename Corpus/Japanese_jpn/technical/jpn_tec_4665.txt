# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# iso639_3:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

(PHP 3, PHP 4)
unset() は指定した変数を破棄します。PHP 3では、 unset() は常に TRUE (実際には整数値1) を返して いました。しかし、PHP 4では unset() はもはや真 の意味で関数ではなく、命令となっています。値が返されないため、 unset() の値を取得しようとすると、パースエラー となります。

例 1 unset() の例
関数 unset() の内部動作は、破棄しようとする変数 の型に依存します。
あるグローバル変数が関数の中で unset() された場 合、ローカル変数のみが破棄されます。呼出側の環境にある変数は、 unset() がコールされる前と同じ値を保持します。
参照渡しされた変数が関数内で unset() された場合 に、ローカル変数のみが破棄されます。呼出側の環境でその変数は、 unset() がコールされる前と同じ値を保持します。
静的変数が関数の内部で unset() された場合、 unset() は、その変数とその静的変数への全てのリ ファレンスを破棄します。
グローバル変数を関数内で unset() したい場合、 配列 $GLOBALS を使用し、次のようにして下さい。
注意 unset() は言語の一部です。
isset() 、 empty() も参照下さい。