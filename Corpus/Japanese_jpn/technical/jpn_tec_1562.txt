# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# ISO_6393:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

TimeValue 関数 [実行時]
/text/sbasic/shared/03030206.xhp
Sun Microsystems, Inc.
converted from old format - fpe
TimeValue 関数
TimeValue 関数 [実行時]
文字列として指定された時、分、秒の値を基に、該当する時刻を示す 1 つの数値 (シリアル値) を返します。こうして変換された数値は、2 つの時刻間の時間計算などに利用できます。
構文:
TimeValue (Text As String)
戻り値:
日付
パラメータ:
Text:
「HH:MM:SS」の形式で指定した、変換する時刻データを示す文字列表式。
この関数は、任意の時刻を 1 つの数値として変換するもので、こうした得られる数値は時刻間の時間計算などに利用できます。
この TimeValue 関数 の返す値は、バリアント型の VarType 7 (Date) であり、内部的には0から 0.9999999999 の倍精度値として格納されます。
DateSerial や DateValue 関数では、日付データをシリアル値に変換する際に、固定設定された基準日からの経過日数として換算していますが、TimeValue 関数で返される値は、時刻間の計算には使えるものの、そのまま直接的な評価が行えるものではありません。
TimeSerial 関数の場合、関数に渡すパラメータ (時、分、秒) は、それぞれ個別の数値表式として指定することができます。これに対して TimeValue 関数では、時刻データを 1 つの文字列の形で渡します。
例:
Sub ExampleTimerValue
Dim daDT as Date
Dim a1, b1, c1, a2, b2, c2 as String
a1 = &quot; start time &quot;
b1 = &quot; end time &quot;
c1 = &quot; total time &quot;
a2 = &quot; 8:34 &quot;
b2 = &quot; 18:12 &quot;
daDT = TimeValue(b2) - TimeValue(a2)
c2 = a1 & &quot; : &quot; & a2 & chr(13)
c2 = c2 & b1 & &quot; : &quot; & b2 & chr(13)
c2 = c2 & c1 & &quot; : &quot; & trim(Str(Hour(daDT))) & &quot; : &quot; & trim(Str(Minute(daDT))) & &quot; : &quot; & trim(Str(Second(daDT)))
Msgbox c2
end sub