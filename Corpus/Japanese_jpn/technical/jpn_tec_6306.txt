# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# iso639_3:	jpn
# year_composed:	NA
# year_published:	2014
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	GNOME
# source:	https://object.pouta.csc.fi/OPUS-GNOME/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/GNOME.php
# copyright_long:	http://opus.nlpl.eu/GNOME.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

プラットフォームの概要
GNOME プラットフォームは、グラフィカルなアプリケーション、それ以外のアプリケーションにたいして使いやすい開発環境を提供します。GNOME の技術を使用することで、あなたはユーザの期待を上回る高品質なソフトウェアを作ることができます。この章では、このドキュメントで議論しているコンポーネントのおおまかな概要を提供します。
中核となる技術
GNOME は魅力的なグラフィカル・インタフェースを構築するために、いくつかのライブラリを提供します。それらのライブラリは一般的なユーザ・インタフェースのコントロールの表示と操作、多くの国々の書記体系によるテキストのレイアウトおよびレンダリング、複雑なベクタ・グラフィクスをスクリーンに描画します。GNOME のグラフィック技術については
GLib の GIO ライブラリは GVFS バックエンドとともに、ユーザがリモートサーバ上のファイルにたいしてローカルのファイルシステムと同じように作業することができる、抽象化されたファイルシステムを提供します。GIO はファイル操作のための高レベルのAPI を提供し、開発を迅速で簡単にします。GIO を使用することによりアプリケーションでリモートのファイルとフォルダを自動的にサポートすることができます。GIO とGVFS については
GNOME はユーザの設定を保存、取得するために、GConf ライブラリとデーモンを提供します。GConf には、あなたのアプリケーションに設定を即時に適用するためのシンプルな API があります。GConf を使用することにより、管理者はユーザにたいして既定、および必須のアプリケーション設定を提供することができます。GConf については
GNOME が提供するインターナショナライゼーションおよびアクセシビリティの仕組みにより、あなたは最大限可能な潜在的ユーザを獲得することができます。多くのインターナショナライゼーションおよびアクセシビリティのサポートは正しく構築されていますが、開発時には多くの考慮すべき点があります。インターナショナライゼーションについては
GNOME にはオーディオやビデオのコンテンツを作成、編集、再生が可能な極めて強力なマルチメディア・フレームワークである GStreamer が付属しています。GStreamer については
GNOME は可能な場合には CUPS を利用する完全な印刷フレームワークを提供します。GNOME の印刷フレームワークにより高品質な印刷のための統一されたインタフェースを提供することができます。印刷フレームワークについては
IPC とネットワーク
GNOME デスクトップはクリップボード、ドラッグアンドドロップによるデータ転送をフルサポートしています。GTK+ の API はデスクトップの他の部分と正常に相互作用するアプリケーションを作る助けとなります。クリップボードとドラッグアンドドロップの機能については

GNOME は CORBA 上に構築された Bonobo コンポーネントシステムを備えています。Bonoboはプログラマが他のプログラムで再利用することができる複雑な埋め込みコンポーネントを作成することを可能にします。Bonobo の使用は推奨されていないことに注意してください。新しく記述するコードには代わりに D-Bus および、その他の技術を使用するべきです。Bonobo については
ユーザがネットワークをより管理しやすくするために、GNOME は DNS サービスディスカバリを提供します。。DNS サービスディスカバリは、ユーザにネットワークアドレスの入力を促すことなく、アプリケーションがローカルネットワーク上のサービスを自動的に探し出すことを可能にします。DNS サービスディスカバリについては
最後に、GNOME は XML と Web サービスを操作するためのライブラリをいくつか提供します。これらの技術はアプリケーションの開発者にとって重要性を増しています。XML とWeb サービスについては
デスクトップテクノロジ
GNOME デスクトップはパネル・アプレットやファイルマネージャのプラグインのように、アプリケーションがよりよく統合されるための場所をいくつか提供します。それらの多くについては
GNOME はより使いやすいアプリケーションを作成するための、包括的なヒューマンインターフェースのガイドラインを提供します。GNOME のユーザビリティ標準は当初のフリーなデスクトップ環境の中に含まれていました。そして GNOME のコミットメントを通じてよりよいユーザ経験のために改善を続けていきます。ユーザビリティについては
GNOME は完全なヘルプシステムと、ドキュメントを記述するためのスタイルガイドラインを提供します。アプリケーションが既に高い評価を受けていたとしても、上質なユーザ用のヘルプシステムによりソフトウェアを大幅に改善することができます。ドキュメンテーションについては
この文書を、フリーソフトウェア財団発行の GNU フリー文書利用許諾契約書 (GFDL) のバージョン 1.1 かそれ以降が定める条件の下で複製、頒布、あるいは改変することを許可します。変更不可部分、表カバーテキスト、裏カバーテキストは存在しません。この利用許諾契約書 (GFDL) の複製は
このマニュアルは GFDL の下で配布される GNOME マニュアルのコレクションの一部です。コレクションと別にこのマニュアルを配布したい場合は、ライセンスの第六節にあるようにライセンスのコピーをマニュアルに加えれば配布できます。
製品やサービスを区別するために企業によって利用されている名称の多くは登録商標です。これらの名称が GNOME ドキュメントで使われていて GNOME ドキュメントプロジェクトのメンバーが商標と認識している場合、これらの名前を大文字あるいは語句の最初の文字を大文字で記述しています。
DOCUMENT IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT THE DOCUMENT OR MODIFIED VERSION OF THE DOCUMENT IS FREE OF DEFECTS MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY, ACCURACY, AND PERFORMANCE OF THE DOCUMENT OR MODIFIED VERSION OF THE DOCUMENT IS WITH YOU. SHOULD ANY DOCUMENT OR MODIFIED VERSION PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE INITIAL WRITER, AUTHOR OR ANY CONTRIBUTOR) ASSUME THE COST OF ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF ANY DOCUMENT OR MODIFIED VERSION OF THE DOCUMENT IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS DISCLAIMER; AND
UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER IN TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL THE AUTHOR, INITIAL WRITER, ANY CONTRIBUTOR, OR ANY DISTRIBUTOR OF THE DOCUMENT OR MODIFIED VERSION OF THE DOCUMENT, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE LIABLE TO ANY PERSON FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER DAMAGES OR LOSSES ARISING OUT OF OR RELATING TO USE OF THE DOCUMENT AND MODIFIED VERSIONS OF THE DOCUMENT, EVEN IF SUCH PARTY SHALL HAVE BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.
ドキュメントおよび変更されているドキュメントは次の GNU フリー文書利用許諾契約書 (GFDL) の下で頒布されます:
クリップボードとドラッグアンドドロップ
ユーザが異なるアプリケーションでさまざまな種類のデータを処理するようになるにつれアプリケーション間でオブジェクトやデータを共有する必要は増加してきまた。GNOME はアプリケーション間でのデータ転送に関連する2つの方法をサポートします:ドラッグアンドドロップ操作の使用と、システム規模のクリップボードを介したコピーおよびペーストです。クリップボードとドラッグアンドドロップは複数のアプリケーション間で機能し、GNOME で開発されていないアプリケーションもそれに含まれます
クリップボードはアプリケーションのデータに対してユーザが明示的にコピーの操作を行ったときに使用されます。それによりアプリケーションはクリップボードの所有権を主張したことになります。ユーザが他のアプリケーションでペーストの操作を行ったときは、そのアプリケーションから最初のアプリケーションに対してクリップボードのデータが要求されます。クリップボードの操作は GTK+ でフルにサポートされています。
ドラッグアンドドロップも同様の操作ですが、ポインタを追跡してドロップするターゲットとなる可能性がある対象の上を通過する場合は、カーソルを更新することが要求されます。アプリケーションはドラッグ中にポインタが上を通過すると通知を受けます。そのときアプリケーションはカーソルを更新すしてドロップを受け入れられるかどうかを示さなければなりません。GTK+ はドロップされるターゲットをアプリケーションで管理するのを容易にする、洗練された API によってドラッグアンドドロップをサポートします。
クリップボードとドラッグアンドドロップ操作はどちらもコンテンツのネゴシエーションをサポートします。アプリケーションが提供すべきデータを持っているときは、そのデータに関してどのようなフォーマットが有効なのかを提示します。データを受け取るアプリケーションは最も適切なフォーマットを要求します。たとえばユーザがウェブブラウザからテキストをコピーした場合、ワードプロセッサは受け取るデータが HTML フォーマットでも管理できるた め HTML フォーマットを要求し、通常のテキストエディタはフォーマットなしのテキストを要求します。
あなたはあなたのアプリケーションで操作するデータにたいして、クリップボードとドラッグアンドドロップの機能を提供するべきです。クリップボードとドラッグアンドドロップはテキストにたいしてだけではなく、他のデータにたいしても便利な機能です: ファイル、グラフィック、そしてサウンド・クリップなどはどれもアプリケーション間で転送が可能なデータの例です。GTK+ を使用すれば、テキストアリア、カラーボタン、ファイル選択、その他の組み込み済みのユーザインタフェース・コントロールで自動的にクリップボードとドラッグアンドドロップのサポートを享受することができます。アプリケーションで使用するその他のデータにたいするサポートを提供するためにも GTK+ の API を使用するべきです。
詳細については
D-BUS メッセージ
D-Bus はさまざまなアプリケーション、デスクトップ、システムの低レベルのコンポーネント間でイベントを送信するための、クロス・デスクトップのメッセージバスです。D-Bus は特定のサービスのためにメッセージを転送したり、関心を持つサービスにたいしてメッセージをブロードキャストするためのシンプルな API を提供します。D-Bus は異なる種類のアプリケーションとデスクトップが互いに通信、統合されることにより、よりよい相互作用とより豊かなユーザ経験を提供します。
D-Bus はセッションとシステムバスを提供します。セッションバスは単一のユーザセッションでアプリケーションによって使用され、アプリケーションのデータ共有やイベントの通知、そしてユーザのデスクトップへの統合を可能にします。たとえば、ムービープレーヤーは D-BUS にメッセージを送ることによりユーザがムービーを見ているときはスクリーンセーバーの起動を抑止することができます。
システムバスはユーザセッションとは独立して実行される単一のメッセージバスです。システムバスはアプリケーションと通信することにより、それらのアプリケーションがシステムの低レベルな詳細を知ることなくシステムコンポーネントと相互作用することを可能にします。システムバスはユーザが彼らのシステムで動作することを期待するであろう重要な機能を提供します。たとえば、システムバスはネットワークインタフェースの UP / DOWN や外部デバイスがプラグインされたり、ラップトップのバッテリが低下するのをモニタするのに使用されます。
D-Bus は
D-Bus についての詳細は
Bonobo および CORBA
Bonobo、libIDL、および ORBit は、D-Bus やその他の技術に置き換えられたため使用は推奨されていないことに注意してください(前記参照)。
Bonobo はアプリケーションで再使用可能なコンポーネントを作成するためのフレームワークです。業界標準である CORBA (Common Object Request Broker Architecture) を基に構築され、GNOME アプリケーションで安心して使用できるコンポーネントを作成、使用するために必要となるすべての共通インタフェースを提供します。
Bonobo のコンポーネントはさまざまな場面で使用でき、柔軟で拡張性のあるソフトウェアを作成する助けとなります。たとえば、マルチメディアのコンテンツを表示するコンポーネントをワードプロセッサに埋め込むことにより、ワードプロセッサが直接マルチメディアを処理することなく、ワードプロセッサにマルチメディアのサポートを追加することができます。Bonobo コンポーネントは GNOME パネルにアプレットを埋め込むのにも使用されています。Bonobo を使用することによりアプレットが効果的にパネルと通信することが可能になり、ユーザに統一されたインタフェースを提供することができます。
Bonobo のコンポーネントはグラフィカルなコントロールとは限りません。Bonobo はGNOME の電子メールクライアントでありグループウェア・スィートでもある Evolution で、アドレス帳やカレンダへのアクセスに使用されていました。これによりユーザは自分の情報を1ヶ所に保存して、すべてのアプリケーションがアクセスできるようにしたのです。
Bonobo は CORBA 上に構築されているため、コンポーネントを独立したプロセスで実行することができます。コンポーネントは異なる言語で記述でき、異なるランタイム上で実行することができます。; 唯一必要なのはインタフェースが IDL (Interface Definition Language) で記述されていなければならないということだけです。CORBA の柔軟なデザインによりネットワーク上の異なるマシンのコントロールを実行することさえ可能です。
GNOME は、高速で軽量な CORBA 実装である ORBit を提供します。GNOME により供給されるツールとライブラリは、C言語や他の CORBA 実装では使用できない言語でも効果的にコンポーネントを記述することが可能です。
Bonobo は CORBA に欠けている、一貫したコンポーネントサポートするために必要な追加のインタフェースと仕様を提供することによって、そのギャップを埋める手助けをします。Bonobo を使わずに CORBA を使用することはほとんどないでしょうが、直接 CORBA を使用することも可能です。たとえば、GNOME アクセシビリティの基盤は CORBA により、実行中のアプリケーションを調査・対話する援助ツールを実現しています。
あなたはグラフィカルで複雑な埋め込み可能コンポーネントを提供するために Bonobo を使用したいと思うかもしれません。しかし大部分の GNOME における IPC の必要性は D-Bus へと移行しつつあります。アプリケーションを D-Bus に統合することでそれらは大幅に簡単になります。
Bonobo についての詳細は
サービス・ディスカバリ
DNS サービス・ディスカバリや Zeroconf は、ネットワーク上で使用可能なサービスを自動的に探し出すための技術です。Zeroconf はアドレスを明示的に提供したりアプリケーションの手動で設定することなしに、ユーザがネットワークのリソースにアクセスすることを可能にします。
DNS サービス・ディスカバリは GNOME でもいくつかの場所で既に使用されており、今後もさらなるサポートが追加される予定です。たとえば GNOME のファイルマネージャである
完全な DNS サービス・ディスカバリは Avahi ライブラリによりサポートされています。Avahi についての詳細は
XML と Web サービス
相互接続が進む私たちの世界においては、さらにより多くのアプリケーションが色々な Web サービスを提供していく必要があります。Web サービスが単に機能の追加を提供する場合もあるし、Web サービスがアプリケーションの主要な目的である場合もあります。スタンドアローンでユーザを何年も満足させていたアプリケーションを Web サービス化することにより、革新的なユーザを新たに獲得した例もあります。
GNOME プラットフォームはアプリケーションで Web サービスを使用するためのサポートと、ウェブ上の言語である XML の使用、管理、変換のための理解しやすいライブラリを提供します。
libsoup についての詳細は
XML 処理
1998年に正式に紹介されて以来、XML (eXtensible Markup Langauge) を使用するアプリケーションは増加しつづけています。それは XHTML や DocBook のようなドキュメントの書式から、SOAP や Jabber のようなインターネット・プロトコルまで、さまざまな目的で広く使用されてきました。XML は読みやすくてシンプルな基本文法を提供し、アプリケーションがアプリケーション固有の問題に専念することを可能にします。
GNOME には libxml2 ライブラリが付属しており、デスクトップを通じて広い範囲で使用できます。libxml2 ライブラリは高速で、XML 処理の標準に完全準拠したライブラリであり、アプリケーションで XML を使用するときに必要となるすべてを提供します。
libxml2 ライブラリは XML を処理するための、いくつかの異なる API を提供するので、あなたはアプリケーション開発の要件に最適な API を使用することができます。ネイティブのツリー API に加えて、libxml2 はコールバック・ベースの SAX2 API、ストリームからの XML の読み込み・書き込みのためのインタフェース、そして XPath の完全なサポートを提供します。
libxml2 は DTD サポートに加えて、より柔軟な妥当性評価モデルを持ち、簡単に使用することができる RELAX NG を使用したドキュメントにたいするサポートを提供します。また W3C が策定した新しいスキーマ言語である XML スキーマも部分的にサポートします。
アプリケーションで直接 XML を処理する場合は libxml2 を使用するべきです。libxml2 を使用することにより、XML の構文解析・処理・出力で完全な標準準拠を保証することができます。これは開発者がアプリケーション間での非互換を心配する必要がないことを意味します。
libxml2についての詳細は
XSLT による XML の変換
XSLT は XML を他の書式に変換する XML ベースの言語です。XSLT はテンプレートベースの言語であり、特定のタイプに一致する XML 要素を見つけて適切な出力を生成することができます。XML と XPath を基本として、XSLT は開発者がアプリケーションにより適した他の書式に XML を変換するための読みやすくてモジュール化されたテンプレートを作成することを可能にします。
GNOME には XSLT の完全な実装である libxslt ライブラリが含まれています。libxslt ライブラリは libxml2 の XML、および XPath のサポートを基に構築されていることから、高速で、標準に準拠しています。
XML ドキュメントを変換する場合は libxslt を使用するべきです。XML の処理において常に XSLT が正しい解決とは言えないものの、開発が簡単になる場合もあります。libxslt で拡張要素や拡張機能を追加できるようになってからは、アプリケーションに適するようにカスタマイズすることが可能になりました。
libxslt についての詳細は
イントロダクション
GNOME はパワフルで、ユーザビリティとアクセシビリティ、そしてインターナショナライゼーションに焦点を置いたシンプルなデスクトップ環境です。GNOME は誰にでも使えるようにデザインされており、技術的な経験やハンディキャップ、ユーザのネイティブ言語に左右されません。GNOME は人々が簡単にコンピュータを使用できるようにします。
GNOME は、使いやすくて心をとらえるプロのソフトウェアを作成することを可能にする、理解しやすい開発プラットフォームを提供します。このドキュメントは GNOME プラットフォームの高レベルな概観と、プラットフォームの各部分についての詳細ドキュメントへのリンクを提供します。
誰がこのドキュメントを読むべきか
もしあなたが GNOME プラットフォームで使用するソフトウェアを作りたいと望むなら、このドキュメントを読むべきです。GNOME プラットフォームで開発することは、あなたがユーザのデスクトップに統合された首尾一貫したアプリケーションを作る助けとなります。このガイドではプラットフォームのさまざまなコンポーネントを紹介しているので、どのライブラリを使えばタスクを達成できるかを知ることができます。このガイドは追加の詳細ドキュメントへとリンクしているので、プラットフォームのそれぞれのコンポーネントについて掘り下げて調べることができます。
このガイドはソフトウェア・プロジェクトの開発プラットフォームを選択中の人にとっても有用です。ガイドでは GNOME プラットフォームで使いやすいソフトウェアを作る方法についての概要を提供しています。
このガイドは、プラグインにより GNOME デスクトップを拡張する方法や、その他の有用なツールを説明しています。もしあなたが GNOME デスクトップに機能を追加したい場合は、このガイド、特に
もしあなたが既にソフトウェアを開発していて、それを GNOME プラットフォームに移植したい場合は、このガイドに加えて
GNOME ファミリー
GNOME は世界中の大勢の貢献者によるグローバルな取り組みです。GNOME は、GNOME の貢献者とユーザによって成功しました。このセクションでは GNOME について更に知るための Web サイトやカンファレンスと、GNOME とともに作業している他の団体について一覧します。
Web サイト
www.gnome.org
GNOME ユーザのための主要サイトです。リリース情報やダウンロード、それにドキュメントが含まれます。
library.gnome.org
すべての GNOME ドキュメントの完全な情報源です。ここには GNOME によって製作されたユーザ用、開発者用のすべてのドキュメントが含まれていて、リリースにしたがって自動的に構築・更新されます。
foundation.gnome.org
GNOME ファウンデーションの Web サイトです。GNOME ファウンデーションは GNOME の開発を監督する非営利的なファウンデーションです。
bugzilla.gnome.org
GNOME のバグ追跡サイトです。バグ報告や要望の投稿と、それらの報告にたいする対応のステータスを追跡します。
live.gnome.org
GNOME の Wiki サイトです。現在では GNOME の多くのプロジェクトが、この Wiki サイトプロジェクトの主要な Web スペースとして使用しています。さらにこの Wiki サイトは将来の開発についての概要を掲示するために使用されることもあります。
developer.gnome.org
開発者のための情報を紹介する古い Web サイトです。かつては開発者用のドキュメントやユーザビリティのドキュメントや翻訳チームについての情報が含まれていました。このサイトに含まれる情報は内容が大きくなってきたことにより
mail.gnome.org
GNOME メーリングリストについての情報です。このサイトにはすべての GNOME メーリングリストのアーカイブが含まれています。
git.gnome.org
GNOME の Git リポジトリです。プロジェクト開始当初からの、GNOME のすべてのソースコードを追跡できます。
メーリングリスト
gnome-list
GNOME ユーザのための主要なメーリングリストです。
gnome-devel-list
GNOME プラットフォームでの開発に関する質問や情報です。
gnome-love
GNOME にかかわるための最初の場所です。
gnome-accessibility-list
GNOME アプリケーションのアクセシビリティについての情報です。
gnome-doc-list
GNOME アプリケーションのドキュメント作成のための情報です。
gnome-i18n
GNOME アプリケーションのインターナショナライゼーションとローカライゼーションについての情報です。
ユーザビリティ
GNOME アプリケーションのユーザビリティについての情報です。
カンファレンス
GUADEC
GNOME ユーザと開発者のための主要なカンファレンスです。GUADEC は毎年5月か6月に開催されます。ヨーロッパの色々な場所を見れるという上手い口実もあって、毎年ヨーロッパの異なる都市で開催されています。GUADEC はユーザ、開発者、ベンダを対象にした講演が行われます。
GNOME サミット
ハッカーの集まりです。サミットは主に既存の GNOME 開発者に適していますが、しばしば新しい開発者に有用な情報もあります。サミットは毎年ボストンで開催されています。
GNOME.conf.au
linux.conf.au では毎年カジュアルな集まりが開催されます。
その他の団体
freedesktop.org
共同してデスクトップ環境の相互運用と技術共有について努力しています。GNOME はfreedesktop.org を通じて KDE や XFCE のようなプロジェクトと共に、よりよいユーザ経験を提供するための作業をしています。
Mozilla
フリーの Web エンジンであり、それ以上のものも含んでいます。GNOME はよりよいユーザインタフェースを提供するために Mozzila の開発チームと密接な関係を維持しています。
OpenOffice.org
フリーのオフィス・スイートです。 GNOME は GNOME 上でフリーのオフィス・スイートを使用するときに統一されたインタフェースを提供するために OpenOffice.org の開発チームと作業しています。
Free Software Foundation
それは"自由"です。 フリーソフトウェア財団はユーザがソフトウェアを自由に使用・変更・再配布・変更できる、完全に無料のオペレーティングシステムを作成するために1985年に設立されました。GNU プロジェクトの一環として、GNOME は完全に自由なデスクトップ環境を提供します。
アプリケーションとファイルタイプのレジストリ
アプリケーションを使いやすくするために、ユーザがアプリケーションを検索し、それらを実行できるようにする必要があります。GNOME デスクトップのユーザはアプリケーションメニューからアプリケーションを探してアプリケーションを実行するか、ファイルマネージャからファイルを探してアプリケーションを実行します。GNOME デスクトップではアプリケーションをインストールするときにアプリケーションをメニューに追加したりファイルタイプを追加することができます。これらのメカニズムは
アプリケーションをメニューに追加するには単にデスクトップのエントリファイルに必要な情報を提供するだけです。デスクトップのエントリファイルはシンプルな key-value 構文を使用し、値それぞれに翻訳されたテキストをオプションで提供することもできます。デスクトップのエントリファイルには以下の情報が含まれます:
名前とコメント。アプリケーションがサポートしている場合は多くの言語に翻訳されたテキストが設定されます
固定リストから選ばれたカテゴリのリスト。アプリケーションをアプリケーションメニューのに配置するために使用します
アイコン。アイコンファイルのフルパスか、単にシステムのアイコンテーマのアイコン名を指定します
アプリケーションがサポートするファイルタイプのリスト
アプリケーションを実行するコマンド
プリケーションがシステムでまだ知られていない独自のファイルタイプを処理する場合は、ファイルタイプのレジストリにこれらの型を追加する必要があります。すべてのファイルタイプは MIME 型 によりアクセスされます。たとえば、Ogg Vorbis オーディオ・ファイルは
アプリケーションについての詳細は
パネルアプレット
GNOME デスクトップは柔軟で強力なパネルを提供しています。パネルにはアプレットと呼ばれる小さなアプリケーションをユーザが追加することができます。パネルアプレットは迅速なアクセスと有用な情報と機能を提供します。たとえば GNOME デスクトップに付属しているパネルアプレットでは、ウィンドウやワークスペースを移動できたり、現在の気象情報を表示したり、ネットワークの状況を表示したり、さまざまな機能を提供しています。
アプリケーションの機能を強化するためにパネルアプレットを提供したり、単純なスタンドアロンのパネルアプレットを提供することもできます。単に迅速に通知を表示する必要がある場合は代わりに、これもユーザーのパネルに表示される通知領域の使用を検討すべきです。パネルアプレットはアイコンによる通知以上の機能を提供する必要がある場合に使用すべきです。
パネル・アプレットはパネルと通信するために Bonobo を使用する独立したプロセスです。Bonobo によりアプレットはパネルと統合され、一貫したユーザ経験を提供することができます。たとえばすべてのパネル・アプレットのコンテキストメニューにはアプレットを削除・移動。ロックするための項目が標準で含まれています。それぞれのパネル・アプレットはコンテキストメニューにそれ以外のアクションのための他の項目を追加することができます。たとえば
Bonobo は時代遅れであり D-Bus および他の技術に置き換えられていることに注意してください。
パネル・アプレットについての詳細は
通知領域(Notification Area)
ランチャやパネルアプレットに加えて GNOME パネルは、アプリケーションがイベントをユーザに通知するために使用できる通知領域を備えています。通知領域は、新しい電子メールをユーザに知らせたり、使用可能なアップデートや会議、その他のさまざまなイベントを通知するのに使用できます。
通知は、アプリケーションがユーザのパネルの通知領域に配置できるシンプルなアイコンです。ユーザがアイコンをクリックすることによりアプリケーションは、それ以上の処理を行うこともできます。現在のところ、通知システムは、実験的なエッグライブラリによって実装されていますが、GTK+ の次のバージョンでは通知アイコンをサポートする予定です。
通知領域は
ファイルマネージャ
GNOME には直感的で強力なファイルマネージャである


プラグインはリストビューに列を追加でき、自動的にファイルのエンブレムを表示します。これにより適切な情報をユーザが一目で判別できるようになります。たとえば

柔軟なプラグインアーキテクチャに加えて、
ウィンドウマネージャ
ウィンドウマネージャはウィンドウの周囲の境界線やタイトルバーの描画受け持つ特別なプログラムです。ウィンドウにたいする移動やサイズ変更、最小化、ワークスペース勘の移動などのすべての操作にたいしてウィンドウマネージャが処理を受け持ちます。ウィンドウはアプリケーション開発者がほとんど処理することなくウィンドウマネージャにより一貫して管理されます。アプリケーションがウィンドウにたいして影響を与える必要がある場合は、GTK+ の関数を使用してウィンドウに対するヒントを提供します。
しかし外部プログラムが直接ウィンドウマネージャと相互作用したり、動作をコントロールすることもできます。GNOME の libwnck ライブラリを使用すれば、アプリケーションはすべてのウィンドウにたいして位置や情報を取得したり、ウィンドウマネージャに指示を出すことによりそれらのウィンドウにたいしてさまざまなアクションを実行することができます。
libwnck ライブラリは、GNOME のウィンドウマネージャに固有のものではありません。ライブラリのすべての機能は外部のウィンドウマネージャへのヒントか EWMH を通じて行われます。EWMH は複数のデスクトップで統一されたウィンドウマネージャとの対話を提供するために
libwnck を通じてウィンドウマネージャと相互作用することにより、ワークスペースを表示したりユーザパネルのウィンドウをアプレットで一覧したりする簡単な処理や、同様に複雑なアプリケーション、たとえば新しいウィンドウにたいしてウィンドウの特定のプロパティに基づき自動的にアクションを実行することにウィンドウマネージャを使用することができます。
コントロールセンター
GNOME デスクトップはすべてのデスクトップ全体の設定とシステム管理のために単一のメニューを提供します。設定やシステム管理のダイアログはこのメニューに配置されることにより簡単にアクセスすることができます。アプリケーションを追加するときにカテゴリを
もしあなたが管理者がデスクトップシステムを設定できるダイアログを提供する場合は、そのダイアログをシステム管理メニューに追加するべきです。複数のアプリケーションに影響を及ぼす設定をユーザに許すようなダイアログを提供する場合は、そのダイアログを設定メニューに追加するべきです。アプリケーションに固有の設定については、これらのグローバルなメニューに追加するべきではありません。
パスワードの保存
GNOME はユーザのパスワードやその他の機密データを格納するために、モダンで安全なキーリング・マネージャを提供します。アプリケーションはパスワードの取得と保存にキーリング・マネージャのライブラリを使用できます。また、ユーザはパスワードを管理するのに GNOME のアプリケーションである
キーリング・マネージャはアイテムをいくつか含むことができる任意の個数のキーリングを提供します。キーリングのアイテムにはデータやパスワードが保存されます。それぞれのキーリングは個別にロックされ、ユーザはロックを解除するためのスワードを提供しなければなりません。キーリングのロックを解除すると、ユーザはキーリングに含まれるすべてのアイテムにアクセスできます。
キーリング・マネージャは、キーリングのアイテムにたいするアクセス制御リストを提供し、そのアイテムによりアクセスが許可されるアプリケーションを制御します。もし未知のアプリケーションがキーリングのアイテムにアクセスしようとした場合、キーリング・マネージャはユーザにプロンプトを表示してそのアプリケーションのアクセスを許可するか、拒否するかを尋ねます。これにより悪意のあるプログラムや質の悪いプログラムがユーザの機密データにアクセスすることを防ぐことができます。
ファイルシステムに保存されたキーリングのデータは AES ブロック暗号化方式で暗号化されアイテムの属性にはハッシュ関数には SHA1 が使用されます。属性のハッシュを使用することにより、キーリング・マネージャはキーリングのロックを解除することなくアプリケーションに要求されたアイテムを見つけることができます。キーリングはアイテムが見つかったときにロックが解除され、アイテムにアクセスすることができるようになります。
キーリング・マネージャはセッションのためのキーリングも提供します。セッション・キーリングのアイテムはディスクには決して保存されず、ユーザがセッションを終了すると失われます。セッション・キーリングは現在のセッションだけで使用するパスワードに使用されます。
もしリモートサーバにアクセスする場合に GIO を使用している場合は、キーリング・マネージャによる恩恵を自動的に享受することができます。GVFS がユーザの認証を必要とする場合、認証に使用するパスワードを既定のキーリングかセッションのキーリングに保存するかのオプションを選択することができます。
アプリケーションがユーザのパスワードや機密データを保存する必要がある場合はキーリング・マネージャを使用するべきです。キーリング・マネージャを使用することによりユーザのデータを安全かつ確実に保つことができ、よりよいユーザ経験を提供することができます。
詳細については、
セッションマネージメント
GNOME はセッション間でアプリケーションを円滑に実行するためのツールを提供します。ユーザがログアウトしたときに実行されていたアプリケーションは、ユーザが再びログインしたときに復元されます。この機能を提供するためにはアプリケーションがセッションマネージャと接続して、ユーザがログアウトしたときに状態を保存しなければなりません。
このセクションは GnomeClient と Libgnomeui が時代遅れになるのに伴い陳腐化していることに注意してください。新しく記述するコードでは
GNOME は GNOME ユーザインタフェース・ライブラリによりシンプルなセッションマネージメントの API を提供します。GNOME セッションマネージャについての詳細は
アドレス帳とカレンダ
Evolution データサーバにより、GNOME はすべてのアプリケーションが情報を保存・取得することができる単一のアドレス帳とカレンダを提供します。Evolution データサーバを使うということはユーザがそれぞれのアプリケーションの連絡先を分割管理する必要がなくなり、それらのカレンダに手動でイベントをコピーする必要がなくなることを意味します。
人々が友人や同僚と対話するのにコンピュータを使用する機会はますます増加しています。電子メール、インスタント・メッセンジャー、テレフォニー、そしてビデオ会議はいずれも他の人と対話するのに使用されるアプリケーションです。これらのアプリケーションはユーザのためにしばしば連絡先一覧を提供します。Evolution データサーバを使用すればアプリケーションは連絡先の情報を1ヶ所に保存することができ、すべてのアプリケーションがユーザの連絡先と関連するデータを参照することができます。
Evolution データサーバを使用すればアプリケーションがユーザのカレンダに予定を保存・取得することもできます。たとえば、パネルに表示されている時計をクリックするとシンプルなカレンダが表示されます。もしユーザが予定をスケジュールしていた場合は、そのカレンダに予定が表示されます。これによりユーザはカレンダのためのアプリケーションを開くことなく簡単に予約を確認することができます。
アドレス帳についての詳細は
ユーザビリティ
GNOME デスクトップは使いやすさを基にデザインされ、シンプルで一貫したユーザ経験を提供します。人々はコンピュータを使用して仕事(遊び?)をするのに複雑なユーザインタフェースのパズルを解読する必要はありません。アプリケーションをデザインする場合、どのようにしてユーザが一般的なユーザインタフェースの使い方を認識するか、アプリケーションに固有の要素についてどれだけ早く習熟することができるか、そしてユーザがそれらを習熟した後にどれだけ効果的に作業を行うことができるか、について考慮すべきです。
GNOME はあなたが魅力的で使いやすいアプリケーションを作成するための包括的なヒューマンインターフェースのガイドラインを提供しますユーザビリティの問題について単一の解を提供できるガイドラインはありませんが、GNOME ヒューマンインタフェース・ガイドラインは簡単で使いやすいアプリケーションを作成するのを簡単にしてくれます。詳細については
ドキュメンテーション
すべてのアプリケーションは、ユーザがアプリケーションを理解し、問題解決を手助けするためのドキュメントを提供するべきです。うまくデザインされたアプリケーションでは使用する前にドキュメントを読む必要がないとしても、ドキュメントはユーザにとって、とくに複雑なアプリケーションの場合は重要なツールなのです。
GNOME はユーザにドキュメントを提供するための統一されたフレームワークを提供します。それにより業界標準である DocBook 形式のドキュメントをユーザに提供することができます。DocBook 形式を使用することは、あなたが書式の詳細に悩む必要がないことを意味します。その代わりに、あなたのドキュメントは他のシステムドキュメントと一貫性のある規則で自動的にフォーマットされます。
GNOME のヘルプ・ビューアである
アプリケーションのドキュメントの記述についての詳細は
@@image: 'figures/graphics.png'; md5=a63333cc92b801cc55fe62781c07999e
@@image: 'figures/pango.png'; md5=e308eb839e5e70aea097a4cfe744e44c
@@image: 'figures/i18n.png'; md5=75f5d47d566817d32f1ed76e4c761ffb
グラフィカルなインタフェース
多くのアプリケーションではユーザと対話するためにグラフィカルなインタフェースを提供する必要があります。グラフィカルなインタフェースは人間がソフトウェアと対話するときに直感的かつ発見的な手段であり、ユーザはアプリケーションが使いやすく魅力的なユーザインタフェースを提供することを期待します。
GNOME プラットフォームの特徴は洗練されたグラフィクス、およびユーザインタフェース技術であり、それは標準的なユーザインタフェースのコントロールから高品質なグラフィクスをスクリーンに描画するための API までを含みます。GNOME のグラフィクス技術を使用することにより統一感があり、直感的で、心をとらえるアプリケーションを作成することができます。
グラフィクス・ライブラリの階層
GTK+
GTK+ は GNOME においてインタフェースを構築するときの主要なライブラリです。このライブラリは一般的なグラフィカルなアプリケーションで使用されるユーザインタフェースのコントロールやウィジェットのすべてを提供します。そのモダンでオブジェクト指向の API により、描画やデバイスとの相互作用などの低レベルの詳細を処理することなく、魅力的で洗練されたユーザインタフェースを構築することができます。
GTK+ はボタン、チェックボックス、テキスト・エントリ等の基本的なウィジェットに加え、ツリービュー、マルチラインのテキスト・フィールド、およびメニューやツールバーのアクションのためのモデル・ビュー・コントローラ(MVC)にもとづく強力なAPI を提供します。
GTK+ のウィジェットはウィンドウ上にボックス・パッキング・モデルで配置されます。プログラマは位置を絶対的な座標を指定して配置するのではなく、コンテナ・ボックスにウィジェットをどのようにパックするか指定するだけです。GTK+ はそれらのコンテンツを的確に配置し、ウィンドウのサイズ変更を自動的に処理することを保証します。
GTK+ は柔軟な API を提供しているため、GTK+ のアプリケーションで追加のウィジェットを開発するのは簡単です。追加のウィジェットを提供するサードパーティによるライブラリが数多く存在し、多くの開発者が自分のアプリケーションのために、特定の目的に使用するカスタム・ウィジェットを作成しています。
GTK+ がユーザインタフェースやユーザとの相互作用にまつわる難解な詳細を処理し、シンプルで強力な API を提供するので、あなたはアプリケーションの詳細に集中することができます。GTK+ を使用して開発されたアプリケーションは自動的にユーザのテーマやフォントの設定を引き継ぎ、アクセシビリティ技術と適切に対話し、ユーザの期待通りに動作します。
GTK+ についての詳細は
Libglade
Libglade は
Libglade は XML 定義からユーザインタフェースを動的に構築するためのライブラリです。あなたは
Libglade によりインタフェースの構築でコードが分断されることなく、プログラマはアプリケーションのロジックに集中することができます。またグラフィカル・インタフェース・ビルダにより、デザイナはプログラムを知らずにインタフェースを構築することが簡単になります。
Libglade についての詳細は
Pango
Pango レイアウト・エンジンは異なるフォント・バックエンド、および描画バックエンドで使用することができます。大抵の GNOME システムでは、Pango は FreeType、fontconfig、およびフォントへのアクセスとテキストの描画に Cairo を使用します。ほかのシステムでは Pango はネイティブのフォントシステム、たとえば Microsoft Windows では Uniscribe、MacOS では ATSUI を使用します
Pango は GNOME プラットフォームにおいてテキストとフォントを処理する際に中核となるライブラリです。このライブラリは GTK+ を介してテキストのレイアウトとレンダリングを受け持ちます。
Pango は世界中のさまざまな書記体系を広範囲にサポートします。言語により使用される多くの書記体系にはグリフのレイアウトや合成文字(composing characters)にたいする複雑なルールがあります。Pango はほとんどすべての言語による記述を正しく表示し、すべての場所でユーザがネイティブの言語でテキストを閲覧できるようにします。Pango は複数の書記体系を自動的にサポートします; アプリケーションのの開発者は他の言語をサポートするために特別なコードを記述する必要はありません。
Pango による複数言語の表示
スクリーンショットは
Pango は特有のドキュメントとインタフェースにより斜体、フォントの太さ、アンダーラインを含めたテキストの整形をサポートします。Pango は PangoMarkup と呼ばれる、XML に似たシンプルな言語を使用することで、フォントのサイズや色、スタイルやその他のテキストの属性を設定することを可能にします。PangoMarkup を使用することにより、テキストブロックに手動で挿入することなくインラインでスタイルを設定できます。PangoMarkup は GTK+ から直接使用され、グラフィカルインタフェースのテキストを整形するのを容易にします。
スクリーンやその他のデバイスにテキストをレイアウトするときは常に Pango を直接使用するべきです。Pango を使用することにより GTK+ や GNOME プラットフォームの他の部分とシームレスにテキストをレイアウトすることができます。また可搬性のあるコードを記述でき、あなたのアプリケーションが異なる数百の言語を表示できることを保証します。
Pango についての詳細は
GDK
GDK は X Window System、Microsoft Windows、DirectFB、Quartz を含む、いくつもの異なるプラットフォームで実行されます。それらのさまざまなプラットフォームにおいて GDK は統一された同じ API を提供することで GTK+、そして GTK+ によるアプリケーションを変更することなしに実行することを可能にします。
GDK は GTK+ によって使用される、グラフィクスおよび入力デバイスにたいしてシステムを通してやりとりするための低レベルなライブラリです。あなたがアプリケーションのコードで GDK を直接使用するのは稀でしょうが、このライブラリにはオブジェクトやテキストをスクリーンに描画し、さまざまな入力デバイスとやりとりするのに必要なすべての機能が含まれています。
GDK の特徴は簡単なオブジェクトの描画や、スクリーンにイメージをレンダリングするのに適したグラフィクス・コンテキストと基本的な描画機能です。Cairo により広範囲の描画システムが提供されるようになって以来、GDK は Cairo のコンテキストを使用するためのフックを提供しています。
GDK は GTK+ で使用される高レベルのシグナルによる接続ではなく、より低レベルのキーボードやマウスおよびその他の入力デバイスからのシグナルにアクセスすることを可能にします。GDK はドラッグアンドドロップやシステムのクリップボードにアクセスするための低レベルなルーチンも提供します。カスタムコントロールを実装するときは、これらのシグナルを通じたユーザとの適切なやりとりを実装するために、これらの特色の利用が必要となるでしょう。
GDK は GTK+ のような完全なグラフィック・ツールキット実装するのに必要となる、その他の機能を提供します。GDK がプラットフォームの抽象化を提供するようになって以来、GDK は GTK+ で必要となるすべてのシステムの機能を API として提供し、GTK+ 複数の環境の元で実行できるようになりました。 これには複数のディスプレイ、解像度、カラーデプス、カラーマップ、カーソルなどが含まれます。
イベント、ウィンドウ、クリップボードを含む、背後のウィンドウシステムに対する低レベルのアクセスが必要な場合は GDK を使用するべきです。これらの処理に GDK を使用することにより可搬性のあるコードを記述できるとともに、GTK+ で記述されたコードと統合することが可能になります。GDK で提供されるシンプルな描画ルーチンを使用することは通常ありません。かわりに Cairo で提供される、拡張された機能が使用されます。
GDK についての詳細な情報は
Cairo
Cairo はベクタグラフィクスやパノラマ画像の描画、およびアンチエイリアスによるテキストのレンダリングといった機能のための、洗練された API を特色とする 2D グラフィクス・ライブラリです。Cairo は X Window System、Microsoft Windows、イメージ・バッファを含めた複数の出力デバイスへのサポートを提供し、異なるメディアにグラフィクスを描画するコードを、プラットフォームに依存せずに記述することを可能にします。
Cairo は PostScript や PDF と似た描画モデルを提供します。Cairo の API は3次元のベジエ曲線の線描と塗りつぶし、パノラマ画像、およびアフィン変換処理といった描画のための操作を提供します。あなたのアプリケーションのコードでこれらのベクタ操作を使用することにより、高価な処理であるピクセル・ベースの描画を使用することなく、アンチエイリアスされた画像を使用することができます。
Cairo の豊富な描画モデルは複数メディアへの高品質なレンダリングを可能にします。同じ API を使用して、スクリーンに魅力的なグラフィクスやテキストの描画、イメージのレンダリングができ、印刷に適した明瞭な出力を作成することもできます。
アプリケーションで GTK+ により提供されるウィジェットへの描画という範囲を越えるグラフィクス描画が必要な場合は常に Cairo を使用するべきです。GTK+ 内部の描画にはCairo が多く使用されています。カスタムな描画に Cairo を使用することにより、アプリケーションは高品質でアンチエイリアスされた、解像度に依存しないグラフィクスを手にすることができます。
Cairo についての詳細は
仮想ファイルシステム
GLib の一部である GIO は GNOME アプリケーションでのファイル、およびフォルダに対する操作のための中核となるライブラリです。GIO は取り換え可能なバックエンドにたいする、統一された仮想的ファイルシステムというレイヤーを提供します。GNOME では、GIO のバックエンドとして、複数のネットワークプロトコル、およびローカルプロトコルを実装する GVFS ライブラリが提供されます。アプリケーションで GIO を GVFS とともに使用することによりローカルにファイルと同じくらい容易に、リモートマシン上にあるファイルにたいして処理を行うことができます。
GIO はファイルやフォルダにたいして、MIME 型やファイルのアイコン、どのアプリケーションがそのファイルを開くことができるかといった広範な情報を提供します。GVFS がファイルタイプの決定と関連付けの標準として
GIO は GNOME デスクトップを通じて使用されます。ファイルマネージャである
GIO についての詳細は
GNOME の以前のバージョンでは、GnomeVFS ライブラリがファイルおよびフォルダへのアクセスに使用されていました。 GnomeVFS でもリモートフォルダへの透過的アクセスを含めた同様な機能が提供されていましたが、いくつかの制限もあり、それは GIO によって解決されました。GnomeVFS は GNOME 2 でも引き続きサポートされますが使用は推奨されていないので、新しく記述するコードで使用するべきではありません。GnomeVFS についての詳細は
コンフィギュレーションとロックダウン
GConf は GNOME のコンフィギュレーション設定を保存および取得するシステムです。GConf は2つのパートからなります:設定にアクセスするためのクライアントライブラリと、それらの設定の保存および取得を受け持つセッションデーモンです。デーモンを使用することにより GConf は、異なるストレージをバックエンドとする、入力をチェックする、同時に複数のアプリケーションからのアクセスを可能にする、などのことができるようになります。
GConf により保存された設定は、ユニークなキーもしくは識別文字列を使用して保存・取得します。キーは単純な階層による 名前空間を使用することにより他のアプリケーションやデスクトップの設定との衝突を避けいています。あなたはンフィギュレーション・キーの詳細をスキーマファイルとして提供することができます。これによりGConf はキーの入力タイプの確認、そしてキーにたいするローカライズされたドキュメントを表示することができます。またシステム管理者はこれにより、複数の設定を設定ダイアログを操作せずに一度で設定することができます。
GConf は異なる設定を一度に参照することができます。典型的な例は異なる場所のファイルシステムの参照です。システムソースを適切に設定することにより、GConf はすべてのユーザにたいする既定・必須の設定を適用することができます。GNOME の
GConf のクライアントライブラリは設定の変更にたいする通知を提供します。それにより他のツールからアプリケーションの設定が変更された場合でも、変更された設定をアプリケーションに即時に適用することが容易になります。キーにたいする値の設定は、それに興味を持つすべてのアプリケーションに通知され、デスクトップや他のアプリケーションにまたがる設定を素早く簡単に処理することができます。
GConf は特定のキーを読み取り専用に設定にして、ユーザが値を変更できないようにすることによりシステムのロックダウンを容易にします。さらに GNOME はディスクへの保存やパネルのレイアウト変更を禁止するために使用できる高レベルのキーをいくつか提供しています。
あなたのアプリケーションがすべてのユーザの設定を保存するような場合は GConf を使用すべきです。GConf を使用することにより即時に適用が可能な設定を提供でき、システム管理者や設定、バックアップツールから設定にアクセスすることが可能になります。
GConf についての詳細は、
インターナショナライゼーション
GNOME デスクトップと開発者用プラットフォームはアプリケーションをインターナショナライズ(訳注: 異なる言語環境において機能するソフトウェアをデザインすること)、ローカライズ(訳注: 実際にアプリケーションのメッセージやラベル、その他のインタフェース要素を異なる言語に翻訳すること)へのフルサポートを提供します。インターナショナライゼーションはあなたのアプリケーションがローカライズできることを保証するためのプロセスです。そのローカライズには、アプリケーションで翻訳されるすべての文字列をマークすること、その文字列にたいして番号と書式を正しくマーキングすること、そして時刻や日付、単位や書式にたいする慣習の違いの調整などが含まれます。
GNOME はローカライゼーションの機能にアクセスするために、標準の gettext と関連するルーチンを使用します。gettext を使用したローカライゼーションへのサポートは、GNOME プラットフォームのすべてのコンポーネントに組み込まれています。あなたのソースコードは特別なツールのために、自動化されたツールによってスキャンされます。それらの文字列は PO ファイルの中に配置され、翻訳者が翻訳を追跡できるようにします。gettext を使用することにより、あなたは簡単かつ効果的に実際にユーザが目にする翻訳されたバージョンの文字列、つまりアプリケーションがインストールされた翻訳ドメインにしたがって翻訳された文字列にアクセスすることができます。
これらの翻訳ドメインは、文字列の変更を追跡し、翻訳のための更新を適宜行うことができる PO ファイルを使うことにより作り出すことができます。GNOME には intltool という、PO ファイルの中の翻訳を管理するためのツールが付属しています。intltool を使用することにより、アプリケーション中の文字列の翻訳だけではく、GConf のスキーマファイルやデスクトップのエントリファイル、そして XML ファイルにも PO ファイルを使用することができます。
GNOME は gnome-doc-utils パッケージの一部として xml2po ツールも提供します。このツールにより翻訳者は PO ファイルから XHTML、DocBook を含めたさまざまな形式の翻訳済み XML を作成することができます。
インターナショナライゼーションにはは文字列が翻訳されることを可能にするだけでなく、あなたのアプリケーションを開発するときに、インターナショナライゼーション・プロセスの各ステップを GNOME サポートするということが含まれています。GTK+ は右から左に読むような言語の表示を自動的に調整し、Pango は両方向から読むようなテキストや、さまざまな異なる書記体系で記述されたテキストを完全にサポートします。GTK+ は複数の入力メソッドをサポートし、すべての言語のユーザが自身のキーボードでテキストを効果的に入力することを可能にします。GNOME プラットフォーム全体では Unicode の表記法の1つである UTF-8エンコードをネイティブでサポートし、全世界の文字と書記体系へのアクセスを提供します。
複数言語による
スプレッドシート・アプリケーションである
あなたのアプリケーションをインターナショナライズすることは、世界中の多くのユーザがアプリケーションを使用する手助けとなります。経験を積んだ翻訳者がいくつもの言語への翻訳を提供しなければならない間、アプリケーションが完全にローカライズされるまでは、アプリケーションがインターナショナライズされていることをプログラマは保証しなければなりません。
GNOME のインターナショナライゼーションについての詳細は
アクセシビリティ
アクセシビリティとは。あなたのアプリケーションをハンディキャップを持つさまざまな人が使えるよう保証するプロセスのことです。ハンディキャップはさまざまな形をとります: 視力障害、運動機能障害、聴覚障害、認知機能、および言語障害、そして発作障害などです。なんらかのハンディキャップをもつ人々が多数存在し、あなたのアプリケーションのアクセシビリティは、それら多くの人々がアプリケーションを効果的に使用することを可能にします。
GNOME は ATK フレームワークを使用することによりアクセシビリティのためのデバイスのサポートを提供します。このフレームワークはグラフィカル・インタフェースのコンポーネントと密接に結びついたいくつかのインタフェースを定義します。これによりたとえば、スクリーンリーダーはインタフェースのテキストを読み上げ、インタフェスのコントロールと相互作用を行うことができます。ATK のサポートは GTK+ に組み込まれており、残りの部分は GNOME プラットフォームでは GAIL ライブラリが使用されます。そのため GTK+ を使用する任意のアプリケーションは、何ら苦労することなく妥当なアクセシビリティのサポートを提供することができます。
それにもかかわらず、あなたはアプリケーションを開発するときはアクセシビリティの問題点を知っているべきです。GTK+ のインタフェースが妥当なアクセシビリティを既定で提供するとしても、ATK に対して追加の情報を与えることでアクセシビリティツールに対するあなたのアプリケーションの振る舞いを改善できることがあります。もしあなたが独自のウィジェットを開発する場合、それらのプロパティを ATK から使用できるよう保証すべきです。また、ユーザに情報を伝える際はサウンド、グラフィクス、色などのうちのどれか1つだけに頼るべきではありません。
GNOME デスクトップにはハンディキャップを持つ人々がデスクトップやアプリケーションを最大限有効に使用することを可能にするためのいくつかのアクセシビリティツールが付属しています。ATK をフルに実装したアプリケーションはアクセシビリティツールと協調して動作します。GNOME のアクセシビリティツールにはスクリーン・リーダー、スクリーン拡大鏡、オンスクリーン・キーボード、そしてグラフィカルな事前予測テキスト入力システムである
アクセシビリティについてのさらに広範な推奨については
マルチメディア
GStreamer はサウンド、ビデオ、その他のメディアを再生・作成・操作するための強力なマルチメディア・ライブラリです。GStreamer を使用することによりサウンドとビデオの再生、複数ソースからの記録、そしてマルチメディア・コンテンツの編集ができます。GStreamer は既定でいくつかの形式に対するエンコード・デコードをサポートします。その他の形式についてはプラグインにより追加することができます。
GStreamer はメディアをエレメントのパイプラインを通して処理する柔軟なアーキテクチャを提供します。それぞれのエレメントにはエンコード、デコード、複数ソースの合成、マルチメディアの変換などの、コンテンツにたいするフィルターを適用することができます。このアーキテクチャによりエレメントに任意の引数を指定することができるので、GStreamer を使ってさまざまなバーチャル・エフェクトを実現することができます。そのうえ、GStreamer はオーバーヘッドが低くなるようデザインされているので、潜在的に高い負荷を持つアプリケーションと実行することができます。
GStreamer はマルチメディアを取り扱うための強力な API を提供します。また、その API は単純な再生のための便利なルーチンも提供します。GStreamer はあなたのアプリケーションで簡単にサウンドやビデオを使用するために、サポートしている形式のファイルを読み込み再生するためのパイプラインを自動的に構築することができます。
GStreamer のアーキテクチャにより、エンコーダ、デコーダ、そしてすべての種類のコンテンツのフィルタをプラグインにより追加することができます。サードパーティはGStreamer を使用する他のアプリケーションから自動的に使用可能になる GStreamer のプラグインを提供することができます。プラグインではほかのマルチメディア形式や追加の機能や効果の追加を提供できます
あなたのアプリケーションでマルチメディアのコンテンツを読み込んだり再生する必要がある場合や、サウンドやビデオを取り扱う必要がある場合は GStreamer を使用するべきです。GStreamer を使用することによりあなたのアプリケーションを開発することが簡単になり、GStreamer が提供する充分にテストされたエレメントをあなたの必要に応じて使用することができます。
GStreamer についてのわかりやすい情報は
印刷
印刷にたいするサポートを提供する必要のあるアプリケーションは多数存在します。ユーザはスクリーンに表示される内容と同様のものが印刷できることを期待します。GNOME プラットフォームはあなたのアプリケーションで高品質な印刷をサポートするためのライブラリを提供します。
GNOME プリント
このドキュメントはすでに陳腐化しており、libgnomeprint と libgnomeprintui は
GNOME プリントのフレームワークは、あなたのアプリケーションが統一されたインタフェースによって高品質な印刷を提供する手助けをするための2つのライブラリからなります。 プリントフレームワークの中核は PostScript の出力を生成してプリンタに送信する libgnomeprint です。その最上位に位置するのが libgnomeprintui であり、これはインタフェースのために標準的なプリント用のコントロールを提供します。
libgnomeprint ライブラリは多くのプリンタで使用されている PostScript のイメージングモデルを実装しています。PostScript をサポートしないプリンタについては以降で説明する CUPS を通じてサポートされます。libgnomeprint は標準の PostScript イメージングに加え、アルファ・チャンネルとアンチ・エイリアスをサポートします。
The libgnomeprintui ライブラリは標準的な印刷ダイアログ、印刷プレビューダイアログ、そしてその他のさまざまなコントロールを提供し、印刷の処理を構築するのに要求される機能を直感的なユーザインタフェースで提供します。GNOME プリントフレームワークはプリンタの位置やスプールされた印刷ジョブの詳細を処理し、印刷ダイアログから PostScript や PDF に直接エクスポートする機能を提供します。
印刷のために PostScript を出力する必要がある時は常に libgnomeprint を使用すべきです。また、ユーザインタフェースを構築する場合はそれがたとえ libgnomeprint 以外のソースによる出力のときでも libgnomeprintui を使用すべきです。GNOME プリントフレームワークはユーザが印刷を行うアプリケーションに期待する統一されたユーザインタフェースを提供します
CUPS
大部分の GNOME システムでは、CUPS (Common UNIX Printing System)が低レベルの印刷システムとして機能します。CUPS はプリンタの検索、プリンタのオプションへのアクセス、そして異なるプリンタに対する印刷ジョブのスプーリングなどのモダンで機能豊富なアーキテクチャを提供します。
CUPS はローカルおよびネットワーク上にあるプリンタを自動的に検索するユーティリティを提供します。これによりユーザは使用可能なすべてのプリンタを検索できるだけでなく、手動で設定することなく異なる種類のプリンタを使用することができます
CUPS はプリンタの位置や種類に左右されない、印刷のための統一されたインタフェースを提供します。 複数の印刷プロトコルは CUPS によりシームレスに処理され、自動的にフィルタが適用された後に接続先のプリンタに送信されます。 アプリケーションは単純に PostScript の出力を提供すれば, CUPS が自動的に PostScript をネイティブでサポートしないプリンタに対する出力の変換を行います。
CUPS は PostScript プリンタ記述 (PostScript Printer Description: PPD) ファイルの形式によるプリンタの設定オプションも提供します。PPD 設定によりアプリケーションは個々のプリンタの能力を引き出し、統一されたユーザインタフェースによる使用することが可能になります。たとえば PPD により印刷ジョブに対して collate (訳注: 複数枚印刷する時の出力順序) や staple (訳注: 印刷物にホチキスを打つ位置) を指定できるプリンタを決定してユーザインタフェースにそのオプションを表示することができます。
ほとんどのケースではアプリケーションから CUPS を直接インタフェースをもつことはないでしょう。GNOME プリントフレームワークを使用することにより、あなたは CUPS の柔軟さとパワーに自動的にアクセスできます。CUPS を下位にもつということは、プログラミングの量を少なくすることのよいユーザ経験です。
言語バインディング
GNOME プラットフォームは主にC言語で書かれていますが、他のプログラミング言語に簡単にバインドできるように意図して記述されています。言語バインディングを使用することにより、GNOME プラットフォームで好みのプログラミング言語による開発を行うことができます。
言語バインディングには、多くのプログラミング言語、および GNOME プラットフォームで公式にサポートされているの C++ や Java、Perl、および Python 用のバインディングのサポートが存在します。
C++
C++ バインディングは GTK+、Libglade、GConf を含む GNOME プラットフォームを完全に網羅します。C++ バインディングはすべてのオブジェクトをネイティブの C++ オブジェクトにラップし、プログラマが独自のウィジェットを通常の C++ インタフェースで提供できるようにします。C++ バインディングは、タイプセーフなシグナルハンドラ、すべての標準 C++ ライブラリの使用、そして完全な C++ メモリ管理をもつネイティブな API を提供します。
GNOME の C++ バインディングについての詳細は
Java
Java バインディングは GTK+、Cairo、GConf を含む GNOME プラットフォームを完全に網羅します。Java バインディングはすべてのオブジェクトをネイティブの Java オブジェクトにラップし、プログラマが独自のウィジェットを通常の Java の継承により提供できるようにします。Java バインディングは Java のクラスライブラリ、適切なインタフェースを使用して完全にネイティブな API を提供します。
GNOME の Java バインディングについての詳細は
Perl
Perl バインディングは GTK+、GnomeVFS、GConf を含む GNOME プラットフォームのための Perl のネイティブなインタフェースを提供します。Perl バインディングはすべてのオブジェクトを Perl オブジェクトにラップし、プログラマが通常 Perl を使う標準的な方法でそれらを操作することを可能にします。Perl バインディングは Perl のネイティブなデータ型を適切に使用して、完全にネイティブな API を提供します。
GNOME の Perl バインディングについての詳細は
Python
Python バインディングは GTK+、GnomeVFS、GConf を含む GNOME プラットフォームのための Python のネイティブなインタフェースを提供します。Python バインディングはすべてのオブジェクトを Python オブジェクトにラップし、プログラマが独自のウィジェットを通常の Python の継承により提供できるようにします。Python バインディングはタイプキャストやメモリ管理などの詳細を自動的に処理して、完全にネイティブな Python のための API を提供します。
GNOME の Python バインディングについての詳細は
その他の言語
C#、Eiffel、JavaScript、Ruby、Scheme、その他の言語に完全または部分的に対応したバインディングが数多く存在します。それらがまだ正式に GNOME でサポートされていないとしても、それらのバインディングは GNOME で公式にサポートされているバインディングと同程度に高品質であり、それらのいくつかは将来のリリースで GNOME の公式バインディングに含まれることでしょう。
言語バインディングについての詳細は
モジュールの早見表
この付録 (
プラットフォームモジュール
GNOME の開発者向けプラットフォームのモジュールは、API と ABI の安定性についての完全に保証します。プラットフォームモジュールにたいして開発されたアプリケーションは、GNOME2のリリース期間中は変更せずに実行できることが保証されます。
GConf
GConf は設定データを保存・取得するためのデーモンとライブラリを提供します。 GConf については
ORBit
ORBit は非推奨の CORBA サーバーです。 GNOME が推奨するコンポーネントアーキテクチャである Bonobo は CORBA 上に構築されています。CORBA については、
atk
ATK は他のツールキットやアプリケーションで実装されるアクセシビリティのためのインタフェースを提供します。ATK のインタフェースを使用することにより、アクセシビリティツールは実行されているアプリケーションを完全に表示・制御することができます。ATK については
gail
GAIL は GTK+、GNOME ライブラリのために ATK インタフェースの実装を提供し、アクセシビリティツールがそれらのライブラリを使用して記述されたアプリケーションと相互作用することを可能にします。2009年に GAIL は GTK+ に移行されました。アクセシビリティについては
gio
GLib の一部である GIO ライブラリはファイルやフォルダにアクセスするための高レベルな API を提供します。GVFS ライブラリと協調することにより、ローカルとリモートのファイルにたいして透過的にアクセスするための仮想的なファイルシステムを提供します。GIO については
glib
GLib は C で記述されたライブラリやアプリケーションにたいしてアプリケーションを構築するブロックの中核を提供します。GLib は GNOME のシステムで使用されているコアオブジェクト、main ループの実装、文字列や一般的なデータ型のための膨大なユーティリティ関数を提供します。
gnome-vfs
GnomeVFS はファイルやフォルダにアクセスするための非推奨なライブラリです。GnomeVFS は GIO と GVFS に置き換えられました。新しく記述されるコードでは GIO を使用するべきです。
gtk+
GTK+ は GNOME アプリケーションでユーザインタフェースを構築するのに使用される主要なライブラリです。GTK+ はユーザインタフェースのコントロールとそれを制御するためのシグナルのコールバックを提供します。GTK+ については
gvfs
GVFS は GIO のバックエンドを実装します、GIO の API のさまざまなプロトコルによるアクセスを可能にします。開発者は GVFS に直接アクセスせずに GIO を使用してください。GIO により記述されたアプリケーションは自動的にシステムで使用可能な GVFS を使用します。
libIDL
libIDL は CORBA インタフェースで必要となるインタフェース定義言語 (IDL) のファイルを解析するための非推奨なライブラリです。libIDL は GNOME の非推奨な CORBA 実装である ORBit を使用しています。CORBA については
libart_lgpl
libart はベクトルパスを描画することができる非推奨なライブラリです。libart はGnomeCanvas ウィジェットで使用されています。新しく記述するコードではlibart_lgpl の代わりに Cairo、およびその他の技術を使用するべきです。
libbonobo
Bonobo は GNOME アプリケーションで再使用可能なコンポーネントを作成するための非推奨なライブラリであり、CORBA 上に構築されています。Bonobo については
libbonoboui
非推奨である Bonobo の UI ライブラリです。Bonobo コンポーネント・フレームワークを使用したいくつかのインタフェース・コントロールを提供しています。Bonobo については
libglade
libglade は、XML 記述から動的にユーザインタフェースを構築するための非推奨なライブラリです。Libglade は
libgnome
非推奨である libgnome ライブラリはセッション管理、ファイルや URI に基づくアクティベーションやヘルプの表示などのモダンなアプリケーション構築のための便利なルーチンをいくつか提供しています。
libgnomecanvas
GnomeCanvas ウィジェットは構造的なグラフィックを対話的に作成できる柔軟なウィジェットを提供しています。
libgnomeui
非推奨である libgnomeui ライブラリはアプリケーションのために追加のウィジェットを提供します。大部分のウィジェットは GTK+ に移行済みです。
libxml2
libxml2 ライブラリは XML を標準に準拠した方法で処理するための API をいくつか提供します。libxml2ライブラリについては
libxslt
libxslt ライブラリは XML を変換する言語である XSLT の高速で完全な実装です。libxslt ライブラリについては
pango
Pango は GNOME アプリケーションでテキストやフォントを処理するための中核となるライブラリです。Pango は世界中で使用されている異なる書記体系を広範にサポートします。Pango については
デスクトップモジュール
GNOME デスクトップのモジュールは、たとえそれが比較的安定したものであるとしてもプラットフォームのモジュールとして同じ API、ABI の安定性への保証を要求されていません。大抵、デスクトップのリリースではモジュールは成熟し、安定後にプラットフォームに取り入れられます。
eel
eel ライブラリは主に GNOME のファイルマネージャである
evolution-data-server
Evolution データサーバは複数のアプリケーションが同じデータを共有するために、アドレス帳とカレンダのための統一された場所を提供します。Evolution データサーバについては
gnome-panel
パネルそのものに加えて、gnome-panel パッケージではユーザのパネルで実行することのできるにパネル・アプレットを構築するのに使用できるライブラリを提供しています。パネル・アプレットについては
gnome-keyring
GNOME キーリング・マネージャはユーザのパスワードや機密データを保存するためのモダンで安全な手段を提供します。キーは暗号化され制限されたユーザ権限のみがアクセスできます。キーリング・マネージャについては
gstreamer
GStreamer は GNOME でサウンドやビデオを再生、作成、操作するための強力なマルチメディア機能です。GStreamer については
gtkhtml
gtkhtml ライブラリは豊かなテキスト編集をサポートする軽量な HTML 描画を提供します。gtkhtml は
gtksourceview
gtksourceview ライブラリは GtkTextView ウィジェットの拡張であり自動的な構文の強調表示やソースコード・エディタのために便利な機能を提供します。gtksourceviewは
libgail-gnome
GAIL は GTK+ と GNOME ライブラリのための ATK インタフェースの実装を提供し、それらのライブラリを使用して記述されたアプリケーションがアクセシビリティ・ツールと対話することを可能にします。アクセシビリティについては
libgnomeprint
非推奨のライブラリである libgnomeprint は PostScript のイメージング・モデルを実装しています。libgnomeprint は
libgnomeprintui
非推奨のライブラリである libgnomeprintui は標準の印刷ダイアログ、印刷プレビューダイアログ、その他の印刷のために必要となるさまざまなコントロールを提供します。libgnomeprintui は
libgtop
libgtop ライブラリは、実行中のプロセスについての情報を取得するためのポータブルAPI を提供します。libgtop は
librsvg
librsvg ライブラリは、スケーラブルベクターグラフィックス (SVG) の実装を提供します。librsvg はデスクトップの解像度に依存しないベクタグラフィクスをレンダリングするために使用されます。
libsoup
libxslt ライブラリは XML を変換する言語である XSLT の高速で完全な実装です。libxslt ライブラリについては
libwnck
libwnck ライブラリは GNOME の既定のウィンドウマネージャである
libxklavier
libxklavier ライブラリはキーボードのレイアウトにアクセス・設定するための高レベルの API を提供します。libxklavier は設定メニューの
vte
VTE は GTK+ アプリケーションで使用するための端末エミュレータウィジェットです。VTE は一貫した API と Pango によるテキストの描画を提供し、国際化されたテキストを表示することを可能にします。VTE は GNOME の
GNOME プラットフォームの概要
2005
2006
Shaun McCance
GNOME Foundation
2007-03-16
2.20
GNOME プラットフォーム内部で使用されている強力なテクノロジの概要です。
Shaun
McCance
GNOME Documentation Project
shaunm@gnome.org
Hiroyuki Sekihara <hiroyuki\.sekihara\@gmail\.com>, 2010
松澤 二郎 <matsuzawa\.jr\@gmail\.com>, 2010
草野 貴之 <AE5T\-KSN\@asahi\-net\.or\.jp>, 2010
SOAP
GNOME は libsoup ライブラリによって HTTP 上で XML メッセージをやりとりするために広く用いられている SOAP にたいするサポートを提供します。SOAP は開発者がウェブ上で、アプリケーションが情報を取得するのに使用されたり、データ送信、トランザクションの生成、その他いくつものサービスを提供するためのインタフェースを公開することを可能にします。
SOAP は検索や情報の取得のために使用でき、オンラインストアでのやりとりや他のシステムでのユーザ管理、その他さまざまな目的のために使用されます。Web サービスはユーザのために重要な機能を提供するために今後ますます使用が期待できます。また、SOAP を使用するアプリケーションは、より統一され進化したユーザ経験を提供することができます。
ライブラリには HTTP 実装と SOAP メッセージを構築・使用するための API が含まれています。これにより安全な認証も可能になるため、Web サービスを使用して安全な接続を使用してプライベートなアカウントにアクセスすることができます。
libsoup ライブラリは SOAP (Simple Object Access Protocol) と、同様に HTTP の実装を提供します。SOAP を使用することによりアプリケーションで Web サービスを構築することができます。libsoup ライブラリについては