# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# ISO_6393:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

かっことグループ化
/text/smath/01/03091100.xhp
$[officename] Math のかっことグループ
$[officename] Math のグループ化とかっこ
かっことグループ化
ここでは、かっことグループ化について説明します。
コマンドウィンドウに直接入力する場合、多くのコマンドはスペースも正しく入力する必要がありますので注意してください。
中かっこ {} は、複数の式を 1 つの新しい式にグループ化するために使います。例えば、「sqrt {x * y}」が相乗積 x*y 全体の平方根であるのに対し、「sqrt x * y」は x の平方根と y の乗算です。中かっこにスペースを挿入する必要はありません。
集合かっこの挿入には、数式要素ウィンドウで選択する方法と、コマンドウィンドウに直接 &quot; left lbrace < ? > right rbrace &quot; を入力する方法がありました。さらにワイルドカードありでも、なしでも、 &quot; lbrace &quot; と &quot; rbrace &quot; を使って挿入することができます。
使用できるかっこは、8 種類用意されています。ceil かっこと floor かっこは、引数を次の整数に切り上げたり、切り下げたりする際に使います。例えば、lceil -3.7 rceil = -3 であり lfloor -3.7 rfloor = -4 です。
山かっこ中に縦線が入ったものは、物理学で広く使われています。例えば langle a mline b rangle や langle a mline b mline c over d mline e rangle のようになります。縦線の高さと位置は、それを囲んでいるかっこに合わせて調整されます。
かっこは、常に対の形で使用する必要があります。かっこには、次のような共通の特徴があります:
すべての種類のかっこには、 &quot; {} &quot; かっこで解説したように、グループにまとめる機能があります。
すべてのかっこには、空白のグループを定義する機能があります。かっこ内は空白でもかまいません。
かっこは自身のサイズを内包する式にあわせて調整しません。たとえば &quot; ( a over b ) &quot; で、かっこを a と b に合わせたサイズにするには、 &quot; lef &quot; と &quot; right &quot; を挿入しなければなりません。 &quot; left (a over b right) &quot; と入力すると、かっこのサイズが調整されます。しかし、かっこが式の一部であるときにその式のサイズを変更すると、かっこのサイズもそれに応じて変化し、 &quot; size 3(a over b) &quot; や &quot; size 12(a over b) &quot; のようになります。かっことかっこ内の式とのサイズ比は変わりません。
どんな
かっこにも付けることができ、右側のかっこを左側に置いたり、左側のかっこを右側に置いたりすることもできます。かっこのかわりに none を入力すると、そこにはかっこもスペースも表示されないため、次のような式が作成できます:
left lbrace x right none
left [ x right )
left ] x right [
left rangle x right lfloor
left と right にもほかのかっこと同じ規則が適用されます。つまり、この２つのコマンドにはグループにまとめる機能があり、中に空白の式を入れることもできます。
対でないかっこを組み合わせたり、かっこを片方だけ使ったり、右と左を入れ替えたりすることは、数式でしばしば使われます。そのまま入力することはできないかっこの例に、次のものがあります:
[2, 3) - 右開区間
$[officename] Math では &quot; left [2, 3 right ] &quot; のように left と right を使って、かっこをひとつずつ挿入することはできますが、このかっこはサイズが引数によって調整されるため、サイズが固定されません。そのため、かっこをひとつずつ入力するのは面倒です。このような場合は、通常のかっこの前に \(半角バックスラッシュ) を挿入することでかっこのサイズを固定できます。円記号の付いたかっこは他の記号と同じ扱いになり、かっこのサイズを固定できます。バックスラッシュの付いたかっこは他の記号と同じ扱いになり、かっことしての機能を失います。つまり、グループ化の機能がなく、配置もほかの記号と同様になります。「size *2 \langle x \rangle」と「size *2 langle x rangle」を比べてください。
まとめると、次のようになります:
\{ または \lbrace、\} または \rbrace
\(、\)
\[、\]
\langle、\rangle
\lceil、\rceil
\lfloor、\rfloor
\lline、\rline
\ldline、\rdline
$[officename] Math
では簡単に構成できます: \[2 &quot; , &quot; 3\) または &quot; \]2 &quot; , &quot; 3\[
Shift + 2
を押して入力します。印刷用クォテーションマーク (”) や全角では機能しません。基本的に句読点 (この例ではカンマ) はテキストとして設定されます。「\[2,~3\)」と入力することもできますが、上記の方が適切です。上記の例で、かっこの「サイズが固定される」とは、使用するフォントサイズだけにかっこのサイズが調整されるという意味です。
グループは、問題なく入れ子にすることができます。hat &quot; {a + b} &quot; とすると、hat が {a + b} の上中央に表示されます。また、「color red lceil a rceil」や「grave hat langle x * y rangle」は、入力通りに表示されます。後者の結果は、「grave {hat langle x * y rangle}」と同じです。なぜなら、これらの属性は競合せず、互いに組み合わせることができるからです。
競合する属性や、互いに直接の影響を与え合う属性の場合は、状況は異なります。フォント属性がその一例です。「color yellow color red (a + color green b)」では b は何色になるでしょうか。また、「size *4 (a + size /2 b)」では b のサイズはどうなるでしょうか。基本サイズが 12 だとすると、b のサイズは 48 または 6 のいずれでしょうか、あるいは組み合わせにより 24 になるでしょうか。ここで、全般的に有効なこの規則について説明します。この規則は将来にわたって変更されることはありません。一般的に、この規則はすべてのグループ演算に適用されます。「太字」、「斜体」、「表示しない」、「サイズ変更」、「色」、「フォント変換」などのフォントの属性には視覚的な効果のみ適用されます。
連続して入力したグループ演算は、各演算を {} で囲んだ場合と同じように扱われます。つまり入れ子にした状態で、それぞれの入れ子段階には多くても 1 つの演算しか含まれません。例えば、グループ演算を使って{size 12{color red{font sans{size -5(a +{size 8 b})}}}}」のような式を記述できます。
次に、式全体が左から右へ解釈されます。各演算は、その演算に属するグループ（または式）だけに適用されます。以降に位置する演算は、前の演算を置き換えるか、または組み合わせます。
グループ演算は、上位のグループには適用されず、下位のグループおよび式（かっこや上付き、下付き文字も含む）のみに適用されます。例: a + size *2 (b * size -8 c_1)^2
color...、font...、size n（n は数）は、前に同じ種類の演算がある場合、それを置換します。
size +n、size -n、size *n、size /n では、演算の効果が組み合わされます。
size *2 size -5 a は、元のサイズを２倍にして、5 を引いたものになります。
font sans(a + font serif b)
size *2 (a + size/2 b)
UFI: no more StarSymbol font.
Removed the following paras
id= &quot; par_id3151327 &quot; l10n= &quot; U &quot; oldref= &quot; 45 &quot; For the StarSymbol Unicode font there are 2 exceptions to these rules: id= &quot; par_id3148998 &quot; l10n= &quot; U &quot; oldref= &quot; 46 &quot; It ignores &quot; font &quot; commands.
Otherwise, there would often be different characters from the ones desired, for example, &quot; font sans (a oplus b) &quot; would then neither have brackets nor an &quot; oplus &quot; . id= &quot; par_id3143281 &quot; l10n= &quot; U &quot; oldref= &quot; 47 &quot; The &quot; ital &quot; command is ignored, for example, &quot; ital (a + b) &quot; .
This happens because italicized mathematical symbols are uncommon, even in combination with text in italics.
サイズの変更には size n ではなく size +、-、*、/ を使用すると、コンテキストに左右されません。記号をコピーして別の場所に貼り付けても、同様の結果が得られます。size n ではなく上記の記号を使うと、メニューでフォントの基本サイズを変更した場合にも問題がありません。size * と size / だけを size *1.24 a や size /0.86 a のように使うと、サイズの比率がかわりません。
例（基本サイズが 12 で、指数は50%）:
size 18a_n と size *1.5 a_n は同じ比率。
これは、次のようなコンテキストでは違ってきます: x^{size 18 a_n} と x^{size *1.5 a_n}
比較のため、size +n を使った例。次の式はすべて同じ結果になります:
a_{size 8 n}
a_{size +2 n}
a_{size *1.333 n}
次の例は、表示が異なります:
x^{a_{size 8 n}}
x^{a_{size +2 n}}
x^{a_{size *1.333 n}}
ここではすべての n のサイズが異なることに注意してください。1.333 というサイズは、8/6、つまり希望サイズを規定の指数サイズ 6 で割ったものです（基本サイズが 12 で、指数サイズは50%）。