# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# ISO_6393:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

(PHP 3 = 3.0.9, PHP 4)
subject に関して pattern を用いて検索を行い、 replacement に置換します。 limit を指定した場合、 limit 回のマッチまで置換が行なわれます。 limit が 省略されるか -1 の場合、マッチするものは全て置換されます。
replacement では、\\ n 形式または (PHP 4.0.4 以降) $n 形式で参照を指定することができます。後者の形式の方が好ましい形式 です。各参照は、 n 番目の括弧で括られた パターンにマッチしたテキストにより置換されます。 n は0から99までとすることができ、 \\0 または $0 はパターン全 体にマッチするテキストを参照します。マッチしたサブパターンの番号 を得るために左括弧は(1から始まって)左から右に番号がふられます。
マッチした場合、新しい subject が返されます。 マッチしなかった場合には、 subject は、無変 更で返されます。
preg_replace() に渡す全てのパラメータは配列とする ことができます。
subject が配列の場合、検索及び置換は subject の各エントリ毎に行われ、 返り値も配列として返されます。
pattern および replacement が配列の場合、 preg_replace() は各配列からの値を用いて subject に関する検索および置換を行います。 replacement の値が pattern よりも少ない場合、残りの置換用文字列 に関して空の文字列が使用されます。 パターン pattern が配列で replacement が文字列の場合、この置換文字列 は pattern の各値毎に使用されます。 しかし、逆の場合は意味がありません。
/e 修飾子は、 preg_replace() が replacement パラメータを適当な置換を 行った後、PHP コードとして処理するようにします。 ヒント: replacement が有効なPHPコード文字列から 構成されるようにしてください。そうでない場合、 preg_replace() のある行でPHP は構文エラーを発 生します。

例 1複数の値を置換する
例 2/e 修飾子の使用法
入力テキストの全てのHTMLタグを大文字に変換します。
例 3HTMLをテキストに変換する
注意 パラメータ limit はPHP 4.0.1pl2で追加されま した。
preg_match(), preg_match_all(), preg_split() も参照下さい。