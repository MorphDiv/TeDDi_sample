# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# iso639_3:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

dbx モジュールは、データベース抽象化レイヤ (db 'X'、ただし 'X' は サポートされるデータベースの一つを意味します)のことです。dbx 関数 により、サポートされる全てのデータベースを単一の呼出表記によりアク セスすることが可能になります。dbx 関数自体は、データベースへの直 接のインターフェイスを有しませんが、それらのデータベースをサポート するために使用されるモジュールへのインターフェイスを有します。
dbxモジュールでデータベースを使用可能とするには、そのモジュールが PHPにリンクされるかロードされる必要があり、そのデータベースのモ ジュールは、dbxモジュールにサポートされている必要があります。現在、 以下のデータベースがサポートされていますが、他のデータベースも追 加される予定です。
FrontBase (PHP 4.1.0以降で利 用可能)




Sybase-CT (PHP 4.2.0以降で利 用可能)
Oracle (oci8) (PHP 4.3.0以降で 利用可能)
dbxにデータベースのサポートを追加するためのドキュメントは、 http://www.guidance.nl/php/dbx/doc/ にあります。
これらの関数を利用可能にするには、 --enable-dbx オプションを使用して dbxサポートを有効にし、また、使用するデータベースに関するオプション、 例えば、MySQL の場合は --with-mysql=[DIR] も指定して PHPをコンパイルする必要があります。 dbxモジュールで他のサポートされるデータベースを動作させるには、指定 したドキュメントを参照して下さい。
これらの関数の動作は、 php.ini の設定により変化します。

表 1DBX設定オプション
注意 iniオプションは、PHP 4.3.0から利用可能です。
設定ディレクティブに関する簡単な説明を以下に示します。
カラム名は、変更されず("unchanged"の場合)に返すか、大文字 ("uppercase"の場合)または小文字("lowercase"の場合)に変換すること ができます。このディレクティブは、 dbx_query() のフラグで上書きすることが可能です。
dbxモジュールでは2種類のリソース型があります。最初のリソースは、 データベース接続用のリンク- object で、2番目はクエリ結 果を保持するための結果- object です。
これらの定数は、この拡張モジュールで定義されており、 この拡張モジュールがPHP内部にコンパイルされているか実行時に動的にロー ドされるかのどちらかの場合のみ使用可能です。


















