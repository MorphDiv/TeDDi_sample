# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# ISO_6393:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

(PHP 3, PHP 4)
system() は、指定した command を実行し、結果を出力するC言語の system関数に似ています。2番目の引数として変数が指定された場合、実 行したコマンドのステータスコードが、この変数に書き込まれます。
ユーザが入力したデータをこの関数に渡そうとする場合、 escapeshellarg() または escapeshellcmd() を使用して、ユーザがシステム をだまして、勝手なコマンドを実行することのないようにするべきです。
注意 この関数を使用してプログラム実行を開始し、バックグラウンドで実行 したままにしたい場合には、プログラムの出力をファイルまたは他の出 力ストリームにリダイレクトする必要があることにも注意して下さい。 さもないと、PHPはそのプログラムの実行が終了するまでハングします。
PHPをサーバモジュールとして実行している場合、 system() のコールにより、各行を出力した後、 Webサーバの出力バッファが自動的にクリアされます。
成功時にコマンド出力の最後の行が返され、失敗時に FALSE が返されます。
コマンドを実行し、何の加工もせずに全てのデータをコマンドから直接 返す必要がある場合、 PassThru() 関数をお使いくだ さい。
exec(), PassThru(), popen(), EscapeShellCmd(), backtick 演算子 を参照下さい。