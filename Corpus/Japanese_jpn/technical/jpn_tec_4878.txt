# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# ISO_6393:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

このモジュールの関数は、CCVS API へのインターフェースであり、PHP スクリプトからCCVSを直接利用可能にするものです。CCVSは、 RedHat によるクレジットカード処理 用の RedHat による"仲介人"ソリュー ションです。これにより、*nixマシンとモデムによりクレジットカード情 報センターに直接アクセスすることが可能になります。PHPのCCVSモジュー ルを使用すれば、PHPスクリプトによりCCVSを用いて直接クレジットカー ドの処理が可能になります。以下のリファレンスに処理の概要を示します。
注意 CCVSの開発はRed Hatにより中断され、開発やサポートが継続される予 定はありません。代替品を探している場合は、 MCVE by Main Street Softworks を代替候補として考えてみて下さい。 これは、設計が似ており、PHPのサポートが文書でうたわれています!
PHPでCCVSサポートを有効にするには、まずCCVSをインストールしたディ レクトリを調べて下さい。続いて、オプション --with-ccvs を付けてPHPのconfigureを実行 する必要があります。CCVSのインストールパスを指定せずにこのオ プションを使用した場合、PHPはデフォルトのCCVSインストール位置 (/usr/local/ccvs)を探します。CCVSが標準以外の場所にある場合、 --with-ccvs=$ccvs_path を付けて configure を実行して下さい。ただし、$ccvs_path は CCVSのインストー ルパスです。CCVSサポートは$ccvs_path/lib および $ccvs_path/include が存在していることを前提とし、includeディレクトリからcv_api.h、 libディレクトリからlibccvs.aを読み込むことに注意して下さい。
また、PHPスクリプトが使用する設定で ccvsd プロセスを実行しておく必 要があります。CCVSがインストールされたのと同じユーザでPHPプロセス が実行されているかを確認する必要があります。(例えば、ユーザー' ccvs'でCCVSをインストールした場合には、PHPプロセスのユーザーを同様 に'ccvs'として実行する必要があります。)
CCVSに関する詳細な情報は、 http://www.redhat.com/products/ccvs から入手可 能です。RedHatはやや古いですが現在でも有用な文書を http://www.redhat.com/products/ccvs/support/CCVS3.3docs/ProgPHP.html で 管理していますので参照して下さい。