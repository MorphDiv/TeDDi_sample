# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# ISO_6393:	jpn
# year_composed:	NA
# year_published:	2014
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	GNOME
# source:	https://object.pouta.csc.fi/OPUS-GNOME/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/GNOME.php
# copyright_long:	http://opus.nlpl.eu/GNOME.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

GNOME ドキュメンテーションライブラリ
ホーム
ユーザー
情報
GNOME はとても簡単に使えます。しかし、それでも大きくて複雑なシステムですので、最大限に活用するには少し学ぶ必要があります。簡単に学べるように我々はいくつかのとても役に立つドキュメントを提供しています。
開発者
GNOME およびそのアプリケーションの開発者や、開発に興味のある人向けです。開発ドキュメントや参加方法の情報、他にもたくさんみつけることができます。
管理者
GNOME は、世界中大小さまざまな規模で目的に合わせて配備され、システム管理者によって管理されています。ここでは多くの GNOME デスクトップを扱うツールや方法の情報をみつけることができます。
利用可能な言語:
利用可能なバージョン
コアライブラリ
その他のライブラリ
白書
ガイド
開発ガイド
マニュアル
チュートリアル
よくきかれる質問と答え
その他
概要
ツール
GNOME ドキュメンテーションプロジェクト
ドキュメントはあなたの言語にはまだ翻訳されていません。オリジナルの言語のドキュメントを代わりに表示します。
このドキュメントの他の翻訳を見る
開発版
探索
検索シンボル
開発版のドキュメント
関連項目:
このモジュールは廃止される予定です。GNOME 2.x シリーズを通じて引き続きサポートされ、API/ABI が変えられることはありませんが、どこにも移されていない機能を必要とするのでなければ、新しいアプリケーションでこのモジュールを使うことは推奨されません。
標準
言語バインディング
GNOME アプリケーションのプラグイン
優先言語はクッキーから読み込まれます。
おそらく翻訳版がないために、クッキーから読み込まれた優先言語でドキュメントを表示することができません。
クッキーを削除
ダウンロード
API リファレンスは普通はディストリビューションのパッケージとして利用可能で、Devhelp ツールで見ることができるということを記しておきます。
より多くのバージョン、言語、あるいはオプション...
外部のリソース
ニュース
プロジェクト
アート
サポート
開発
コミュニティ
一つのHTMLファイルとして整形した同じ文書
外部のツールおよびリソース
言語の切り替え
現在の言語:
GNOME 開発センター
始めましょう
開発版のドキュメント
ユーザーインターフェース
マルチメディア
コミュニケーション
データストレージ
ユーティリティー
コア
システムの統合
デスクトップの統合
非推奨 API リファレンス
GNOME へようこそ。始めるのは簡単です - 開発ツールをインストールしてチュートリアルを見てみましょう。
ガイドはいくつかのアプリケーションとコンポーネントの詳細な説明に加えてさらに GNOME プラットフォームのコードとインターフェースの設計に使われている一般的な慣例の情報も提供しています。
リファレンス
リファレンスには GNOME プラットフォームライブラリと GNOME プラットフォームの中で使われる標準のアプリケーションプログラミングインターフェース (API) や関数、クラスとメソッドの一覧が含まれています。
開発ツール
GNOME 開発スイートは開発者の日々をより快適にするツールのセットであり、グラフィカルなインターフェースビルダー、API リファレンスのための統合されたヘルプシステムなどが含まれています。
GNOME の開発
アクセシビリティ
イントロスペクション
Python
C++
Java
GLib は C で書かれたライブラリとアプリケーションの核となるアプリケーションのビルディングブロックを提供しています。GLib は GNOME で利用されているコアのオブジェクトシステムや main ループの実装、文字列や一般的なデータ構造のための多数のユーティリティ関数を提供しています。
GObject は Pango と GTK+ で使われているオブジェクトシステムを提供しています。
GIO はモダンで簡単に利用できる VFS API です。アプリケーションからローカルとリモートのファイルに単一の一貫した API によるアクセスを可能にするファイルシステムの抽象化を提供しています。
ATK は他のツールキットやアプリケーションの実装へのアクセシビリティインターフェースのセットを提供しています。ATK インターフェースを利用すると、アクセシビリティツールは実行中のアプリケーションの表示とコントロールに完全にアクセスできます。
AT-SPI ライブラリはアクセシビリティ技術によって利用されるインターフェースを提供しています。
GAIL は GTK+ と GNOME ライブラリのための ATK インターフェースの実装を提供しています。GAIL によって、アクセシビリティツールはこれらのライブラリを使って書かれたアプリケーションと交信できるようになります。
Pango (Παν 語) は、GNOME アプリケーションで使われている、コアのテキストとフォントを処理するライブラリです。Pango は世界中で使われている異なる書記体系を多数サポートしています。
GdkPixbuf は画像の読み込みと操作のためのライブラリです。GdkPixbuf のドキュメントにはプログラマガイドと API リファレンスが含まれています。
GTK+ をウィンドウシステムの詳細から分離させる中間レイヤーです。
GTK+ は GNOME アプリケーションでユーザーインターフェースを構築するのに利用される基礎的なライブラリです。GTK+ はユーザーインターフェースコントロールとユーザーインターフェースを制御するためのシグナルコールバックを提供しています。
libxml2 リファレンスマニュアル
強力で XML を処理する完全な機能を備えるライブラリです。-
-
libxslt リファレンスマニュアル
XSLT C ライブラリは GNOME プロジェクトのために開発されました。XSLT そのものは XML の変換を定義する XML 言語です。Libxslt は libxml2 に基づいています。-
-
libglade は XML 記述から動的にユーザーインターフェースを構築するためのライブラリです。libglade によって、開発者はユーザーインターフェースをグラフィカルなインターフェースビルダーアプリケーションでつくり、インターフェース定義をインポートできます。
libgnome ライブラリは、セッション管理、ファイルと URI のアクティベーションやヘルプの表示などを含む、現代的なアプリケーションをつくるための便利なルーティンを多数提供しています。
libgnomeui ライブラリはアプリケーションの追加のウィジェットを提供しています。libgnomeui のウィジェットの多くは既に GTK+ に移植済みです。
GnomeVFS は GNOME アプリケーションがファイルとフォルダーにアクセスするために利用するコアのライブラリです。GnomeVFS は、アプリケーションからローカルとリモートのファイルに単一の一貫した API によるアクセスを可能にするファイルシステムの抽象化を提供しています。
GConf は設定データを保存・取得するためのデーモンとライブラリを提供しています。
GnomeCanvas ウィジェットは対話的な構造化された画像の柔軟なウィジェットを提供しています。
libart リファレンスマニュアル
ライブラリ関数 - Libart は GNOME の描画機能を扱います。すべての複雑な描画はここで処理されています。-
-
ORBit は高速で軽い CORBA サーバーです。GNOME のコンポーネントアーキテクチャ Bonobo は CORBA の上に構築されています。
Bonobo-activation によって、システム上の利用可能な CORBA サーバーを動いているかどうかにかかわらず参照することができます。Bonobo-activation は実行中のサーバーを追跡していますので、サーバーを要求すると、それが既に実行中であれば、再度起動することはなく実行中のものが再利用されます。
Bonobo は、CORBA 上に構築されている、GNOME アプリケーションで使う再利用可能なコンポーネントをつくるためのフレームワークです。
Bonobo UI ライブラリは Bonobo コンポーネントフレームワークを用いた多数のユーザーインターフェースコントロールを提供しています。
SVG ベクター画像の描画ライブラリです。
GNOME 端末が使う端末エミュレーターウィジェットです。
libsoup は GNOME の HTTP クライアント/サーバーライブラリです。GObject と glib main ループを使っていて、GNOME アプリケーションによく統合されています。
GNOME パネルのパネルアプレットを開発するためのライブラリです。
構造化ファイルライブラリ (GSF) は複合ファイルを読み書きするための入出力 (I/O) の抽象化です。
Cairo は複数の出力デバイスをサポートしている 2次元グラフィック・ライブラリです。すべての出力メディアで整合性のある出力を行いつつも、表示ハードウェアのアクセラレーションが利用可能であれば、それを最大限に活かすようにデザインされています。
Clutter は、高速で、見た目にもリッチなグラフィカル・ユーザー・インターフェースのための、GObject をベースとしたライブラリです。
COGL は低レベルのOpenGL抽象化ライブラリで、Clutter のために(そしてその一部として)開発されました。まず、Clutter まず使われており、OpenGL (1.4 以上)、Open GL ES 1.1 そして OpenGL ES 2.0 で透過的に動作する共通のレンダリングAPIを提供しています。
D-Bus はメッセージ・バス・システムです。アプリケーションが相互に対話するための簡単な手段を提供します。
GStreamer コア・リファレンスマニュアル
マルチメディアアプリケーションを作成するための強力なフレームワークです。音声と動画の両方をサポートしています。
GStreamer ライブラリ・リファレンスマニュアル
GStreamer コア・プラグイン・リファレンスマニュアル
PyGTK リファレンスマニュアル
-
telepathy-glib リファレンスマニュアル-
-
GTK+ 2.0 チュートリアル
GTK+ FAQ
PyGTK リファレンスマニュアル
PyGObject リファレンスマニュアル
libsigc++ ドキュメント
libxml++ ドキュメント
glibmm ドキュメント
gtksourceviewmm ドキュメント
gtkmm ドキュメント
pangomm ドキュメント
atkmm ドキュメント
gconfmm ドキュメント
libvtemm ドキュメント
librsvgmm ドキュメント
libgdamm ドキュメント
libgda-uimm ドキュメント
gstreamermm ドキュメント
goocanvasmm ドキュメント
gtkglextmm ドキュメント
cluttermm ドキュメント
clutter-gtkmm ドキュメント
clutter-box2dmm ドキュメント
libsigc++ ドキュメント
libart リファレンスマニュアル
libart リファレンスマニュアル
libart リファレンスマニュアル
libart リファレンスマニュアル
libxml2 リファレンスマニュアル
API ドキュメント
libxml++ チュートリアル
java-gnome API ドキュメント
GTK+、GNOME および関連するライブラリへの Java のインターフェース
Vala API リファレンス
GTK+、GNOME および関連するライブラリへの Vala API のリファレンス
GTK+ プログラミング・チュートリアル
-
デスクトップエントリの仕様
デスクトップエントリは名前、アイコン、説明といったアプリケーションの情報を提供します。これらのファイルはアプリケーションランチャーに利用され、アプリケーションを起動できるメニューを作成するのに使われます。-
-
メニュー仕様
この freedesktop.org の仕様はどのようにしてデスクトップエントリからメニューが構築されるかについて述べています。-
-
XDG ベースディレクトリ仕様
様々な仕様はファイルとファイルの形式を規定しています。この freedesktop.org の仕様はファイルがあるべき場所から相対した一つまたはより多くのベースディレクトリを定義することで、ファイルを探すべき場所を定義しています。-
-
アイコンテーマ仕様
この freedesktop.org の仕様はアイコンテーマを保存するための一般的な方法について述べています。-
-
アイコンの命名方法の仕様
この freedesktop.org の仕様はアイコンに名前をつけ、アイコンテーマの中でのコンテキストを定めるための一般的な方法について述べています。-
-
デスクトップアプリケーション自動起動の仕様
この freedesktop.org の仕様は、ユーザーがログインした後で自動的にアプリケーションを起動する方法や、メディアがマウントされた後で特定のアプリケーションを実行するようにリクエストしたり、メディア上の特定のファイルを開く方法について述べています。-
-
デスクトップ通知の仕様
-
-
拡張ウィンドウマネージャーヒント
この freedesktop.org の仕様は X デスクトップの ICCCM の拡張を標準化します。-
-
-
-
リリース・ノート
GNOME バグ・トラッカー
リリース計画
開発者用スクリプト
開発者が単純(だけど何度も繰り返し実行する)作業を行うのに役立つ便利なスクリプトのコレクション。
GNOME Git リポジトリ
10分チュートリアル
GNOME 開発ツールのダウンロード
GNOME の開発の準備
プラットフォームの概要
GNOME デスクバー アプレットの新しいモジュールインターフェースの紹介です。
デスクトップ管理者向けの GNOME ロックダウンと事前設定のガイド
ロックダウンはコンピューティング環境を利用しているユーザーが、例えばファイルの印刷やディスクへのファイルの保存といったような特定の操作を実行するのを禁止するために使われる仕組みです。GNOME デスクトップは特にパネルや Epiphany ウェブブラウザーなどのいくつかの領域でロックダウンをサポートしています。このドキュメントはデスクトップの設定を事前に行う方法のガイドとなるばかりでなく、GNOME でみつかるすべてのロックダウン機能をカバーすることを目的としています。
デスクバーアプレットの新しいスタイルのモジュールの書き方
-
-
GNOME デスクトップライブラリ
GNOME 開発プラットフォームライブラリ
Telepathy スタック
ガイドライン
他のプログラミング言語へのバインディング
ヒューマンインタフェースガイドライン (HIG)
異なるデータベースに簡単にアクセスするためのライブラリ
Nautilus 内部構造
Nautilus は GNOME デスクトップの公式のファイルマネージャ、デスクトップシェルです。この論文は Nautilus と Nautilus が頼っている GNOME プラットフォームのいくつかの部分の設計と実装の概要について述べています。また Nautilus をハックしたい、または単により詳しく知りたいと願う開発者に具体的にソースコードの面白い箇所を指し示すものとなっています。この論文を読むには、ユーザー側から見てNautilus がどのように動作するかという基本的な理解と、GNOME プログラミングの基本的な知識が必要となります。
このドキュメントは総じて正確かつきちんと動作し、GNOME ユーザーインターフェースに適合するようなアプリケーションをつくるための方法を教えてくれます。
このドキュメントは GNOME アプリケーションをアクセス可能にする方法を教えてくれます。
gnome-db マニュアル
-
-
-
-