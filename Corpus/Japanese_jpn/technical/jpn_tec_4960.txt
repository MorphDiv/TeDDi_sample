# language_name_wals:	Japanese
# language_name_glotto:	Japanese
# iso639_3:	jpn
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Jpan
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ja.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

注意 PHPは、 PCRE関数 によりPerl互換の構 文を使用する正規表現式もサポートします。これらの関数は、貪欲でな いマッチ、言明、条件付きサブパターン、そしてPOSIX拡張正規表現構文 でサポートされていない他の複数の機能をサポートします。
これらの正規表現関数はバイナリセーフではありません。 PCRE関数 はバイナリセーフです。
PHPにおいて正規表現は複雑な文字列操作に使用されます。 次の正規表現関数がサポートされます。
ereg()
ereg_replace()
eregi()
eregi_replace()
split()
spliti()
これらの関数は、標準モジュールの一部と して利用可能であり、常に使用できます。
PHPで正規表現のサポートを有効にするには、 --with-regex=TYPE を指定して PHPのconfigureを行って下さい。TYPEは、system, apache, phpのどれかと します。デフォルトではphpを使用します。
注意 動作に関する知識がある場合以外は、TYPEを変更しないで下さい。
Windows版の PHP にはこの拡張モジュールのサポートが組み込まれています。これらの関数を使用するために拡張モジュールを追加でロードする必要はありません。
この拡張モジュールは設定ディレクティブを全く 定義しません。
この拡張モジュールはリソース型を全く定義し ません。
この拡張モジュールは定数を全く定義しませ ん。

例 1正規表現の例
Perl互換の構文を有する正規表現については、 PCRE関数 を参照して下さい。 簡単なシェル形式のワイルドカードパターンマッチングが fnmatch() で提供されています。