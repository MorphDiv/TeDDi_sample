# language_name_wals:	Russian
# language_name_glotto:	Russian
# ISO_6393:	rus
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Cyrl
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/ru.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Мониторинг ввода/ вывода% 1 (% 2)
У программы «% 1 » (номер процесса% 2) мониторится ввод и вывод через файловые дескрипторы (стандартные потоки ввода, вывода и ошибок, открытые файлы, сетевые соединения и так далее). Записанные данные показываются красным, а прочитанные данные — синим.
Подключиться
& Пауза
Продолжить
& Отключиться
Не удалось подключиться к процессу% 1
Перейти к родительскому процессу
Перейти к отлаживающему процессу
Показать окно приложения
Следить за операциями ввода/ вывода
Возобновить выполнение остановленных процессов
Приостановить (STOP)
Возобновить (CONT)
Перечитать конфигурацию (HUP)
Прервать (INT)
Завершить (TERM)
Уничтожить (KILL)
Пользовательский 1 (USR1)
Пользовательский 2 (USR2)
Простой поиск
Отправить сигнал
Перейти к родительскому процессу (% 1)
Скрыть столбец «% 1 »
Показать столбец «% 1 »
Показывать значения
В килобайтах в секунду
В килобайтах
В мегабайтах в секунду
В мегабайтах
В гигабайтах в секунду
В гигабайтах
Недостаточно прав для уничтожения процесса, выполнить это с правами суперпользователя также не удалось.
Выберите процесс.
Недостаточно прав для смены планировщика процессов. Операция не выполнена.
Недостаточно прав для изменения приоритета процесса. Операция не выполнена.
Недостаточно прав для смены планировщика и/ или приоритета. Операция не выполнена.
Недостаточно прав для уничтожения процесса, выполнить это с правами суперпользователя также не удалось.
Недостаточно прав для уничтожения процесса, выполнить это с правами суперпользователя также не удалось.
Недостаточно прав для уничтожения процесса, выполнить это с правами суперпользователя также не удалось.
Уничтожить
Вывод содержит команды VT100 для консольных программ.
При включении этого параметра коды ANSI не интерпретируются и не показываются. Удобно при отладке консольных приложений.
Интерпретировать коды ANSI
Показывать вывод из дочерних процессов текущего процесса.
Показывать вывод из дочерних процессов текущего процесса.
Мониторить дочерние процессы
Приостановить процесс и его вывод
Остановить чтение вывода процесса. Сам процесс будет заблокирован (обычно приостановлен). Вы можете возобновить выполнение процесса.
Остановить мониторинг процесса
Остановить мониторинг процесса и возобновить его работу.
p, li {white- space: pre- wrap;} Планировщик бездействия Программа, выполняющаяся с самым низким приоритетом ввода- вывода — приоритетом бездействия, получит доступ к диску только в случае, если ни одна программа не обращается к диску в течение определённого периода. На процессы, использующие этот планировщик, не действуют изменение приоритетов.
& Завершить процесс
Простой поиск
Все процессы
Все процессы в виде дерева
Системные процессы
Пользовательские процессы
Ваши процессы
Только программы
Изменить приоритет:
Планировщик процессов
p, li {white- space: pre- wrap;} Обычный планировщик для процессов без особых требований
p, li {white- space: pre- wrap;} Обычный планировщик процессов в Linux по умолчанию Обычный планировщик, распределяющий процессорное время в Linux, предназначенный для процессов, не требующих специальных механизмов реального времени с гарантированным приоритетом. Процесс, который будет запущен, выбирается из списка других процессов с обычным или Batch планированием, основанного на динамическом приоритете, определённом только внутри этого списка. Динамический приоритет основан на первоначальном уровне приоритета и увеличивается каждый раз, когда процесс может выполняться, но получает отказ от планировщика процессов. Это гарантирует равномерное распределение среди всех обычных процессов.
Обычный
p, li {white- space: pre- wrap;} Для неинтерактивных процессов, выполняющих большой объем вычислений. Процесс несколько дискриминируется при выделении процессорного времени.
p, li {white- space: pre- wrap;} Планирование Batch (C Linux 2. 6. 16.) Эта политика похожа на обычную, за исключением того, что заставляет планировщик всегда считать процесс требующим большого объёма вычислений. Поэтому планировщик будет выдавать ему процессорное время немного реже. Это полезно для неинтерактивных процессов, тем не менее не желающих снижать свой приоритет, а также процессов, которым хотелось бы определённой стратегии планирования без интерактивности, вызывающей лишние переключения контекста (между частями пакетного задания).
Batch
p, li {white- space: pre- wrap;} Процесс начинает выполняться, как только появляется возможность для этого. Приоритет выше, чем при обычном или Batch планировании. Планировщик автоматически прерывает такой процесс через определённый интервал времени.
p, li {white- space: pre- wrap;} Планирование Round Robin. Round Robin — это простое улучшение механизма FIFO. Все, что описано ниже для FIFO, также применимо к Round Robin, за исключением того, что каждый такой процесс может выполняться не дольше максимального кванта времени.
Round Robin
p, li {white- space: pre- wrap;} Процесс запускается сразу при наступлении возможности. Приоритет выше, чем при обычном или Batch планировании. Планировщик не прерывает процесс.
p, li {white- space: pre- wrap;} Планирование FIFO (First In- First Out) Когда процесс FIFO может продолжить выполнение, он немедленно прерывает любой текущий процесс с обычным или Batch планированием.
FIFO
Планировщик ввода- вывода
p, li {white- space: pre- wrap;} Приоритет основан на приоритете планировщика процессов
p, li {white- space: pre- wrap;} Обычный планировщик Аналогичен планировщику Best Effort, за исключением того, что приоритет вычисляется автоматически на основе приоритета процесса. Процессы с более высоким приоритетом получают приоритет на доступ к жёсткому диску. Программы, выполняемые с одинаковым приоритетом Best Effort/ обычным обслуживаются в порядке очереди.
p, li {white- space: pre- wrap;} Процесс может использовать жёсткий диск только в том случае, если ни один из процессов не обращался к нему в течение некоторого промежутка времени.
p, li {white- space: pre- wrap;} Планировщик бездействия Программа, выполняющаяся с самым низким приоритетом ввода- вывода — приоритетом бездействия, получит доступ к диску только в случае, если ни одна программа не обращается к диску в течение определённого периода. На процессы, использующие этот планировщик, не действуют изменение приоритетов.
Бездействие
p, li {white- space: pre- wrap;} Процесс получает более высокий приоритет на доступ к диску, чем при обычном планировщике.
p, li {white- space: pre- wrap;} Планировщик Best Effort Процесс с более высоким приоритетом получит приоритет при обращении к жёсткому диску. Программы, выполняемые с одинаковым приоритетом Best Effort/ обычным обслуживаются в порядке очереди.
Best Effort
p, li {white- space: pre- wrap;} Процесс получает доступ к диску немедленно, независимо от того, что ещё происходит в системе.
p, li {white- space: pre- wrap;} Планировщик реального времени Планировщик реального времени даёт право на внеочередной доступ к диску, независимо от того, что происходит в системе. По этой причине приоритет реального времени должен использоваться с осторожностью, поскольку может заблокировать выполнение других процессов. Как и в планировщике Best Effort, определены 8 уровней приоритета, обозначающих насколько большую долю времени данный процесс процесс получит в каждом интервале планирования.
Реального времени
Низкий
Высокий
— процесс выполняет работу.
— процесс ждёт какого- то события.
— процесс остановлен. Он временно не реагирует на пользовательский ввод.
— процесс завершил свою работу и уничтожен, но родительский процесс ещё не удалил его данные.
Имя процесса.
Пользователь- владелец процесса.
Терминал, с которым связан данный процесс.
Приоритет, с которым работает данный процесс. Может быть от 19 (низший приоритет) до - 19 (высший приоритет).
Текущее потребление процессорного времени процессом.
Текущее общее потребление процессорного времени процессом.
Это объем виртуальной памяти, используемой процессом, включая разделённые библиотеки, видеопамять, файлы на диске и прочее.
Это объем физической памяти, которую этот процесс использует для своих нужд. Сюда не входят участки памяти, находящиеся в файле подкачки, а также размер кода разделяемых библиотек. Часто это наиболее полезный параметр для того, чтобы судить об использовании памяти программой.
Это объём физической памяти, которую используют разделяемые библиотеки данного процесса. Эта память используется совместно с другими процессами.
Команда, при помощи которой был запущен данный процесс.
Заголовок окон.
Уникальный номер, идентифицирующий данный процесс.
Имя пользователя:% 1
Невозможно определить пользователя.
% 1
Имя владельца:% 1 (uid:% 2)
Номер комнаты:% 1
Рабочий телефон:% 1
Эффективный пользователь:% 1
Пользователь setuid:% 1
Пользователь файловой системы:% 1
Группа:% 1
Эффективная группа:% 1
Группа setuid:% 1
Группа файловой системы:% 1Short description of a process. PID, name, user
% 1:% 2, принадлежит% 3
% 1 (gid:% 2)
% 1 (uid:% 2)
tooltip. name, pid
Процесс% 1 (% 2) отлаживает данный процесс.
Init — предок всех процессов и не может быть уничтожен.
KThreadd управляет потоками ядра. Его дочерние процессы работают в режиме ядра, контролируя доступ у жёсткому диску и прочие операции. name column tooltip. first item is the name
% 1 ID процесса:% 2 name column tooltip. first item is the name
% 1 ID процесса:% 2 Родительский процесс:% 3 ID родительского процесса:% 4 name column tooltip. first item is the name
% 1 ID процесса:% 2 ID родительского процесса:% 3
Команда запуска:% 1
Запущен на:% 1
Этот процесс был запущен следующей командой:% 1
Запущен на:% 1
Приоритет:% 1 (% 2)
Приоритет планировщика:% 1
Планировщик:% 1
Приоритет ввода- вывода:% 1 (% 2)
Класс ввода- вывода:% 1
Состояние процесса:% 1% 2В режиме пользователя:% 3% В режиме системы:% 4%
Количество потомков:% 1 Всего в режиме пользователя:% 2% Всего в режиме системы:% 3% Всего процессорного времени:% 4%
Общее время работы в режиме пользователя:% 1 с
Общее время работы в режиме ядра:% 1 с
Приоритет:% 1 (% 2)
Использование памяти:% 1 из% 2 (% 3%)
Использование памяти:% 1
Использование резидентной памяти:% 1 из% 2 (% 3%)
Использование резидентной памяти:% 1
Ваша система не может предоставить эту информацию.
Использование памяти разделяемыми библиотеками:% 1 из% 2 (% 3%)
Использование памяти разделяемыми библиотеками:% 1
process heading
Имя процессаprocess heading
Пользовательprocess heading
PIDprocess heading
TTYprocess heading
Приоритетprocess heading
CPU% process heading
process heading
process heading
Вирт. памятьprocess heading
Памятьprocess heading
Разд. памятьprocess heading
Команда запускаprocess heading
Заголовок окна
% 1 кб
% 1 Мб
% 1 Гб
% 1%
Изменить приоритет
№
Невозможно найти исполняемую программу « kdesu »
Невозможно найти исполняемую программу « setscheduler ». Она устанавливается системным монитором.
Недостаточно прав для изменения приоритета процесса, выполнить это с правами суперпользователя также не удалось.
Недостаточно прав для изменения приоритета ввода- вывода, выполнить это с правами суперпользователя также не удалось.