# language_name_wals:	Russian
# language_name_glotto:	Russian
# iso639_3:	rus
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Cyrl
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ru.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Руководство по PHP
Пред.
Глава 7. Типы
След.
Целые
Целое это число из множества Z = {..., -2, -1, 0, 1, 2,...}.
Смотрите также: Целые произвольной длины и Ð§Ð¸ÑÐ»Ð° Ñ Ð¿Ð»Ð°Ð²Ð°ÑŽÑ‰ÐµÐ¹ Ñ‚Ð¾Ñ‡ÐºÐ¾Ð¹
Синтаксис
Целые могут быть указаны в десятичной, шестнадцатеричной или восьмеричной системе счисления, по желанию с предшествующим знаком (- или +).
Если вы используете восьмеричную систему счисления, вы должны предварить число 0 (нулем), для использования шестнадцатеричной системы нужно поставить перед числом 0x.
Пример 7-1. Целые
$a = 1234; # десятичное число $a = -123; # отрицательное число $a = 0123; # восьмеричное число (эквивалентно 83 в десятичной системе) $a = 0x1A; # шестнадцатеричное число (эквивалентно 26 в десятичной системе)
десятичные: [1-9][0-9]* | 0 шестнадцатеричные:
0[ xX][0-9a-fA-F] + восьмеричные:
0[ 0-7] + целые: [+ -]?десятичные | [+ -]?шестнадцатеричные | [+ - ]?восьмеричные
Превышение размера целого
Если вы определите число, превышающее пределы целого типа, оно будет интерпретировано как число с плавающей точкой. Также, если вы используете оператор, результатом работы которого будет число, превышающее пределы целого, вместо него будет возвращено число с плавающей точкой.
$large_number = 2147483647; var_dump($large_number); / / вывод: int(2147483647) $large_number = 2147483648; var_dump($large_number); / / вывод: float(2147483648) / / это справедливо и для шестнадцатеричных целых: var_dump (0x80000000); / / вывод: float(2147483648) $million = 1000000; $large_number = 50000 * $million; var_dump($large_number); / / вывод: float(50000000000)
Внимание
К сожалению, в PHP была ошибка, так что это не всегда верно работает, когда используются отрицательные числа. Например: когда вы умножаете -50000 * $million, результатом будет -429496728. Однако, если оба операнда положительны, проблем не возникает.
Эта ошибка устранена в PHP 4.1.0.
в PHP не существует оператора деления целых. Результатом 1 / 2 будет число с плавающей точкой 0.5. Вы можете привести значение к целому, что всегда округляет его в меньшую сторону, либо использовать функцию round().
var_dump( 25 / 7); / / float(3.5714285714286) var_dump((int) (25 / 7)); / / int(3) var_dump(round(25 / 7)); / / float(4)
Конвертация в целое
Для несомненной конвертации значения в целое используйте привидение типа (int) или (integer). Однако в большинстве случаев вам нет необходимости использовать привидение типа, поскольку значение будет автоматически конвертировано, если оператор, функция или управляющая конструкция требует целый аргумент. Вы также можете конвертировать значение в целое при помощи функции intval().
Смотрите также Манипуляции с типами.
Из булева типа
FALSE конвертируется в 0 (ноль), а TRUE - в 1 (единицу).
Из чисел с плавающей точкой
При конвертации из числа с плавющей точкой в целое, число будет округлено в сторону нуля.
Если число с плавающей точкой превышает пределы целого (как правило, это + / - 2.15e+9 = 2^31), результат будет неопределённым, так как целое не имеет достаточной точности, чтобы вернуть верный результат. В этом случае не будет выведено ни предупреждения, ни даже замечания!
Внимание
Никогда не приводите неизвестную дробь к целому, так как это может иногда дать неожиданные результаты.
echo (int) ((0.1+0.7) * 10); / / выводит 7!
Из строк
Смотрите Конвертация строк в числа
Из других типов
Предостережение
Для других типов поведение конвертации в целое не определено. В настоящее время поведение такое же, как если бы значение сперва было конвертировано в булев тип. Однако не полагайтесь на это поведение, так как он может измениться без предупреждения.
Пред.
Начало
След.
Булев
Уровень выше
Числа с плавющей точкой