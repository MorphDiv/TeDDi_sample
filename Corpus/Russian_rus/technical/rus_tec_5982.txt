# language_name_wals:	Russian
# language_name_glotto:	Russian
# ISO_6393:	rus
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Cyrl
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/ru.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Waldo Bastian bastian@ kde. org
& Philip. Rodrigues; & Philip. Rodrigues. mail;
& kde; для системных администраторов
Внутреннее устройство & kde;
Обзор
в процессе написания
Схема каталогов
Схема каталогов & kde; используется как собственно оболочкой & kde;, так и всеми приложениями & kde;. Дерево каталогов & kde; имеет фиксированную структуру.
По умолчанию, & kde; использует два дерева каталогов:
Один на общесистемном уровне (например / opt/ kde3).
И один на уровне пользователя (обычно это ~ /. kde)
Как системный администратор, вы можете создать дополнительные деревья каталогов, которые, например, могут использоваться для разных профилей
Например, в & SuSE; & Linux; используется
$HOME /. kde
/ opt/ kde3 (специфика & SuSE; - в других дистрибутивах это может быть / usr или / usr/ kde3).
/ etc/ opt/ kde3 (добавлено работниками & SuSE;).
Если у вас установлена утилита администрирования KIOSK версии 0. 7 или более поздней, вы можете узнать, какие деревья каталогов использует KDE, выполнив команду kiosktool- kdedirs -- check
При поиске файлов, сам & kde; и все его приложения просматривают все деревья каталогов & kde; (с учётом приоритета). Если файл находится более чем в одном дереве, берётся последний найденный файл. Обычно последним просматривается дерево из домашнего каталога пользователя, т. к. оно имеет наибольший приоритет. Именно в это дерево пользователь имеет право вносить изменения.
Например, информация о & MIME; - типе text/ plain будет искаться в следующих файлах:
$HOME /. kde/ share/ mimelnk/ text/ plain. desktop
/ opt/ kde3/ share/ mimelnk/ text/ plain. desktop
/ etc/ opt/ kde3/ share/ mimelnk/ text/ plain. desktop
Изменения, внесённые пользователем, будут сохранены в файле $HOME /. kde/ share/ mimelnk/ text/ plain. desktop
Файлы конфигурации обрабатываются по- другому. Параметры считываются из файлов всех уровней. Если один и тот же параметр встречается в нескольких файлах, то его значение определяется файлом с наивысшим приоритетом.
Например, если есть два файла со следующим содержимым:
$HOME /. kde/ share/ config/ foobar
Color=red Shape=circle
/ etc/ opt/ kde3/ share/ config/ foobar
Color=blue Position=10, 10
В результате слияния, получится:
Color=red Shape=circle Position=10, 10
Задание каталогов
Переменные окружения
Пример( ы) настроек
Комментарий
$KDEHOME
~ /. kde
$KDEROOTHOME
/ root /. kde
Переменные различаются, чтобы суперпользователь не мог случайно перезаписать данные из пользовательского каталога $KDEHOME после выполнения команды su.
$KDEDIR
/ opt/ kde3, / usr, / usr/ kde3
Зависит от дистрибутива. Используется в & kde; 2. Если не установлено, используются значения по умолчанию.
$KDEDIRS
Добавлено в & kde; 3. Может задавать несколько каталогов (разделяются двоеточиями). Если не установлено, используется значение $KDEDIR
Задавать их необязательно, значения по умолчанию подходят в большинстве случаев.
Как запустить & kde; 2 после & kde; 3? Задайте $KDEDIR для & kde; 2 и $KDEDIRS для & kde; 3.
Например, для сотрудника университета могут быть заданы следующие параметры:
KDEHOME=' ~ /. kde3 'KDEROOTHOME=' / root /. kde3 'KDEDIRS=' / opt/ kde_ staff: / opt/ kde3 '
Профили пользователей
В предыдущем примере в каталоге / opt/ kde_ staff содержались дополнительные параметры и приложения для сотрудников. Профили пользователей служат для того, чтобы эти каталоги добавлялись только для некоторых явно заданных пользователей. Добавьте в файл / etc/ kderc строки:
[Directories- staff] prefixes=/ opt/ kde_ staff
Будет создан профиль staff, для которого добавляется дерево каталогов / opt/ kde_ staff. Учтите, что в & SuSE; & Linux; используется / etc/ kde3rc, а не / etc/ kderc. Теперь профиль с этим именем можно назначать пользователям.
Для этого нужно связать пользователей и профили в файле связи, задаваемом в / etc/ kderc:
[Directories] userProfileMapFile=/ etc/ kde- user- profile
Теперь администратор может связывать профиль с конкретными пользователями и с целыми группами & UNIX;.
Чтобы связать профиль "staff" со всеми пользователями, входящими в группу пользователей & UNIX; "staff_ members", добавьте в файл / etc/ kde- user- profile следующие строки:
[General] groups=staff_ members [Groups] staff_ members=staff
Вы также можете связывать профиль с одним пользователем:
[Users] bastian=staff
Ещё о схеме каталогов
Все деревья каталогов, которые использует & kde;, имеют фиксированную структуру. Однако вы можете не беспокоиться о каталогах, которые не относятся ни к одному дереву, или просто не используются. Например, каталоги, в которых хранятся временные файлы, обычно находятся в $KDEHOME.
Каталоги, зависящие от архитектуры
Каталоги, зависящие от архитектуры (типа ОС и процессора):
bin
Здесь хранятся исполняемые файлы & kde;.
lib
Библиотеки & kde;.
lib/ kde3
В этом каталоге хранятся компоненты, подключаемые модули, и другие объекты, используемые приложениями & kde; 3. x во время работы.
Общие каталоги
Общие каталоги не зависят от архитектуры.
share/ applnk
Файлы. desktop меню & kde; (в старых версиях)
share/ applications
Файлы. desktop меню & kde; (версия & kde; 3. 2 и более поздние)
share/ apps
Файлы приложений. Каждый подкаталог принадлежит какому- либо приложению, которое хранит в нём дополнительные файлы.
share/ config
Файлы настроек. Имя файла обычно состоит из имени приложения и букв rc. Настройки из файла kdeglobals относятся ко всем приложениям.
share/ config/ session
Этот каталог обычно есть только в дереве $KDEHOME. Он используется для управления сеансом. В конце сеанса приложения & kde; сохраняют здесь данные о своём состоянии. Имя файла включает имя приложения и число. Программа управления сеансом, kcmserver, при сохранении сеанса записывает эти номера в файл ksmserverrc.
share/ doc/ HTML
Каталог содержит документацию приложений & kde;. Документы отсортированы по языкам и приложениям. Конечный по иерархии каталог обычно включает как минимум два файла: index. docbook -- xml- файл DocBook, и index. cache. bz2, который содержит тот же текст, но в формате & HTML;, сжатый bzip2. Файл & HTML; используется программой & khelpcenter;. Если & khelpcenter; не находит файл & HTML;, он генерируется из DocBook автоматически, но этот процесс требует времени.
share/ icons
В этом каталоге содержатся пиктограммы, отсортированные по теме, размеру и категории использования.
share/ mimelnk
В этом каталоге хранятся файлы. desktop, которые описывают типы & MIME;. & kde; использует типы & MIME;, чтобы определять тип файлов.
share/ services
Каталог содержит файлы. desktop, которые описывают службы (сервисы). Службы похожи на приложения, однако они обычно запускаются другими приложениями, а не пользователем. В меню & kde; службы отсутствуют.
share/ servicetypes
Каталог содержит файлы. desktop, которые описывают типы служб. Тип службы обычно представляет какой- либо интерфейс программирования. Приложения и службы включают в свои файлы. desktop информацию о предоставляемых ими службах.
share/ sounds
Содержит звуковые файлы.
share/ templates
Содержит шаблоны файлов различных типов. Шаблон состоит из файла. desktop, который описывает файл и включает ссылку на файл в подкаталоге. source. Эти шаблоны доступны через подменю Создать новый меню рабочего стола и обозревателя файлов. Когда пользователь выбирает какой- либо пункт меню, соответствующий шаблон копируется в текущий каталог.
share/ wallpapers
Содержит изображения, которые можно использовать в качестве фона рабочего стола
Каталоги, зависящие от узла
Существует три каталога, имена которых зависят от имени узла. Обычно в других деревьях содержатся символические ссылки на них. Если эти каталоги не существуют, их можно создать с помощью утилиты lnusertemp:
$KDEHOME / socket- $HOSTNAME
Обычно / tmp/ ksocket- $USER /, каталог сокетов & UNIX;
$KDEHOME / tmp- $HOSTNAME
Обычно / tmp/ kde- $USER /, используется для хранения временных файлов.
$KDEHOME / cache- $HOSTNAME
Обычно / var/ tmp/ kdecache- $USER /, используется для кэширования файлов.
Так как право записи в / tmp и / var/ tmp имеют все пользователи, возможно, что какой- либо из вышеуказанных каталогов уже существует и принадлежит другому пользователю. В этом случае используйте команду lnusertemp. Она создаст новый каталог с альтернативным именем, который будет использоваться KDE.
Файлы конфигурации
Формат файлов конфигурации & kde; - обычный текст. Файлы содержат пары ключ- значение, которые отсортированы по группам. Кодировка файлов конфигурации & kde; -- UTF - 8 (позволяет задавать символы, не входящие в ASCII).
В начале группы опций находится имя группы, заключённое в квадратные скобки. Концом группы является начало другой группы или конец файла. Записи в начале файла, не отнесённые ни к какой группе, являются настройками по умолчанию.
Следующий пример является файлом конфигурации, который состоит из двух групп. Первая группа содержит ключи LargeCursor и SingleClick, вторая -- Show hidden files и Sort by:
[KDE] LargeCursor=false SingleClick=true
[KFileDialog Settings] Show hidden files=false Sort by=Name
Каждая запись состоит из ключа и значения, разделённых знаком равенства. Имя ключа может содержать пробелы, последующие опции могут быть заключены в квадратные скобки. Часть после знака равенства -- значение опции. Пробелы, обрамляющие знак равенства, и пробелы, следующие за значением, игнорируются. Короче говоря, формат таков:
параметр = значение
Если значение опции должно начинаться со знака пробела или заканчиваться им, вы можете использовать сочетание символов\\ s.
Вот полный список сочетаний символов:
\\ s вместо символа пробела
\\ t вместо символа табуляции
\\ r вместо символа перевода каретки
\ вместо символа новой строки
\\\\ вместо символа обратной косой черты
В следующем примере значение опции Caption начинается с двух пробелов, а значение Description состоит из трёх строк. (Символы новой строки разделяют строки.)
[Preview Image] Caption=\\ s My Caption Description=This is\ a very long\ description.
Пустые строки и строки, начинающиеся со знака диеза (#), игнорируются. Знак диеза используется для добавления комментариев. Обратите внимание, что при обновлении конфигурационного файла приложением & kde; комментарии не сохраняются.
В подкаталогах share/ config различных деревьев каталогов & kde; могут находиться конфигурационные файлы с одинаковыми именами. В этом случае будут использоваться опции из всех файлов. Если один и тот же ключ определён в разных файлах, будет использовано значение из файла, находящегося в каталоге с наивысшим приоритетом. Файлы каталога $KDEHOME всегда имеют наивысший приоритет. Если один и тот же ключ определён несколько раз в одном файле, используется значение, указанное последним.
Если файл $HOME /. kde/ share/ config/ foobar содержит: [MyGroup] Color=red Shape=circle и файл / etc/ opt/ kde3/ share/ config/ foobar содержит [MyGroup] Color=blue Position=10, 10, то результат будет следующим:
[MyGroup] Color=red Shape=circle Position=10, 10
Если файл $HOME /. kde/ share/ config/ foobar содержит [MyGroup] Color=red Shape=circle [MyGroup] Color=green, файл / opt/ kde_ staff/ share/ config/ foobar содержит [MyGroup] Color=purple Position=20, 20 и файл / etc/ opt/ kde3/ share/ config/ foobar содержит [MyGroup] Color=blue Position=10, 10, то результат будет следующим:
[MyGroup] Color=green Shape=circle Position=20, 20
Чтобы пользователи не могли изменять настройки, заданные по умолчанию, их можно пометить как неизменяемые. Вы можете запретить изменение одной настройки, группы или всех настроек файла. Чтобы запретить изменение одного ключа, добавьте после его имени символы [$i]. Пример:
Color[ $i] =blue
Чтобы запретить изменение группы настроек, добавьте символы [$i] после её имени. Пример:
[MyGroup] [$i]
Чтобы запретить изменение всех настроек, входящих в файл, укажите символы [$i] на отдельной строке. Пример:
[$i]
Если файл $HOME /. kde/ share/ config/ foobar содержит: [MyGroup] Color=red Shape=circle, а файл / etc/ opt/ kde3/ share/ config/ foobar содержит: [MyGroup] [$i] Color=blue Position=10, 10, то результат будет следующим:
[MyGroup] Color=blue Position=10, 10
Если файл $HOME /. kde/ share/ config/ foobar содержит: [MyGroup] Color=red Shape=circle, файл / opt/ kde_ staff/ share/ config/ foobar содержит [MyGroup] Color=purple Shape=rectangle и файл / etc/ opt/ kde3/ share/ config/ foobar содержит [MyGroup] [$i] Color=blue Position=10, 10, то результат будет следующим:
[MyGroup] Color=purple Shape=rectangle Position=10, 10
С помощью так называемых расширений оболочки вы можете более гибко задавать настройки по умолчанию. При этом значение ключа может содержать значение переменной окружения и/ или вывод команды оболочки. Чтобы включить расширения оболочки для одной записи, добавьте символы [$e] в конец имени ключа. Обычно после первого применения расширенная форма записывается в пользовательский файл конфигурации. Чтобы предотвратить это, рекомендуется использовать символы [$ie], в этом случае пользователь не сможет изменить настройку.
В следующем примере значение записи Host определяется выводом программы hostname. Эта настройка заблокирована.
Значение записи Email определяется значениями переменных $USER и $HOST. Когда пользователь joe находится в системе joes_ host, запись принимает значение joe@ joes_ host. Эта настройка не заблокирована.
[Mail Settings] Host[ $ie] =$( hostname) Email[ $e] =${ USER} @ ${HOST}
Большей части настроек можно ставить в соответствие код языка. В этом случае предпочтение будет отдаваться настройке, связанной с языком, который выбран пользователем. Если выбран язык по умолчанию (американский английский, American English), или нет записи, соответствующей выбранному языку, то используется запись без индекса языка.
В следующем примере значение записи Caption зависит от используемого языка. Если пользователь выбрал русский язык (код ru), то запись примет значение Мой заголовок. Во всех остальных случаях будет использоваться значение My Caption.
[Preview Image] Caption=My Caption Caption[ ru] =Мой заголовок
В этом примере значение записи Caption зависит от используемого языка. Если пользователь выбрал русский язык (код ru), то запись примет значение Мой заголовок. Во всех остальных случаях будет использоваться значение My Caption.
Записи конфигурационных файлов полностью нигде не описаны. Ситуация начала меняться в & kde; 3. 2. Файлы $KDEDIR / share/ config. kcfg дают формальное описание настроек файлов конфигурации. Программа & kde; Configuration Editor использует их при возможности.
Ниже приведён пример файла конфигурации & XML;:
& lt;? xml version=" 1. 0 "encoding=" UTF- 8"? gt; & lt;! DOCTYPE kcfg SYSTEM "http: // www. kde. org/ standards/ kcfg/ 1. 0/ kcfg. dtd" gt; & lt; kcfggt; & lt; kcfgfile name=" korganizerrc" / gt; & lt; group name=" General" gt; & lt; entry type=" Bool "key=" Auto Save" gt; & lt; labelgt; Enable automatic saving of calendarlt; / labelgt; & lt; defaultgt; truelt; / defaultgt; & lt; / entrygt; & lt; entry type=" Int" key=" Auto Save Interval" gt; & lt; defaultgt; 10lt; / defaultgt; & lt; / entrygt; & lt; / groupgt; & lt; / kcfggt;
То же, что и
[General] Auto Save=false Auto Save Interval=25
Последовательность запуска & kde;
& kdm;
Всегда запускается от имени суперпользователя (root)! Использует файлы $KDEDIR / share/ config/ kdmrc и / etc/ X11/ xdm/ Xservers. Последний содержит записи типа
: 0 local / usr/ X11R6/ bin/ X: 0 vt07
Другие связанные файлы:
раздел [X - * - Core] в kdmrc
Конфигурация - / etc/ X11/ xdm/ Xsetup
Пользователь вводит логин и пароль.
Загрузка - / etc/ X11/ xdm/ Xstartup - подготовка от root
Сеанс - / etc/ X11/ xdm/ Xsession - загрузка от пользователя
= для сеанса KDE: kde или startkde
= если имеется ~ /. xsession или ~ /. xinitrc
Сброс - / etc/ X11/ xdm/ Xreset - после завершения сеанса
Сценария запуска & kde;: startkde
Запуск & kde; начинается с выполнения сценария startkde. Обычно его вызывает менеджер дисплея (kdm;) после авторизации пользователя. В этом сценарии есть две очень важные строки:
LD_ BIND_ NOW=true kdeinit4 +kcminit_ startup and kwrapper4 ksmserver $KDEWM
Первая строка запускает управляющий процесс kdeinit. kdeinit4 запускает все остальные процессы & kde;. В выводе команды ps aux он отображается как kdeinit4: Running.... Аргументы kdeinit4 соответствуют именам запущенных процессов. Символ + означает, что kdeinit4 будет ожидать завершения процесса. kdeinit4 запускает klauncher и kded.
Вторая строка даёт kdeinit4 команду запустить процесс управления сеансами ksmserver, который обеспечивает работу сеанса. Когда этот процесс завершается, пользователь выходит из системы.
Фоновые процессы
Все фоновые процессы & kde; зависят от пользователя: в отличие от системных демонов они не являются общесистемными. Они являются уникальными как для каждого пользователя, так и для каждого дисплея Х- сервера. Существуют следующие процессы:
dcopserver
Связь между приложениями рабочего стола
kded
Демон общих служб (сервисов).
Запускает обновления базы данных Sycoca при необходимости
kcminit
Служба инициализации
Для подробностей, см..
klauncher
Запуск программ (это не диалог, вызываемый по Alt; F2!)
Для подробностей, см..
knotify
Пользовательские уведомления.
Для подробностей, см..
ksmserver
Управление сеансами
Для подробностей, см..
kdeinit
kdeinit запускает другие программы & kde;. kdeinit может запускать как обычные программы (бинарные файлы), так и загружаемые модули kdeinit (KLM). KLM работают так же, как обычные программы, но могут быть запущены более эффективно. Они находятся в каталоге $KDEDIR / lib/ kde3.
В выводе команд top и ps они отображаются как kdeinit. Чтобы узнать действительное имя программы, используйте top - c или ps aux:
% ps aux waba 23184 0. 2 2. 1 23428 11124? S 21: 41 0: 00 kdeinit4: Running... waba 23189 0. 2 2. 4 25136 12496? S 21: 41 0: 00 kdeinit4: klauncher waba 23192 0. 7 2. 8 25596 14772? S 21: 41 0: 00 kdeinit4: kded waba 23203 0. 8 3. 4 31516 17892? S 21: 41 0: 00 kdeinit4: knotify
Строка kdeinit: Running... соответствует основному процессу kdeinit. Остальные перечисленные выше процессы были запущены как KLM.
При запуске kdeinit4 вызывает klauncher, kded и программы, указанные в командной строке в сценарии startkde. Обычно это kcminit_ startup.
kcminit
kcminit запускает службы инициализации во время запуска. Они задаются в файлах. desktop приложений или других служб, в строке X- KDE- Init:
[Desktop Entry] Encoding=UTF- 8 Exec=kcmshell4 energy Icon=energy_ star Type=Application X- KDE- Library=energy X- KDE- Init=energy
Службы инициализации обычно используются для применения пользовательских настроек к оборудованию.
Команда kcminit -- list отображает все службы инициализации, kcminit имя_ сервиса - запускает один сервис. Это может быть полезно при устранении проблем, возникающих при запуске.
klauncher - демон, запускающий службы в среде & kde;. Он тесно взаимодействует с главным процессом kdeinit (запускает через него новые процессы). Чтобы запустить приложения или службы, программы & kde; связываются с klauncher через & DCOP;.
Самое распространённое сообщение об ошибке: KLauncher недоступен через DBus. Это значит, что либо сервер DBus неправильно работает, либо klauncher ошибочно завершился.
Чтобы перезапустить klauncher, перезапустите kdeinit из консоли. Перед этим убедитесь, что значения переменных $HOME, $DISPLAY, $KDEDIR и $KDEDIRS указаны верно.
Основная задача knotify - заставлять звуковой сервер выполнять звуковые уведомления. Имеются и другие методы уведомления пользователей о чём- либо.
KSMServer
ksmserver - менеджер сеансов & kde;. В начале сеанса он вызывает приложения, настроенные на автозапуск (т. е. в каталоге $KDEDIR / share/ autostart есть соответствующий файл. desktop), и восстанавливает приложения из предыдущего сеанса. Условия автозапуска приложения определяются значением записи X- KDE- autostart- condition в файле. desktop.
Пример файла ktip. desktop:
X- KDE- autostart- condition=ktiprc: TipOfDay: RunOnStart: true
Это означает, что в файле ktiprc, в секции [TipOfDay] указано значение переменной RunOnStart - true. Это значение является значением по умолчанию, если запись отсутствует, то есть ktip по умолчанию запускается автоматически.
Некоторые приложения, которые ksmserver запускает автоматически:
kdesktop
Рабочий стол & kde;
& kicker;
Панель & kde;
ktip
Программа полезных советов
kwrited
Утилита, получающая сигналы, адресованные пользователю
& klipper;
Встроенная в лоток утилита буфера обмена
kalarm
Утилита напоминаний
kdesktop, в свою очередь, автоматически запускает приложения из $KDEHOME / Autostart. kdesktop открывает все файлы из этого каталога, включая документы, двоичные файлы и файлы. desktop.
Менеджер сеансов & kde; может восстанавливать предыдущий сеанс. При этом он восстанавливает те приложения в том состоянии, которое существовало в момент сохранения сеанса. Сеансы сохраняются в конфигурационном файле ksmserverrc, который содержит ссылки на файлы с данными о состоянии приложений (находятся в каталоге $KDEHOME / share/ config/ session). Информация о состоянии & kwin; содержит данные о расположении окон остальных приложений сеанса.
Переменные среды
Ниже перечислены некоторые наиболее важные переменные среды, используемые & kde;:
$KDEDIR
Если значение KDEDIRS не указано, эта переменная должна указывать на корневой каталог установки & kde;. Позволяет & kde; находить собственные данные, такие как пиктограммы, меню и библиотеки.
$KDEDIRS
Перекрывает KDEDIR и позволяет указать несколько каталогов, в которых & kde; будет искать собственные данные. Может оказаться полезной, если вы установили некоторые программы не в каталог & kde;.
$KDEHOME
Если она не задана, & kde; использует по умолчанию каталог ~ /. kde для хранения личных данных пользователя.
$KDEROOTHOME
Если значение не указано, & kde; использует ~root /. kde для хранения персональных данных пользователя root. Была введена, чтобы предотвратить случайное затирание данных пользователем после выполнения программы от имени root (su).
$KDEWM
Если значение KDEWM указано, то сценарий startkde будет использовать в качестве менеджера окон & kde; не & kwin;, а указанный менеджер.
$KDE_ LANG
Перекрывает настройки языка в & kde;, например, по команде KDE_ LANG=fr kprogram & программа будет запущена во французском переводе (если установлены необходимые файлы).
$KDE_ MULTIHEAD
Установите значение true, если & kde; выполняется на многопроцессорной системе.
$KDE_ FORK_ SLAVES
(начиная с & kde; 3. 2. 3) Если переменная установлена, то KIO - slave (подчинённые процессы системы ввода- вывода KDE) порождаются самим вызывающим приложением. По умолчанию KIO - slave запускаются посредством klauncher / kdeinit. Эта опция может быть полезной, если KIO - slave должны выполняться в той же среде, что и само приложение. Пример - программа Clearcase.
$KDE_ HOME_ READONLY
Укажите значение true, чтобы показать, что домашний каталог подключён только для чтения.
$KDE_ NO_ IPV6
(начиная с & kde; 3. 2. 3) Установите эту переменную, чтобы выключить поддержку IPv6 и работу с DNS через IPv6.
$KDE_ IS_ PRELINKED
(начиная с & kde; 3. 2. 3) Установите эту переменную, чтобы показать системе, что программы и библиотеки & kde; уже предварительно скомпонованы. kdeinit будет выключен.
$KDE_ UTF8_ FILENAMES
Если переменная установлена, то & kde; предполагает, что имена файлов хранятся в кодировке UTF- 8.
$KDE_ FULL_ SESSION
(начиная с & kde; 3. 2. 3) При запуске среды & kde;, переменной автоматически присваивается значение true. Используется, например, программой & konqueror;: если переменная установлена (т. е. программа запущена не из другой графической среды, из & kdesu; и т. п.), то программа остаётся в памяти после закрытия, т. к. вероятность того, что её будут использовать в дальнейшем, выше; если не установлена, то память сразу очищается.
$KDESYCOCA
Путь к файлу- кэшу системной конфигурации & kde; (включает имя файла).
$KDETMP
Позволяет установить каталог для временных файлов, отличный от / tmp (обычно / tmp/ kde- $USER /).
$KDEVARTMP
Позволяет указать каталог для временных файлов (по умолчанию - / var/ tmp).
$XDG_ DATA_ HOME
(начиная с & kde; 3. 2) Каталог, в котором будут храниться пользовательские данные. По умолчанию - $HOME /. local/ share
$XDG_ DATA_ DIRS
(начиная с & kde; 3. 2) Определяет порядок каталогов, в которых система будет искать требуемые файлы (после поиска в $XDG_ DATA_ HOME). Значение по умолчанию - / usr/ local/ share /: / usr/ share /.
& kde; также добавляет каталоги, указанные в переменной $KDEDIRS и в данных профиля. Используется для файлов. desktop и. directory (пункты меню KDE). Файлы. desktop система ищет в $XDG_ DATA_ DIRS / applications,. directory - в $XDG_ DATA_ DIRS/ desktop- directories
$XDG_ CONFIG_ HOME
(kde; 3. 2) Определяет каталог, в котором хранятся пользовательские файлы конфигурации. Значение по умолчанию - $HOME /. config.
$XDG_ CONFIG_ DIRS
(kde; 3. 2) Определяет порядок каталогов, в которых система ищет пользовательские файлы конфигурации (в дополнение к $XDG_ CONFIG_ HOME). Значение по умолчанию - / etc/ xdg. & kde; также добавляет каталоги, перечисленные в $KDEDIRS и в данных профиля. Используется файлами. menu из $XDG_ CONFIG_ DIRS / menus.
Загадочный kdeinit
kdeinit запускает другие программы & kde;. kdeinit может запускать как обычные программы (бинарные файлы), так и специальные загружаемые модули kdeinit (KLM). KLM работают так же, как обычные программы, но могут быть запущены более эффективно. Они находятся в каталоге $KDEDIR / lib/ kde3.
% ps aux | grep bastian bastian 26061 0. 0 2. 2 24284 11492? S 21: 27 0: 00 kdeinit: Running... bastian 26064 0. 0 2. 2 24036 11524? S 21: 27 0: 00 kdeinit: dcopserver bastian 26066 0. 1 2. 5 26056 12988? S 21: 27 0: 00 kdeinit: klauncher bastian 26069 0. 4 3. 2 27356 16744? S 21: 27 0: 00 kdeinit: kded bastian 26161 0. 2 2. 7 25344 14096? S 21: 27 0: 00 kdeinit: ksmserver bastian 26179 1. 1 3. 4 29716 17812? S 21: 27 0: 00 kdeinit: kicker bastian 26192 0. 4 3. 0 26776 15452? S 21: 27 0: 00 kdeinit: klipper bastian 26195 1. 0 3. 5 29200 18368? S 21: 27 0: 00 kdeinit: kdesktop
Как вы, наверное, уже заметили это имеет побочный эффект, состоящий в трудности в снятии сбойного процесса:
% killall kdesktop kdesktop: no process killed
Вы бы могли выстрелить из пушки и выполнить killall kdeinit, но это приведёт к выходу из & kde;.
Существует целых два решения проблемы:
% kdekillall kdesktop или же старое доброе% kill 26195
kdekillall - часть пакета & kde; SDK.
Настройка & kde;
Значки рабочего стола
& kde; использует несколько типов значков:
Документы
Ссылки на web- сайты (файлы. desktop)
Ссылки на приложения (файлы. desktop)
Устройства - диски, разделы и периферия
Только файлы. desktop
Автоматически: devices: // io- slave
Зависящие от производителя (например, в & SuSE; - Мой компьютер)
Web- сайты
Чтобы создать ссылку на web- сайт в виде файла. desktop, используйте меню рабочего стола: Создать Файл Ссылка на адрес (URL).... Смените значок, используя диалоговое окно Свойства. В результате получится файл. desktop вида:
[Desktop Entry] Encoding=UTF- 8 Icon=/ opt/ kde3/ share/ apps/ kdesktop/ pics/ ksslogo. png Type=Link URL=http: // www. kde. org /
Приложения
Чтобы создать ссылку на приложение в виде файла. desktop: Меню рабочего стола - Создать Файл Ссылка на приложение. Укажите детали в появившемся диалоговом окне. Более простой способ - перетащите на рабочий стол пункт меню & kde; и выберите Копировать сюда или Создать ссылку (создаёт символьную ссылку).
[Desktop Entry] Encoding=UTF- 8 GenericName=IRC Client GenericName[ af] =Irc Klieuml; t GenericName[ de] =IRC Programm... GenericName[ zu] =Umthengi we IRC SwallowExec= Name=KSirc Name[ af] =Ksirc Name[ de] =KSirc...
"Шаблон" (Boiler plate)
Базовое описание, не отображается
Для совместимости, можно удалить
Переведённое название в том виде, как оно отображается на рабочем столе
Значки рабочего стола
... Name[ zu] =Ksirc MimeType= Exec=ksirc% i% m Icon=ksirc TerminalOptions= Path= Type=Application Terminal=0 X- KDE- StartupNotify=true X- DCOP- ServiceType=Multi Categories=Qt; KDE; Network
Поддерживаемые типы & MIME;, не используется в файлах значков рабочего стола
Командная строка (то, что будет выполнено)
Пиктограмма, с указанием темы или полного пути
Используется, если программа запускается в окне терминала (т. е. в текстовом режиме)
Каталог, в котором будет выполняться команда
Ещё один "шаблон"
Установите в значение 1 (true), если приложение должно запускаться в терминале
Показывать "подпрыгивающий" курсов, отключите если это не работает.
Удалите эту строку, если приложение не запустилось
Категория в меню & kde;, не используется в файлах значков рабочего стола
Опция Exec файлов. desktop
За командой вы можете указать несколько шаблонов, которые будут заменены на соответствующее значение при запуске программы:
% f
Одно имя файла; система получает его, когда пользователь перетаскивает файл на значок приложения.
% F
Список файлов; используется для приложений, которые могут открывать несколько файлов одновременно.
% u
Один адрес & URL;
% U
Список & URL;. Система скачает указанные файлы и после этого передаст приложению пути к локальным файлам (!!)
% d
Каталог, в котором находится открываемый файл; полезно, если приложение будет сохранять в этом каталоге какие- либо файлы.
% D
Список каталогов. Используется редко.
% i
Пиктограмма; если приложению & kde; передаётся опция -- icon, то в панели задач оно будет отображать пиктограмму, переданную через переменную Icon =.
% m
Более мелкая пиктограмма.
% c
Заголовок; если приложению & kde; передаётся опция -- caption, то в панели задач оно будет отображать заголовок, переданный через переменную Name =.
Примеры:
Строка Exec
Команда, которая будет выполняться
ksirc% i
ksirc -- icon ksirc
cd% d; kedit $(basename% f)
cd / tmp; kedit file. txt
Устройства
Чтобы создать ссылку на приложение, используйте файл. desktop или меню рабочего стола Создать - > Устройство
Где можно задать
Где можно определить значки рабочего стола:
~/ Desktop: копируется из / etc/ skel/ Desktop
$KDEDIR / apps/ kdesktop/ Desktop (добавляется)
$KDEDIR / apps/ kdesktop/ DesktopLinks (копируется)
Значки устройств (изменяются динамически)
Зависит от дистрибутива. В SUSE Linux значки темы startkde. theme копируются из / opt/ kde3/ share/ config/ SuSE/ default /
Меню & kde;
Как это работает?
Стандарт меню для & kde; 3. 2 описан в http: // freedesktop. org/ Standards/ menu- spec /
До & kde; 3. 2:
Подкаталоги папки share/ applnk
Структура подкаталогов соответствует структуре меню
Каждый файл. desktop соответствует одному приложению
Преобразовать структуру меню в & kde; 3. 2 было непросто:
Структура определена в одном файле. menu
меню разбито на категории
является общим для GNOME и & kde;
поддерживает стиль меню applnk
Пример из applications. menu:
& lt; Menugt; & lt; Namegt; Officelt; / Namegt; & lt; Directorygt; suse- office. directorylt; / Directorygt; & lt; Includegt; & lt; Filenamegt; Acrobat Reader. desktoplt; / Filenamegt; & lt; Filenamegt; kde- kpresenter. desktoplt; / Filenamegt; & lt; Filenamegt; kde- kword. desktoplt; / Filenamegt; & lt; / Includegt; & lt; Menugt;
Меню содержит 3 приложения:
/ usr/ share/ applications/ Acrobat Reader. desktop
/ opt/ kde3/ share/ applications/ kde/ kpresenter. desktop
/ opt/ kde3/ share/ applications/ kde/ kword. desktop
Где это хранится?
Файлы. menu описывают структуру меню. Они хранятся в $KDEDIR / etc/ xdg/ menus и / etc/ xdg/ menus (общесистемное меню) - задаётся $XDG_ CONFIG_ DIRS. В каталоге $HOME /. config/ menus хранятся пользовательские настройки структуры меню - задаётся $XDG_ CONFIG_ HOME. Дальнейшая информация находится на странице http: // www. freedesktop. org/ Standards/ basedir- spec.
Файлы. desktop описывают приложения. Они хранятся в $KDEDIR / share/ applications, / usr/ share/ applications, / usr/ local/ share/ applications. Они относятся ко всем пользователям. Определяется переменной $XDG_ DATA_ DIRS.
Каталог $HOME /. local/ applications содержит пользовательские файлы. desktop и пользовательские настройки. Каталоги определяются переменной $XDG_ DATA_ HOME. Дальнейшая информация находится на странице http: // www. freedesktop. org/ Standards/ basedir- spec
Файлы. directory описывают подменю. Они хранятся в каталогах $KDEDIR / share/ desktop- directories, / usr/ share/ desktop- directories, / usr/ local/ share/ desktop- directories и относятся ко всем пользователям. Каталоги определяются переменной $XDG_ DATA_ DIRS. Пользовательские настройки хранятся в $HOME /. local/ desktop- directories. Каталог задаётся переменной $XDG_ DATA_ HOME. Дальнейшая информация находится на странице http: // www. freedesktop. org/ Standards/ basedir- spec
& lt; Menugt; & lt; Namegt; Artlt; / Namegt; & lt; Directorygt; suse- edutainment- art. directorylt; / Directorygt; & lt; Includegt; & lt; Categorygt; X- SuSE- Artlt; / Categorygt; & lt; / Includegt; & lt; / Menugt;
Art - внутреннее имя меню. Запись suse- edutainment- art. directory определяет имя и пиктограмму этого меню. Меню включает все приложения, которые были отнесены к категории X- SuSE- Art. Примеры категорий:
Categories=Qt; KDE; Education; X- SuSE- Art
Запись suse- edutainment- art. directory определяет имя и пиктограмму этого меню:
[Desktop Entry] Name=Art and Culture Icon=kcmsystem
Типичные ошибки
Приложения, не входящие в меню, не могут быть ассоциированы с файлами и не учитываются другими приложениями. Если вы удаляете приложение из меню, & kde; считает, что вы не хотите его использовать.
Если вы не хотите, чтобы приложение отображалось в меню, поместите его в меню. hidden или в отдельное меню с включённой опцией NoDisplay=true в файле. directory.
Важные меню
$KDEDIR / etc/ xdg/ menus/ applications- merged / содержит файл kde- essential. menu. Он включает некоторые важные меню, которые не отображаются в главном меню & kde;:
Центр управления имеет скрытое меню Настройка. Его содержимое определяется файлом kde- settings. menu, значок и имя - файлом kde- settings. directory
Центр информации имеет скрытое меню Информация. Его содержимое определяется файлом kde- information. menu, значок и имя - файлом kde- information. directory.
Хранители экрана имеет скрытое меню Система/ Хранители экрана. Его содержимое определяется файлом kde- screensavers. menu, значок и имя - файлом kde- system- screensavers. directory. $KDEDIR / share/ desktop- directories/ kde- system- screensavers. directory содержит:
NoDisplay=true
Меню в старом стиле
& kde; продолжает поддерживать меню в старом стиле, содержимое которых определяется структурой каталогов $KDEDIR / share/ applnk (для всех пользователей) и $HOME /. kde/ share/ applnk (для каждого пользователя в отдельности). Если в файле. desktop указана опция Categories =, то просматриваемые каталоги определяются её значением.
KSycoca
KSycoca кэширует структуру меню и информацию о всех доступных приложениях. Вы можете создать базу данных заново, выполнив команду kbuildsycoca4. База данных находится в / var/ tmp/ kdecache- ${USER} / ksycoca. Она автоматически обновляется KDED, проверяется во время запуска сеанса. В течение сеанса KDED отслеживает изменения.
Чтобы выключить отслеживание изменений (если используется файловая система NFS, оно может приводить к ошибкам), добавьте в файл kdedrc следующие строки:
[General] CheckSycoca=false
Чтобы запустить обновление, выполните touch $KDEDIR / share/ services/ update_ ksycoca.
& kmenuedit;
& kmenuedit; изменяет настройки меню для одного пользователя. Изменения в структуре меню сохраняются в файле ~ /. config/ menus/ applications- kmenuedit. menu, изменения в наборе приложений - в ~ /. local/ share/ applications /, изменения подменю (имена, значки) - в ~ /. local/ share/ desktop- directories /. Утилита администратора KIOSK использует & kmenuedit; и копирует внесённые изменения в профиль пользователя или в общесистемные настройки.
Панель & kde;
Панель & kde; (kicker;) имеет модульную структуру. Она включает следующие компоненты:
Аплеты
Кнопки приложений
Специальные кнопки
По умолчанию панель содержит следующие аплеты: Переключение рабочих столов Панель задач Системный лоток Часы и следующие специальные кнопки:
Меню & kde;
Кнопка рабочего стола
Добавлены также кнопки различных приложений:
Кнопка Домой
Кнопка браузера
Кнопка KMail
Связи файлов
Связи файлов ставят в соответствие типу файлов одно или несколько приложений. Тип файла определяется его типом & MIME;. Типы & MIME;, известные & kde;, хранятся в $KDEDIR / share/ mimelnk. Файл. desktop каждого приложения содержит список типов & MIME;, которые это приложение поддерживает.
kview. desktop:
MimeType=image/ gif; image/ x- xpm; image/ x- xbm; image/ jpeg; image/ x- bmp; image/ png; image/ x- ico; image/ x- portable- bitmap; image/ x- portable- pixmap; image/ x- portable- greymap; image/ tiff; image/ jp2
kuickshow. desktop:
MimeType=image/ gif; image/ x- xpm; image/ x- xbm; image/ jpeg; image/ png; image/ tiff; image/ x- bmp; image/ x- psd; image/ x- eim; image/ x- portable- bitmap; image/ x- portable- pixmap; image/ x- portable- greymap
Оба приложения могут открывать файлы типа image/ gif. Какое будет использовано для того, чтобы открывать файлы. gif?
Приложение с наибольшим приоритетом! kview. desktop содержит запись InitialPreference=3, в то время как kuickshow. desktop содержит запись InitialPreference=6. Поэтому для открытия файлов. gif будет использовано & kuickshow;.
Как работать с & kview; по умолчанию?
Пользователь может изменять связи файлов в Центре управления. Изменения хранятся в $HOME /. kde/ share/ config/ profilerc. Чтобы применить настройки к нескольким пользователям, скопируйте этот файл в личные файлы настроек каждого пользователя или в глобальный каталог настроек & kde;.
Блокировка настройки & kde;
Как это работает - основы
Возможности блокировки настройки & kde; основаны на следующих методах:
Сделать опции настройки неизменяемыми
Запретить отдельные действия
Запретить доступ к отдельным адресам (URL;)
Запретить доступ к отдельным модулям настройки
Неизменяемые настройки
Блокировка настройки & kde;
Запрещая изменение некоторых настроек, администратор может установить настройки системы по умолчанию, которые пользователь не сможет изменить.
Неизменяемые настройки будут перекрывать пользовательские.
Вы можете запрещать изменение одной настройки, группы настроек или файла конфигурации.
Все настройки неизменяемого файла или группы неизменяемы, даже если администратор не указал для них значение по умолчанию.
Не все приложения поддерживают неизменяемые настройки. Даже если пользователь не имеет возможности вносить постоянные изменения в настройки, он может изменить их на время через окно настроек приложения.
Ограничения на действия
Приложения & kde; основаны на концепции действий. Действия могут быть запущены несколькими способами, обычно через меню приложения, панель управления или комбинацию клавиш. Пример действия - сохранить документ. Если вы знаете внутреннее имя действия, вы можете запретить его. Пункты, соответствующие запрещённым действиям, не отображаются в меню и панелях инструментов. Внутреннее имя действия сохранить документ - action/ file_ save. Вы также можете применять более абстрактные запреты, чтобы ограничить функции, которые не соответствуют только одному действию. Например, запрет shell_ access отключает все функции, которые предоставляют пользователю доступ к оболочке & UNIX;.
Ограничение доступа пользователей к оболочкам
Чтобы запретить доступ пользователя к оболочке, следует запретить действие shell_ access. Добавьте в файл kdeglobals следующие строки:
[KDE Action Restrictions] shell_ access=false
Так как это ограничение повлияет на меню & kde; и на доступные приложения, мы должны обновить базу данных sycoca:
touch $KDEDIR / share/ services/ update_ ksycoca
Теперь выйдите из & kde;, войдите снова и проверьте следующие пункты:
Меню К
& konqueror;: Сервис Открыть терминал
Окно выполнения команд Alt; F2
Полная документация по доступным действиям находится на странице http: // www. kde. org/ areas/ sysadmin /.
Несколько достаточно интересных действий перечислены ниже:
action/ options_ configure
Меню Настройка, пункт Настроить...
action/ help_ report_ bug
Меню Справка, пункт Сообщить об ошибке
action/ kdesktop_ rmb
Щелчок правой кнопкой мыши по рабочему столу
action/ kicker_ rmb
Щелчок правой кнопкой мыши по панели
user/ root
Скрыть все действия/ приложения, которые требуют прав пользователя root.
shell_ access
Скрыть все действия/ приложения, которые предоставляют доступ к оболочке.
print/ system
Отключает возможность выбора системы печати.
lock_ screen
Возможность блокировки экрана пользователем
start_ new_ session
Возможность запуска пользователем второго сеанса Х (см. документацию & kdm;)
opengl_ screensavers
Определяет, может ли пользователь запускать хранители экрана, использующие OpenGL.
manipulatescreen_ screensavers
Разрешать запуск хранителей экрана, не занимающих весь монитор.
Ограничения & URL;
Есть три типа ограничений, применяемых к адресам & URL;:
list
Определяет, может ли пользователь получать список файлов каталога.
open
Определяет доступ к отдельным адресам & URL;
Redirect
Определяет, может ли один адрес & URL; открывать другой & URL;, как автоматически, так и через гиперссылку.
Правила проверяются в том порядке, в каком они перечислены. Возможность доступа к & URL; определяет последнее правило, которое к нему применимо.
Следующие правила запрещают открывать адреса http и https вне домена. ourcompany. com:
[KDE URL Restrictions] rule_ count=2 rule_ 1=open,,,, http,,, false rule_ 2=open,,,, http, *. ourcompany. com,, true
Первые четыре запятые означают пропуск проверки критериев & URL;. Эта часть применяется только к критериям перенаправления.
Правило rule_ 1 запрещает открывать адреса http и https
Правило rule_ 2 позволяет открывать адреса http и https в домене. ourcompany. com. Обратите внимание, что шаблон * можно применять только в начале домена.
Следующие правила запрещают пользователю просматривать каталоги локальной файловой системы вне его домашнего каталога ($HOME):
[KDE URL Restrictions] rule_ count=2 rule_ 1=list,,,, file,,, false rule_ 2=list,,,, file,, $HOME, true
Правило rule_ 1 запрещает получать список файлов любого локального каталога
Правило rule_ 2 позволяет получать список файлов любого подкаталога папки $HOME.
Переменные $HOME и $TMP соответствуют домашнему каталогу пользователя и каталогу временных файлов & kde; для этого пользователя, например, / tmp/ kde- bastian
Следующие правила запрещают пользователю открывать локальные файлы вне каталога $HOME:
[KDE URL Restrictions] rule_ count=3 rule_ 1=open,,,, file,,, false rule_ 2=open,,,, file,, $HOME, true rule_ 3=open,,,, file,, $TMP, true
Правило rule_ 1 запрещает открывать любой локальный файл
Правило rule_ 2 разрешает открывать файлы каталога $HOME.
Правило rule_ 3 позволяет открывать файлы пользовательского каталога временных файлов & kde;. Это необходимо для некоторых приложений & kde;, которые вначале загружают файл в этот каталог, а потом открывают его.
Настройки перенаправления определяют, могут ли документы перенаправлять пользователя, автоматически или через гиперссылку, по другому адресу. Правила по умолчанию обеспечивают некоторую безопасность. Например, документы, расположенные в Интернете, не могут ссылаться на локальные файлы компьютера.
Например, если мы хотим разрешить документам сервера www. mycompany. com, расположенного в локальной сети, ссылаться на локальные файлы, мы можем добавить следующее правило:
[KDE URL Restrictions] rule_ count=1 rule_ 1=redirect, http, www. mycompany. com,, file,,, true
Можно указывать как один протокол, так и группу. Заранее определены следующие группы:
: local
Протоколы, которые обращаются к локальным файлам, например, file: /, man: /, fonts: /, floppy: /
: internet
Протоколы Интернета, такие как http и ftp
Информация о протоколах хранится в файлах *. protocol, каталог $KDEDIR / share/ services.
Class = определяет группу, к которой принадлежит протокол, например: grep Class= $KDEDIR / share/ services / *. protocol
Общие правила:
Протоколы: local могут ссылаться на любые другие протоколы
К протоколам: internet обращаться можно всегда
Некоторые протоколы не входят ни в одну группу, например, fish: /.
Модули настройки
Модули настройки & kde; позволяют настроить различные аспекты окружения & kde;. Модули настройки отображаются в Центре управления и/ или в диалоговом окне настройки приложения.
Модуль настройки прокси отображается как в Центре управления, так и в диалоговом окне Настроить Konqueror приложения & konqueror;
Отдельные модули настройки можно запустить, используя команду kcmshell4 модуль
Чтобы запустить модуль настройки прокси, используйте:
kcmshell4 kde- proxy. desktop
kcmshell4 proxy
Не все приложения используют модули настройки, часто диалоговое окно настройки является частью приложения.
Строго говоря, все модули настройки являются частью меню & kde;.
Модулям Центра управления обычно соответствуют файлы. desktop из каталога $KDEDIR / share/ applications/ kde. Они отсортированы по категориям в скрытом меню Настройка- Модули, которому соответствует файл kde- settings. menu (подключается файлом kde- essential. menu)
kbuildsycoca4 -- menutest 2gt; / dev/ null | grep Settings- Modules
Модулям, зависящим от приложения, обычно соответствует файл. desktop из каталога $KDEDIR / share/ applnk /. hidden, который соответствует скрытому меню. hidden (подключается в результате lt; KDELegacyDirs/ gt;)
kbuildsycoca4 -- menutest 2gt; / dev/ null | grep. hidden
В & kde; 3. 3 можно редактировать модули Центра управления, используя kcontroledit. kcontroledit работает как kmenuedit, изменения относятся только к одному пользователю. Чтобы внести изменения для всех пользователей, используйте kiosktool.
Отдельные модули конфигурации можно отключать, добавляя в kdeglobals следующие строки:
[KDE Control Module Restrictions] module- id =false
Например, чтобы отключить модуль настройки прокси, используйте
[KDE Control Module Restrictions] kde- proxy. desktop=false
Проверьте, доступен ли модуль настройки прокси в диалоговом окне Настроить Konqueror и в Центре управления.
Ленивый администратор
Общий рабочий стол
Данная функциональность позволяет удалённым пользователям просматривать содержимое вашего экрана и, возможно, управлять вашим компьютером. Для этого необходимо послать пользователю приглашение, возможно защищённое паролем. Это полезно для технической поддержки или для демонстрации какой- либо процедуры.
Для этого требуются две программы: & krfb; (удалённый framebuffer, VNC- сервер) и & krdc; (удалённое соединение, VNC- клиент).
При отправке приглашения, создаётся единоразовый пароль, по умолчанию действительный только на одно успешное соединение. Его действие также истекает через час после отсутствия попыток (первого) соединения.
Входящие соединения обрабатываются модулем kinetd kded. С помощью команды dcop kded kinetd services можно увидеть, запущен ли он. & krfb; по умолчанию ожидает соединений на порт 5900. При входящем соединении потребуется подтверждение.
Создание вашего собственного инструментария
DCOP
Desktop COmmunication Protocol, DCOP & ndash; - это простой механизм взаимодействия процессов. DCOP служит для взаимодействия с уже работающими программами. В & kde; входят две программы для работы с DCOP: dcop, утилита командной строки и kdcop - её графический интерфейс.
О работе с командой dcop:
dcop [опции] [приложение [объект [функция [аргумент1] [аргумент2]...]]]
Приложения, которые могут открывать несколько окон, будут перечислены как & lt; applicationgt; - PID
Все аргументы должны быть указаны с учётом регистра. setFullScreen и setfullscreen - это две разные функции.
В качестве аргумента для приложения и объекта допускается символ * в качестве шаблона.
percnt; dcop kon * konqueror- 16006 konsole- 8954
Некоторые примеры команд и их вывод показаны ниже:
percnt; dcop konsole * konsole- 8954
Запущен один экземпляр & konsole; с PID, равным 8954.
percnt; dcop konsole- 8954 KBookmarkManager -... / share/ apps/ kfile/ bookmarks. xml KBookmarkManager -... / share/ apps/ konqueror/ bookmarks. xml KBookmarkNotifier KDebug MainApplication- Interface konsole (default) konsole- mainwindow# 1 ksycoca session- 1 session- 2 session- 3 session- 4
Здесь видно, что работают четыре сеанса.
percnt; dcop konsole- 8954 konsole QCStringList interfaces () QCStringList functions () int sessionCount () QString currentSession () QString newSession () QString newSession( QString type) QString sessionId( int position) void activateSession( QString sessionId) void nextSession () void prevSession () void moveSessionLeft () void moveSessionRight () bool fullScreen () void setFullScreen( bool on) ASYNC reparseConfiguration ()
Здесь показаны опции главной программы & konsole;.
percnt; dcop konsole- 8954 session- 1 QCStringList interfaces () QCStringList functions () bool closeSession () bool sendSignal( int signal) void clearHistory () void renameSession( QString name) QString sessionName () int sessionPID () QString schema () void setSchema( QString schema) QString encoding () void setEncoding( QString encoding) QString keytab () void setKeytab( QString keyboard) QSize size () void setSize( QSize size)
Здесь показаны опции для первого сеанса, session- 1.
percnt; dcop konsole- 8954 konsole setFullScreen true
Запускает полноэкранный режим & konsole;.
Когда есть несколько приложений или объектов, с каким именно работать? Дайте ссылку.
percnt; echo $KONSOLE_ DCOP DCOPRef( konsole- 7547, konsole) percnt; dcop $KONSOLE_ DCOP newSession session- 6 percnt; dcopstart konsole konsole- 9058 #! / bin/ sh konsole=$( dcopstart konsole- script) session=$( dcop $konsole konsole currentSession) dcop $konsole $session renameSession Local session=$( dcop $konsole konsole newSession) dcop $konsole $session renameSession Remote session=$( dcop $konsole konsole newSession) dcop $konsole $session renameSession Code dcop $konsole $session sendSession 'cd / my/ work/ directory'
KDialog
Создание собственных утилит
Диалоги & kde; можно вызывать в своих сценариях, тем самым сочетая мощь языка сценариев & UNIX; с удобством работы в & kde;.
kdialog -- msgbox 'Вам письмо!'
kdialog -- title 'Новая почта' -- msgbox 'Вам письмо!'
Компонент KDialog может быть заменён с помощью опции -- caption
kdialog -- title 'Новая почта' -- msgbox 'Вам письмо!' -- dontagain myfile: mykey
Сохраняет параметр, определяющий, нужно ли показывать диалог ещё раз, в файле $KDEHOME / share/ config/ myfile, дописывая в него следующие строки:
[Notification Messages] mykey=false
Вместо аргумента -- msgbox можно применять -- sorry и -- error, когда это необходимо. Например, kdialog -- sorry 'Сеть недоступна' или kdialog -- error 'Не удаётся открыть почтовый ящик'.
Можно также создавать окна сообщений с кнопками Да и Нет.
kdialog -- yesno 'Подключиться к Internet?' echo $?
Возвращаемое значение
Что означает
0
Да, OK, Продолжить
1
Нет
2
Отмена
Обязательно сохраните результат в переменной, если он вам ещё будет нужен. Следующая команда присвоит значение $?. Здесь также допускается применять -- dontagain, чтобы запомнить выбор пользователя и больше не задавать ему этот вопрос.
Дальнейшие вариации:
-- warningyesno
Как опция -- yesno, но с другим значком
-- warningcontinuecancel
С кнопками Продолжить и Отмена.
-- warningyesnocancel
С кнопками Да, Нет и Отмена. Например:
kdialog -- warningyesnocancel 'Сохранить изменения?'
kdialog -- inputbox "Введите имя:" "ваше- имя"
Результат выводится в stdout. Его можно сохранить в переменной: name=$( kdialog -- inputbox "Введите имя:" "ваше- имя"). Последний аргумент указывать необязательно, он служит как начальное значение в диалоге.
password =$ (kdialog -- password "Введите пароль:")
Аргумент -- dontagain не применяется совместно с -- inputbox или -- password
В двух следующих диалогах пользователь может выбирать в списке:
-- menu
Список, в котором можно выбрать только один элемент.
-- checklist
Список, в котором можно выбрать несколько элементов.
city =$ (kdialog -- menu "Выберите город" a Москва b Самара c Киев d Рига)
$city вернёт a, b, c или d.
city =$ (kdialog -- checklist "Выберите города" a Москва off b Самара on c Киев on d Рига off)
Будут заранее выбраны Самара и Киев. Результат выбора этих городов: "b" "c".
С опцией -- separate- output b и c будут выведены с новой строки, при этом обработать результат будет проще.
file=$( kdialog -- getopenfilename $HOME) file=$( kdialog -- getopenfilename $HOME "*. png *. jpg|Файлы изображений") file=$( kdialog -- getsavefilename $HOME/ SaveMe. png) file=$( kdialog -- getexistingdirectory $HOME)
& groupware- with- kontact;