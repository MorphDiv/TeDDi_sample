# language_name_wals:	Russian
# language_name_glotto:	Russian
# ISO_6393:	rus
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Cyrl
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/ru.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Введение в базы данных
Что такое база данных?
Базу данных можно определить как набор данных с одной тематикой, организованных способом, позволяющим легко их просматривать, изменять и добавлять новые.
На схеме выше приведен пример базы данных: простая телефонная книга.
Схема базы данных телефонной книги
Схема базы данных телефонной книги
На рисунке выше показаны два контакта, каждый из которых размещён на отдельной карточке. Для каждой карточки можно выделить по одной строке в таблице:
Таблица Contacts
Name (Имя)
Tel No. (номер телефона)
Joan
699 23 43 12
Adam
711 19 77 21
Термины и определения: Таблица - это набор однородных данных, называемых строками, или записями (более профессионально). Колонки в таблице - поля. В таблице Contacts два поля: Name (имя) и Tel No. (номер телефона).
В упрощённом варианте базу данных может образовывать только одна таблица. Некоторые люди даже считают эти понятия эквивалентными. На практике вы увидите, что для базы данных обычно требуется больше одной таблицы.
Итак, на данный момент вы создали простую базу данных, Contacts, состоящую из одной таблицы.
Базы данных и электронные таблицы
Вероятно, вы уже знакомы с программами для работы с электронными таблицами, например, KSpread, OpenOffice. org Calc или Microsoft Excel. Если да, то у вас, наверное, возник вопрос: и электронные таблицы, и базы данных содержат таблицы - зачем же нужны вторые?
При сравнении таблиц и баз данных необходимо учитывать следующие вопросы (далее мы рассмотрим их поподробнее):
Целостность связей между элементами данных
Избыточность данных
Целостность и допустимость вводимой информации
Частичный вывод данных
Производительность и максимальный объём хранимой информации
Удобный ввод информации
Отчёты
Программирование
Параллельное использование несколькими людьми
Безопасность
Чем базы данных отличаются от электронных таблиц?
Если позволяет память вашего мобильного телефона, вы можете дополнить таблицу контактов колонками (полем) Address (адрес). Можно также добавить другие телефонные номера (офис, домашний), поле фамилии. Для упрощения предлагается следующее:
в таблице только два человека (что в настоящей базе их могут быть сотни и тысячи).
двух человек с одинаковыми именами и фамилиями нет
Таблица Contacts
Name and surname (Имя и фамилия)
Tel (Тел. номер)
Address (Адрес)
Joan Smith
Western Gate 1, Warsaw
Adam Willson
London, Frogs Drive 5
110 98 98 00
Western Gate 1
Smith Joan
312 43 42 22
Warsaw, Western Gate 1
ADAM Willson
231 83 02 04
Frogs Drive 5, London
Такую таблицу можно создать в виде электронной таблицы или базы данных. Первой пользоваться очень просто. Какие же проблемы могут возникнуть?
Целостность связей между элементами данных
Предположим, вы используете электронные таблицы и вам нужно изменить адрес как минимум одного человека. Вы столкнётесь с затруднением: придётся менять адреса в нескольких колонках. Например, данные о Joan занимают три записи. Настоящая проблема возникнет, если вы забудете изменить одну из строк - адрес человека перестанет быть однозначным и ваша запись потеряет целостность.
Более того, не существует простого способа удалить выбранный контакт из таблицы, поскольку нужно удалить все строки, относящиеся к данному человеку.
Избыточность данных
Это вытекает из предыдущего пункта. В поля Name and surname (имя/ фамилия) и Address (адрес) несколько раз вводится одна и та же информация. Поэтому хранить данные такого рода в электронных таблицах неэффективно: неприемлемо увеличивается размер базы данных и замедляется доступ к ней.
Как решаются подобные вопросы в базах данных? Во- первых, данные можно разбить на части и ввести дополнительную таблицу в двумя колонками: Name and surname (имя/ фамилия) и Address (адрес).
Таблица persons
Каждая строка соответствует отдельному человеку. Таблица Contacts связывается с Persons.
Целостность и допустимость вводимой информации
Обратите внимание на способ заполнения полей Name and surname (имя/ фамилия) и Address (адрес). При вводе люди могут допускать ошибки или небрежности. В нашем примере имя и фамилию можно ввести в разном порядке, то же касается и адреса. Могут быть и другие неоднозначности.
Из- за данной особенности при поиске телефонных номеров по адресу "Western Gate 1, Warsaw" вы в результате не получите полного результата.
Как такая проблема решается в базах данных? Вы можете изменить структуру таблицы Persons:
Разделить поле Name and surname (имя и фамилия) на два отдельных: поле Name (имя) и поле Surname (фамилия).
Разбить поле Адрес на три: Улица, Номер дома и Город.
Гарантировать корректность введенной информации можно, если не оставлять поля незаполненными, например, вы всегда обязаны ввести номер дома.
Модифицированная таблица будет выглядеть так:
Таблица Persons
Name (имя)
Surname (фамилия)
Street (улица)
House number (номер дома)
City (город)
Smith
Western Gate
1
Warsaw
Willson
Frogs Drive
5
London
Условия
необходимое поле
Частичный вывод данных
Электронная таблица, в которой показаны сразу все строки и столбцы, выглядит громоздко, особенно если она очень большая. Строки можно фильтровать и сортировать, но делать это нужно очень осторожно. Пользователь заранее должен помнить обо всех изменениях, иначе возникают ошибки. Например, вы можете просуммировать 100 строк, забыв, что ещё 20 были спрятаны.
Если вы хотите работать только с частью данных, например, отправить кому- то другому для редактирования, вы можете скопировать их в отдельный лист, а после изменения поместить назад в исходную таблицу. Такое "редактирование" может привести к потере данных или ошибкам в вычислениях.
Income (доход)
2300
1900
У вас может быть очень быстрый компьютер, но работа с достаточно большими электронными таблицами всё равно будет медленной. Низкая скорость обусловлена недостатком индексов, которые обеспечивают связь между элементами и ускоряют процесс поиска данных (в базах данных они предусматриваются автоматически). Если используется системный буфер обмена, то даже копирование информации будет сопряжено с трудностями.
Отчёты
Программирование
Параллельное использование несколькими людьми
Проектирование баз данных
Нужны ли мне базы данных?
Программы для создания баз данных