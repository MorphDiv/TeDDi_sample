# language_name_wals:	Russian
# language_name_glotto:	Russian
# ISO_6393:	rus
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Cyrl
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/ru.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Расширение & quantaplus;
Christopher Hornbaker
chrishornbaker@ earthlink. net
Andr# 225; s Mantia
amantia@ kde. org
Николай Шафоростов shafff@ ukr. net Перевод на русский
Эта глава описывает процесс расширения базовых возможностей & quantaplus; для ваших нужд и как вы можете содействовать её развитию.
Пакеты правки типов документов (Document Type Editing Package, & DTEP;)
& DTEP; используются в & quantaplus; для поддержки языков разметки, сценариев и & CSS;. Они позволяют обеспечить такие функции как автозавершение, редактирование тегов. Их простота и надёжность делает & quantaplus; быстрой, дружественной средой для веб- разработчиков.
& DTEP; делятся на две семьи - разметочную (далее - семья 1) и сценарную с & CSS; (далее - семья 2). & DTEP; состоит из двух частей - каталога тегов и панелей инструментов. Каталог тегов состоит из файла описания description. rc и файла TagXML с расширением. tag. Панель инструментов - это набор кнопок со значками (над окном редактирования), каждая из которых соответствует какому- либо тексту, вставляемому в документ при нажатии на неё (часто это шаблон тега).
& DTEP; можно создать самому вручную (см. ниже), загрузить или создать автоматически из DTD. Такое преобразование описано в.
В этой части описывается создание файлов TagXML, & descriptionrc; и панелей инструментов. В общем, & DTEP;.
Файлы TagXML (. tag) определяют атрибуты, специфичные для данного тега и содержимое диалога "Свойства тега". Файл & descriptionrc; содержит правила и данные о & DTEP;. Панели инструментов позволяют быстро обратиться к тому или иному тегу для вставки его в документ.
Создание пакетов
Каталоги тегов - это обычные каталоги, содержащие файлы & descriptionrc; и TagXML. В их названии отражается название языка разметки с его версией (например, html- 4. 01- strict)
TagXML
Таблица содержит список элементов, определённых в TagXML и говорит, обязательны они, или нет. Не смотря на то, что обязательны не все, рекомендуется всё же использовать как можно больше доступных элементов, чтобы пользователи имели больше настроек и информации.
Элемент
Использование по умолчанию
Частное использование
TAGS
required
always
tag
label
optional
обязательно для диалога "Свойства"
attr
обязательно для определения атрибута
tooltip
обязательно для подсказок в диалоге "Свойства"
whatsthis
обязательно для возможности отображения краткой справки Что это?
list
обязательно если attr имеет тип list
item
обязательно если используется & lt; list >
textlocation
location
обязательно если используется метка
text
children
список тегов, которые могут использоваться в определяемом
child
дочерний элемент
stoppingtags
список тегов, которые приводят к окончанию действия другого тега
stoppingtag
тег, который приводит к окончанию действия другого тега
Описания элементов TagXML
Ниже детально описывается каждый элемент.
TAGS
Корневой элемент файла TagXML. Может встречаться только один раз. Содержит определение нескольких тегов.
Родительские элементы
Дочерние элементы
НЕТ
tag
Название определяемого тега.
label, attr, stoppingtags
Атрибут
Тип
Значения
По умолчанию
Use
Описание
name
string
Название определяемого тега.
single
boolean
Требуется ли закрывающий тег & lt; / имя_ тега >.
type
xmltag
Тип определяемого тега.
Тип тега основывается на XML (только семья 1).
entity
Тип тега основывается на сущности (только семья 1).
property
Тип тега основывается на & CSS; (только семья 2).
function
Тип тега - функция сценария. Если это так, & lt; attr > становится аргументами функции (только семья 2).
class
Тип тега - класс сценария (только семья 2).
method
Тип тега - метод класса (только семья 2).
returnType
void
Тип возвращаемого значения определяемой функции (только семья 2)
Возвращаемое значение игнорируется (void).
int
Возвращается число (integer).
float
Возвращается число с плавающей точкой (floating point).
long
Возвращается длинное целочисленное (long integer).
Возвращается строка
version
Версия языка, для которой тег разрешён
extends
Разрешено только если тип атрибута - "class". Имя базового класса (только семья 2).
Разрешено только если тип атрибута - "method". Имя класса, к которому принадлежит метод (только семья 2).
common
Если "yes", тег указывает группу общих атрибутов и они могут быть добавлены в любой другой тег (только семья 1).
comment
строка, выводящаяся возле имени тега в списке автозавершения
label
Добавить в диалог метку. Её текст указывается тегом & lt; text >.
text, location
attr
Определяет один атрибут тега. Содержит имя, тип атрибута, информацию о его отображении.
location, list, tooltip, whatsthis, textlocation
Имя определяемого атрибута.
input
Тип определяемого атрибута.
Поте текстового ввода (text field).
check
Логическое поле (check box).
color
Значение поля - цвет
url
Значение поля - & URL; (или локальный файл)
Значение поля - запись указанного списка.
status
Обязательность аргумента (только семья 2).
Аргумент необязателен
Аргумент обязателен
implied
Аргумент есть неявный.
source
Указывает источники вариантов значений атрибута в редакторе тегов и дереве атрибутов
selection
Выделенный текст
dcop
Вывод метода dcop
interface
Требует source=" dcop ". Интерфейс dcop из & quantaplus;.
Требует source=" dcop "и имени интерфейса. Имя метода, предоставляемого интерфейсом & quantaplus;.
arguments
Требует source=" dcop "имени интерфейса и метода. Аргументы, передаваемые методу. Может быть пустым или"% tagname% "(имя текущего тега).
tooltip
Текст подсказки поля (отображается при наведении курсора на него).
Поддерживается только обычный текст (т. е. нельзя использовать никакие теги).
whatsthis
Текст "Что это?" для данного поля.
list
Тег, сводящий вместе записи в списке. Может употребляться только один раз для каждого описания атрибута.
item
Определяет запись в списке.
textlocation
Позиция в окне свойств параметра, отвечающего атрибуту тега. Может употребляться только один раз для каждого атрибута диалога (т. е. для каждого & lt; attr >). Не может содержать подэлементы.
row
неотрицательное целое
Ряд поля или метки при отображении в окне.
col
Столбец поля или метки при отображении в окне.
rowspan
Число рядов, отводимых полю.
colspan
Число столбцов, отводимых полю.
location
Положение и размер поля в окне свойств. Может употребляться только один раз для каждого поля в диалоге (т. е. для каждого & lt; attr > и & lt; label >). Не может содержать подэлементы.
label, attr
text
Текст метки или флажка (check box).
children
Список элементов, которые могут использоваться в определяемом теге.
child
Дочерний тег. Не может содержать подэлементы.
Тег, который может употребляться в некотором другом теге.
использование
Отношение к родителю.
Родитель должен иметь как минимум одного потомка с этим именем.
stoppingtags
Список элементов, которые приводят к окончанию действия тега.
stoppingtag
Тег, приводящий к окончанию действия другого тега. Не может содержать подэлементы.
Теги, приводящие к окончанию действия другого тега.
Использование TagXML
Все файлы TagXML должны начинаться с декларации & XML;: & lt;? xml version=" 1. 0 "encoding=" UTF- 8"? >, правильно структурированными и закрытыми.
Пробелы не играют роли, однако следите за символами & и & lt;. В элементах & lt; tooltip >, & lt; whatsthis >, & lt; text >, их лучше заменить на & amp; и & lt; соответственно. Невыполнение этого не приведёт к краху, но ваша работа может пропасть.
Проверка TagXML
Чтобы выполнить проверку файлов TagXML, выберите Сервис, Проверить TagXML..
Эта функция пока что не реализована и проверка происходит при загрузке файлов TagXML в & quantaplus;.
Примеры TagXML
Семья 1
Ниже следует файл TagXML семьи 1. Он описывает элемент & W3C; & XML; & lt; schema >. Имя такого файла будет schema. tag. Просто, не так ли?
& lt;? xml version=" 1. 0 "encoding=" UTF- 8"? > & lt;! DOCTYPE TAGS > & lt; TAGS > & lt; tag name=" schema "> & lt; label > & lt; text > idlt; / text > & lt; location col=" 0" row=" 0 "/ > & lt; / label > & lt; attr name=" id" type=" input "> & lt; tooltip > A unique ID for the element. lt; / tooltip > & lt; whatsthis > A unique ID for the element. lt; / whatsthis > & lt; location col=" 1" row=" 0 "/ > & lt; / attr > & lt; label > & lt; text > versionlt; / text > & lt; location col=" 0" row=" 1 "/ > & lt; / label > & lt; attr name=" version" type=" input "> & lt; tooltip > Version of the schema. lt; / tooltip > & lt; whatsthis > Version of the schema. lt; / whatsthis > & lt; location col=" 1" row=" 1 "/ > & lt; / attr > & lt; label > & lt; text > targetNamespacelt; / text > & lt; location col=" 0" row=" 2 "/ > & lt; / label > & lt; attr name=" targetNamespace" type=" input "> & lt; tooltip > URI; reference of the namespace of this schema. lt; / tooltip > & lt; whatsthis > URI; reference of the namespace of this schema. lt; / whatsthis > & lt; location col=" 1" row=" 2 "/ > & lt; / attr > & lt; label > & lt; text > xmlnslt; / text > & lt; location col=" 0" row=" 3 "/ > & lt; / label > & lt; attr name=" xmlns" type=" input "> & lt; tooltip > URI; reference for one or more namespaces for use in this schema. If no prefix is used, then components of that namespace may be used unqualified. lt; / tooltip > & lt; whatsthis > URI; reference for one or more namespaces for use in this schema. If no prefix is used, then components of that namespace may be used unqualified. lt; / whatsthis > & lt; location col=" 1" row=" 3 "/ > & lt; / attr > & lt; label > & lt; text > attributeFormDefaultlt; / text > & lt; location col=" 0" row=" 4 "/ > & lt; / label > & lt; attr name=" attributeFormDefault" type=" list "> & lt; items > & lt; item > qualifiedlt; / item > & lt; item > unqualifiedlt; / item > & lt; / items > & lt; tooltip > Default form for all attributes within this schema. lt; / tooltip > & lt; whatsthis > Default form for all attributes within this schema. lt; / whatsthis > & lt; location col=" 1" row=" 4 "/ > & lt; / attr > & lt; label > & lt; text > elementFormDefaultlt; / text > & lt; location col=" 0" row=" 5 "/ > & lt; / label > & lt; attr name=" elementFormDefault" type=" list "> & lt; items > & lt; item > qualifiedlt; / item > & lt; item > unqualifiedlt; / item > & lt; / items > & lt; tooltip > Default form for all elements within this schema. lt; / tooltip > & lt; whatsthis > Default form for all elements within this schema. lt; / whatsthis > & lt; location col=" 1" row=" 5 "/ > & lt; / attr > & lt; label > & lt; text > blockDefaultlt; / text > & lt; location col=" 0" row=" 6 "/ > & lt; / label > & lt; attr name=" blockDefault" type=" input "> & lt; location col=" 1" row=" 6 "/ > & lt; / attr > & lt; label > & lt; text > finalDefaultlt; / text > & lt; location col=" 0" row=" 7 "/ > & lt; / label > & lt; attr name=" finalDefault" type=" input "> & lt; location col=" 1" row=" 7 "/ > & lt; / attr > & lt; / tag > & lt; / TAGS >
Семья 2
Ниже следует файл TagXML семьи 2. Он описывает & PHP; - функцию перегрузки (overload). Имя такого файла будет overload. tag.
& lt;? xml version=" 1. 0 "encoding=" UTF- 8"? > & lt;! DOCTYPE tags > & lt; tags > & lt; tag name=" overload "type=" function" returnType=" void "> & lt; attr name=" class_ name" type=" string "status=" optional" / > & lt; / tag > & lt; / tags >
& descriptionrc;
Файл & descriptionrc; также имеет простую структуру, для него есть редактор, который можно вызвать из DTD Параметры DTD.... Чтобы изменить & descriptionrc; вновь созданного & DTEP;, создайте файл & descriptionrc; со следующими параметрами:
[General] Version = Пишите 1 для & quantaplus; версии & lt; =3. 1. 2 и 2 - для любой более поздней версии. Name = Строка определения DTD. (- // W3C; // DTD HTML 4. 01 Transitional // EN) NickName = Красивое имя DTD. (HTML 4. 01 Transitional). если не указано, будет использоваться Name.
После того, как вы создали такой файл и сохранили его в папку с файлами тегов, загрузите новый & DTEP; через DTD Загрузить пакет DTD (DTEP)..., теперь вы можете продолжить правку & DTEP;. Воспользуйтесь контекстной справкой (всплывающими подсказки и "что это?") панели инструментов редактора, или прочтите файл quanta/ data/ dtep/ dtd- description. txt из исходного архива, в котором подробно описан формат.
Действия, определяемые пользователем
В & quantaplus; можно настраивать и создавать свои действия, выполняемые при нажатии на кнопку панели инструментов, выборе пункта меню или нажатии комбинации клавиш.
Существует три типа действий, определяемых пользователем:
Операции с текстом
Операции с тегами
Операции на основе сценариев
Создание действий
Создать действие можно с помощью пункт меню Настройка Настроить действия:
Тип
Текст, Тег или Сценарий.
Текст
Имя действия, видимое пользователю.
Кнопка рядом с текстовой меткой
Значок, присвоенный данному действию. Щёлкните на нём чтобы его изменить.
Всплывающая подсказка
Краткое описание действия.
Комбинация клавиш
Комбинация клавиш, присвоенная действию.
Панели инструментов
Панели инструментов, содержащие действие. Для подробностей см..
Расширенные настройки
Параметры, специфичные для каждого типа действий. См. далее
Операции с текстом
Самые простые действия. Вы можете ввести текст в области Расширенные настройки, который будет вставлен в документ при выполнении действия.
Операции с тегами
Используется для вставки XML- тегов в текст. lt; taggt; Имя тега. lt; / taggt; Если флажок отмечен, нужен также закрывающий тег. Если при вызове действия в документе будет присутствовать выделенный текст, то начальный тег будет вставлен перед ним, а закрывающий - после. Запустить диалог "Изменить тег", если он доступен Если для данного тега будет найден файл tagXML с описанием его атрибутов, перед вставкой тега будет предложено ввести их в диалоговом окне. Символы & lt;, & gt; и / не будут автоматически добавлены и вы должны ввести их сами.
Операции на основе сценариев
Этот тип действий - самый мощный. С помощью него можно запускать внешние приложения (в основном это сценарии), которым будет передаваться документ или его часть. Примером такого типа служит стандартный диалог & quantaplus; Быстрый запуск, различные действия, связанные с (X) HTML.
Сначала нужно ввести строку запуска сценария, например: sh / home/ myHome/ myScript. sh.
Для указания пути рекомендуется использовать% scriptdir (например: sh% scriptdir/ myScript. sh). Тогда сценарий будет искаться в нескольких папках, а именно: глобальная папка сценариев: $KDEDIR / share/ apps/ quanta/ scripts локальная папка сценариев: $KDEHOME / share/ apps/ quanta/ scripts список путей пользователя: $PATH Есть также другие переменные:
% f: адрес текущего документа. Последовательность символов "file: /" будет удалена из имени файла.
% input: выделенный текст (см. далее).
% projectbase: адрес текущего проекта. Если нет открытых проектов, возвращает пустую строку.
% pid: PID процесса & quantaplus;. Если запущен один экземпляр & quantaplus; перед PID будет добавлено "unique". Это может быть использовано для работы через DCOP.
% userarguments: используется при событиях. Будет заменено свойствами события в следующем порядке:
Первый аргумент
Дескриптор (id) сценария
Второй аргумент
имя события
Третий аргумент
параметры события, обычно имя текущего файла, или путь к файлу проекта.
Также сценарий может получить исходные данные напрямую от & quantaplus; через стандартный вход. В выпадающем списке Ввод вы можете выбрать данные, которые будут посылаться:
Ничего.
Текущий документ: весь документ.
Выделенный текст. Только когда выбран этот вариант,% input имеет смысл.
Аналогично, можно получить вывод сценария через конфейеры. Существует два типа вывода: обычный (stdout); ошибки (stderr). Вы можете выбрать, что делать с выводом, возможные варианты:
Ничего.
Вставить в позицию курсора.
Заменить выделение.
Создать новый документ.
Заменить текущий документ.
Окно сообщений: вывод сценарий будет помещён на служебную вкладку Сообщения.
Варианты для вывода сообщений об ошибках такие же.
Создание панелей инструментов
Ниже следует описание создания панелей инструментов для & DTEP;. По сути, это - графические элементы, отвечающие определённому действию. Последнее - основа почти всех расширений, которые есть или будут появляться в будущем в & quantaplus;. Схема определения действия в & quantaplus; также годится для автозавершения и диалогов свойств тегов.
С нуля до совершенства
Начнём с создания пользовательской панели инструментов: Панели инструментов Добавить пользовательскую панель инструментов.
Если в языке разметки много тегов, лучше разделить их по группам. Для каждой группы создайте отдельную панель инструментов. В нашем случае тегов не много, поэтому обойдёмся одной.
Далее следует добавить и настроить действия - Настройка Настроить действия....
Нажмите кнопку Создать (внизу окна).
Заполните все необходимые поля и добавьте тег в соответствующую панель инструментов.
Если у тега есть атрибуты (и вы будете часто их использовать), отметьте Запустить диалог "Изменить тег", если он доступен, и каждый раз при использовании данного действия, будет предложено заполнить свойства добавляемого тега.
Теперь у вас должно быть что- то вроде этого.
Нажмите кнопку Применить.
Но что же получилось?! Как вы запомните, какой значок к какому действию относится? Давайте заменим его на свой (покрасивее).
Для создания значка можно использовать & kiconedit;. Запустите её из & kmenu;, Графика Дополнительные приложения)
& kiconedit; создаёт значки с расширением 32x32, однако нам нужно 22x22 - Правка Изменить размер.
Помните, что вы создаёте значок, который поможет вспомнить вам (и не только вам) действие, которому он отвечает, а не просто красивую картинку.
В нашем случае создаётся значок для тега & lt; start >, поэтому для него будет использоваться зелёный цвет.
Сохраним значок.
После создания значка нужно ассоциировать его с действием. Откройте окно Настроить действия и выберите нужное действие. Слева от поля Текст есть кнопка - нажмите её.
Выберите Прочие пиктограммы и нажмите кнопку Обзор.
Перейдите в каталог, в котором вы сохранили значок, выберите его и нажмите OK.
Нажмите кнопку Применить > или OK.
Чтобы добавить какие- то общие для & quantaplus; функции на панель инструментов, или разделители кнопок, в окне Настроить панели инструментов выделите нужную панель инструментов и выберите в списке слева действие (или разделитель).

Например, можно добавить Просмотр в Konqueror.
Обратите внимание на то, что разделитель способствует группированию. Один человек подумал, что кнопка & konqueror;, стоящая рядом с зелёной кнопкой "Старт", имеет противоположное значение ("Стоп").
После внесения изменений, нажмите кнопку OK.
Посмотрите на новую панель инструментов! Фантастика!
Не забудьте протестировать вашу новую панель инструментов нажатием всех расположенных на ней кнопок.
Панели инструментов Сохранить Сохранить как локальную панель инструментов.
Сохраните её в правильном каталоге. Убедитесь, что вы заполнили & descriptionrc; так, чтобы при открытии документа данного типа, загружались соответствующие панели инструментов.
Написание документации
Robert Nickel
robert@ artnickel. com
Самое заметное, что может сделать рядовой пользователь - дополнение документации по разметочному или скриптовому языку, который ему нравится. Далее описывается, как было создано дерево документации & PHP;.
Перед началом написания проверьте репозиторий & quantaplus;.
Первый шаг - получение существующей документации. Второй - создание файла docrc.
Общая форма docrc:
# KDE Config File [Tree] Doc dir= путь (относительно к этому файлу) к файлам html & eg; php42 / # top level elements Top Element= Описание документации & eg; & PHP; 4. 2 documentation Section 1=Section1. html Section 2=# Sec2. 1, # Sec2. 2, # Sec2. 3 Sec2. 1=Sec2. 1. html Sec2. 2=Sec2. 2. html Sec2. 3=Sec2. 3. html... [Context] ContextList=func1, func2, tag1, tag2, tag3 func1=func1. html func2=func2. html tag1=tag1. html tag2=tag2. html tag3=tag3. html
Файл docrc разделён на две секции - Tree и Context.
Секция Tree определяет размещение вашей документации в структуре (слева в главном окне). Например:
В соответствии со структурой, описанной выше, docrc для & PHP; выглядит так:
# KDE Config File [Tree] Doc dir=php42 / # top level elements Top Element=PHP 4. 2 documentation PHP 4. 2 documentation=Table of Contents, # Getting Started, # Language Reference Table of Contents=index. html Getting Started=Introduction,... Introduction=introduction. html... Language Reference=Basic syntax,... Basic syntax=language. basic- syntax. html...
Обратите внимание на наличие # перед Getting Started и Language Reference. Это говорит о том, что они содержат подэлементы.
Table of Contents ссылается напрямую на файл (и следовательно отображается внизу структуры & mdash; каталоги сначала!).
Пробелы не влияют ни на что, но следите за символами & и & lt;. Во всех файлах, основанных на & XML;, их лучше заменить на & amp; и & lt; соответственно.
Секция Context используется контекстно зависимой справки. Например, вы пишите скрипт & PHP; и вам нужно просмотреть документацию по функции mysql_ fetch_ array. Для этого вам нужно будет выделить её название и нажать Ctrl; H. При этом отобразится сразу информация по этой функции.
ContextList
Разделённый запятыми список контекстных пунктов, по которым будет доступна контекстная справка (для & PHP; - это его функции).
Ссылки на файлы контекстной справки
Формат: "контекстный пункт=страница html". Например: acos=function. acos. html
Готовая версия docrc:
# Keywords for context help [Context] ContextList=abs, acos, acosh, addcslashes, addslashes,... abs=function. abs. html acos=function. acos. html acosh=function. acosh. html addcslashes=function. addcslashes. html addslashes=function. addslashes. html...
Теперь сохраните ваш файл docrc в каталоге $HOME /. kde/ share/ apps/ quanta/ doc или $KDEDIR / share/ apps/ quanta/ doc для локального или глобального использования соответственно. Затем создайте (под) каталог (как указано в файле docrc) в одном каталоге с docrc и скопируйте в него страницы & HTML;.
Перезапустите & quantaplus; чтобы увидеть добавленную документацию.
После того, как вы убедитесь, что она годится для того, чтобы ею поделиться с другими пользователями, отправьте её с файлом docrc в репозиторий & quantaplus;. Вы не станете богатым, но вы сможете гордиться тем, что содействовали разработке самого лучшего инструмента веб- разработки в мире.
Публикация ресурсов
С & quantaplus; вы не будете жадным одиночкой, с её помощью можно делиться разными расширениями (пакетами DTEP, панелями инструментов с действиями, сценариями, шаблонами) друг с другом. Есть два способа этого:
Отправка по Email
Расширения (называемые также ресурсами) можно посылать по электронной почте. Для этого в нескольких (в т. ч. контекстных) меню есть пункт Отправить по E- Mail....
Публикация на главном сервере
Если вы хотите поделиться своими расширениями со всеми, опубликуйте их в центральном хранилище. Присланные ресурсы проверяются и действительно публикуются только если они могут быть полезны другим. Для публикации, ресурс нужно подписать ключом GPG/ PGP.
О том, как загружать расширения с центрального хранилища, обратитесь к разделу.
Во время передачи вам нужно будет ввести пароль к своему ключу GPG (он не будет сохранён), выбрав его перед этим. В диалоге Опубликовать заполните все поля (URL для просмотра можно оставить пустым) и нажмите OK.
Данный диалог можно открыть из DTD Передать пакет DTD (DTEP)..., Панели инструментов Передать панель инструментов..., контекстных меню файлов и папок в деревьях шаблонов и сценариев.
Загрузка расширений
На сайте & quantaplus; есть специальный раздел, в котором хранятся расширения, не вошедшие в основной дистрибутив из- за большого размера или редкого использования, или же они были опубликованы после выхода послежней версии программы. Такие ресурсы содержат в себе механизм автоматической установки. Чтобы получить к ним доступ, воспользуйтесь пунктом меню Загрузить, его можно найти в разных местах, например в DTD Загрузить пакет DTD (DTEP)..., Панели инструментов Загрузить панель инструментов..., в контекстных меню пустых областей или в корнях деревьев Шаблоны, Сценарии и Документация.
Перед непосредственной установкой расширения, & quantaplus; проверяет контрольную сумму и подпись.
Устанавливайте расширения, особенно панели инструментов и сценарии, только из проверенных источников!
Получение & DTEP; из DTD
Добавление поддержки языков разметки, основанных на XML, автоматизировано, и пакет DTEP создаётся на основе DTD.
DTD Загрузить и конвертировать DTD..., выберите файл. dtd, содержащий определение DTD, после чего вы увидите следующее окно:
Доступные поля:
Конечный каталог: папка, в которую будут записаны данные создаваемого & DTEP;, будет расположена в $KDEHOME / share/ apps/ quanta/ dtep.
Имя: строка определения DTD
Отображаемое имя: имя, видимое пользователю.
Строка описания! DOCTYPE: строка, которая должна присутствовать в теге! DOCTYPE, например HTML PUBLIC "- // W3C // DTD HTML 4. 01 Transitional // EN" "http: // www. w3. org/ TR/ html4/ loose. dtd"
DTD URL: Адрес файла DTD
Расширение по умолчанию: расширение, которое обычно имеют файлы с данным DTD
Теги и атрибуты с учётом регистра: обычно включено для языков, основанных на XML
Настроить DTEP после преобразования: запустить редактор & descriptionrc; после завершения преобразования, чтобы вы могли проверить/ настроить созданный & DTEP;.