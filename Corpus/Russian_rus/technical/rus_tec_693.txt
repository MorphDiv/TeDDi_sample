# language_name_wals:	Russian
# language_name_glotto:	Russian
# ISO_6393:	rus
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Cyrl
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/ru.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Данные
/text/shared/02/01170203.xhp
формы; данные
данные; формы
формы; подчиненные формы
подчиненные формы; формы
Данные
Данные
определены свойства формы, относящиеся к базе данных, связанной с этой формой.
подчиненной формы
.
Источник данных
Определение источника данных, на который должна ссылаться форма.
При нажатии кнопки
...
откроется диалоговое окно
Открыть
для выбора источника данных.
Содержимое
Тип содержимого источника
.
Тип содержимого источника
выбрать значение &quot; Таблица &quot; или &quot; Запрос &quot; , будут перечислены все таблицы и запросы из выбранной базы данных.
Тип содержимого
Определяет, что в качестве источника данных используется таблица или запрос или что форма создается на основе инструкции SQL.
Содержимое
.
Если требуется создать новый запрос или
подчиненную форму
необходимо выбрать вариант &quot; SQL &quot; .
После этого можно ввести инструкцию для запроса SQL или для подчиненной формы в поле
Содержимое списка
на вкладке &quot; Данные &quot; в свойствах элемента управления.
Анализ команд SQL
Определение необходимости анализа выражения SQL средствами %PRODUCTNAME.
При выборе варианта &quot; Да &quot; можно нажать кнопку
...
рядом с полем списка
Содержимое
.
Откроется окно для графического создания запроса к базе данных.
При закрытии этого окна инструкция SQL для созданного запроса вставляется в поле со списком
Содержимое
.
Фильтр
Введите требуемые условия фильтрации данных в форме.
Спецификации фильтра следуют правилам SQL без использования выражения WHERE.
Например, если требуется показать все записи с именем &quot; Mike &quot; , введите в поле данных:
Forename = 'Mike'.
Кроме того, можно объединять условия:
Forename = 'Mike' OR Forename = 'Peter'.
Будут показаны все записи, удовлетворяющие любому из этих условий.
Автофильтр
и
Фильтр по умолчанию
на панели
Навигатор форм
.
Сортировка
Указывает условия сортировки данных в форме.
Спецификация условий сортировки подчиняется правилам SQL, кроме раздела ORDER BY.
Например, если в одном поле нужно расположить записи базы данных в порядке возрастания, а в другом - в порядке убывания, введите &quot; Forename ASC &quot; , &quot; Name DESC &quot; (где &quot; Forename &quot; и &quot; Name &quot; - имена полей данных).
Навигатор форм
могут служить для сортировки в пользовательском режиме
:
Сортировать по возрастанию
,
Сортировать по убыванию
,
Сортировка
.
Разрешить только добавление
Определяет, какие операции можно выполнять с данными формы: &quot; Да &quot; - только добавление новых данных, &quot; Нет &quot; - добавление и другие операции.
Добавить только данные
задано значение &quot; Да &quot; , изменение или удаление данных невозможно.
Панель навигации
Указывает возможность использования функций перехода в нижней форме.
Параметр &quot; Родительская форма &quot; используется для подчиненных форм.
Если для подчиненной формы выбран этот параметр, можно осуществлять переход по записям главной формы, если курсор находится в подчиненной форме.
Подчиненная форма связана с родительской формой в отношении 1:1, поэтому переход всегда выполняется в родительской форме.
Цикл
Определяет способ перехода с помощью клавиши TAB.
Эта клавиша может использоваться для перемещения вперед по форме.
Если при этом удерживать клавишу SHIFT, переход будет выполняться в обратном направлении.
Если после достижения последнего (или первого) поля снова нажать клавишу TAB, возможны различные варианты.
Определите ключевой элемент управления при помощи следующих параметров:
Параметр
Значение
По умолчанию
Этот параметр автоматически определяет цикл, привязанный к ссылке на существующую базу данных.
Если форма содержит ссылку на базу данных, клавиша TAB по умолчанию инициализирует изменение следующей или предыдущей записи на выходе из последнего поля (см. &quot; Все записи &quot; ).
При отсутствии ссылки на базу данных отображается следующая или предыдущая форма (см. &quot; Текущая страница &quot; ).
Все записи
Этот параметр относится только к формам базы данных и применяется для перехода по записям.
При выходе из последнего поля формы с помощью клавиши TAB назначается новая текущая запись.
Активная запись
Этот параметр относится только к формам базы данных и применяется для перемещения внутри текущей записи.
При выходе из последнего поля формы с помощью клавиши TAB назначается новая текущая запись.
Текущая страница
При выходе из последнего поля формы курсор перемещается в первое поле следующей формы.
Это стандартная работа форм HTML, поэтому данный параметр особенно важен именно для них.
Разрешить добавления
Определяет возможность добавления данных.
Разрешить изменения
Определяет возможность изменения данных.
Разрешить удаление
Определяет возможность удаления данных.
Основные поля
подчиненной формы
введите поле данных главной формы, отвечающее за синхронизацию между главной и подчиненной формами.
Чтобы ввести несколько значений, одновременно нажимайте клавиши SHIFT и ВВОД после каждой строки ввода.
SQL
, а точнее, на
параметрическом запросе
.
Если имя поля введено в поле
Основные поля
, данные из этого поля главной формы определяют переменную, которую необходимо ввести в поле
Подчиненные поля
.
В соответствующей инструкции SQL эта переменная сравнивается с табличными данными, на которые ссылается подчиненная форма.
Кроме того, можно ввести имя столбца в поле
Основные поля
.
См. следующий пример.
Основные поля
введите поле данных из пользовательской базы данных, которое однозначно определяет пользователя, т.е. &quot; Cust_ID &quot; .
В поле
Подчиненные поля
введите имя переменной, зависящей от данных поля &quot; Cust_ID &quot; , например x.
В подчиненной форме должны отобразиться соответствующие данные из таблицы заказов ( &quot; Orders &quot; ) для каждого кода клиента (Customer_ID - > x).
Это возможно только в том случае, если каждый заказ в таблице заказов назначен только одному пользователю.
Или можно воспользоваться другим полем &quot; Customer_ID &quot; ; чтобы не перепутать это поле с одноименным полем из главной формы, оно названо &quot; Customer_Number &quot; .
Теперь нужно сравнить &quot; Customer_Number &quot; из таблицы &quot; Orders &quot; с &quot; Customer_ID &quot; из таблицы &quot; Customers &quot; с помощью, например, переменной x из следующей инструкции SQL.
SELECT * FROM Orders WHERE Customer_Number =: x (чтобы показать все данные таблицы заказов в подчиненной форме)
или
SELECT Item FROM Orders WHERE Customer_Number =: x (чтобы показать в подчиненной форме только данные из поля &quot; Item &quot; таблицы заказов)
Источник данных
или создать соответствующий параметрический запрос, который может использоваться для создания подчиненной формы.
Подчиненные поля
При создании подчиненной формы необходимо ввести переменную, в которой будут храниться возможные значения поля главной формы.
Если подчиненная форма основана на запросе, введите переменную, определенную в запросе.
При создании формы с помощью инструкции SQL, введенной в поле
Источник данных
, введите переменную из инструкции.
Для переменной можно выбрать любое имя.
Чтобы ввести несколько значений, нажмите сочетание клавиш SHIFT + ВВОД.
Основные поля
, то в поле
Подчиненные поля
можно определить имя переменной, в которой будут храниться значения поля &quot; Customer_ID &quot; .
Если теперь указать инструкцию SQL в поле
Источник данных
, используя эту переменную, соответствующие значения будут показаны в подчиненной форме.
Что такое подчиненная форма?
Формы создаются на основе таблицы базы данных или запроса к базе данных.
Они могут использоваться для отображения, ввода или изменения данных в удобной для просмотра форме.
Чтобы получить форму со ссылками на данные таблицы или запроса и с возможностью отображения дополнительных данных из другой таблицы, необходимо создать подчиненную форму.
Эта подчиненная форма может представлять собой, например, текстовое поле с данными другой таблицы базы данных.
Подчиненная форма является дополнительным компонентом главной формы.
Главную форму также называют основной формой.
Подчиненные формы используются для получения доступа к нескольким таблицам одновременно.
Для каждой таблицы требуется отдельная подчиненная форма.
После создания форму можно переделать в подчиненную форму.
Для этого войдите в режим конструктора и откройте навигатор форм.
В навигаторе форм перетащите форму (которая будет подчиненной) в другую форму (которая будет главной).
Подчиненные формы не будут видны пользователю документа.
Пользователь сможет просматривать только документ, в котором вводятся данные, или документ, отображающий текущие данные.
Из полей данных основной формы выберите основное поле.
В подчиненной форме заданное подчиненное поле должно соответствовать содержимому основного поля.
При переходе по данным в форме всегда отображается текущая запись.
Если определены подчиненные формы, их содержимое будет показано после короткой задержки около 200 мс.
Эта задержка позволяет быстро просмотреть записи главной формы.
Если во время задержки перейти к следующей записи в главной форме, извлечение и отображение данных подчиненной формы не потребуется.