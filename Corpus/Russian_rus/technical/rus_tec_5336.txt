# language_name_wals:	Russian
# language_name_glotto:	Russian
# ISO_6393:	rus
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Cyrl
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ru.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Руководство по PHP
Пред.
След.
Глава 6. Основы синтаксиса
Вставка в HTML
Когда PHP обрабатывает файл, он просто передаёт его текст, пока не встретит один из специальных тегов, который сообщает ему о необходимости начать интерпретацию текста как кода PHP. Затем он выполняет весь найденный код до закрывающего тега, говорящего интерпретатору, что далее снова идет просто текст. Этот механизм позволяет вам внедрять PHP-код в HTML - все за пределами тегов PHP остается неизменным, тогда как внутри - интерпретируется как код.
Существует четыре набора тегов, которые могут быть использованы для обозначения PHP-кода. Из них только два (?php...? и script language="php "... / script) всегда доступны; другие могут быть включены или выключены в конфигурационном файле php.ini. Хотя короткие теги и теги в стиле ASP могут быть удобны, они не так переносимы, как длинные версии. Кроме того, если вы намереваетесь вставлять PHP-код в XML или XHTML, чтобы соответствовать XML, вам следует использовать форму ?php...?.
Теги, поддерживаемые PHP:
Пример 6-1. Способы вставки в HTML
1. ?php echo( "если вы хотите работать с документами XHTML или XML, делайте так\n");?
2.? echo ("это простейшая инструкция обработки SGML\n");? ?= выражение? Это синоним для "? echo выражение?" 3. script language="php "echo ("некоторые редакторы (например, FrontPage) не любят инструкции обработки"); / script 4.% echo ("Вы можете по выбору использовать теги в стиле ASP");% %= $variable; # Это синоним для"% echo... "%
Первый способ, ?php...?, наиболее предпочтительный, так как он позволяет использовать PHP в коде, соответствующем правилам XML, таком как XHTML.
Второй способ не всегда доступен. Короткие теги доступны только когда они включены. Это можно сделать, используя функцию short_tags() (только в PHP 3), включив установку short_open_tag в конфигурационном файле PHP, либо скомпилировав PHP с параметром --enable-short-tags для configure. Даже если оно включено по умолчанию в php.ini-dist, использование коротких тегов не рекомендуется.
Четвертый способ доступен только если теги в стиле ASP были включены, используя конфигурационную установку asp_tags.
Замечание: Поддержка тегов в стиле ASP была добавлена в версии 3.0.4.
Замечание: Следует избегать использования коротких тегов при разработке приложений или библиотек, предназначенных для распространения или размещения на PHP-серверах, не находящихся под вашим контролем, так как короткие теги могут не поддерживаться на целевом сервере. Для создания переносимого, совместимого кода, не используйте короткие теги.
Закрывающий тег блока PHP-кода включает сразу следующий за ним перевод строки, если он имеется. Кроме того, закрывающий тег автоматически подразумевает точку с запятой; вам не нужно заканчивать последнюю строку кода в блоке точкой с запятой.
PHP позволяет использовать такие структуры:
Пример 6-2. Профессиональная вставка
?php if ($expression) {? strong Это истина. / strong ?php} else {? strong Это ложь. / strong ?php}?
Пред.
Начало
След.
Справочник по языку
Уровень выше
Разделение инструкций