# language_name_wals:	Russian
# language_name_glotto:	Russian
# iso639_3:	rus
# year_composed:	NA
# year_published:	2014
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Cyrl
# special_characters:	NA
# short_description:	GNOME
# source:	https://object.pouta.csc.fi/OPUS-GNOME/v1/raw/ru.zip
# copyright_short:	http://opus.nlpl.eu/GNOME.php
# copyright_long:	http://opus.nlpl.eu/GNOME.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Обзор платформы
Платформа GNOME предоставляет собой комплексную среду разработки графических приложений и другого программного обеспечения. Используя технологии GNOME, вы можете создавать высококачественное программное обеспечение, которое удовлетворяет и даже превосходит ожидания пользователей. Эта глава представляет собой короткий обзор компонентов, обсуждаемых в документе.
Основные технологии
GNOME предоставляет набор библиотек для создания привлекательного пользовательского интерфейса: для отображения и манипулирования элементами управления, для расположения и отрисовки текста большинства мировых систем письма и отображения сложной векторной графики на экране. Графические технологии GNOME рассматриваются в разделе
Библиотека GIO в GLib совместно с GVFS обеспечивают уровень абстракции файловой системы, который позволяет работать с файлами на удалённых серверах так же, как с локальными. Высокоуровневый программный интерфейс GIO для работы с файлами позволяет легко и быстро разрабатывать приложения. Использование GIO в приложениях позволяет им автоматически поддерживать работу с удалёнными файлами и каталогами. GIO и GVFS описаны в разделе
Для хранения настроек пользователя GNOME предоставляет библиотеку GConf, имеющую простой программный интерфейс, с помощью которого легко обеспечить настройки приложения, мгновенно вступающие в силу при изменении. С помощью GConf системные администраторы могут установить настройки по умолчанию и принудительные настройки для пользователей. GConf описан в разделе
GNOME предоставляет инструменты для интернационализации и поддержки специальных возможностей, что позволяет охватить большее количество потенциальных пользователей. Многое из этого уже встроено в систему, но при разработке приложений следует обращать внимание на многие моменты. Интернационализация описана в разделе
GNOME поставляется вместе с GStreamer — весьма мощной мультимедийной платформой для создания, редактирования и воспроизведения аудио и видео содержимого. GStreamer описан в разделе
GNOME также предоставляет полноценную подсистему печати, которая улучшает возможности CUPS когда это допустимо. Подсистема печати GNOME позволяет обеспечить приложение полноценным интерфейсом для печати высокого качества. Подсистема печати описана в разделе
Межпроцессное взаимодействие и работа с сетью
Рабочий стол GNOME полностью поддерживает передачу данных с использованием буфера обмена или перетаскивания. Программный интерфейс GTK+ позволяет создавать приложения, которые взаимодействуют со всеми другими приложениями рабочего стола. Функциональность буфера обмена и перетаскивания описана в разделе
Вместе с
GNOME содержит системный компонент Bonobo, являющийся надстройкой над CORBA. Bonobo позволяет создавать сложные встраиваемые компоненты, которые могут быть использованы в других программах. Заметим, что Bonobo устарел. Вместо него в новых программах нужно использовать D-Bus и другие средства. Bonobo описан в разделе
Чтобы облегчить пользователю управление сетью, GNOME поддерживает сервис обнаружения служб, что позволяет приложениям находить службы в локальной сети автоматически, а не требовать от пользователя вводить сетевые адреса вручную. Сервис обнаружения служб описан в разделе
Наконец, GNOME предоставляет набор библиотек для работы с XML и веб-службами, которые становятся всё более важными для разработчиков приложений. XML и веб-службы описаны в разделе
Технологии рабочего стола
Рабочий стол GNOME сопровождает множество способов, которыми приложения могут лучше интегрироваться, например можно совместно использовать панель для апплетов или подключаемые модули файлового менеджера. Множество этих особенностей описано в разделе
GNOME имеет всеобъемлющее руководство по созданию интерфейсов человеко-машинного взаимодействия, чтобы помочь разработчикам создать более удобные приложения. Эргономические стандарты GNOME были первыми среди свободных сред рабочего стола и продолжают развиваться, утверждаясь в GNOME в целях улучшения работы пользователя. Эргономичность рассматривается в разделе
GNOME обеспечивает полноценную систему помощи и руководства по написанию документации. Часто неощутимая, но хорошая справка может значительно улучшить программное обеспечение. Документирование рассмотрено в разделе
Разрешается копировать, распространять и/или изменять этот документ на условиях лицензии GNU Free Documentation License (GFDL), версии 1.1 или любой более поздней версии, опубликованной Фондом свободного программного обеспечения (Free Software Foundation), без неизменяемых частей и без текстов на обложках. Вы можете найти копию лицензии GFDL по
Это руководство — часть документации GNOME, которая распространяется на условиях лицензии GNU FDL. Если вы хотите распространять это руководство отдельно от остальной документации, вам следует приложить к руководству копию лицензии, как описано в разделе 6 лицензии.
Некоторые имена и марки используются компаниями для обозначения их продуктов и услуг и являются торговыми марками. Там, где эти имена присутствуют в документации и там, где участники проекта документирования GNOME знают об этом, имена выделяются заглавными буквами или начальной заглавной буквой.
ДОКУМЕНТ РАСПРОСТРАНЯЕТСЯ «КАК ЕСТЬ», БЕЗ ВСЯКИХ ГАРАНТИЙ, ЯВНЫХ ИЛИ НЕЯВНЫХ, ВКЛЮЧАЯ, БЕЗ ОГРАНИЧЕНИЙ, ГАРАНТИИ ТОГО, ЧТО ДОКУМЕНТ ИЛИ ИЗМЕНЁННАЯ ВЕРСИЯ ДОКУМЕНТА СВОБОДНА ОТ ДЕФЕКТОВ, ПРИГОДНА К ПРОДАЖЕ, ПРИГОДНА К ИСПОЛЬЗОВАНИЮ В ОПРЕДЕЛЁННЫХ ЦЕЛЯХ ИЛИ НЕ НАРУШАЕТ ЗАКОНЫ. ВЕСЬ РИСК, КАСАЮЩИЙСЯ КАЧЕСТВА, ТОЧНОСТИ ИЛИ ПРАВИЛЬНОСТИ ДОКУМЕНТА ИЛИ ИЗМЕНЁННЫХ ВЕРСИЙ ДОКУМЕНТА, ЛЕЖИТ НА ВАС. ЕСЛИ ДОКУМЕНТ ИЛИ ИЗМЕНЁННАЯ ВЕРСИЯ ДОКУМЕНТА ИМЕЕТ НЕДОСТАТКИ, ВЫ (А НЕ АВТОР ДОКУМЕНТА ИЛИ ЕГО ПОМОЩНИК) БЕРЁТЕ НА СЕБЯ СТОИМОСТЬ ЛЮБОЙ НЕОБХОДИМОЙ ДОРАБОТКИ, КОРРЕКЦИИ ИЛИ ВОССТАНОВЛЕНИЯ. ЭТОТ ОТКАЗ ОТ ГАРАНТИЙ СОСТАВЛЯЕТ ВАЖНУЮ ЧАСТЬ ЛИЦЕНЗИИ. НИКАКОЕ ИСПОЛЬЗОВАНИЕ ДОКУМЕНТА ИЛИ ИЗМЕНЁННОЙ ВЕРСИИ ДОКУМЕНТА НЕ ДОПУСКАЕТСЯ БЕЗ ДАННОГО ПРЕДУПРЕЖДЕНИЯ И
НИ ПРИ КАКИХ ОБСТОЯТЕЛЬСТВАХ И НИ ПРИ КАКОМ ЗАКОННОМ СПОСОБЕ, НИ ПО КАКОМУ СОГЛАШЕНИЮ ИЛИ ДРУГОЙ ПРИЧИНЕ, АВТОР, СОЗДАТЕЛЬ, ПОМОЩНИКИ ИЛИ РАСПРОСТРАНИТЕЛИ ДОКУМЕНТА НЕ НЕСУТ ОТВЕТСТВЕННОСТЬ ЗА ПРЯМОЙ, КОСВЕННЫЙ, СПЕЦИАЛЬНЫЙ, СЛУЧАЙНЫЙ ИЛИ ПРЕДНАМЕРЕННЫЙ УЩЕРБ ЛЮБОГО СВОЙСТВА, ВКЛЮЧАЯ, БЕЗ ОГРАНИЧЕНИЯ, ПОТЕРЮ РЕПУТАЦИИ, РАБОТОСПОСОБНОСТИ, КОМПЬЮТЕРНЫЕ СБОИ ИЛИ ПОЛОМКИ, ИЛИ ЛЮБОЙ ДРУГОЙ УЩЕРБ ИЛИ ПОТЕРИ, ВОЗНИКАЮЩИЕ ВСЛЕДСТВИЕ ИЛИ СВЯЗАННЫЕ С ИСПОЛЬЗОВАНИЕМ ДОКУМЕНТА ИЛИ ИЗМЕНЁННЫХ ВЕРСИЙ ДОКУМЕНТА, ДАЖЕ ЕСЛИ СТОРОНА БЫЛА УВЕДОМЛЕНА О ВОЗМОЖНОСТИ ТАКОГО УЩЕРБА.
ДОКУМЕНТ И ИЗМЕНЁННЫЕ ВЕРСИИ ДОКУМЕНТА ПРЕДОСТАВЛЯЮТСЯ ПОЛЬЗОВАТЕЛЮ НА УСЛОВИЯХ ЛИЦЕНЗИИ GNU FREE DOCUMENTATION LICENSE С УВЕДОМЛЕНИЕМ О ТОМ, ЧТО:
Буфер обмена и перетаскивание
Так как пользователи работают с всё большим количеством типов данных в различных приложения, то возрастает необходимость в обмене объектами и данными между приложениями. GNOME поддерживает два связанных метода обмена данными между приложениями: операция перетаскивания и копирование в общесистемный буфер обмена и вставка из него. Оба эти механизма работают между различными приложениями, включая те, что были разработаны без помощи GNOME.
Буфер обмена используется, когда пользователь явно копирует данные в приложении. В этом случае приложение захватывает буфер обмена. Когда пользователь вставляет данные в другое приложение, то это приложение запрашивает буфер обмена из первого приложения. Операции с буфером обмена полностью поддерживаются в GTK+.
Операции перетаскивания похожи, но требуют отслеживания курсора и его обновления при движении над потенциальными целями. Когда приложение уведомляется о движении курсора над ним во время перетаскивания, оно должно изменить курсор таким образом, чтобы показать может ли оно принять перетаскивание. GTK+ поддерживает перетаскивание с помощью сложного API, позволяющего легко управлять целями перетаскивания в приложениях.
Оба механизма — перетаскивание и буфер обмена, поддерживают обмен не только текстом, но и произвольными данными. Когда у приложения есть данные для обмена оно объявляет доступные форматы этих данных. Например, при копировании текста в веб-браузере, текстовый процессор может обработать данные в формате HTML, в то время как обычный текстовый редактор может принять только обычный текст без форматирования.
Необходимо обеспечить поддержку работы с буфером обмена и перетаскивания для всех данных, с которыми работает приложение. Буфер обмена и перетаскивание полезно не только для обработки текста, но и переноса между приложениями фрагментов файлов, изображений, звука. При использовании GTK+ приложения автоматически поддерживают работу с буфером обмена и перетаскивание для текстовых полей, цветовых кнопок, диалогов выбора файлов и других встроенных элементов управления. Для поддержки любого другого типа данных необходимо использовать API GTK+.
За дальнейшей информацией обратитесь к описаниями протоколов
Система обмена сообщениями D-BUS
D-Bus — шина сообщений, которая не зависит от рабочей среды и позволяет обмениваться сообщениями различным приложениям, средой и низкоуровневыми компонентами системы. D-Bus предоставляет простой программный интерфейс для отправки сообщений отдельным службам или широковещательных сообщений всем службам. D-Bus позволяет различным типам приложений обмениваться информацией и интегрироваться друг с другом и со средой, обеспечивая лучшую функциональность и взаимодействие с пользователем.
D-Bus предоставляет шину сеанса и системную шину. Шина сеанса используется приложениями, работающими в одном сеансе пользователя, для обмена данными и уведомлении о событиях, а также интеграции с рабочим столом пользователя. Например, видеопроигрыватель может послать сообщение D-Bus, чтобы предотвратить активацию хранителя экрана во время просмотра фильма.
Системная шина единственная в системе и работает независимо от сеансов пользователей. Она может взаимодействовать с приложениями в любом сеансе, позволяя приложениям взаимодействовать с системными компонентами без работы на низком уровне. Системная шина используется для обеспечения важной функциональности, которую пользователи ожидают от системы. Например, системная шина используется для слежением за включением и выключением сетевых интерфейсов, за подключением сетевых кабелей, а также состоянием батарей ноутбука.
D-Bus разработан совместно с
Для получения дополнительной информации по D-Bus обратитесь к
Bonobo и CORBA
Заметим, что Bonobo, libIDL и ORBit устарели; используйте D-Bus и другие средства. Смотрите выше.
Bonobo — это платформа для создания повторно используемых в приложениях компонентов. Будучи построенной на основе индустриального стандарта Общей архитектуры брокера объектных запросов (COBRA) Bonobo предоставляет интерфейсы, необходимые для создания компонентов с хорошим поведением в приложениях GNOME.
Компоненты Bonobo можно использовать в различных ситуациях для созданиям гибкого и расширяемого программного обеспечения. Например, компонент показа мультимедиа-содержимого можно внедрить в текстовый процессор, таким образом эффективно обеспечить поддержку мультимедиа без непосредственной её обработки. Компоненты Bonobo также используются для вставки апплетов в панель GNOME. С помощью Bonobo апплеты эффективно взаимодействуют с панелью, предоставляя пользователю целостный интерфейс.
Компоненты Bonono не ограничены графическими элементами управления. Bonobo использовался Evolution — почтовым клиентом и средством групповой работы — для доступа к адресной книге и календарю, что позволяет хранить информацию в одном месте, откуда её могут получить все приложения.
Bonobo — реализация COBRA, позволяющая выполнять компоненты в раздельных процессах. Компоненты могут быть написаны на различных языках и выполняться в различных средах выполнения, необходимо лишь, чтобы их интерфейсы соответствовали синтаксису языка определения интерфейсов (IDL). Гибкий дизайн COBRA позволяет компонентам выполняться даже на различных машинах в сети.
GNOME предоставляет собственную быструю и легкую реализацию CORBA — ORBit. Инструменты и библиотеки, поставляемые с GNOME позволяют написание компонентов на языке C, в то время как другие реализации COBRA исключают такую возможность.ORBit является невероятно быстродейственной реализацией CORBA.
Bonobo помогает заполнить пробелы в CORBA, предоставляя дополнительные интерфейсы и спецификации, необходимые для поддержки совместимых компонентов. Если же всё таки необходимо использовать CORBA без Bonobo, можно использовать его напрямую. Например, подсистема специальных возможностей GNOME использует CORBA для того, чтобы позволить вспомогательным инструментам наблюдать и взаимодействовать с запущенными приложениями.
Bonobo можно использовать для реализации сложных графических компонентов, которые могут быть внедрены в приложение. Тем не менее, для большинства задач межпроцессного взаимодействия GNOME всё больше использует подсистему D-Bus, так как интегрирование D-Bus в приложения значительно проще.
За дополнительной информацией о Bonobo обратитесь к
Обнаружение служб
Обнаружение служб DNS или Zeroconf — это технология автоматического определения расположения доступных служб в сети. Zeroconf позволяет использовать ресурсы сети без необходимости явного указания адреса ресурса или ручной настройки соответствующих приложений.
Обнаружение служб DNS используется во многих компонентах GNOME и его использование далее будет расширяться. Например,
Библиотека Avahi обеспечивает полную поддержку обнаружения служб DNS. За дополнительной информацией по Avahi обратитесь к
XML и веб-службы
В нашем мире, где постоянно усиливается взаимодействие, всё большему количеству приложений необходимо обеспечивать поддержку различных веб-служб. Иногда веб-службы просто обеспечивают дополнительную функциональность, иногда они составляют главное назначение приложения. Даже для приложений, которые долгое время были автономными, сейчас считается рациональным использование веб-служб.
Платформа GNOME предоставляет поддержку веб-служб приложениями и обеспечивает полным набором библиотек для использования, управления и преобразования XML — языка веб.
За дополнительной информацией обратитесь к
Обработка XML
Со дня официального представления в 1998 г. XML (eXtensible Markup Langauge) используется во всё большем количестве приложений. Он используется для широкого круга целей: от форматов документирования, например XHMTL и DocBook, до протоколов интернета, например SOAP и Jabber. XML имеет простой и чёткий базовый синтаксис, что позволяет сконцентрироваться на конкретных нуждах приложения.
GNOME поставляется с библиотекой libxml2, которая широко используется в рабочем окружении. Библиотека libxml2 обладает хорошим быстродействием и полностью совместима со стандартами XML, обеспечивая всё необходимое для работы приложений с XML.
Библиотека libxml2 предоставляет различные API для работы с XML, поэтому в приложениях можно использовать наиболее подходящий API. Кроме оригинального API, libxml2 также предоставляет основанный на обратных вызовах SAX2 API, интерфейсы потокового чтения и записи XML, и полную поддержку XPath.
Кроме поддержки механизма DTD, библиотека libxml2 полностью поддерживает верификацию документов с помощью RELAX NG, который предоставляет более гибкую модель верификации, оставаясь легким в использовании. Также частично поддерживается XML Schema — новый язык схем, представленный консорциумом W3C.
Для непосредственной работы с XML в приложении следует использовать библиотеку libxml2, что обеспечит полностью совместимую со стандартами обработку и вывод XML. Что позволит разработчикам не беспокоиться о совместимости приложений.
За подробной информацией о libxml2 обратитесь к
Преобразование XML с помощью XSLT
XSLT — это язык,основанный на XML, который предназначен для преобразования XML в другие форматы. XSLT основан на шаблонах, позволяющих соотносить определённые типы элементов XML и создавать соответствующие выходные элементы. Основанный на XML и XPath, XSLT позволяет разработчикам преобразовывать одно представление на основе XML в другое, более подходящее для данного приложения.
Библиотека libxslt, поставляемая с GNOME, полностью реализует XSLT и создана на базе XML и поддержки XPath в библиотеке libxml2, что обеспечивает быстродействие и полную совместимость со стандартами.
Для трансформации документов необходимо использовать библиотеку libxslt, что может существенно упростить разработку, хотя выбор XSLT для обработки XML оправдан не всегда. Библиотека libxslt позволяет добавлять расширенные элементы и функции, что может обеспечить всё необходимое для использования в конкретном приложении.
За дополнительной информацией о libxslt обратитесь к
Введение
GNOME — мощное и простое рабочее окружение, фокусирующееся на легкости использования, обеспечении специальных возможностей и интернационализации. GNOME создан быть удобным для всех независимо от технической подкованности, ограничений или языка пользователя. GNOME призван помочь пользователям легко использовать компьютер.
GNOME предоставляет разработчику исчерпывающую платформу для разработки профессионального программного обеспечения, легкого в использовании и приятного на вид. Этот документ представляет обзор платформы GNOME общего уровня со ссылками на детальные документы по каждой подсистеме платформы.
Кому следует прочитать этот документ
Этот документ следует прочесть тем, кто собирается создавать программное обеспечение, использующее платформу GNOME. Разработка приложений с использованием предоставляемых платформой GNOME возможностей позволяет создавать приложения, которые хорошо интегрируются в рабочую среду пользователя. Это руководство кратко описывает различные компоненты платформы для разъяснения того, какие библиотеки выполняют нужные функции. Руководство ссылается на более детальную документацию, чтобы можно было рассмотреть каждый компонент платформы более подробно.
Это руководство полезно для выбора платформы разработки программного продукта. Здесь представлен обзор возможностей GNOME для разработки программного обеспечения.
Это руководство также описывает способы расширения рабочего стола GNOME с помощью подключаемых модулей, апплеты панели GNOME и других полезных инструментов. Для получения дополнительной информации по разработке дополнительной функциональности GNOME желательно прочесть
Чтобы узнать, как перенести существующее программное обеспечение на платформу GNOME в дополнение следует прочесть
Сообщество GNOME
GNOME — это глобальная инициатива, реализуемая силами участников по всему миру. GNOME успешен благодаря усилиям участников проекта и пользователям. Этот раздел содержит список веб-сайтов и форумов, где можно узнать больше о GNOME и других организациях, работающих с GNOME.
Веб-сайты
www.gnome.org
Основной веб-сайт для пользователей GNOME. Содержит информацию по выпускам, файлы для загрузки и документацию.
library.gnome.org
Полный источник всей документации GNOME. Содержит всю документацию для пользователей и разработчиков, созданную GNOME, которая автоматически создаётся и обновляется с каждым выпуском.
foundation.gnome.org
Веб-сайт организации GNOME Foundation — некоммерческой организации, наблюдающей за разработкой GNOME.
bugzilla.gnome.org
Система отслеживания ошибок GNOME. Этот ресурс используется для сообщении об ошибках и запроса новых возможностей, а также для отслеживания состояния сообщений об ошибках.
live.gnome.org
Вики GNOME. Множество проектов внутри GNOME используют вики как основную веб-платформу. Кроме того, вики часто используется для создания набросков по будущей разработке.
developer.gnome.org
Старый веб-сайт с информацией для разработчиков. Содержит информацию для разработчиков, по эргономике, документацию и разделы групп перевода. Многие разделы этого сайта были заменены
mail.gnome.org
Информация по спискам рассылки GNOME. Этот сайт содержит полный архив всех список рассылки GNOME.
git.gnome.org
Хранилище GNOME Git, в котором отслеживаются все исходные коды с начала проекта.
Списки рассылки
gnome-list
Основной список рассылки для пользователей GNOME.
gnome-devel-list
Информация и вопросы о разработке с использованием платформы GNOME.
gnome-love
Первый список рассылки, который стоит посетить, чтобы войти в команду GNOME.
gnome-accessibility-list
Информация о специальных возможностях в приложениях GNOME.
gnome-doc-list
Информация о том, как писать документацию для приложений GNOME.
gnome-i18n
Информация об интернационализации и локализации приложений GNOME.
Удобство использования
Информация об эргономике приложений GNOME.
Конференции
GUADEC
Основная конференция пользователей и разработчиков GNOME. GUADEC проходит в мае или июне ежегодно. Каждый год она проходит в разных городах Европы. Основные темы GUADEC нацелены на пользователей, разработчиков и поставщиков программного обеспечения.
Саммит GNOME
Место, где разработчики собираются вместе. Саммит в основном поддерживается существующими разработчиками GNOME, хотя может быть полезен для начинающих. Ежегодно саммит проходит в Бостоне, США.
GNOME.conf.au
Ежегодное собрание, проходящее в рамках конференции linux.conf.au.
Другие организации
freedesktop.org
Совместная инициатива, направленная на развитие взаимодействия и общих технологий для разных рабочих сред. Несмотря на freedesktop.org, GNOME сотрудничает с другими проектами, такими как KDE и XFCE для облегчения разработчикам программного обеспечения создания удобных для пользователя приложений.
Mozilla
Свободное веб-ядро, и даже намного больше. GNOME работает бок о бок с группой разработчиков Mozilla, помогая разрабатывать удобный интерфейс.
OpenOffice.org
Свободный офисный пакет. GNOME сотрудничает с группой разработчиков OpenOffice.org, помогая создать более унифицированный интерфейс при использовании свободного офисного пакета в GNOME.
Free Software Foundation
Свобода. Основана в 1985 г. Free Software Foundation (Организация свободного программного обеспечения) работает над созданием полностью свободной операционной системы, дающих пользователю свободу использования, изменения и распространения программного обеспечения. Будучи частью проекта GNU, GNOME нацелен на создание полностью свободного программного обеспечения.
Регистрация приложений и типов файлов
Приложение полезно, если пользователь может его найти и запустить. Пользователи GNOME могут запускать приложения с помощью главного меню или запускать их непосредственно указывая файлы в файловом менеджере. Рабочее окружение GNOME позволяет добавлять приложения и типы файлов при установке приложения. Этот механизм описан на
Добавить приложения также просто, как предоставить файл содержимого рабочего стола с необходимой информацией. Файлы содержимого рабочего стола используют простой синтаксис ключ-значение с дополнительными данными, необходимыми для перевода конкретных значений. Файл содержимого рабочего стола для данного приложения содержит следующую информацию:
Название приложение и примечание, переведённые на все языки, поддерживаемые данным приложением.
Список категорий из фиксированного набора, которые используются для выбора положения приложения в главном меню приложений.
Изображение, либо как полный путь к файлу, либо как имя значка в системе тем значков рабочего стола.
Список типов файлов, поддерживаемых приложением и
Команда запуска данного приложения.
Если приложение обрабатывает тип файлов, который еще не зарегистрирован в системе, необходимо добавить этот тип файлов в реестр. Все типы файлов связаны с типами MIME. Например, звуковые файлы Ogg Vorbis имеют тип MIME
За дополнительной информацией обратитесь к
Апплеты панели
GNOME содержит гибкий и мощный механизм панелей, на которые пользователь может добавить любое количество апплетов, обеспечивающих быстрый доступ к ресурсам, информации и функциональность любого вида. Например, рабочий стол GNOME поставляется с апплетами для переключения между окнами и рабочими местами, апплетами для отображения текущей погоды, сетевой активности и другими.
Апплеты панели могут расширять функционал основного приложения, а могут быть независимыми приложениями. Для отображения мгновенных уведомлений приложения желательно использовать область уведомлений, которая также находится на панели пользователя. Апплеты следует использовать, когда необходимо обеспечить большую функциональность, чем могут предоставить значки области уведомлений.
Апплеты панели — независимые процессы, использующие Bonobo для взаимодействия с панелью. С помощью Bonobo апплеты интегрируются в панель, что обеспечивает целостность пользовательского интерфейса. Например, контекстное меню для каждого апплета панели содержит стандартные пункты его перемещения, удаления и блокирования. Кроме того, каждый апплет может добавить другие пункты в контекстное меню для выполнения нужных действий. Например, апплет
Заметим, что Bonobo устарел. Вместо него нужно использовать D-Bus и другие средства.
За дополнительной информацией об апплетах панели обратитесь к
Область уведомлений
Кроме кнопок запуска приложений и апплетов панель GNOME содержит область уведомлений, с помощью которой приложения могут уведомлять пользователя о произошедших событиях. Например, для уведомления о получении новых писем, доступных обновлениях, запланированных встречах и других событиях.
Уведомления — это значки, которые приложения могут поместить в область уведомлений на панели пользователя. Приложение может обработать события щелчков мыши на значке. В настоящее время система уведомлений реализована в экспериментальной библиотеке Egg, однако следующая версия GTK+ будет поддерживать значки уведомлений.
Область уведомлений описана в спецификациях
Менеджер файлов
GNOME поставляется с

Подключаемые модули
Подключаемые модули могут добавлять колонки в список просмотра и автоматически отображать эмблемы на файлах, что может быть использовано для предоставления пользователю информации, которою он может охватить одним взглядом. Например, подключаемый модуль

В дополнение к гибкой архитектуре, основанной на подключаемых модулях
Менеджер окон
Менеджер окон — специальная программа, ответственная за отображение рамок и заголовков окна. Менеджер окон отвечает за обработку всех операций, связанных с окнами, таких как: перемещение, изменение размера, сворачивание и перемещение между рабочими областями. Окна управляются с минимальным участием или практически без участия разработчиков приложения. Когда приложениям необходимо повлиять на менеджер окон, они могут добавлять дополнительные сведения к своим окнам, вызывая функции GTK+.
В то же время внешние программы могут взаимодействовать напрямую с менеджером окон и даже контролировать его поведение. Используя библиотеку GNOME libwnck, приложения могут получить информацию о всех окнах и дать команды менеджеру окон на выполнение различных действий с этими окнами.
Библиотека libwnck не специфична для менеджера окон GNOME. Вся её функциональность использует Расширенные сообщения менеджера окон (Extended Window Manager Hints) или EWMH. EWMH разработан совместно с
Взаимодействия с оконным менеджером с помощью libwnck используются как в простых задачах, например отображения рабочего пространства и апплета, показывающего список открытых окон, так и сложных, например выполнение автоматических действий при создании нового окна на основе некоторых свойств окна.
Центр управления
Рабочий стол GNOME предоставляет одно меню для всех системных настроек рабочего стола и административных настроек. Диалоги настроек и свойств, помещённые в это меню, становятся легко доступными. Диалоги могут быть помещены в меню свойств путем их добавления в реестр приложений с категорией
Диалог настройки системы рабочего стола следует помещать в административное меню, а диалоги, изменяющие настройки лишь нескольких приложений, следует помещать в меню предпочтений. Для настроек конкретных приложений использовать эти глобальные меню нежелательно.
Хранение паролей
GNOME предоставляет современный и защищённый менеджер брелоков для хранения паролей пользователя и другой конфиденциальной информации. Приложения могут использовать библиотеку менеджера брелоков для хранения паролей и доступа к ним. Пользователи могут управлять своими паролями, используя приложение GNOME
Менеджер брелоков предоставляет несколько брелоков, каждый из которых может содержать любое количество элементов. Элементы брелока содержат какую-либо информацию, чаще всего пароли. Каждый брелок блокируется индивидуально, и для разблокирования необходимо указать пароль для каждого брелока. После разблокирования брелока пользователю становятся доступны все его элементы.
Менеджер брелоков поддерживает список контроля доступа для каждого элемента брелока, контролируя доступ приложений только к своим элементам. Если неизвестное приложение пытается получить доступ к элементу брелока, менеджер брелоков запросит у пользователя разрешить или запретить доступ для данного приложения. Этот механизм предотвращает доступ к важным данным пользователя вредоносных или плохо написанных программ.
Данные брелока хранятся в файловой системе и шифруются с помощью блочного алгоритма шифрования AES, а хэш атрибутов содержимого шифруется с помощью SHA1. Хэш атрибутов используется для поиска элементов, запрошенных приложением без разблокировки брелока. Брелок необходимо будет разблокировать, когда нужный элемент найден и к нему будет разрешён доступ.
Менеджер брелоков содержит брелок сеанса, содержимое которого никогда не записывается на диск и теряется при окончании сеанса пользователя. Обычно он используется для хранения паролей, которые могут использоваться только в текущем сеансе.
При использовании GIO для доступа к удалённым серверам автоматически используются преимущества менеджера брелоков. Когда GVFS необходимо аутентифицировать пользователя он пытается сохранить пароль либо в брелоке по умолчанию, либо в брелоке сеанса.
Менеджер брелоков необходимо использовать в приложении, если требуется сохранять пароли или другую важную информацию. Использование менеджера брелоков обеспечит удобный интерфейс пользователя и безопасное хранение данных.
Программный интерфейс настроек описан в
Управление сеансами
GNOME обеспечивает механизм, позволяющий приложениям восстанавливаться и завершаться от сеанса к сеансу. Пользователь может завершить сеанс с запущенным приложением, а при следующем входе это приложение полностью восстановится. Для обеспечения такой функциональности приложение должно уметь работать с менеджером сеансов и сохранять свое состояние при завершении сеанса.
Заметим, что этот раздел устарел, так как GnomeClient и Libgnomeui рекомендуется больше не использовать. Вместо них в новом коде нужно использовать
GNOME предоставляет простой API для управления сеансами в библиотеке пользовательского интерфейса GNOME. Обратитесь к разделу
Адресная книга и календарь
С помощью сервера данных Evolution GNOME предоставляет единую адресную книгу и календарь, которые могут использовать любые приложения для сохранения и получения информации, что позволяет пользователю больше не поддерживать списки контактов в каждом приложении отдельно и вручную копировать события в календарь.
Компьютеры всё чаще используются для общения с друзьями и коллегами. Почтовые программы, программы мгновенных сообщений, телефонии и видео-конференций используются для общения с другими людьми. Все эти программы используют списки контактов для удобства пользователей, а с помощью сервера данных Evolution они могут хранить всю контактную информацию в едином хранилище, что позволяет всем приложениям получать доступ к требуемой информации о контактах пользователя.
Кроме того, приложения могут использовать сервер приложений Evolution для хранения и получения информации о назначенных встречах и событиях в календаре пользователя. Например, часы на панели при щелчке мыши на них показывают простой календарь, в котором отмечаются все запланированные пользователем встречи, что позволяет быстро просмотреть намечающиеся встречи без запуска приложения Календарь.
За дополнительной информацией об адресной книге обратитесь к
Эргономика
Рабочий стол GNOME нацелен на удобство использования и обеспечение целостного и простого интерфейса пользователя. Компьютеры используются для выполнения работы (или игры), но не для решения сложных интерфейсных головоломок. При проектировании приложений необходимо рассмотреть то, как хорошо пользователи узнают общие парадигмы интерфейса, как быстро они изучат элементы интерфейса, которые уникальны для приложения и как эффективно они смогут выполнять задачи после изучения интерфейса.
GNOME предлагает исчерпывающее руководство по созданию пользовательских интерфейсов, которое помогает создать привлекательные и удобные приложения. Хотя ни одно руководство не может дать единого ответа на все вопросы эргономики, но понимание рассмотренного руководства облегчит создание эргономичных приложений. За дополнительной информацией обратитесь к
Документация
Все приложения необходимо сопровождать документацией, помогающей пользователям понять суть приложения и решать возникающие проблемы. Хотя хорошо спроектированное приложение не требует прочтения документации перед использованием, тем не менее документация может быть важным инструментом пользователя, особенно для сложных приложений.
GNOME содержит единую платформу обеспечения пользователя документацией. Документацию можно поставлять в формате DocBook, на настоящий момент признаваемом индустриальным стандартом. При использовании формата DocBook не нужно беспокоиться о деталях форматирования, так как документация будет автоматически отформатирована в соответствии с едиными соглашениями, принятыми для всей системной документации.
Приложение просмотра помощи GNOME
За подробной информацией о написании документации к приложению обратитесь к
@@image: 'figures/graphics.png'; md5=d7ab482cbaaf268b4c439c57b2624826
@@image: 'figures/pango.png'; md5=e308eb839e5e70aea097a4cfe744e44c
@@image: 'figures/i18n.png'; md5=75f5d47d566817d32f1ed76e4c761ffb
Графические интерфейсы
Большинству приложений необходимо иметь графический интерфейс для взаимодействия с пользователями. Графические интерфейсы могут создать интуитивное и легко воспринимаемое окружение для взаимодействия пользователя с программным обеспечением, и пользователи ожидают от приложения удобного и привлекательного интерфейса.
Платформа GNOME использует разветвлённую графическую технологию пользовательского интерфейса: начиная от стандартных элементах управления до API для рисования высококачественной графики. Использование графических технологий в GNOME позволяет создавать целостные, интуитивно понятные и эстетически приятные приложения.
Поуровневый обзор графических библиотек
GTK+
GTK+ — это основная библиотека, используемая для построения интерфейсов пользователя. Она предоставляет все графические элементы управления пользователя или виджеты, используемые в графических приложениях. Современные объектно-ориентированные программные интерфейсы позволяют конструировать привлекательные и естественные интерфейсы для пользователя без необходимости иметь дело с низкоуровневым программированием и взаимодействия устройств.
В дополнение к стандартным элементам управления: кнопок, флажков, текстовых полей, GTK+ также содержит мощный API «Модель-Внешний вид-Контроллер» (MVC) для древовидных полей, многострочных редакторов, действий меню и панелей.
Элементы управления в GTK+ располагаются в окне в соответствии с моделью упаковки в коробку. Программист указывает только то, как упаковать виджеты относительно друг друга в рамках контейнера, а не абсолютные координаты. GTK+ гарантирует, что размер окна будет соответствовать его содержимому и при необходимости будет автоматически изменён.
Так как GTK+ предлагает гибкий API, то разработать новые виджеты достаточно легко. Большое количество библиотек третьих сторон обеспечивает дополнительные элементы управления, и многие разработчики создают свои виджеты для конкретных целей.
GTK+ обрабатывает множество сложных деталей пользовательского интерфейса и взаимодействия с пользователем и предоставляет простой и мощный API, позволяющий сосредоточится на основных задачах приложения. Приложения, использующие GTK+ автоматически наследуют установленные пользователем тему и шрифты, а также будет корректно работать с технологиями специальных возможностей, их поведение будет привычным для пользователей.
Для получения более полной информации о GTK+ обратитесь к
Libglade
Заметим, что Libglade устарел и в новом коде нужно использовать
Libglade — это библиотека для динамического построения интерфейса пользователя из описаний на языке XML. Для конструирования интерфейса пользователя можно использовать дизайнер интерфейсов, например
Libglade позволяет программисту сконцентрироваться на логике приложения, оставляя полноценное построение интерфейса. Дизайнеры графического интерфейса также могут легко создавать интерфейсы без знаний того, как работает программа.
За дополнительной информацией о Libglade обратитесь к
Pango
Pango используется для решения различных задач работы со шрифтами и прорисовки. На большинстве систем GNOME Pango использует библиотеки FreeType, fontconfig и Cairo для доступа к шрифтам и прорисовки текста. На других системах Pango использует специфичные шрифтовые механизмы: Uniscribe на Microsoft Windows и ATSUI на MacOS.
Pango — ключевая библиотека обработки текста и шрифтов в платформе GNOME. Она отвечает за расположение и прорисовку текста и используется в GTK+.
Pango широко поддерживает различные системы письменности, используемые во всем мире. Многие системы письменности имеют сложные правила расположения символов и составления знаков. С помощью Pango можно писать и корректно отображать почти все языки, что позволяет пользователю в любом месте просматривать текст на родном языке. Поддержка различных систем письменности осуществляется автоматически и разработчику не нужно писать специальный код для поддержки разных языков.
Многоязыковой вывод с помощью Pango
Снимок экрана текстового редактора
Pango поддерживает стилизацию текста, обычно используемую в документах и интерфейсах, включая курсив, высоту шрифта и подчёркивание. Pango использует простой XML-подобный словарь, называемый PangoMarkup, который позволяет устанавливать размер шрифта, цвет, стиль и другие атрибуты текста. С помощью PangoMarkup можно описать внутренние стили без ручного редактирования блоков текста. PangoMarkup можно использовать напрямую из GTK+, благодаря чему легко стилизовать текст в графических интерфейсах.
При необходимости расположить текст непосредственно на экране или другом устройстве вывода следует использовать библиотеку Pango напрямую, при этом текст будет выводиться согласованно с библиотекой GTK+ и остальной частью платформы GNOME. Что поможет создать переносимый код и, что ещё более важно, гарантирует, что приложение сможет корректно отобразить текст на сотнях различных языков.
За дополнительной информации о Pango обратитесь к
GDK
GDK работает на разных платформах, включая the X Window System, Microsoft Windows, DirectFB и Quartz. Независимо от того на какой платформе работает GDK, он имеет стабильный программный интерфейс, позволяя GTK+ и приложениям, написанным с использованием GTK+, без модификации работать на разных платформах.
GDK — это низкоуровневая библиотека, используемая GTK+ для работы с графикой и устройствами ввода. Хотя непосредственное использование библиотеки GDK в коде довольно редко, она содержит весь функционал необходимый для прорисовки объектов и текста на экране, а также взаимодействия с пользователем с помощью различных устройств ввода.
GDK предоставляет графический контекст и графические примитивы, удобные для прорисовки простых объектов и вывода изображений на экран. Так как Cairo предоставляет систему отрисовки с большими возможностями, GDK содержит перехватчики для использования контекста Cairo внутри GDK.
GDK позволяет использовать события клавиатуры, мыши и других устройств ввода, вместо использования высокоуровневых сигналов GTK+. Также GDK предоставляет доступ к низкоуровневым процедурам перетаскивания и работы с данными системного буфера обмена. При реализации собственных элементов управления, возможно, понадобится этот функционал для реализации корректного взаимодействия с элементами интерфейса.
GDK содержит и другой функционал, необходимый для реализации полноценного графического пакета, например GTK+. Так как GDK выступает в роли уровня абстракции платформы, позволяя GTK+ работать в различных средах, он обеспечивает API для всего системного функционала, необходимого GTK+, например получение информации о множественных дисплеях, разрешении экрана и глубине цвета, цветовых картах и курсорах.
Необходимость в использовании GDK возникает, если есть потребность в низкоуровневом доступе к слою, находящемуся под оконной системой, включая низкоуровневый доступ к событиям, окнам и буферу обмена. Использование GDK для таких задач гарантирует переносимость кода и интеграцию с остальной частью кода, использующего GTK+. В основном, не следует использовать примитивные процедуры отрисовки из GDK, вместо этого следует использовать расширенный функционал Cairo.
Для получения более полной информации посетите
Cairo
Cairo — это библиотека двумерной графики с разветвлённым API для отрисовки векторной графики, составления изображений и отображения сглаженного текста. Cairo поддерживает множество систем вывода, включая X Window System, Microsoft Windows и буферы изображений, позволяя составлять переносимый код для отрисовки графики на различных устройствах вывода.
Модель прорисовки Cairo похожа на модели PostScript и PDF. API Cairo работает с такими графическими операциями, как создание и заполнение кубических кривых Безье, создание изображений и афинные преобразования. Эти векторные операция позволяют выводить качественную сглаженную графику без работы с графикой на уровне пикселов в коде приложения.
Богатая модель отрисовки Cairo позволяет выводить качественную графику на разные устройства вывода. Можно использовать одинаковый API как для вывода прекрасной графики и текста на экран, так и для создания изображений или создания вывода, пригодного для печати.
Cairo необходимо использовать в приложении при отрисовке графики помимо виджетов, предоставляемых GTK+. Большая часть механизмов отрисовки внутри GTK+ реализована с помощью Cairo. Использование Cairo для пользовательской графики позволит приложениям выводить высококачественную, сглаженную и независимую от разрешения графику.
За дополнительной информацией о Cairo обратитесь к руководству
Виртуальная файловая система
GIO — часть библиотеки GLib, ключевая библиотека, используемая для операций с файлами и каталогами в приложениях GNOME. GIO реализует уровень абстракции унифицированной файловой системы с возможностью подключения дополнительных модулей. В GNOME библиотека GVFS является внутренним компонентом GIO, реализующим работу с различными сетевыми и локальными протоколами. С помощью GIO и GVFS приложения могут работать с файлами на удалённых машинах так же легко, как с локальными.
GIO может предоставить расширенную информацию о файлах и каталогах, включая тип MIME, значок файла и какое приложение можно использовать для открытия файла. Так как библиотека GVFS использует стандарты
GIO используется повсюду в среде рабочего стола GNOME. Файловый менеджер
Для получения более полной информации посетите
В предыдущих версиях GNOME для доступа к фалам и папкам использовалась библиотека GnomeVFS, которая обеспечивает похожий функционал, включая прозрачный доступ к удалённым папкам, но имеет множество ограничений, которые были устранены в GIO. Библиотека GnomeVFS устарела и не должна использовать в новом коде, хотя она и будет поддерживаться на протяжении всего жизненного цикла GNOME 2. За дополнительной информацией обратитесь к
Конфигурирование и блокирование настроек
GConf — это система для хранения и получения данных о конфигурации GNOME. GConf состоит из двух частей: клиентской библиотеки для доступа к установкам и службы, которая отвечает за хранение и предоставление этих параметров. Использование службы позволяет GConf использовать различные внутренние интерфейсы для хранение параметров, проверки ввода и обеспечивать одновременный доступ разных приложений.
Параметры, находящиеся в GConf, сохраняются и возвращаются с использованием уникального ключа или строки-идентификатора. Ключи используют простое иерархическое пространство имен для избежания конфликта между приложениями и средой. Вы можете предоставить файл схемы с описанием ваших ключей конфигурации. Это позволяет GConf проверять правильность ввода пользовательских данных и отображать локализованную документацию о ключах. Кроме того, это помогает системным администраторам, которые могут устанавливать несколько параметров за раз, без необходимости перемещаться между диалоговыми окнами.
GConf может искать настройки из различных каталогов настроек, обычно, из различных мест в файловой системе. При корректно настроенных системных источниках, GConf позволяет системным администраторам устанавливать настройки по умолчанию и принудительные настройки. Такие инструменты, как
Пользовательская библиотека GConf поддерживает уведомления об изменениях настроек, что позволяет легко обеспечить мгновенную реакцию приложения, независимо от того сделаны ли изменения внутри приложения или с помощью другого инструмента. Установка значения ключа уведомит все заинтересованные приложения, что позволяет без особых усилий работать с настройками всего окружения рабочего стола или нескольких приложений одновременно.
GConf позволяет легко заблокировать системные настройки для предотвращения их изменения пользователями путем указания ключей только для чтения. Дополнительно GNOME поддерживает ряд высокоуровневых ключей, позволяющих заблокировать такие действия как сохранение на диск и изменение расположения панели.Такие инструменты как
Вам следует использовать GConf для хранения всех параметров приложения пользователя. Использование GConf упрощает одновременный доступ к параметрами и даёт доступ к параметрам для системных администраторов, а также для инструментов конфигурирования и резервирования.
Для получения более полной информации прочтите
Интернационализация
Платформа разработки и рабочий стол GNOME полностью поддерживают интернационализацию и локализацию приложений. Интернационализация — это гарантия того, что приложение может быть локализовано, включая возможность перевода всех литералов, корректно используя числовые и форматные строки и выполнения всех подстроек для различных особенностей представления времени, даты, единиц измерения и форматирования.
GNOME использует стандартный механизм gettext и связанные с ним инструменты для выполнения локализации. Поддержка локализации с помощью gettext встроена в каждый компонент платформы GNOME. Любой исходный код можно просканировать на наличие специально помеченных литералов с помощью автоматизированных инструментов. Эти строки затем помещаются в файлы PO, что позволяет переводчикам отслеживать свои переводы. С помощью gettext можно легко и эффективно получить доступ из каталогов переводов, установленных с приложением, к переведённым версиям всех видимых пользователем строк текста в приложении.
Такие домены каталоги могут быть созданы с помощью файлов PO, которые используются переводчиками для отслеживания изменения строк и обновления их перевода. GNOME поставляется с intltool — инструментом управления переводами в фалах PO. С его помощью переводчики могут использовать файлы PO для перевода не только строк текста в приложениях, но и других используемых типов файлов, например файлов схем GConf, файлов содержимого рабочего стола и XML файлов.
GNOME также предоставляет утилиту xml2po, которая является частью пакета gnome-doc-utils package. С её помощью переводчики могут использовать файлы PO для перевода документации, составленной в различных форматах XML, включая XHTML и DocBook.
Интернационализация включает в себя не только возможность перевода текстовых строк, GNOME поддерживает разработку приложений на каждом этапе. GTK+ автоматически подстраивает свое представление для языков, читаемых справа налево, а Pango полностью поддерживает двунаправленный текст и различные системы письменности. GTK+ поддерживает разные методы ввода, позволяя эффективно использовать клавиатуры для различных языков. Вся платформа GNOME использует кодировку Unicode UTF-8, обеспечивая доступ к символам и системам письменности всего мира.

Снимок экрана приложения
Интернационализация приложения упрощает его доступность для многих пользователей во всём мире. Программисты должны обеспечить корректную интернационализацию приложения перед тем, как оно может быть полностью локализовано, в то время как профессиональные переводчики обеспечат перевод на все языки.
Дополнительную информацию о интернационализации в GNOME обратитесь к
Специальные возможности
Специальные возможности — это возможность использования приложения людьми с ограниченными возможностями. Ограниченные возможности проявляются во многих формах: зрительные, двигательные, слуховые и языковые и другие ограничения. Существует множество людей с какими-либо ограничениями и разработка приложения доступного для них позволяет большему количеству людей использовать приложения более эффективно.
GNOME поддерживает специальные возможности с помощью платформы ATK, которая определяет набор интерфейсов, к которым привязываются графические компоненты. Что позволяет, например, программам синтеза речи читать вслух текст интерфейса пользователя и взаимодействовать с его элементами управления. Поддержка ATK встроена в GTK+ и остальную часть платформы GNOME с использованием библиотеки GAIL, поэтому любые приложения, использующие GTK+ бесплатно получают достаточную поддержку.
Тем не менее, следует помнить о специальных возможностях при разработке приложения. Хотя интерфейсы GTK+ по умолчанию обеспечивают достаточную поддержку специальных возможностей, часто можно улучшить работу приложения с инструментами специальных возможностей, снабдив ATK дополнительной информацией. При разработке пользовательского виджета следует убедиться, что его свойства доступны ATK. Следует избегать использования звука, графики и цвета как единственных методов представления информации пользователю.
Рабочий стол GNOME поставляется с множеством инструментов специальных возможностей, помогающих пользователям с ограничениями полноценно использовать рабочий стол и приложения. Приложения, полностью реализующие ATK, будут в состоянии работать с этими инструментами, которые включают в себя: чтение текста с экрана вслух, увеличительное стекло, экранную клавиатуру и
Для получения полных рекомендаций по поддержке специальных возможностей обратитесь к
Аудио и видео
GStreamer — мощная мультимедийная библиотека для воспроизведения, создания и манипулирования звуком и видео. С помощью GStreamer можно проигрывать звук и видео, записывать их из различных источников, а также редактирование содержимое. GStreamer по умолчанию поддерживает кодирование и декодирование во множестве форматов, а поддержка дополнительных форматов может быть добавлена с помощью подключаемых модулей.
GStreamer имеет гибкую архитектуру в которой данные обрабатываются как поток через элементы системы. Каждый элемент может наложить фильтры на содержимое, например кодировать или декодировать его, наложить несколько источников или трансформировать содержимое мультимедиа. Подобная архитектура допускает разнообразное сочетание элементов, реализующее практически любой эффект. Более того, GStreamer спроектирован таким образом, чтобы иметь низкие накладные расходы, поэтому может быть использован в приложениях с высокими требованиями к задержкам.
Кроме мощного API для манипулирования медиа-содержимым, GStreamer также предоставляет удобные инструменты для простого воспроизведения. GStreamer может автоматически создавать потоки для чтения и воспроизведения файлов любых поддерживаемых форматов, что позволяет легко использовать звук и видео в приложениях.
Архитектура GStreamer позволяет с помощью подключаемых модулей добавлять кодеки, декодеры и фильтры содержимого любых типов. Сторонние разработчики могут создавать подключаемые модули GStreamer, которые автоматически станут доступными другим приложениям, использующим GStreamer. Подключаемые модули могут обеспечивать поддержку дополнительных форматов или добавлять новую функциональность и эффекты.
В приложении следует использовать GStreamer если необходимо прочитать или воспроизвести мультимедиа содержимое, а также для манипуляций со звуком и видео. Использование GStreamer облегчает разработку приложений и обеспечивает хорошо протестированными элементами для множества целей.
Исчерпывающая информация по GStreamer находится по адресам:
Печать
Большинству приложений требуется поддержка печати. Пользователи ожидают, что можно распечатать любое содержимое, видимое на экране. Платформа GNOME содержит библиотеки, помогающие обеспечить приложению возможность высококачественной печати.
Печать GNOME
Заметим, что этот раздел устарел и вместо libgnomeprint и libgnomeprintui нужно использовать
Подсистема печати GNOME состоит из двух библиотек, помогающих обеспечить высококачественную печать и целостный интерфейс приложения. В основе подсистемы печати находится библиотека libgnomeprint — библиотеки для создания данных в формате PostScript для отправки на принтер. Над ней находится библиотека libgnomeprintui, которая обеспечивает стандартные элементы управления печатью для пользовательского интерфейса.
Библиотека libgnomeprint реализует графическую модель PostScript, используемую большинством принтеров. Принтеры, не поддерживающие PostScript, используются с помощью CUPS, описанного ниже. Кроме стандартной графической модели PostScript libgnomeprint также поддерживает альфа-каналы и сглаживание.
Библиотека libgnomeprintui предоставляет стандартный диалог печати, диалог просмотра печати и множество других элементов управления и функциональность, необходимые для создания интуитивного пользовательского интерфейса печати. Подсистема печати GNOME берет на себя детали поиска принтеров, постановки в очередь задач печати, а также обеспечивает экспорт в форматах PostScript и PDF непосредственно в диалоге печати.
Библиотека libgnomeprint используется для формирования данных в формате PostScript для печати. А библиотека libgnomeprintui используется для построения пользовательского интерфейса печати, даже если готовые для печати данные получаются из другого источника. Использование подсистемы печати GNOME обеспечивает целостность пользовательского интерфейса и возможностей, которые пользователи ожидают от печатающих приложений.
CUPS
На большинстве систем GNOME CUPS (Common UNIX Printing System — общая система печати UNIX) выступает в роли низкоуровневой подсистемы печати. CUPS предоставляет современную, богатую возможностями архитектуру для поиска принтеров, доступа к параметрам принтеров, а также управление очередью заданий на печать для различных типов принтеров.
CUPS содержит набор утилит для автоматического поиска принтеров локально и в сети, что позволяет пользователям не только видеть все доступные принтеры, но и использовать различные типы принтеров без ручной настройки.
CUPS обеспечивает унифицированный интерфейс печати, независимо от расположения и типа принтера. Различные протоколы печати обрабатываются CUPS однообразно путём автоматического применения фильтров к содержимому, отправляемому на принтеры. Приложениям достаточно предоставить данные в формате PostScript, а CUPS автоматически конвертирует их для принтеров, не поддерживающих PostScript.
CUPS также предоставляет параметры в виде файлов описания принтера PostScript (PPD). Параметры PPD позволяют приложениям отражать в пользовательском интерфейсе возможности конкретного принтера целостно. Например, PPD позволяет определить и отразить в пользовательском интерфейсе поддерживает ли принтер брошюрование и прошивку результатов печати задания.
В большинстве случаев в приложении нет необходимости напрямую взаимодействовать с CUPS, так как с помощью подсистемы печати GNOME можно получить доступ к мощности и гибкости CUPS автоматически. Основа CUPS помогает создать больше удобств для пользователя с меньшим объемом программирования.
Привязки для языков программирования
Платформа GNOME в основном написана на языке C, но таким образом, чтобы легко можно было привязывать другие языки программирования. С помощью языковых привязок можно вести разработку в GNOME с помощью другого языка программирования.
Существует множество привязок к языкам программирования, и платформа GNOME официально поддерживается привязки к таким языкам как C++, Java, Perl и Python.
C++
Привязки C++ обеспечивают полное покрытие всей платформы GNOME, включая GTK+, Libglade и GConf. Привязки C++ предоставляют обёртки в виде классов C++ для всех объектов платформы и позволяют программисту создавать пользовательские виджеты с использованием обычного наследования C++. Они предоставляют API c типо-безопасными обработчиками сигналов, с полноценным использованием стандартной библиотеки C++ и управлением памятью C++.
Для получения более полной информации посетите
Java
Привязки Java обеспечивают полное покрытие платформы GNOME, включая GTK+, Cairo и GConf. Привязки Java оборачивают все объекты платформы с помощью объектов Java и позволяют разработчикам создавать пользовательские виджеты с помощью обычного наследования Java. Они обеспечивают API на Java, использующий библиотеку классов Java и по необходимости наследование.
За дополнительной информацией о привязках GNOME Java обратитесь к
Perl
Привязки Perl обеспечивают интерфейсы Perl для платформы GNOME, включая GTK+, GnomeVFS и GConf. Привязки Perl — это обёртки всех объектов платформы с помощью объектов Perl для использования стандартных методов Perl для манипулирования ими. Они обеспечивают полностью совместимый API с использованием оригинальных типов данных по необходимости.
За дополнительной информацией обращайтесь к
Python
Привязки Python предоставляют интерфейсы Python для платформы GNOME, включая GTK+, GnomeVFS и GConf. Привязки Python — это обёртки всех объектов платформы с помощью объектов Python, которые позволяют создавать пользовательские виджеты, используя наследование Python. они обеспечивают Python API, который автоматически обрабатывает приведение типов и управление памятью.
За дополнительной информацией о привязках GNOME Python посетите
Другие языки программирования
Для других языков программирования существуют полные или частичные привязки, например для C#, Eiffel, JavaScript, Ruby и Scheme. Не смотря на то, что они в настоящее время официально не поддерживаются GNOME, многие из них такого же высокого качества, как официальные привязки GNOME, а многие из них, возможно, будут включены как официальные в будущих выпусках GNOME.
Список всех языковых привязок находится на
Краткий обзор модулей
Это приложение кратко описывает библиотеки, включённые в рабочий стол GNOME и платформу разработки. Библиотеки сгруппированы по модулям с кратким описанием и по возможности ссылками на подробную информацию в этом документе.
Модули платформы
Модули платформы разработки GNOME жестко гарантируют стабильность API и ABI. Гарантируется, что приложения, разработанные с использованием модулей платформы будут работать без изменений в течение всего жизненного цикла GNOME 2.
GConf
GConf предоставляет службу и библиотеку для хранения и получения конфигурационной информации. Описывается в
ORBit
ORBit — это устаревший сервер CORBA. Устаревший компонент архитектуры GNOME — Bonobo, основан на CORBA. CORBA рассматривается в
atk
ATK обеспечивает набор интерфейсов специальных возможностей, которые реализованы другими инструментами и приложениями. С помощью интерфейсов ATK инструменты специальных возможностей могут получить полный доступ к просмотру и управлению запущенных приложений. ATK рассматривается в
gail
GAIL предоставляет реализацию интерфейсов ATK для GTK+ и библиотек GNOME, позволяя инструментам специальных возможностей взаимодействовать с приложениями, написанными с использованием этих библиотек. В 2009 году GAIL перемещён в GTK+. Специальные возможности рассматриваются в
gio
GIO — часть GLib, обеспечивающая высокоуровневый API для доступа к каталогам и файлам. Совместно с библиотекой GVFS, она обеспечивает уровень абстракции файловой системы, дающий прозрачный доступ к локальным и удалённым файлам. GIO рассматривается в
glib
GLib является базовой библиотекой для написания программ и библиотек на языке C. Она обеспечивает основные объекты, используемые системой в GNOME, реализацию главного цикла приложения и большой набор функций для манипуляций со строками и общими структурами данных.
gnome-vfs
GnomeVFS — устаревшая библиотека для доступа к файлам и папкам. Она заменена GIO и GVFS. Вновь написанный код должен использовать вместо нее GIO.
gtk+
GTK+ — основная библиотека, используемая для построения интерфейсов в приложениях GNOME. Она предоставляет элементы управления пользовательского интерфейса и обработчики сигналов для управления пользовательским интерфейсом. GTK+ рассмотрена в
gvfs
GVFS является подсистемой GIO, обеспечивая доступ ко множеству протоколов с помощью API GIO. Разработчикам не нужно напрямую обращаться к GVFS, так как приложения, использующие GIO будут автоматически использовать GVFS, если она доступна в системе.
libIDL
libIDL — это устаревшая библиотека для разбора файлов языка определения интерфейсов(IDL), которые необходимы интерфейсам CORBA. libIDL используется устаревшей реализацией GNOME CORBA — ORBit. CORBA рассмотрена в
libart_lgpl
libart — это устаревшая графическая библиотека, отрисовывающая векторные пути, используется виджетом GnomeCanvas. Вместо неё в новом коде нужно использовать Cairo и/или другие средства.
libbonobo
Bonobo — это устаревшая платформа для создания компонентов многократного использования в приложениях GNOME, построенная на основе CORBA. Bonobo рассматривается в
libbonoboui
Устаревшая библиотека Bonobo UI предоставляет множество элементов управления пользовательского интерфейса, с помощью компонентов платформы Bonobo. Bonobo рассматривается в
libglade
Libglade — это устаревшая библиотека для динамического построения интерфейсов на основе XML-описаний. Вместо неё нужно использовать
libgnome
Устаревшая библиотека libgnome предоставляет полезные функции для построения современных приложений, включая управление сеансами, активацию файлов и URI и отображение справки.
libgnomecanvas
GnomeCanvas — это виджет для гибкого создания интерактивно структурированной графики.
libgnomeui
Устаревшая библиотека libgnomeui предоставляет дополнительные виджеты для приложений. Многие из них уже перенесены в GTK+.
libxml2
Библиотека libxml2 предоставляет программный интерфейс для работы с XML в соответствии со стандартами. Библиотека libxml2 рассматривается в
libxslt
Библиотека libxslt предоставляет быструю и полную реализацию XSLT— языка для преобразования XML. Библиотека libxslt рассматривается в
pango
Pango — ключевая библиотека работы с текстом и шрифтами в приложениях GNOME. Она поддерживает широкий набор различных систем письменности, используемых по всему миру. Pango рассматривается в
Модули рабочего стола
Модули рабочего стола GNOME не требуют таких же гарантий стабильности API и ABI как модули платформы, хотя предпринимаются попытки сделать их относительно стабильными. Обычно, модули вводятся в выпуск рабочего стола для его зрелости и перемещаются в платформу после их стабилизации.
eel
Библиотека eel обеспечивает набор дополнительных виджетов главным образом для использования в
evolution-data-server
Сервер данных Evolution обеспечивает единое хранилище адресной книги и информации календаря, позволяя разным приложениям использовать единые данные. Сервер данных Evolution рассмотрен в
gnome-panel
В дополнение к текущей панели, пакет gnome-panel предоставляет библиотеки, используемые для построения апплетов панели, выполняющихся на панели пользователя. Апплеты панели рассмотрены в
gnome-keyring
Менеджер брелоков GNOME обеспечивает современные и безопасные средства для хранения паролей пользователя и другой частной информации. Ключи зашифрованы и доступ к ним может быть совершен только с явного разрешения пользователя. Менеджер брелоков рассматривается в
gstreamer
GStreamer — мощное мультимедийное средство GNOME для воспроизведения, создания и и манипулирования звуком и видео. GStreamer рассматривается
gtkhtml
Библиотека gtkhtml предоставляет легковесное средство просмотра HTML с полной поддержкой расширенного редактирования текста. Она используется в почтовом модуле приложения
gtksourceview
Библиотека gtksourceview предоставляет расширение виджета GtkTextView с поддержкой автоматической подсветки синтаксиса и других функций, которые будут полезны для редакторов исходных текстов. Эта библиотека используется в текстовом редакторе
libgail-gnome
GAIL предоставляет реализацию интерфейсов ATK для GTK+ и библиотек GNOME, позволяя инструментам специальных возможностей взаимодействовать с приложениями, написанными с использованием этих библиотек. Специальные возможности рассматриваются в
libgnomeprint
Устаревшая библиотека libgnomeprint реализует графическую модель PostScript. Она заменена на
libgnomeprintui
Устаревшая библиотека libgnomeprintui предоставляет стандартный диалог печати, диалог предварительного просмотра печати и множество других элементов управления, необходимых для печати. Она заменена на
libgtop
Библиотека libgtop предоставляет переносимый программный интерфейс для получения информации о запущенных процессах. Она используется в приложении
librsvg
Библиотека librsvg предоставляет реализацию Scalable Vector Graphics (SVG). Она используется повсюду в рабочем столе для отрисовки векторной графики, не зависящий от разрешения экрана.
libsoup
Библиотека libxslt предоставляет быструю и полную реализацию XSLT— языка для преобразования XML. Библиотека libxslt рассматривается в
libwnck
Библиотека libwnck предоставляет средств контроля любого EWMH-compliant менеджера окон, включая
libxklavier
Библиотека libxklavier предоставляет высокоуровневый программный интерфейс для доступа и установки раскладок клавиатуры. Эта библиотека используется в
vte
VTE — это виджет эмулятора терминала для использования в приложения, написанных с использованием GTK+. Он предоставляет стабильный программный интерфейс и использует Pango для отображения текста, что позволяет отображать любой интернациональный текст. VTE используется в приложении GNOME
Обзор платформы GNOME
2005
2006
Shaun McCance
GNOME Foundation
16 марта 2007 г.
2.20
Обзор основных технологий платформы рабочего окружения GNOME.
Shaun
McCance
Проект документирования GNOME
shaunm@gnome.org
Nikita Belobrov <qvzqvz\@gmail\.com>, 2008
Yura Penkin <yura\.penkin\@gmail\.ru>, 2007
SOAP
GNOME при помощи библиотеки libsoup обеспечивает поддержку SOAP — широко используемого протокола передачи XML сообщений через HTTP. SOAP позволяет разработчику опубликовать программные интерфейсы через веб, которые приложения могут использовать для обмена информацией, выполнения транзакций и выполнения любых других возможных действий.
SOAP может быть использован для поиска и получения информации, взаимодействия с интернет-магазином, для управления учётными записями пользователей на других системах и множества других целей. Веб сервисы используются всё больше и больше для предоставления важной функциональности, и приложения, использующие SOAP, могут обеспечить пользователю более целостную функциональность.
Библиотека libsoup содержит реализацию HTTP и набор API необходимый для создания и обработки сообщений SOAP. Она также поддерживает безопасную аутентификацию, поэтому Веб-сервисы можно использовать для доступа к секретным данным через безопасное соединение. С помощью библиотеки libsoup легко использовать веб-сервисы без необходимости вручную разбирать и интерпретировать сообщения, посылаемые по SOAP.
Библиотека libsoup предоставляет реализацию Simple Object Access Protocol (SOAP). Библиотека libsoup рассматривается в