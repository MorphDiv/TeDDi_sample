# language_name_wals:	Russian
# language_name_glotto:	Russian
# ISO_6393:	rus
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Cyrl
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ru.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Руководство по PHP
Пред.
След.
array_map

Описание
Функция array_map() возвращает массив, содержащий элементы всех указанных массивов после их обработки функцией обратного вызова. Количество параметров, передаваемых функции обратного вызова, должно совпадать с количеством массивов, переданным функции array_map().
Пример 1. Пример использования array_map()
function cube( $n) {return $n*$n*$n;} $a = array(1, 2, 3, 4, 5); $b = array_map("cube", $a); print_r($b);
В результате переменная $b будет содержать:

Пример 2. Пример использования array_map(): обработка нескольких массивов
function show_Spanish( $n, $m) {return "Число $n по-испански - $m";} function map_Spanish($n, $m) {return array ($n = $m);} $a = array(1, 2, 3, 4, 5); $b = array("uno", "dos", "tres", "cuatro", "cinco"); $c = array_map("show_Spanish", $a, $b); print_r($c); $d = array_map("map_Spanish", $a, $b); print_r($d);
Результат выполнения:
/ / printout of $c Array ([0] = Число 1 по-испански - uno [1] = Число 2 по-испански - dos [2] = Число 3 по-испански - tres [3] = Число 4 по-испански - cuatro [4] = Число 5 по-испански - cinco) / / printout of $d Array ([0] = Array ([1] = uno) [1] = Array ([2] = dos) [2] = Array ([3] = tres) [3] = Array ([4] = cuatro) [4] = Array ([5] = cinco))
Обычно при обработке двух или более массивов, они имею одинаковую длину, так как функция обратного вызова применяется параллельно к соответствующим элементам массивов. Если массивы имеют различную длину, самый маленький из них дополняется элементами с пустыми значениями.
Интересным эффектом при использовании этой функции является создание массива массивов, что может быть достигнуто путем использования значения NULL в качестве имени функции обратного вызова.
Пример 3. Создание массива массивов
$a = array( 1, 2, 3, 4, 5); $b = array("one", "two", "three", "four", "five"); $c = array("uno", "dos", "tres", "cuatro", "cinco"); $d = array_map(null, $a, $b, $c); print_r($d);
Результатом выполнения вышеприведенной программы будет:

См.также array_filter() и array_reduce().
Пред.
Начало
След.

Уровень выше
