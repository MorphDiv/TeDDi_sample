# language_name_wals:	Korean
# language_name_glotto:	Korean
# iso639_3:	kor
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Kore
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/ko.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP는 디폴트로 CGI 프로그램으로 만들어 진다. 이것은 CGI 형태로 사용하거나, 웹과 관련이 없는 PHP 스크립팅에 사용할 수 있는 commandline 인터프리터가 된다. 만약 PHP가 모듈로 탑재될 수 있는 웹 서버를 운영중이라면, 일반적으로 모듈이 더 좋은 성능을 낸다. 하지만, CGI 버전은 아파치 사용자들에게 다른 user-id를 사용하여 별도의 PHP-enabled 페이지를 실행할 수 있도록 해 준다. 만약 PHP를 CGI로 실행하고 싶다면 Security chapter 를 반드시 읽어보기 바란다.
PHP를 CGI 프로그램 형태로 만들었다면, make test 라고 입력하여 테스트해 볼 수 있다. 이 방법은 만들어진 PHP 자체를 테스트하는 좋은 방법이다. 또한 이 방법은 여러분의 시스템 환경에서 미리 PHP의 문제를 발견할 수 있게 해 준다.
PHP3를 CGI 프로그램 형태로 만들었다면, make bench 라고 입력하여 벤치마크 테스트를 할 수 있다. 안전 모드(safe mode)의 기본값이 on 되어 있을 때는, 작업이 허용된 30초 보다 많이 걸리게 되면 벤치마크를 끝낼 수 없다. 이것은 안전 모드에서는 set_time_limit() 함수를 사용할 수 없기 때문이다. 컴파일시의 설정 옵션인 max_execution_time 을 사용하여 시간 간격을 조절할 수는 있다. make bench 명령은 configuration file 을 무시한다.
참고: make bench 는 PHP 3에서만 유효하다