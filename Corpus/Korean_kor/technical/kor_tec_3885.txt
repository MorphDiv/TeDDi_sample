# language_name_wals:	Korean
# language_name_glotto:	Korean
# ISO_6393:	kor
# year_composed:	NA
# year_published:	2014
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Kore
# special_characters:	NA
# short_description:	GNOME
# source:	https://object.pouta.csc.fi/OPUS-GNOME/v1/raw/ko.zip
# copyright_short:	http://opus.nlpl.eu/GNOME.php
# copyright_long:	http://opus.nlpl.eu/GNOME.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

@FUNCTION=COMPLEX
@SYNTAX=COMPLEX(real,im[,suffix])
@DESCRIPTION=COMPLEX는 x + yi 형식의 복소수 값을 돌려 줍니다.

@real은 실수이고, @im은 복소수의 허수부분 입니다. @suffix는 허수의 꼬리표이며, 만약 생략되면 COMPLEX는 'i'를 기본값으로 사용합니다.
 
* 만약 @suffix가 'i' 또는 'j'가 아니라면 COMPLEX는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다..

@EXAMPLES=
COMPLEX(1,-1)의 값은 1-i 입니다..

@SEEALSO=
@FUNCTION=IMAGINARY
@SYNTAX=IMAGINARY(inumber)
@DESCRIPTION=IMAGINARY은 복소수의 허수부분을 돌려 줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMAGINARY는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다..

@EXAMPLES=
IMAGINARY("132-j")의 값은 -1 입니다.

@SEEALSO=IMREAL
@FUNCTION=IMABS
@SYNTAX=IMABS(inumber)
@DESCRIPTION=IMABS은 복소수의 절대값을 돌려 줍니다.

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMABS는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMABS("2-j")의 값은 2.23606798 입니다..

@SEEALSO=IMAGINARY,IMREAL
@FUNCTION=IMREAL
@SYNTAX=IMREAL(inumber)
@DESCRIPTION=IMREAL은 복소수의 실수부분을 돌려줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMREAL는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
imreal("132-j")의 값은 132 입니다.

@SEEALSO=IMAGINARY
@FUNCTION=IMCONJUGATE
@SYNTAX=IMCONJUGATE(inumber)
@DESCRIPTION=IMCONJUGATE는 복소수의 켤레복소수 값을 돌려줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMCONJUGATE는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMCONJUGATE("1-j")의 값은 1+j 입니다.

@SEEALSO=IMAGINARY,IMREAL
@FUNCTION=IMINV
@SYNTAX=IMINV(inumber)
@DESCRIPTION=IMINV는 다음 식을 이용하여, 복소수의 역수 Z (@inumber)를 돌려줍니다.

 1/z = (x - i y)/(x^2 + y^2).

* 만약 @inumber가 적절한 복소수값이 아니라면, IMINV는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMINV("1-j")의 값은 0.5+0.5j 입니다.

@SEEALSO=
@FUNCTION=IMNEG
@SYNTAX=IMNEG(inumber)
@DESCRIPTION=IMNEG는 다음의 식을 이용하여, z (@inumber)의 부호를 바꾸어 줍니다.

 -z = (-x) + i(-y).

* 만약 @inumber가 적절한 복소수값이 아니라면, IMNEG는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMNEG("1-j")의 값은 -1+j 입니다.

@SEEALSO=
@FUNCTION=IMCOS
@SYNTAX=IMCOS(inumber)
@DESCRIPTION=IMCOS는 복소수의 코사인 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMCOS는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMCOS("1+j")의 값은 0.833730-0.988898j 입니다.

@SEEALSO=IMSIN,IMTAN
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMSEC
@SYNTAX=IMSEC(inumber)
@DESCRIPTION=IMSEC는 다음 식을 이용하여 복소수 z (@inumber)의 시컨트 값을 구합니다.

 sec(z) = 1/cos(z).

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMSEC는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMSEC("2-j")의 값은 -0.413149-0.687527j 입니다.

@SEEALSO=IMCSC,IMCOT
@FUNCTION=IMCSC
@SYNTAX=IMCSC(inumber)
@DESCRIPTION=IMCSC는 다음 식을 이용하여 복소수 z (@inumber)의 코시컨트 값을 구합니다.

 csc(z) = 1/sin(z).

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMCSC는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMCSC("2-j")의 값은 0.635494-0.221501j 입니다.

@SEEALSO=IMSEC,IMCOT
@FUNCTION=IMCOT
@SYNTAX=IMCOT(inumber)
@DESCRIPTION=IMCOT는 다음 식을 이용하여 복소수 z (@inumber)의 코탄젠트 값을 구합니다

 cot(z) = 1/tan(z).

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMCOT는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMCOT("2-j")의 값은 -0.171384+0.821330j 입니다.

@SEEALSO=IMSEC,IMCSC
@FUNCTION=IMEXP
@SYNTAX=IMEXP(inumber)
@DESCRIPTION=IMEXP는 복소수의 지수를 구합니다.

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMEXP는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMEXP("2-j")의 값은 3.992324-6.217676j 입니다.

@SEEALSO=IMLN
@FUNCTION=IMARGUMENT
@SYNTAX=IMARGUMENT(inumber)
@DESCRIPTION=IMARGUMENT는 복소수의 세타(극좌표계에서 라디안으로 표시되는 각의크기) 값을 돌려줍니다

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMARGUMENT는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMARGUMENT("2-j")의 값은 -0.463647609 입니다.

@SEEALSO=
@FUNCTION=IMLN
@SYNTAX=IMLN(inumber)
@DESCRIPTION=IMLN은 복소수의 자연로그값을 구합니다.

결과의 허수 부분은 -pi와 +pi 사이입니다. 자연로그는 복소수에서 유일하게 정의되지 않습니다. 허수 부분에서 pi를 더하거나 빼야 할 수도 있습니다.

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMLOG2는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMLOG2("3-j")의 값은 1.15129-0.32175j 입니다.

@SEEALSO=IMLN,IMLOG10
@FUNCTION=IMLOG2
@SYNTAX=IMLOG2(inumber)
@DESCRIPTION=IMLOG2는 복소수의 밑이 2인 로그값을 구합니다.

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMLOG2는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMLOG2("3-j")의 값은 1.66096-0.46419j 입니다.

@SEEALSO=IMLN,IMLOG10
@FUNCTION=IMLOG10
@SYNTAX=IMLOG10(inumber)
@DESCRIPTION=IMLOG10은 복소수의 밑이 10인 로그값을 구합니다.

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMLOG10은 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMLOG10("3-j")의 값은 0.5-0.13973j 입니다.

@SEEALSO=IMLN,IMLOG2
@FUNCTION=IMPOWER
@SYNTAX=IMPOWER(inumber1,inumber2)
@DESCRIPTION=IMPOWER는 복소수의 제곱값을 돌려줍니다. @inumber1는 제곱하려는 복소수 값이고 @inumber2는 제곱하기 위한 지수 값입니다.

* 만약 @inumber1나 @inumber2가 적절한 복소수 값이 아니라면, IMPOWER는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMPOWER("4-j",2)의 값은 15-8j 입니다.

@SEEALSO=IMSQRT
@FUNCTION=IMDIV
@SYNTAX=IMDIV(inumber1,inumber2)
@DESCRIPTION=IMDIV는 두 복소수의 몫을 구합니다.

* 만약 @inumber1 또는 @inumber2가 적절한 복소수 값이 아니라면, IMDIV는 #VALUE! 에러를 돌려줍니다..
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMDIV("2-j","2+j")의 값은 0.6-0.8j 입니다.

@SEEALSO=IMPRODUCT
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSINH
@SYNTAX=IMSINH(inumber)
@DESCRIPTION=IMSINH는 다음 식을 이용하여 복소수 z (@inumber)의 쌍곡사인 값을 구합니다.

 sinh(z) = (exp(z) - exp(-z))/2.

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMSINH는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMSINH("1+j")의 값은 0.63496+1.29846j 입니다.

@SEEALSO=IMCOSH,IMTANH
@FUNCTION=IMCOSH
@SYNTAX=IMCOSH(inumber)
@DESCRIPTION=IMCOSH는 다음 식을 이용하여 복소수 z (@inumber)의 쌍곡코사인 값을 구합니다.

 cosh(z) = (exp(z) + exp(-z))/2.

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMCOSH는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMCOSH("1+j")의 값은 0.83373+0.988898j 입니다.

@SEEALSO=IMSINH,IMTANH
@FUNCTION=IMTANH
@SYNTAX=IMTANH(inumber)
@DESCRIPTION=IMTANH는 다음 식을 이용하여 복소수 z (@inumber)의 쌍곡탄젠트 값을 구합니다.

 tanh(z) = sinh(z)/cosh(z).

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMTANH는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMTANH("1+j")의 값은 1.083923+0.2717526j 입니다.

@SEEALSO=IMSINH,IMCOSH
@FUNCTION=IMSECH
@SYNTAX=IMSECH(inumber)
@DESCRIPTION=IMSECH는 다음 식을 이용하여 복소수 z (@inumber)의 쌍곡시컨트 값을 구합니다

 sech(z) = 1/cosh(z).

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMSECH는 #VALUE! 에러를 돌려줍니다..

@EXAMPLES=
IMSECH("1+j")의 값은 0.498337-0.5910838j 입니다.

@SEEALSO=IMCSCH,IMCOTH
@FUNCTION=IMCSCH
@SYNTAX=IMCSCH(inumber)
@DESCRIPTION=IMCSCH는 다음 식을 이용하여 복소수 z (@inumber)의 쌍곡코시컨트 값을 구합니다.

 csch(z) = 1/sinh(z).

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMCSCH는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMCSCH("1+j")의 값은 0.303931-0.621518j 입니다.

@SEEALSO=IMSECH,IMCOTH
@FUNCTION=IMCOTH
@SYNTAX=IMCOTH(inumber)
@DESCRIPTION=IMCOTH는 다음 식을 이용하여 복소수 z(@inumber)의 쌍곡코탄젠트 값을 구합니다.

 coth(z) = 1/tanh(z).

* 만약 @inumber가 적절한 복소수값이 아니라면, IMCOTH는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMCOTH("1+j")의 값은 0.868014-0.217622j 입니다.

@SEEALSO=IMSECH,IMCSCH
@FUNCTION=IMTANH
@SYNTAX=IMTANH(inumber)
@DESCRIPTION=IMTANH는 다음 식을 이용하여 복소수 z (@inumber)의 쌍곡탄젠트 값을 구합니다.

 tanh(z) = sinh(z)/cosh(z).

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMTANH는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMTANH("1+j")의 값은 1.083923+0.2717526j 입니다.

@SEEALSO=IMSINH,IMCOSH
@FUNCTION=IMTANH
@SYNTAX=IMTANH(inumber)
@DESCRIPTION=IMTANH는 다음 식을 이용하여 복소수 z (@inumber)의 쌍곡탄젠트 값을 구합니다.

 tanh(z) = sinh(z)/cosh(z).

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMTANH는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMTANH("1+j")의 값은 1.083923+0.2717526j 입니다.

@SEEALSO=IMSINH,IMCOSH
@FUNCTION=IMTANH
@SYNTAX=IMTANH(inumber)
@DESCRIPTION=IMTANH는 다음 식을 이용하여 복소수 z (@inumber)의 쌍곡탄젠트 값을 구합니다.

 tanh(z) = sinh(z)/cosh(z).

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMTANH는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMTANH("1+j")의 값은 1.083923+0.2717526j 입니다.

@SEEALSO=IMSINH,IMCOSH
@FUNCTION=IMCSCH
@SYNTAX=IMCSCH(inumber)
@DESCRIPTION=IMCSCH는 다음 식을 이용하여 복소수 z (@inumber)의 쌍곡코시컨트 값을 구합니다.

 csch(z) = 1/sinh(z).

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMCSCH는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMCSCH("1+j")의 값은 0.303931-0.621518j 입니다.

@SEEALSO=IMSECH,IMCOTH
@FUNCTION=IMCSCH
@SYNTAX=IMCSCH(inumber)
@DESCRIPTION=IMCSCH는 다음 식을 이용하여 복소수 z (@inumber)의 쌍곡코시컨트 값을 구합니다.

 csch(z) = 1/sinh(z).

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMCSCH는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMCSCH("1+j")의 값은 0.303931-0.621518j 입니다.

@SEEALSO=IMSECH,IMCOTH
@FUNCTION=IMCOT
@SYNTAX=IMCOT(inumber)
@DESCRIPTION=IMCOT는 다음 식을 이용하여 복소수 z (@inumber)의 코탄젠트 값을 구합니다

 cot(z) = 1/tan(z).

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMCOT는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMCOT("2-j")의 값은 -0.171384+0.821330j 입니다.

@SEEALSO=IMSEC,IMCSC
@FUNCTION=IMTANH
@SYNTAX=IMTANH(inumber)
@DESCRIPTION=IMTANH는 다음 식을 이용하여 복소수 z (@inumber)의 쌍곡탄젠트 값을 구합니다.

 tanh(z) = sinh(z)/cosh(z).

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMTANH는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMTANH("1+j")의 값은 1.083923+0.2717526j 입니다.

@SEEALSO=IMSINH,IMCOSH
@FUNCTION=IMCSCH
@SYNTAX=IMCSCH(inumber)
@DESCRIPTION=IMCSCH는 다음 식을 이용하여 복소수 z (@inumber)의 쌍곡코시컨트 값을 구합니다.

 csch(z) = 1/sinh(z).

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMCSCH는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMCSCH("1+j")의 값은 0.303931-0.621518j 입니다.

@SEEALSO=IMSECH,IMCOTH
@FUNCTION=IMTANH
@SYNTAX=IMTANH(inumber)
@DESCRIPTION=IMTANH는 다음 식을 이용하여 복소수 z (@inumber)의 쌍곡탄젠트 값을 구합니다.

 tanh(z) = sinh(z)/cosh(z).

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMTANH는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMTANH("1+j")의 값은 1.083923+0.2717526j 입니다.

@SEEALSO=IMSINH,IMCOSH
@FUNCTION=IMCSCH
@SYNTAX=IMCSCH(inumber)
@DESCRIPTION=IMCSCH는 다음 식을 이용하여 복소수 z (@inumber)의 쌍곡코시컨트 값을 구합니다.

 csch(z) = 1/sinh(z).

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMCSCH는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMCSCH("1+j")의 값은 0.303931-0.621518j 입니다.

@SEEALSO=IMSECH,IMCOTH
@FUNCTION=IMCSCH
@SYNTAX=IMCSCH(inumber)
@DESCRIPTION=IMCSCH는 다음 식을 이용하여 복소수 z (@inumber)의 쌍곡코시컨트 값을 구합니다.

 csch(z) = 1/sinh(z).

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMCSCH는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMCSCH("1+j")의 값은 0.303931-0.621518j 입니다.

@SEEALSO=IMSECH,IMCOTH
@FUNCTION=IMCSCH
@SYNTAX=IMCSCH(inumber)
@DESCRIPTION=IMCSCH는 다음 식을 이용하여 복소수 z (@inumber)의 쌍곡코시컨트 값을 구합니다.

 csch(z) = 1/sinh(z).

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMCSCH는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMCSCH("1+j")의 값은 0.303931-0.621518j 입니다.

@SEEALSO=IMSECH,IMCOTH
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMDIV
@SYNTAX=IMDIV(inumber1,inumber2)
@DESCRIPTION=IMDIV는 두 복소수의 몫을 구합니다.

* 만약 @inumber1 또는 @inumber2가 적절한 복소수 값이 아니라면, IMDIV는 #VALUE! 에러를 돌려줍니다..
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMDIV("2-j","2+j")의 값은 0.6-0.8j 입니다.

@SEEALSO=IMPRODUCT
@FUNCTION=IMDIV
@SYNTAX=IMDIV(inumber1,inumber2)
@DESCRIPTION=IMDIV는 두 복소수의 몫을 구합니다.

* 만약 @inumber1 또는 @inumber2가 적절한 복소수 값이 아니라면, IMDIV는 #VALUE! 에러를 돌려줍니다..
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMDIV("2-j","2+j")의 값은 0.6-0.8j 입니다.

@SEEALSO=IMPRODUCT
@FUNCTION=IMDIV
@SYNTAX=IMDIV(inumber1,inumber2)
@DESCRIPTION=IMDIV는 두 복소수의 몫을 구합니다.

* 만약 @inumber1 또는 @inumber2가 적절한 복소수 값이 아니라면, IMDIV는 #VALUE! 에러를 돌려줍니다..
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMDIV("2-j","2+j")의 값은 0.6-0.8j 입니다.

@SEEALSO=IMPRODUCT
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=DEGREES
@SYNTAX=DEGREES(x)
@DESCRIPTION=DEGREES는 @x 라디안에 해당되는 각도를 계산합니다.

* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
DEGREES(2.5)의 값은 143.2394입니다.

@SEEALSO=RADIANS, PI
@FUNCTION=IMCOS
@SYNTAX=IMCOS(inumber)
@DESCRIPTION=IMCOS는 복소수의 코사인 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMCOS는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMCOS("1+j")의 값은 0.833730-0.988898j 입니다.

@SEEALSO=IMSIN,IMTAN
@FUNCTION=IMREAL
@SYNTAX=IMREAL(inumber)
@DESCRIPTION=IMREAL은 복소수의 실수부분을 돌려줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMREAL는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
imreal("132-j")의 값은 132 입니다.

@SEEALSO=IMAGINARY
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMDIV
@SYNTAX=IMDIV(inumber1,inumber2)
@DESCRIPTION=IMDIV는 두 복소수의 몫을 구합니다.

* 만약 @inumber1 또는 @inumber2 가 적절한 복소수 값이 아니라면, IMDIV는 #VALUE! 에러를 돌려줍니다..
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMDIV("2-j","2+j")의 값은 0.6-0.8j 입니다.

@SEEALSO=IMPRODUCT
@FUNCTION=IMREAL
@SYNTAX=IMREAL(inumber)
@DESCRIPTION=IMREAL은 복소수의 실수부분을 돌려줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMREAL는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
imreal("132-j")의 값은 132 입니다.

@SEEALSO=IMAGINARY
@FUNCTION=IMREAL
@SYNTAX=IMREAL(inumber)
@DESCRIPTION=IMREAL은 복소수의 실수부분을 돌려줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMREAL는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
imreal("132-j")의 값은 132 입니다.

@SEEALSO=IMAGINARY
@FUNCTION=IMCOS
@SYNTAX=IMCOS(inumber)
@DESCRIPTION=IMCOS는 복소수의 코사인 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMCOS는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMCOS("1+j")의 값은 0.833730-0.988898j 입니다.

@SEEALSO=IMSIN,IMTAN
@FUNCTION=IMREAL
@SYNTAX=IMREAL(inumber)
@DESCRIPTION=IMREAL은 복소수의 실수부분을 돌려줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMREAL는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
imreal("132-j")의 값은 132 입니다.

@SEEALSO=IMAGINARY
@FUNCTION=IMREAL
@SYNTAX=IMREAL(inumber)
@DESCRIPTION=IMREAL은 복소수의 실수부분을 돌려줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMREAL는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
imreal("132-j")의 값은 132 입니다.

@SEEALSO=IMAGINARY
@FUNCTION=IMCOS
@SYNTAX=IMCOS(inumber)
@DESCRIPTION=IMCOS는 복소수의 코사인 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMCOS는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMCOS("1+j")의 값은 0.833730-0.988898j 입니다.

@SEEALSO=IMSIN,IMTAN
@FUNCTION=IMDIV
@SYNTAX=IMDIV(inumber1,inumber2)
@DESCRIPTION=IMDIV는 두 복소수의 몫을 구합니다.

* 만약 @inumber1 또는 @inumber2 가 적절한 복소수 값이 아니라면, IMDIV는 #VALUE! 에러를 돌려줍니다..
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMDIV("2-j","2+j")의 값은 0.6-0.8j 입니다.

@SEEALSO=IMPRODUCT
@FUNCTION=DEGREES
@SYNTAX=DEGREES(x)
@DESCRIPTION=DEGREES는 @x 라디안에 해당되는 각도를 계산합니다.

* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
DEGREES(2.5)의 값은 143.2394입니다.

@SEEALSO=RADIANS, PI
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMREAL
@SYNTAX=IMREAL(inumber)
@DESCRIPTION=IMREAL은 복소수의 실수부분을 돌려줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMREAL는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
imreal("132-j")의 값은 132 입니다.

@SEEALSO=IMAGINARY
@FUNCTION=IMREAL
@SYNTAX=IMREAL(inumber)
@DESCRIPTION=IMREAL은 복소수의 실수부분을 돌려줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMREAL는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
imreal("132-j")의 값은 132 입니다.

@SEEALSO=IMAGINARY
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=UNICODE
@SYNTAX=UNICODE(char)
@DESCRIPTION=UNICODE returns the Unicode number for the character @char.


@EXAMPLES=
UNICODE("A") equals 65.

@SEEALSO=UNICHAR,CODE,CHAR
@FUNCTION=IMNEG
@SYNTAX=IMNEG(inumber)
@DESCRIPTION=IMNEG는 다음의 식을 이용하여, z (@inumber)의 부호를 바꾸어 줍니다.

 -z = (-x) + i(-y).

* 만약 @inumber가 적절한 복소수값이 아니라면, IMNEG는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMNEG("1-j")의 값은 -1+j 입니다.

@SEEALSO=
@FUNCTION=IMNEG
@SYNTAX=IMNEG(inumber)
@DESCRIPTION=IMNEG는 다음의 식을 이용하여, z (@inumber)의 부호를 바꾸어 줍니다.

 -z = (-x) + i(-y).

* 만약 @inumber가 적절한 복소수값이 아니라면, IMNEG는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMNEG("1-j")의 값은 -1+j 입니다.

@SEEALSO=
@FUNCTION=IMNEG
@SYNTAX=IMNEG(inumber)
@DESCRIPTION=IMNEG는 다음의 식을 이용하여, z (@inumber)의 부호를 바꾸어 줍니다.

 -z = (-x) + i(-y).

* 만약 @inumber가 적절한 복소수값이 아니라면, IMNEG는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMNEG("1-j")의 값은 -1+j 입니다.

@SEEALSO=
@FUNCTION=UNICODE
@SYNTAX=UNICODE(char)
@DESCRIPTION=UNICODE returns the Unicode number for the character @char.


@EXAMPLES=
UNICODE("A") equals 65.

@SEEALSO=UNICHAR,CODE,CHAR
@FUNCTION=GCD
@SYNTAX=GCD(inumber1,inumber2,...)
@DESCRIPTION=GCD는 주어진 수의 최대공약수를 구합니다.

* 인자중에 하나라도 1보다 작은 수가 있으면, GCD는 #NUM! 에러를 돌려줍니다.
* 인자중에 하나라도 정수가 아니면, 정수로 자릅니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
GCD(470,770)의 값은 10입니다.
GCD(470,770,1495)의 값은 5입니다.

@SEEALSO=LCM
@FUNCTION=LCM
@SYNTAX=LCM(inumber1,inumber2,...)
@DESCRIPTION=LCM는 주어진 수의 최소공배수를 구합니다. 최소공배수는 주어진 정수 인자의 곱으로 표현할 수 있는 양의 정수 중에서 가장 작은 값입니다.

* 인자중에 하나라도 1보다 작은 수가 있으면, GCD는 #NUM! 에러를 돌려줍니다.
* 인자중에 하나라도 정수가 아니면, 정수로 자릅니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
GCD(2,13)의 값은 26입니다.
GCD(4,7,5)의 값은 140입니다.

@SEEALSO=GCD
@FUNCTION=UNICODE
@SYNTAX=UNICODE(char)
@DESCRIPTION=UNICODE returns the Unicode number for the character @char.


@EXAMPLES=
UNICODE("A") equals 65.

@SEEALSO=UNICHAR,CODE,CHAR
@FUNCTION=IMABS
@SYNTAX=IMABS(inumber)
@DESCRIPTION=IMABS은 복소수의 절대값을 돌려 줍니다.

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMABS는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMABS("2-j")의 값은 2.23606798 입니다..

@SEEALSO=IMAGINARY,IMREAL
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=DEGREES
@SYNTAX=DEGREES(x)
@DESCRIPTION=DEGREES는 @x 라디안에 해당되는 각도를 계산합니다.

* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
DEGREES(2.5)의 값은 143.2394입니다.

@SEEALSO=RADIANS, PI
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=DEGREES
@SYNTAX=DEGREES(x)
@DESCRIPTION=DEGREES는 @x 라디안에 해당되는 각도를 계산합니다.

* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
DEGREES(2.5)의 값은 143.2394입니다.

@SEEALSO=RADIANS, PI
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMLOG10
@SYNTAX=IMLOG10(inumber)
@DESCRIPTION=IMLOG10은 복소수의 밑이 10인 로그값을 구합니다.

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMLOG10은 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMLOG10("3-j")의 값은 0.5-0.13973j 입니다.

@SEEALSO=IMLN,IMLOG2
@FUNCTION=LN
@SYNTAX=LN(x)
@DESCRIPTION=LN은 @x의 자연로그값을 돌려줍니다.

* @x <= 0 이면, LN은 #NUM! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
LN(7)의 값은 1.94591입니다.

@SEEALSO=EXP, LOG2, LOG10
@FUNCTION=LN
@SYNTAX=LN(x)
@DESCRIPTION=LN은 @x의 자연로그값을 돌려줍니다.

* @x <= 0 이면, LN은 #NUM! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
LN(7)의 값은 1.94591입니다.

@SEEALSO=EXP, LOG2, LOG10
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=LN
@SYNTAX=LN(x)
@DESCRIPTION=LN은 @x의 자연로그값을 돌려줍니다.

* @x <= 0 이면, LN은 #NUM! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
LN(7)의 값은 1.94591입니다.

@SEEALSO=EXP, LOG2, LOG10
@FUNCTION=LN
@SYNTAX=LN(x)
@DESCRIPTION=LN은 @x의 자연로그값을 돌려줍니다.

* @x <= 0 이면, LN은 #NUM! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
LN(7)의 값은 1.94591입니다.

@SEEALSO=EXP, LOG2, LOG10
@FUNCTION=IMCOS
@SYNTAX=IMCOS(inumber)
@DESCRIPTION=IMCOS는 복소수의 코사인 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMCOS는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMCOS("1+j")의 값은 0.833730-0.988898j 입니다.

@SEEALSO=IMSIN,IMTAN
@FUNCTION=DEGREES
@SYNTAX=DEGREES(x)
@DESCRIPTION=DEGREES는 @x 라디안에 해당되는 각도를 계산합니다.

* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
DEGREES(2.5)의 값은 143.2394입니다.

@SEEALSO=RADIANS, PI
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=LN
@SYNTAX=LN(x)
@DESCRIPTION=LN은 @x의 자연로그값을 돌려줍니다.

* @x <= 0 이면, LN은 #NUM! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
LN(7)의 값은 1.94591입니다.

@SEEALSO=EXP, LOG2, LOG10
@FUNCTION=IMCOS
@SYNTAX=IMCOS(inumber)
@DESCRIPTION=IMCOS는 복소수의 코사인 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMCOS는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMCOS("1+j")의 값은 0.833730-0.988898j 입니다.

@SEEALSO=IMSIN,IMTAN
@FUNCTION=UNICODE
@SYNTAX=UNICODE(char)
@DESCRIPTION=UNICODE returns the Unicode number for the character @char.


@EXAMPLES=
UNICODE("A") equals 65.

@SEEALSO=UNICHAR,CODE,CHAR
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMDIV
@SYNTAX=IMDIV(inumber1,inumber2)
@DESCRIPTION=IMDIV는 두 복소수의 몫을 구합니다.

* 만약 @inumber1 또는 @inumber2 가 적절한 복소수 값이 아니라면, IMDIV는 #VALUE! 에러를 돌려줍니다..
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMDIV("2-j","2+j")의 값은 0.6-0.8j 입니다.

@SEEALSO=IMPRODUCT
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMCONJUGATE
@SYNTAX=IMCONJUGATE(inumber)
@DESCRIPTION=IMCONJUGATE는 복소수의 켤레복소수 값을 돌려줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMCONJUGATE는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMCONJUGATE("1-j")의 값은 1+j 입니다.

@SEEALSO=IMAGINARY,IMREAL
@FUNCTION=IMNEG
@SYNTAX=IMNEG(inumber)
@DESCRIPTION=IMNEG는 다음의 식을 이용하여, z (@inumber)의 부호를 바꾸어 줍니다.

 -z = (-x) + i(-y).

* 만약 @inumber가 적절한 복소수값이 아니라면, IMNEG는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMNEG("1-j")의 값은 -1+j 입니다.

@SEEALSO=
@FUNCTION=IMCOS
@SYNTAX=IMCOS(inumber)
@DESCRIPTION=IMCOS는 복소수의 코사인 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMCOS는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMCOS("1+j")의 값은 0.833730-0.988898j 입니다.

@SEEALSO=IMSIN,IMTAN
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMCOS
@SYNTAX=IMCOS(inumber)
@DESCRIPTION=IMCOS는 복소수의 코사인 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMCOS는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMCOS("1+j")의 값은 0.833730-0.988898j 입니다.

@SEEALSO=IMSIN,IMTAN
@FUNCTION=IMDIV
@SYNTAX=IMDIV(inumber1,inumber2)
@DESCRIPTION=IMDIV는 두 복소수의 몫을 구합니다.

* 만약 @inumber1 또는 @inumber2 가 적절한 복소수 값이 아니라면, IMDIV는 #VALUE! 에러를 돌려줍니다..
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMDIV("2-j","2+j")의 값은 0.6-0.8j 입니다.

@SEEALSO=IMPRODUCT
@FUNCTION=IMPOWER
@SYNTAX=IMPOWER(inumber1,inumber2)
@DESCRIPTION=IMPOWER는 복소수의 제곱값을 돌려줍니다. @inumber1는 제곱하려는 복소수 값이고 @inumber2는 제곱하기 위한 지수 값입니다.

* 만약 @inumber1나 @inumber2가 적절한 복소수 값이 아니라면, IMPOWER는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMPOWER("4-j",2)의 값은 15-8j 입니다.

@SEEALSO=IMSQRT
@FUNCTION=IMREAL
@SYNTAX=IMREAL(inumber)
@DESCRIPTION=IMREAL은 복소수의 실수부분을 돌려줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMREAL는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
imreal("132-j")의 값은 132 입니다.

@SEEALSO=IMAGINARY
@FUNCTION=IMREAL
@SYNTAX=IMREAL(inumber)
@DESCRIPTION=IMREAL은 복소수의 실수부분을 돌려줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMREAL는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
imreal("132-j")의 값은 132 입니다.

@SEEALSO=IMAGINARY
@FUNCTION=IMREAL
@SYNTAX=IMREAL(inumber)
@DESCRIPTION=IMREAL은 복소수의 실수부분을 돌려줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMREAL는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
imreal("132-j")의 값은 132 입니다.

@SEEALSO=IMAGINARY
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMCONJUGATE
@SYNTAX=IMCONJUGATE(inumber)
@DESCRIPTION=IMCONJUGATE는 복소수의 켤레복소수 값을 돌려줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMCONJUGATE는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMCONJUGATE("1-j")의 값은 1+j 입니다.

@SEEALSO=IMAGINARY,IMREAL
@FUNCTION=UNICODE
@SYNTAX=UNICODE(char)
@DESCRIPTION=UNICODE returns the Unicode number for the character @char.


@EXAMPLES=
UNICODE("A") equals 65.

@SEEALSO=UNICHAR,CODE,CHAR
@FUNCTION=LN
@SYNTAX=LN(x)
@DESCRIPTION=LN은 @x의 자연로그값을 돌려줍니다.

* @x <= 0 이면, LN은 #NUM! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
LN(7)의 값은 1.94591입니다.

@SEEALSO=EXP, LOG2, LOG10
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMCOS
@SYNTAX=IMCOS(inumber)
@DESCRIPTION=IMCOS는 복소수의 코사인 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMCOS는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMCOS("1+j")의 값은 0.833730-0.988898j 입니다.

@SEEALSO=IMSIN,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=LN
@SYNTAX=LN(x)
@DESCRIPTION=LN은 @x의 자연로그값을 돌려줍니다.

* @x <= 0 이면, LN은 #NUM! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
LN(7)의 값은 1.94591입니다.

@SEEALSO=EXP, LOG2, LOG10
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=LN
@SYNTAX=LN(x)
@DESCRIPTION=LN은 @x의 자연로그값을 돌려줍니다.

* @x <= 0 이면, LN은 #NUM! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
LN(7)의 값은 1.94591입니다.

@SEEALSO=EXP, LOG2, LOG10
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMREAL
@SYNTAX=IMREAL(inumber)
@DESCRIPTION=IMREAL은 복소수의 실수부분을 돌려줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMREAL는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
imreal("132-j")의 값은 132 입니다.

@SEEALSO=IMAGINARY
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=UNICODE
@SYNTAX=UNICODE(char)
@DESCRIPTION=UNICODE returns the Unicode number for the character @char.


@EXAMPLES=
UNICODE("A") equals 65.

@SEEALSO=UNICHAR,CODE,CHAR
@FUNCTION=UNICODE
@SYNTAX=UNICODE(char)
@DESCRIPTION=UNICODE returns the Unicode number for the character @char.


@EXAMPLES=
UNICODE("A") equals 65.

@SEEALSO=UNICHAR,CODE,CHAR
@FUNCTION=UNICODE
@SYNTAX=UNICODE(char)
@DESCRIPTION=UNICODE returns the Unicode number for the character @char.


@EXAMPLES=
UNICODE("A") equals 65.

@SEEALSO=UNICHAR,CODE,CHAR
@FUNCTION=UNICODE
@SYNTAX=UNICODE(char)
@DESCRIPTION=UNICODE returns the Unicode number for the character @char.


@EXAMPLES=
UNICODE("A") equals 65.

@SEEALSO=UNICHAR,CODE,CHAR
@FUNCTION=IMCONJUGATE
@SYNTAX=IMCONJUGATE(inumber)
@DESCRIPTION=IMCONJUGATE는 복소수의 켤레복소수 값을 돌려줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMCONJUGATE는 #VALUE 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMCONJUGATE("1-j")의 값은 1+j 입니다.

@SEEALSO=IMAGINARY,IMREAL
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMCONJUGATE
@SYNTAX=IMCONJUGATE(inumber)
@DESCRIPTION=IMCONJUGATE는 복소수의 켤레복소수 값을 돌려줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMCONJUGATE는 #VALUE 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMCONJUGATE("1-j")의 값은 1+j 입니다.

@SEEALSO=IMAGINARY,IMREAL
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMCONJUGATE
@SYNTAX=IMCONJUGATE(inumber)
@DESCRIPTION=IMCONJUGATE는 복소수의 켤레복소수 값을 돌려줍니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMCONJUGATE는 #VALUE 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMCONJUGATE("1-j")의 값은 1+j 입니다.

@SEEALSO=IMAGINARY,IMREAL
@FUNCTION=IMCOS
@SYNTAX=IMCOS(inumber)
@DESCRIPTION=IMCOS는 복소수의 코사인 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMCOS는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMCOS("1+j")의 값은 0.833730-0.988898j 입니다.

@SEEALSO=IMSIN,IMTAN
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMTAN
@SYNTAX=IMTAN(inumber)
@DESCRIPTION=IMTAN는 복소수의 탄젠트 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMTAN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMTAN("2-j")의 값은 -0.2434582-1.1667363j 입니다.

@SEEALSO=IMSIN,IMCOS
@FUNCTION=IMCOS
@SYNTAX=IMCOS(inumber)
@DESCRIPTION=IMCOS는 복소수의 코사인 값을 구합니다.

* 만약 @inumber가 적절한 복소수값이 아니라면, IMCOS는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMCOS("1+j")의 값은 0.833730-0.988898j 입니다.

@SEEALSO=IMSIN,IMTAN
@FUNCTION=UNICODE
@SYNTAX=UNICODE(char)
@DESCRIPTION=UNICODE returns the Unicode number for the character @char.


@EXAMPLES=
UNICODE("A") equals 65.

@SEEALSO=UNICHAR,CODE,CHAR
@FUNCTION=UNICODE
@SYNTAX=UNICODE(char)
@DESCRIPTION=UNICODE returns the Unicode number for the character @char.


@EXAMPLES=
UNICODE("A") equals 65.

@SEEALSO=UNICHAR,CODE,CHAR
@FUNCTION=IMNEG
@SYNTAX=IMNEG(inumber)
@DESCRIPTION=IMNEG는 다음의 식을 이용하여, z (@inumber)의 부호를 바꾸어 줍니다.

 -z = (-x) + i(-y).

* 만약 @inumber가 적절한 복소수값이 아니라면, IMNEG는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMNEG("1-j")의 값은 -1+j 입니다.

@SEEALSO=
@FUNCTION=IMNEG
@SYNTAX=IMNEG(inumber)
@DESCRIPTION=IMNEG는 다음의 식을 이용하여, z (@inumber)의 부호를 바꾸어 줍니다.

 -z = (-x) + i(-y).

* 만약 @inumber가 적절한 복소수값이 아니라면, IMNEG는 #VALUE! 에러를 돌려줍니다.

@EXAMPLES=
IMNEG("1-j")의 값은 -1+j 입니다.

@SEEALSO=
@FUNCTION=IMSIN
@SYNTAX=IMSIN(inumber)
@DESCRIPTION=IMSIN는 복소수의 사인 값을 구합니다.

* 만약 @inumber 가 적절한 복소수 값이 아니라면, IMSIN는 #VALUE! 에러를 돌려줍니다.
* 이 함수는 엑셀과 호환됩니다.

@EXAMPLES=
IMSIN("1+j")의 값은 1.29846+0.63496j 입니다.

@SEEALSO=IMCOS,IMTAN