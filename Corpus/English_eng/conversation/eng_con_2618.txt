# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	1999
# mode:	written
# genre_broad:	conversation
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	ca
# source:	https://ca.talkbank.org/data-orig/MICASE/les/les330jg052.cha
# copyright_short:	https://sla.talkbank.org/TBB/ca
# copyright_long:	CABank: MacWhinney, B., & Wagner, J. (2010). Transcribing, searching and data sharing: The CLAN software and the TalkBank data repository. Gesprachsforschung, 11, 154-173.
# sample_type:	whole
# comments:	NA
no no on the serious side they &-uh it says the primary reason for collecting &~an &~un and &~un and analyzing this data is to improve the teaching and learning of English for nonnative speakers who will be studying or teaching <at a> at a university in the US by analyzing linguistic features of a large number of speakers .
so I was &-uh asked to participate and I said sure I'd be glad to do so .
and &-uh I think since you are also part of the tape you need to sign this consent form which as the fine print at the bottom says +"/.
+" I agree to any grade the professor will assign to me in this course regardless of my performance &=laughs:multiple on the exam .
there's the tiny fine print there .
(0.10) okay let's start &-uh I think it's just right on time .
does everybody have &-uh copies of the handouts from last time ?
I think I was one short of the warehouse layout but we've covered you too ?
okay .
anybody need copies of handouts +..?
any questions from last time ?
(0.5) any comments ?
(0.5) well if not I'd like to start now with the derivation of the cycle time for unit load automated storage retrieval systems .
(0.10) some of the material not all of it comes from a paper that &-uh White and John White and I published in nineteen eighty four so it's been a while &-uh this is not all of the material mind you okay so there's some extensions that you're gonna see in class which are not shown in the paper but some of the basic derivations are here this is the +...
&=writes:board Bozer and White paper +...
IIE transactions I won't write the title but it's called Travel Time Models for Automated Storage Retrieval Systems +...
volume +...
well I may not have the volume number here +...
yeah I just +//.
yeah volume sixteen number four +...
and as I said it's a fairly old paper nineteen eighty four mkay so if you want a copy of the paper you can go read it &-uh <it's not> it's not required that you get this paper though +...
okay last time +...
we defined what we mean we +//.
what we mean by a single command cycle dual command cycle so I hope you remember those .
also we defined an operation either as a storage or a retrieval and also I said we will measure the throughput of the system in terms of operations completed per hour .
and then we discussed briefly the dwell point strategy for the SR machine how exactly does the SR machine operate and what do you do when there's nothing in the system and the simplest strategy in terms of dwell point and that's the one we're gonna follow today &=writing_throughout_utterance the &-uh SR machine (0.5) returns +...
to the IO point +...
after +...
completing +...
each trip +...
so the SR machine will always idle at the IO point and for today's lecture we're gonna assume the IO point is at the lower left hand corner of the rack .
this week and next you're gonna see some extensions where we look at alternative IO point locations in the rack .
so to start our derivation let's look at &-uh our assumptions first +...
a_couple_of these assumptions are pretty restrictive +...
but we're gonna see how to relax them .
in no particular sequence here here are the assumptions &=pause_while_writing we're gonna assume the rack is a continuous face .
I'm gonna show you an equation where we look at every opening in the rack as a discrete opening that's easy &-uh you're gonna see an equation for that one but for analytical derivation you're gonna see it's a_lot easier if we can ignore the discrete nature of the rack that is ignore individual openings and treat the rack as a continuous surface okay ?
you're gonna see why that's helpful in just a few minutes and as I said &=writing_throughout_utterance we're gonna assume a lower left hand corner +...
IO point we're gonna look at some alternative IO point locations later .
second assumption &-uh SR machine +...
operates +...
only on single command or dual command basis +...
and it's a single shuttle +...
SR machine +...
okay as you can well imagine if you have more than one shuttle such as the twin shuttled machine I showed last week remember ?
you can do two storages two retrievals per trip those are &-uh extensions we will worry about later .
for today we're gonna assume a single shuttle SR machine then by definition it means it can only perform single command or dual command cycles in the IO .
the rack &=writes:board length +...
cap L and rack height +...
cap H are known .
okay so the rack dimensions are known we're not concerned with the opening of each &-uh &~w with the depth of each opening because that's the &~s shuttle transfer that goes in and out_of the opening &-uh we're not initially concerned with that .
so the rack length and rack height are known +...
also the &=writing_throughout_utterance SR machine +...
travel +...
speeds are known and I said speeds in plural because remember it has a horizontal motor +...
horizontal speed +...
and notation I use for that is +...
v@l sub h@l for velocity horizontal +...
and +...
vertical speed v@l sub v@l velocity vertical and if you want let's stick to this we use L feet H feet we express the rack dimensions in feet and then we'll use feet per minute for horizontal velocity +...
feet per minute vertical velocity those are given (0.8) again to simplify this initial derivation we're gonna assume that &-uh no acceleration deceleration effects are taken into account but really to state that more accurately we're gonna say a infinite +...
acceleration deceleration so we're not gonna look at the effects of acceleration deceleration of_course that paints a pretty rosy picture (be)cause you're gonna assume the SR machine instantly reaches its horizontal speed it instantly reaches its vertical speed again I'm gonna come back later and see how these results are affected by acceleration deceleration how to adjust them .
so initially we assume infinite acceleration deceleration recall though &-uh the SR machine (0.6) follows Chebyshev travel .
last time I think <I don't> I didn't refer to it as Chebyshev travel but this is what I emphasized last time .
the horizontal motor and the vertical motor are two independent motors so it powers the SR machine simultaneously in the horizontal and the vertical &~ch &-uh directions .
so if I'm traveling again +//.
let's draw another rack .
if I'm traveling from the IO point to any point in the rack +...
what is the travel time to that point +..?
if you're traveling concurrently the horizontal and vertical directions what is that travel time ?
(0.5) .
it's the maximum along each axis .
exactly you would compute the travel time horizontally and you would compute the travel time vertically pick the maximum of the two and that's the travel time from the IO point to that point in the rack .
so Chebyshev travel &=pause_while_writing implies that the travel time +...
equals the maximum of the horizontal travel time +...
from a vertical travel time &=pause_while_writing okay in a practical sense of_course this is good news (be)cause as you can imagine that's much better timewise compared to traveling horizontally first and then vertically then your travel time would have been the sum of horizontal plus vertical travel and that's rectilinear travel .
okay ?
we'll discuss rectilinear travel later because some trucks travel that way they're not allowed to do concurrent travel in the vertical and horizontal directions .
okay ?
that's rectilinear travel and that would have taken a longer travel time than Chebyshev which simply takes the maximum of the two and last week I showed you the &~ta tape so you could get a feel for that motion .
you saw the SR machine come out_of the IO and when it powered up and went back into the IO you saw it move horizontally and at the same time it started raising the shuttle .
&-um there are other &-uh systems &-uh some information storage retrieval systems work the same way instead of a pallet rack you can imagine &-uh a rack that holds tape cartridges and you have a computer &-uh read write head that that sends information back and forth to the CPU and some of those read write heads in mass storage systems also operate that way .
but I don't know if that's the latest and greatest technology in &-uh I just know some systems used to work that way and I don't know if that's still the case but &~horiz the Chebyshev travel occurs whenever you have two independent motors moving &-uh concurrently then you you have to model that as Chebyshev travel .
&-uh this came up last time I think &-uh you mentioned it about &-uh what &~a is the probability of going to various openings in the rack .
for today's derivation we're gonna assume &=writing_throughout_utterance randomized +...
storage and again for the purposes of today's derivation we're gonna say that means we're equally likely +...
equally likely +...
to visit +...
excuse_me to visit any point in the rack (0.4) mkay (0.7) and our sixth and last assumption is that the load +...
pickup time +...
and which I'll call capital P +...
and load deposit time +...
which we'll call capital D +...
are given +...
and fixed .
this often depends of_course on the load size and the load weight but what that is referring to is the shuttle cycle time that it takes to either put the load in the rack remember it puts it in the rack then slightly lowers the shuttle then retracts .
that would be a deposit time and the opposite happens to pick up the load .
extend the shuttle slightly raise it and retract and that's your pickup time so &-uh given the load dimensions and the load weight this does not depend on how fast the SR travels or the rack size (be)cause this is the cycle that occurs &~af after the SR stops and it's time to pick up or deposit the load okay ?
and I will refer to this as the time &=writes:board to pick up or deposit the load t@l slash t@l sub p@l slash d@l which is pickup plus D and often +...
time to pick up the load is equal to the time to deposit the load .
no difference .
it's just one cycle is the opposite of the other okay ?
now this may seem like a pretty restrictive set of assumptions but &-uh when you see the derivations you're gonna see why we're starting this way .
and to make the results more realistic we hafta address the issue of acceleration deceleration later .
we're gonna hafta address the issue of the IO point location later (be)cause not all systems have the IO point at the lower left hand corner .
and last but not least we have to address this issue of randomized storage and what are some alternatives used and what does that mean in practice okay ?
but for &-uh deriving the &-uh cycle times these are all the assumptions we need .
and which cycle times am I referring to ?
well single command cycle time and dual command cycle time of_course this is easier (be)cause it involves only one stop okay ?
so let's start off with trying to derive the expected single command cycle that's our first step towards determining +...
the throughput of this system so +...
expected single command cycle is what we're trying to get .
this is by the way &-uh the +//.
before I put the question mark maybe I I'll define it .
this is the expected +...
single command +...
travel time okay and that's what we're gonna try to derive and this is what we don't know at this point in time .
also while we're doing definitions this is the expected +...
notice I call this travel time this is the expected single command cycle time .
(0.5) this one is easy it's defined as the expected travel time plus the total load handling time pickup deposit time .
on a single command cycle how many times do you handle the load ?
(0.5) .
once to pick up once to deposit .
once to pick up once to deposit right ?
so there are gonna be two handling operations so this one is two P PD .
oops I'm sorry with that definition I can't say that &-uh this is the one I wanna use .
let's go back and change this sorry P +...
or D often P equals D .
yep that's what I wanted to do here .
that's not a plus there .
this is the time to pick up or deposit the load so we have two two handling operations .
okay so if we ask ourselves what is the expected single command cycle time &-uh exam and homeworks please be careful whether I'm asking cycle time or travel time you have to distinguish between the two .
if I know the expected single command cycle time since we assume this is given and known and given and fixed it's easier to find the cycle time once we get the expected single command travel time so the question is this now how do we find that ?
&-uh given all these assumptions I hope you agree that the cycle time is gonna depend on the rack height and the rack length which we assumed were given in feet and it also depends on the horizontal velocity of the machine and the vertical velocity of the machine so we have four parameters that it depends on right ?
nothing else +...
we assumed acceleration deceleration &-uh we assumed <it away> .
&-uh we assumed the load handling times are a given of_course that only affects the cycle time we're interested in the travel time so what's left ?
the four parameters rack height rack length and the travel speed of the SR machine in two directions .
okay ?
well let's first break this down +...
expected value of single command is really out to an opening and back and whether you're doing storage or retrieval doesn't matter (be)cause you go empty out loaded back or you go loaded out and come back empty it's the same thing .
so we're not concerned with whether it's a single command storage or a single command retrieval cycle all we know it's a single command cycle .
and also if I can get the expected travel time out I can simply multiply that by two and give the +//.
get the total &-uh &~s expected travel time so +...
really all we need is that .
expected out we're gonna simply double that .
now the first issue is we have four parameters to deal with before we get into the derivation I'm gonna show you an interesting concept that +...
helps the analytical derivation considerably and that's called normalizing the rack .
that is we're gonna transform this rack into a slightly different type of rack manipulate that get the results and then transform back to the original rack and basically what we're really doing is transform the rack into &-uh time and reduce the parameters .
the way we normalize a rack is first +...
find the travel time to the farthest point in the rack vertically okay ?
so let's say that travel time vertically is t@l sub v@l then by definition &-uh that's gonna be the height of the rack divided by vertical velocity .
that's the time it will take the SR machine to reach that point and remember we're modeling it as a continuous rack .
the time it'll take to reach that point horizontally is gonna be rack length divided by +...
&-uh horizontal velocity v@l sub h@l okay ?
and then we're gonna define the scaling factor cap T as the maximum of those two maximum of those two travel times (0.6) so cap T which I refer to as the scaling factor +...
is the maximum of t@l sub v@l and t@l sub h@l .
why is it I call it a scaling factor ?
(be)cause it hasta do with the scale of the rack how big it is right ?
and basically what you're saying is what's the longer side of the rack ?
in ?
⌈ time ⌉ .
⌊ feet ⌋ ?
in time exactly what's the longer side of the rack in time and then you <take the> take the longer side of the rack in time divide both sides of the rack with that value and pick the minimum of those and that gives you the shape factor B .
and B hasta do with the shape of the rack so the shape factor B is equal to the minimum of t@l sub h@l well +//.
excuse_me t@l sub v@l divided by cap T comma t@l sub h@l divided by cap T .
by definition (0.5) the shape factor B is between +...
zero and one and now notice I use the strict &~ine inequality there if I'm allowed a continuous rack then at least in theory &~i one line may be a rack in which case you could have B equals zero but in a real rack of_course that can't happen okay ?
the real rack will always have nonzero height but since we're modeling the rack as a continuous rack I can essentially draw a line and say this is your rack in which case B will be zero .
what's the case for B equals one +..?
how would you define a rack in words if B equals one what would you call such a rack ?
what does it mean in words ?
(0.4) .
travel time is equal on both axes .
exactly travel time is equal on both sides of the rack so that rack is square but it's not square in in in distance it's square in time right ?
so that rack is +...
square in time which I'll abbreviate to a SIT rack S I T .
square in time racks have interesting analytical properties we're gonna see that .
the &-uh they play a role xxx they have some &-uh interesting properties we'll &~whe when it's the right time <we'll we'll> we'll we'll address that .
&-um if you notice B by picking the minimum of the two has something to do with the shape of the rack in that when B gets close to one the rack becomes square in time as B approaches zero it becomes &-uh flatter and flatter in time so a quick example in fact I don't even have the numbers for this but might help to show you a quick example +...
if I have an IO point there and &-uh let's say I don't know it takes &-uh point four minutes to reach there point eight minutes to reach that then the scaling factor for this rack would be point eight minutes okay ?
and the shape factor for this rack is gonna be point fifty +...
okay ?
so basically you ask what's the longer side in time ?
point eight .
and good enough T should be point eight now divide both sides with point eight and looking at that as a figure is also helpful +...
because that really is your normalized rack so if you want to see the normalized rack it looks like this +...
of_course I'm not drawing these to scale divide both sides by point eight then it's one time unit long in that direction and point five time units long in that direction this is the normalized rack +...
okay ?
so we've transformed the rack it's almost like &-uh moving the rack to another planet .
&=laughs:SUm lousy analogy maybe but it's like having two different racks one is on earth and the other one is on another planet .
on that planet there's a time unit called one time unit .
their one time unit on that planet corresponds to how many minutes in our planet ?
point eight .
point eight .
so it's just like you know define another time unit don't call it seconds don't call it minutes (be)cause those are all for our planet but for them call them time units .
to them one time unit is to us point eight minutes .
why this fancy conversion ?
why ?
because note that +...
a normalized rack +...
is always either +...
one by B or +...
B by one you see what I mean ?
&~th one side is always gonna be one time unit long and the other side is always gonna be B time units long furthermore B is always between zero and one +...
so what do we do with the normalized rack ?
suppose we find the expected single command travel time expected single command travel time +...
for a normalized rack &=pause_while_writing hence the hat okay the caret I put a caret &-um e@l of SC when you see the caret +...
excuse_me that means it's a normalized rack so suppose we define e@l of SC as the expected travel time for a normalized rack which means then how long on average does it take if I go to a point randomly selected point in that rack and come back or I go to a randomly selected point in that rack and come back that's what it says .
if I gave you the value of the normalized travel time +...
what would be the value of the original travel time which is the one we're trying to find ?
remember this is the one we want .
&=pause_while_writing if I gave you the value suppose you know this if I gave you the value of that what would be the value of that ?
how do you go back ?
multiply by two .
exactly &=pause_while_writing okay ?
(be)cause you're gonna get the expected travel time in their time units and all you have to do to convert to original minutes is to multiply by T .
so now the question is how do I find the normalized single command travel time and how many parameters do I have to deal with +..?
it's a function of B .
one side is always equal to one so the expected single command travel time in this rack or that rack depends only on B .
what I'm gonna show you next you can do exactly with the original rack but you you'd be surprised how complicated it gets (be)cause you're dealing with four different parameters just gets tedious algebraically a_lot_of &-uh nasty expressions to deal with you normalize it it &~works it works much better .
the next thing I'm gonna do well oh &~befo of_course &-uh +...
what we said for the original rack applies for the normalized rack .
it's still out and back .
so basically I want twice the expected value of out .
so we're basically saying +//.
let's erase that return line .
if I start from the IO point , randomly pick a point on the rack , travel to that point Chebyshev , and come back &-uh and just stand there , what's the expected travel time or do that .
now I'm gonna make the next argument with you +...
if I derive the expected single command travel time for this rack I'm gonna argue it's the same value for that rack .
why is that ?
(0.8) a_lot_of people are doing this sign language .
well it's symmetry right ?
but &-uh symmetry still may not be &-uh detailed enough for you &-uh there're two ways of looking at things one is mathematically that is you'll sit down and derive both cases you say oh they are the same .
that's the mathematician's &-uh approach to the problem or you'll approach the problem as a physicist and what would the physicist do ?
the physicist is gonna say well look at the rack this way okay ?
compute your expected cycle time don't touch the rack so I'm not +//.
your cycle time's not gonna change just turn your head .
if you rotate your head you're looking at the same rack but it appears this way .
it's the same rack .
actually you can generalize this .
all the results I'm gonna show you now apply as long as the IO point is at any one of the four corners of the rack .
if you don't believe that then turn upside down the IO point is gonna appear at the upper corner right ?
it's the same rack .
so due to symmetry all the results apply whether it's a one by B rack or B by one rack .
just for convenience I'm gonna pick that as our configuration today B by one rack (0.5) now I'm gonna ask a question &-uh that I want you to think about I'm not gonna answer it because after this question after I pose the question I wanna go ahead with the derivation but here's a flawed argument +...
notice by saying flawed I &~al I'm already giving you part of the answer .
the flawed argument goes as follows here's your rack &=writes:board B by one here's your IO point .
you want the expected time it takes to go to a point randomly selected on the rack .
if every point is equally likely to be selected right ?
we assume randomized storage remember every point is equally likely to be selected on the average where're you gonna go ?
to the center ?
to the &~cen center of the rack or centrally or center of gravity +...
therefore we're gonna claim +...
that so the the argument goes on average you're gonna go to the center of the rack based on that argument we're gonna claim that the expected &-uh normalized single command travel time is whatever that is okay ?
I don't wanna write it algebraically &~w you compute the travel time to the &-uh center of the rack and remember you do that by taking the maximum of that and that travel time that gives you travel time to the center of the rack let's say travel time &=writes:board to center of the rack .
this is where I'm gonna leave this I want you to think about this and at home you can see &-uh how this matches what I'm gonna derive next or how it does not match okay ?
I want you to think about that &-uh and I'm giving you a pretty hint a pretty big hint by saying it's a flawed argument .
I would like you to &-uh compare it with what I'm gonna derive and if possible tell me next lecture what the flaw is .
(0.5) first approach to derive e@l of SC caret this one is &-uh use what I call brute force +...
integration +...
okay ?
&-uh keep in mind that &-uh we're going through a B by one rack in fact why don't I just &-uh draw a new rack (0.4) B by one randomly pick a point I think I called it &-uh X comma Y yep +...
and basically X is between zero and one and &-uh Y is between zero and B and you want the expected value of let's integrate now over X and Y integrate over the entire rack maximum of X and Y right ?
you want the maximum of the travel time to point XY that's Chebyshev travel .
the probability that you picked that point f@l of XY DY DX .
I just set up a &-uh &-uh &~e &~e expression &-uh using integration f@l of XY is the probability that you'll go to that point .
if every point is equally likely to be selected that's almost like saying randomly pick an X value between zero and one .
independently pick a randomly pick a a Y value between zero and B where they intersect is your point .
so f@l of XY is really FX times FY because X and Y are independent .
and f@l of x@l is one over one f@l of y@l is one over B .
so now I can rewrite this equation as follows take one over B out_of the integral let's move that out XY maximum of XY DY DX +...
okay can you integrate that function +..?
can you integrate this ?
what stops you from &-uh doing the integration there ?
(0.7) the max operator right ?
what's a standard trick ?
there're &~d different approaches now from this point on but a standard trick is to do what ?
how can you get rid of that max operator ?
(0.6) .
xxx (0.5) .
no volunteers ?
(0.6) this is a pretty standard trick that's why I wanted you to think back to your bag of tricks and recall that one +...
you can't integrate it until you get rid of that operator how you're gonna get rid of it is divide your integration region into subregions you're integrating over the entire rack .
instead divide that region into smaller regions .
within each region if you know which one is greater than the other you get rid of the max operator .
that's a standard trick but here it also has a very nice geometric &-uh explanation if this is a B by one rack then up to this imaginary line boy that looks like a crooked line okay up to this line here it's a square in time rack right ?
and then you have some additional rack after that .
Do a diagonal +...
if the point you pick remember we're randomly picking assuming this point is equally likely to be entering the rack but if the point you pick happens to fall in this region what's the maximum of X comma Y equal to ?
hm ?
Y .
in this region the maximum of the two is always equal to Y .
sometimes I refer to that as vertically dominated region of the rack and what I mean by that is the vertical motor is the critical motor there .
that's the one that always hasta run .
and this region is ?
horizontally dominated and this region is horizontally dominated so if I +//.
all I have to do is break the integration up into those three regions and then it's a trivial integration (be)cause that's all you're +//.
the function you're integrating is trivial once you get rid of the max operator so &-uh &~exc oh by the way I'm sorry don't forget to put your two I forgot that .
remember we're just looking at the time out ?
<you need to> you need to double that because on the left hand side I'm saying single command you have to come back .
&~d don't forget that .
so expected single command normalized rack is equal to two over B and then I'll just break the region down for you .
the first region X goes from zero to B Y goes from ?
X to ?
B right ?
Y goes from X to B then the max is Y BYBX next region &-uh X goes from zero to B Y goes from zero up to ?
X and that's X DYDX and the last region is X goes from B to one Y goes from zero to B the max there is X VYVX .
you see you could have done this exact same thing without that picture because look you're saying I'm gonna let X go to zero to B I will let Y be at least as large as X so the max is always gonna be Y so you could have done this without that picture but I +//.
this is nice to see &~wh what you're doing in the rack .
this is a trivial integration now <so is that> so is that so I'm gonna &~ski skip that part if you carry out the integration +...
and do the rest of the work you're gonna see that the expected single command travel time comes to this .
(0.10) this is an equation that we're gonna use quite a bit in unit load automated storage retrieval systems so &-uh +...
please get used to that .
memorizing it is easy too .
(0.5) and to really be complete we should say so many time units and remember +...
&=writes:board to get the original or denormalized single command travel time you need to multiply that result by T (0.4) now before we go to &-uh dual command +...
I wanna say something about the optimum rack shape .
when we say optimum you have to look at the rack cost as well but today we won't look at the rack cost so let's say we ignore the rack cost and other cost elements we're only gonna look at cycle time +...
and of_course keep in mind the rack area should be fixed you can't shrink the rack .
the rack area is fixed we're looking at given that fixed area what's the optimal shape for the rack ?
you look at this equation what is the optimal shape for the rack ?
what's the optimal B value ?
remember B is between zero and one .
(0.8) what is the optimal B value if my only concern is minimizing the expected hm ?
one .
if you said B equals to one is this minimized +..?
if you said B equals to one this is one point thirty thirty three .
&=pause_while_writing is that the &-uh minimum value +..?
what is the minimum value +..?
one .
zero .
&=inaudible_answer .
well look if I said B equals to zero &~it it's one which is less that one point three (0.6) what's going on here ?
we're saying a flat rack is better than a square in time rack .
that's what the equation says (0.4) hm ?
(0.4) is that what we're trying to minimize ?
(0.4) or is this what we're trying to minimize ?
that's what we're trying to minimize .
this is what we're trying to minimize .
what happens to the T value as the rack gets flatter and flatter ?
I remind you the area's fixed +...
as the rack gets flatter and flatter as +//.
and the area's fixed what's happening to its length ?
it increases .
it increases as the rack length +//.
so basically we can say it's getting +//.
we're we're squishing the rack down further the height's going down but as the height's going down the ?
length's going up .
as the length is going up &~wh what's going up ?
T is going up so this is incorrect there's something going on so I'll give you a clue and I want you to think about the optimum (0.4) B value I want you to think about that and remember I'm excluding rack cost issues we're only looking at cycle time .
I'll give you a clue &=pause_while_writing if I wanna go back to the normalized rack I can multiply both sides with T if the rack is B by one and you multiply both sides with T what do you get ?
a normalized rack which is T times VT in travel time you're back to the normalized rack .
and the area's fixed .
not +//.
area not in square feet but area in time is what +..?
okay and I want you to take it from there the area's fixed and that's the rack for which we want to minimize the cycle time +...
what is the optimum +...
shape factor ?
okay so I want you to think about those two things one is this flawed argument to get the expected &-uh single command travel time and the other one is once we have that expression &-um you should immediately ask yourself what is the optimum rack shape +...
okay &-uh any questions ?
(0.7) single command is pretty easy .
now we look at dual command and things get a little bit complicated and that's because the dual command itself has two operations in it (0.6) and to remind you and develop a little bit of notation here the dual command remember does the storage first with our assumptions that's how it operates and travels empty to a second point retrieves the load and comes back to the IO point .
okay so you have a storage and a retrieval in a dual command &-uh we will still assume that the rack is normalized B by one +...
&=vocal_interruption excuse_me by the way if you don't believe my arguments about symmetry earlier +...
repeat this approach for a one by D rack and see what you get okay but &~y &~y you'll see it's the same thing it's just if you wanna convince yourself you may wanna repeat that .
so an expected dual command &=pause_while_writing travel time is +...
expected out plus what I call TB that stands for travel between okay (be)cause you're travelling between two randomly selected points and back right ?
that's a full dual command cycle .
out travel between and back .
now as you &~w can see readily we can write this one as out and back plus travel between you see that ?
it's very easy .
you can do that because it's the expected value operator well guess what ?
out and back is nothing but single command so all I need to derive the expected dual command travel time in a normalized rack is ?
the expected travel between time okay ?
so in words what we're saying pick a normalized rack B by one .
randomly select two points in this rack .
let's call them x@l one y@l one and x@l two y@l two .
randomly select two points in this rack +...
and the question is what is the expected travel time between those two randomly selected points ?
this is a little bit more complicated .
because here one of the points is fixed and you're saying what's the expected travel time to the randomly selected point ?
now you have two points both are equally likely to be anywhere in the rack .
you sample them and you say what's the expected travel time between them ?
well if you use the brute force integration approach just to &-uh write it out &=pause_while_writing it gets pretty &-uh complicated +...
expected travel between is equal to now I need four integrals right ?
I have x@l one going from &-uh zero to one .
we have x@l two going from zero to one .
y@l one going from zero to B .
y@l two going from zero to B .
the maximum of the &~ex &~a absolute value of x@l one minus x@l two comma absolute value of +...
y@l one minus y@l two and close the parentheses for the max operator right ?
you need to know the travel time in the X direction the travel time in the Y direction and then pick the maximum of the two .
that's Chebyshev travel between two randomly selected points times +//.
I'll write the rest in here .
times &~F of &-uh x@l one f@l of x@l two f@l of y@l one f@l of y@l two &-uh DY two DY one DX two &~D x@l one and x@l one .
and x@l two are uniformly distributed between zero and one and y@l one and y@l two are uniformly distributed between zero and B so it's very easy to see this is equal to one over b@l squared .
that's easy .
what's the tough part here is that on top of the max operator what do we have to contend with ?
the absolute value operators .
now try breaking that into regions because you hafta get rid of the max operator .
and within each region you need to know is x@l one greater than x@l two or x@l two greater than x@l one if you're gonna get rid of the absolute value .
(be)cause if x@l one is greater than x@l two you can just write x@l one minus x@l two and get rid of that but if x@l two's greater than x@l one you're gonna hafta write x@l two minus x@l one to get rid of the absolute value operator .
and let me tell you good luck +...
some people have tried this years ago &-uh it's too tedious and it's a_lot_of waste of time &-uh not only because it's very tedious but because there's a much better way .
if we didn't know a better way I would encourage you to take a a shot at it but why do that if there's a much better way ?
this though is is really tough I mean a_couple_of people went down this road &-um and got stuck because it gets very complicated &-uh it's very difficult to break this whole region down and keep in mind you're not just trying to break the rack up into regions anymore you're looking at two points at a time .
so one approach people have tried is fix one point given that you know the old +//.
that's another trick that should be in your bag conditional probability and conditional expectations given the location of one point derive the expected travel time and then uncondition it by saying okay that point itself is equally likely to be anywhere in the rack .
that's probably your most reasonable approach if you're gonna stick to this brute force &-uh integration method okay ?
but &-uh as I said there's a method that's better than this and better than conditioning and that's the one I wanna show you next .
any questions or comments so far +..?
okay before I show you the dual command &-uh with that method and &-uh I +//.
for lack of a better word I'm gonna call that method a statistical slash probabilistic approach .
let's just call it a statistical approach in short .
before I show you that method the statistical approach for dual command I wanna take a slight detour leave travel between here let's go back to single command (be)cause if there's a neat approach for dual &~com for travel between &~y one would imagine the same neat approach should work for single command and avoid brute force integration .
so let's go back to single command +...
for the statistical approach .
this one and I said &-uh statistical slash probabilistic this one takes advantage of the CDF of the travel time the cumulative density function of the travel time .
so &-uh excuse_me the cumulative distribution function &-uh not the probability density function .
let's let g@l of z@l be the &-uh cumulative distribution function CDF of the &-uh one way +...
let's just say out travel time +...
okay let g@l of z@l be the cumulative distribution function of the travel time from the IO point to a randomly selected point in the rack .
then by definition the CDF is equal to the probability that the travel time XY is less than or equal to Z where t@l sub XY is the travel time to point XY okay ?
so randomly pick a point on the rack XY t@l sub XY is the travel time to that point then by definition your cumulative distribution function is equal to &-uh can &~wr can be written this way &~prob it's the probability that the travel time is less than or equal to X .
let's see do I need this ?
&=flipping_papers probability that t@l sub XY is less than or equal to Z we can simply write this is not the trick yet .
this is just definition this is the probability that the maximum of X and Y is less than or equal to Z right ?
because the travel time I can write it here the travel time +...
to point XY by definition is equal to the maximum of X and Y right ?
(be)cause we're going Chebyshev travel .
travel time to that point is equal to the maximum of XY so the probability we just rewrite the trick is this one .
probability that the maximum of X and Y is less than or equal to Z is equal to what ?
(0.7) what's the probability that the maximum of two things is less than or equal to Z +..?
this is a trick we show in thirty fifteen +...
we used to .
it's equal to the probability that ?
X is less than or equal to Z and ?
probability that Y is less than or equal to Z right ?
if X is less than or equal to Z and Y is less than or equal to Z then we're guaranteed that the maximum of the two is less than or equal to Z .
that's a nice trick .
with that trick this approach works very nice now the probability that &-uh what's the only difference between X and Y ?
remember we're assuming a B by one rack here's your point XY .
X is uniformly distributed between zero and one Y is uniformly distributed between zero and B that's the only difference between them right ?
so if I can find an expression for this CDF probability that Y is less than or equal to Z can I find an expression for that ?
how do I go from here to here ?
suppose I gave you an &~ex expression for this .
it's gonna have the parameter B in it .
how do you go here ?
(0.4) set B equals one right ?
that's the only difference between them .
this is uniform between zero and B .
this is uniform between zero and one .
so if you have an expression for this in B to get this all you do is set B equals one and that gives you this one too so first we're gonna look at this one we're gonna focus on how do we get the probability that Y is less than or equal to Z ?
well &~Z &-uh Y is uniform between what ?
zero and B so all you're asking is what's the CDF of a uniform distribution ?
mkay ?
probability that Y is less than or equal to Z because it's a uniform distribution it's Z over B if &-uh Z is between zero and B and it's simply one if &-uh Z is between B and one .
that's it .
and that's what I said earlier now from that how do I get probability that X is less than or equal to Z ?
simply plug B equals one and that gives you &-uh well just a second <I'm not done> I'm not done one more thing &-uh I want okay <let's write that> let's write that too probability that X is less than or equal to Z equals Z if &-uh Z is between zero and one and it's one +...
otherwise or Z greater than or equal to one so simply multiply those two (0.7) I'm gonna come back to these expressions in a second but for now we have the probability that Y is less than or equal to Z it's right here and we have the probability that X is less than or equal to Z .
therefore g@l of z@l is simply equal to their multiplication and you multiply them &-uh of_course you have to divide it into appropriate ranges if you multiply it here you get <z@l squared> z@l squared over B if Z is between zero and B and if Z is between B and one you simply get Z +...
okay so now we have the &-uh cumulative density function of the one way travel time .
what do you do next ?
if you have the CDF of a random variable +...
fake its derivative get the PDF and then Z times the PDF integrated you'll get its expected value so all you need now is the PDF take the integral and that's two z@l over B and &-uh one again this is for Z between zero and B and this is for Z between B and one and the expected value of Z and remember I'll put a hat is Z +...
g@l of z@l BZ Z going from zero to one .
and that's trivial .
all you hafta do is break this down from Z goes zero to B use this expression for g@l of z@l and then &~ano plus another integral Z goes from B to one and use that times Z integrate it .
and you get the result which is exactly the same thing oh again .
&-uh &-uh I need to just make sure you know what that is .
this is one way travel time so you get &-uh +...
that expression therefore expected single command hat is simply equal to twice the one way travel time +...
giving us the exact same expression we derived earlier +...
this talking as I'm deriving it may make it look like it's not such a big deal I_mean not much more convenient than the brute force integration method .
but it really is &-uh (be)cause all I really do is &-uh write the two CDFs and one is for uniform between zero and B the other one is uniform between zero and one get the CDF for one way take its derivative and then integrate to get the mean value and that's all you do +//.
are are doing .
is that Z times GZ and b@l squared over B ?
six .
six .
that's b@l squared over six +...
you're gonna hafta be careful between the b@l-s and the sixes here (0.5) so the question is &-uh how do we extend this to the dual command cycle ?
(be)cause &~that that's what we wanna do .
so now to do the exact same thing for the dual command cycle +...
oh before I show that I said I'm gonna come back to these these CDFs have a very nice &-uh +//.
they're just the CDF of the uniform but they have a very nice interpretation in the rack +...
here's our rack okay randomly pick a point &-uh +...
XY or actually before I do that let's see this is b@l one I wanna put my imaginary line here okay ?
so it's square in time up to that point and then after that is the rest of the rack +...
if I ask you to connect all the points in the rack that have equal travel time what would emerge is what most people call a <contour line> contour line or isocost@n line some people have called it but of_course we're not talking about cost here just substitute travel time .
that means I ask you to show me all the points connect them remember this is a continuous rack so there are infinitely many points in it but I ask you to connect all the points that have equal travel time a line will emerge we call that a contour line what would that line look like ?
remember you're looking at the rack in time this is not +...
&=vocal_interruption excuse_me in feet .
this is in travel time +...
well to do that you're gonna go up &~le I think I went up Z .
let's go up directly Z time units .
can I go out Z time units ?
so at least these two points have the same travel time agreed ?
well can I go to this point ?
sure what would be the travel time to that little point +..?
it's the maximum of that and that so the travel time is ?
Z .
still Z .
I can keep going up like that and maintain a travel time of Z up to where +..?
up to that corner .
(be)cause if I go any farther the travel time would be more than Z .
likewise I can go to this point so I'm travelling a little bit horizontally but my critical travel is still vertical travel time to that point is still Z .
<Z Z> Z Z and by the way what you're getting is a square contour line all the points on that line travel time to any point on that line is Z +...
that's called a contour line and these lines will keep growing right ?
now you have Z you may call this z@l one then you have z@l two whatever different values until something happens look until you hit ?
B right ?
up until that point these contour lines look square agreed ?
what happens after you hit B ?
what if I said show me the contour line to a Z value but Z is greater than B ?
what is it gonna look like ?
so we're in this region of the rack what would the contour line in that region look like ?
vertical .
hm ?
vertical line .
vertical line exactly .
(0.5) okay so you have two types of contour lines and what guess what the break point is .
it says the contour line varies depending on whether Z is less than B or Z is greater than B .
guess what ?
here's the break point if Z is less than B you have &~s one expression if Z is greater than B you have another expression for the CDF .
okay what if I said given that the travel time is less than or equal to B pick a Z value pick any Z value less than or equal to B given that it's less than or equal to B what's the probability that a randomly selected point will have travel time less than or equal to Z ?
(be)cause remember the CDF says what's the probability that that travel time is less than or equal to Z +..?
well randomly pick a point the probability that the travel time is less than or equal to Z is what ?
is the probability that the point falls anywhere in that square do you agree ?
<if the> if the point falls anywhere within the square then the travel time to that point is gonna be less than or equal to Z .
then it's like asking what's the probability that the point I picked falls in the square ?
that probability is equal to the area of the square divided by the area of the rack .
what's the area of the square ?
⌈ z@l squared ⌉ .
⌊ z@l squared ⌋ .
what's the area of the rack ?
E .
B .
(0.5) okay ?
and as you go farther out however then you're asking what is the probability that the point falls in this region of the rack ?
you see that ?
then you look at &~rem the Z is out here then that's +//.
the area &~th of that region is ZB and the area of the rack is B ZB divided by B gives you ?
Z so this is just a different interpretation using contour lines if if you don't find this appealing that's fine I mean you don't hafta &-uh follow this contour line approach what's important is that you follow this approach that is <all I> all I have done is taken the two CDFs multiply them to get the CDF of the one way travel time .
but I show this contour line (be)cause it is a nice analogy of what's happening and &-uh also later in the course these contour lines are helpful in figuring out what to do how to treat racks that have IO points at a location other than the corner then the contour lines play a big role .
yeah .
how could Z be greater than one ?
oh it can't be &-uh most people here would have wrote &-uh otherwise you still have to +...
&-uh well no you can't say otherwise &-uh (be)cause well negative Z values are not allowed &-uh any other region &-uh it's one it &~i in our rack physically Z can't be greater than one .
but if if you leave it like this nothing changes for us statisticians won't like that .
the CDF hasta reach one and you hafta show when it reaches one .
you see what I mean ?
no I don't understand the probability for the X variable .
&-uh the probability for the X variable is take a uniform variable between zero and one and you ask yourself what is the CDF of a uniform ?
that's the CDF of a uniform .
(0.7) do you know the CDF of a uniform distribution that's all it is .
okay .
and I agree with you Z greater than one does not exist well at equal one it exists but if you leave it like this statisticians don't like that .
you have to show when the CDF reaches one .
technically when Z equals one Z itself is one so it reaches there but they wanna see that .
that's redundant .
if it's confusing you you can ignore it .
because technically as you see when Z equals one that value &~take that function takes the value one +...
so that's just the CDF of a uniform say forty five degree line +...
and <this is> this is also the CDF of a uniform but instead of uniform between zero and one this is uniform between zero and B +...
okay +..?
any other questions ?
(0.8) okay well how do we extend this &-uh the contour lines as I said play a role with different IO point locations +...
we'll see that later &-uh right now if you don't see why the contour line those areas that I divided gives this expression that's okay <you don't> you don't hafta worry about that part +...
now we say well what do we do with &-uh I have about a little over five minutes left so I'll start this derivation and we'll continue next time .
the statistical approach for expected value of travel between in a normalized rack is what we want .
if we're gonna use the so+called statistical approach then how do we start ?
get the CDF first right ?
from that get the PDF then integrate it and get its expected value .
&-uh and just to avoid confusion with G I used f@l of z@l for the &-uh probability &-uh that the &-uh travel between time is less than or equal to Z so this is the CDF of the travel between time that's how you start out .
that is equal to the &-uh probability that the &-uh maximum of x@l one minus x@l two absolute values and y@l one minus y@l two absolute values is less than or equal to Z .
use the same trick the &~max probably that the maximum of those two is less than or equal to Z is equal to the multiplication of the probability so I'll skip that trick .
and what you get is this is equal to the probability that x@l one minus x@l two absolute value is less than or equal to Z times the probability that y@l one minus y@l two absolute value is less than or equal to Z .
okay so I just skipped a step I hope everybody followed that right ?
where the maximum of these two is less than or equal to Z +...
just as before &-uh y@l one and y@l two are uniform between zero and B and x@l one and x@l two are uniform between zero and one so this is gonna be some nasty expression that involves B in it .
if I can derive that can I get this ?
yeah simply by setting B equals one .
so now we want the CDF of &-uh this &-uh &-uh probability that two randomly selected points along the y@l axis the travel time between them is less than or equal to Z .
you can derive this from scratch .
it is not difficult .
you're basically asking yourself the following question .
imagine a line that's B long and you sample two points on this line .
I'll intentionally put y@l one above y@l two (be)cause you don't know which one is above the other and you take the &-uh the distance between the two points .
this is what you're asking .
you can derive this from scratch but &-uh why do it if someone else has done it in the past for you and that brings up the subject of order statistics &-uh I'm just curious (be)cause this depends on how many courses you took in statistics how many of you have dealt before with order statistics ?
by dealing with I mean are you familiar with the topic ?
did you derive or see any results for it can I see a show of hands ?
one person .
two three okay .
okay well &-uh order statistics is actually a neat subject I mean it plays a big role in statistics now a a very short side bar on it I can't teach you order statistics in ten minutes obviously but the basic says &-uh if you randomly sample +...
end points independently and from the same distribution okay you have N IID points randomly sampled it let's for fun let's say we're all sampling it from a uniform zero b@l .
could be some other distribution but for our course of_course this is the most interesting case .
so randomly sample end points from a uniform zero b@l and they're independent .
observe the results and rank them such_that Y parentheses one now that's called an order statistic as soon as you put a parentheses &~arou around it is less than or equal to y@l two less than or equal to y@l sub n@l some people refer to this as the first order statistic second order statistic Nth order statistic .
so you could +//.
order &~s statistics answers questions like what is the expected value of the smallest of the end points you sample ?
what is the expected value of the largest point ?
and so on okay ?
so all it means is really the points you have sampled have been ordered in this fashion and now you're interested in the statistical properties of those individual points .
people have derived for the case where they're all uniform the CDF &=writes:board of the range which means we know the CDF which is the probability that &-uh YN minus y@l one +...
the range is less than or equal to Z .
people have derived that in order statistics so how do we relate this back to our case what is our case ?
how many points do we have +..?
do we have N points or &~wh what's N ?
exactly we have our case N equals two we are still sampling from a uniform distribution between zero and B therefore the probability that &-uh where did ours go ?
right here the one we want probability that the absolute value of y@l one minus y@l two is less than or equal to Z is the same thing by definition as the probability that the range of the order statistic I mean the two point order statistic we created is less than or equal to Z .
so next time I'll start the lecture giving you an expression that other people have derived for the range of an order statistic coming from a uniform distribution once we have that the rest is pretty easy because &-uh that gives us this CDF and then we plug in B equals one get this CDF multiply the two CDF functions and that gives you the CDF for travel between +...
okay ?
and next Thursday I'm also gonna assign I mean this Thursday next lecture I'm gonna assign &-uh practice problems for homework .
any questions before we wrap up +..?
okay that concludes it then thanks 