# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	1999
# mode:	written
# genre_broad:	conversation
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	ca
# source:	https://ca.talkbank.org/data-orig/MICASE/defense/def270sf061.cha
# copyright_short:	https://sla.talkbank.org/TBB/ca
# copyright_long:	CABank: MacWhinney, B., & Wagner, J. (2010). Transcribing, searching and data sharing: The CLAN software and the TalkBank data repository. Gesprachsforschung, 11, 154-173.
# sample_type:	whole
# comments:	NA
any questions any of you want to get out right now before it it's official ? 385_3185
&=laughs:multiple (0.12) .
xxx to that ?
yes we we +/. 5025_18325
⌈ does it ⌉ work ?
+, ⌊ first put it ⌋ on the table but figured it would hit the heads of the committee members and so we decided not to do that . 18525_23585
that's one strategy . 23905_24365
yeah .
well yeah that's true . 25165_26125
&=laughs:multiple .
it's called a defense strategy . 27935_28415
&=laughs:multiple .
hm I should have brought the plane that runs down . 28955_32715
have it try to take off in that direction . 34795_36575
&=laughs:SUm .
take a bullet &=laughs:SUm .
&=sound_effect exactly . 37655_39395
&=laughs:multiple (0.6) .
I'd say the key to a good defense is a good offense . 42555_49335
&=laughs:multiple .
mm that's basically what this is for is humor so I can +//. 49975_55375
it really serves no research purpose . 56705_58365
(0.22) so if you want more details on what happened to this airplane nobody &~i this is not part of the defense so I'll tell it now +/. 61085_83485
⌈ okay ⌉ +/. 83825_83925
+, ⌊ so ⌋ basically last Thursday we &~w went out on a test and this is our trainer plane all of us &-um &~s grad students and &~s so forth who've been working on the project never really knew how to fly model airplanes before this and so we had this trainer that for the past two years we've taken it out and flown it just manually occasionally . 84065_99705
last Thursday we lost radio &~c communications with it and it flew around for a while by itself and promptly crashed into a tree and &-uh the wing came off in the tree and the fuselage came down and hit the ground so . 100745_112325
wow .
but we got good ⌈ data on the research airplane ⌉ . 114125_115625
⌊ the motivation for your work ⌋ . 115625_116225
&=laughs yeah right +... 116605_117905
this is the what ? 119885_120265
what is this ? 120405_120785
oh this is our trainer airplane . 121065_122185
last Thursday it &-uh had an incident with a tree . 122465_124605
so it's broken ? 126285_127165
⌈ oh yeah ⌉ &=laughs .
oh yeah this is broken this is not the research airplane &=laughs:SUm yeah this is structurally this is ⌊ the same as the last one ⌋ . 128505_132965
⌈ &~c can we pass you ⌉ ? 132965_133645
⌊ you can have part ⌋ spatial constraints as_well_as temporal constraints . 133725_136205
&=laughs yeah . 136425_136525
&=laughs <he's the> he's the last committee member so he needs to fill out the form I guess . 137485_143785
yes there should be an extra stack sitting over there somewhere . 144045_146485
mkay .
here it is . 146845_147305
yeah I think so yeah .
so if you wanna fill that out &-um the tradition is that before we get started everybody else leaves and the committee meets . 148725_155905
oh it's on tape . 156325_157685
yes I'll be talking to you later . 158245_160425
oh &=break_in_recording .
kind_of in two parts the first part which is the major part of the research is talking about the generation and execution of real+time plans and then we talk about an application which I have a particular interest in namely autonomous flight +... 161225_175945
so the overall research problem that I have been studying is how do you get safe autonomous operation when you really are looking at a real system &-um which &~re well for for the main that requires real+time response . 179425_195465
&-um in particular when your system has limitations such as computational resource limits which often people don't really pay attention to even though they're always there and when you have a complex hard real+time system where you require safety guarantees &-um those two things don't always go together naturally . 196175_214215
because &~w when you have a hard real+time system you really have to talk about deadlines and meeting those deadlines because if you don't meet them then you might compromise safety of your system . 214165_225325
so &-uh at this point I'll briefly mention the show+and+tell device that I've brought here . 226265_230345
which &-uh I'm going to be talking about airplane flight and &-um I'm going to claim that airplane flight is inherently dangerous . 231005_237185
so this is an example of an airplane flight gone wrong which basically &-um we lost communication with this airplane last Thursday when we were flying it manually so our flight was neither safe nor autonomous . 237545_249325
and basically what happened was &-um it was equivalent to having a very long delay without doing anything in which case the plane had plenty of time to fly into a tree . 249945_258505
so if you think at the extreme limit of where you have a resource limited system and you end up in some processing loop or you're doing something and not paying attention to say where your airplane is flying this kind of thing could happen . 259145_270985
so anyway I won't talk about the airplane anymore don't let it be too much of a distraction . 271385_275345
so the final &-um aspect of our problem that complicates is is that whenever you describe a problem that's fairly complex you don't always get everything right . 276465_284925
so in some cases you have imprecise knowledge in other cases you may have incomplete knowledge . 285235_289595
or both put together . 290195_290955
so in the worst case you have to make tradeoffs . 292055_294135
the three specific &-uh types of tradeoffs that we focused on are first of all if you have a real+time reaction set which would ideally keep you safe all the time and it doesn't fit on the resources that <you have> you have to do something you can't just say oh well we'll assume that it fits . 294835_309935
so we study that tradeoff . 310395_311235
&-um basically in_order_to make that tradeoff sometimes you have to relax your safety guarantees from absolute to some other &-um method of guaranteeing the system . 312815_321955
&-um a natural way to look at it is to maximize the probability that you're going to succeed . 322635_326955
so that's what we look at is to &~decra degrade safety guarantees to probabilistic when necessary and then since we degraded those guarantees and since we allow incomplete knowledge we have to recognize and react when we reach unhandled states . 327255_341515
basically unhandled states are those that have been ignored due to incomplete knowledge or probabilistic guarantees +... 342215_348095
so two aspects of our approach first the an overall view of how we look at plan generation and real+time execution is that we separate the planning process from the plan execution process . 350825_361805
and in doing so it allows us to use a_lot_of the powerful but computationally intensive planning algorithms to develop the plans and then also schedule them so that we know they will fit onto our limited resources when they execute . 362465_375505
we began this work by considering a system that was designed specifically to do that namely the Cooperative Intelligent Realtime Control Architecture called CIRCA which has a planner and a scheduler and to develop the plans and then uses &-um what it calls a real+time subsystem . 376435_393155
basically a special module that has carefully designed &-um knowledge of its resources and how &-uh worst case properties of the various items that might be in the plan to execute those plans . 393395_404415
(0.6) so given that architecture ideally you would build perfect plans that would execute in hard real+time for all situations but as I spoke of before you hafta be able to make tradeoffs and our &-um approach is to try to be as intelligent about them as possible . 409025_422625
so the first thing we did to allow us to make probabilistic guarantees is to incorporate a stochastic planner . 423285_428065
so our goal was not to get the most accurate probabilities and optimal plan but rather it was designed first to select actions and their deadlines that would allow us to preempt all possible catastrophic failure modes of our system . 428625_442445
and then it was also used &-um to give us these probabilistic guarantees by basically setting a threshold and ignoring the states that were less likely than that . 443305_451305
so during the planning process we have to converge on a schedulable plan . 452425_456425
what does that mean ? 456605_457385
that means that you have a planner it says here is what I wanna do . 457625_460985
that may overutilize the execution resources in which case &-um the scheduler says no I can't do that and at that point it provides feedback for the planner that will help it guide its efforts toward replanning . 461625_473845
at that point we have a plan that may not be complete but it's the best we can do given our resources . 474425_480085
so at that point we &-um find that it's necessary to be able to identify and react to other states as they happen . 480675_487275
&-uh basically &-um we look at classes of important unhandled states and respond to those by adding additional plans so that we end up having &~r a reactive system that has multiple plans each of which react in real+time to &-um the &~r dangerous situations as they arise . 488055_505575
(0.7) during this talk I'm gonna first &-um describe at a very high level the CIRCA two architecture which is the extension of the CIRCA as it was originally developed . 512715_520635
then I'm going to talk about the &-uh stochastic planning and temporal model that we currently use &-um in CIRCA two &-um the procedures that we use to detect and react to unhandled states . 521555_532195
and then &-um how we get our planner and scheduler to negotiate efficiently with each_other &~tow to tradeoff &-um &-um basically task to to select tasks to tradeoff when everything can't be scheduled . 532915_546915
and then I'll talk about automated flight using the CIRCA two architecture +... 547575_551435
and of_course the &~concl conclusions and future work . 553475_556495
so before I get started just so everyone knows what I mean when I say hard real+time system . 557275_561255
a_lot_of times in the planning and plan execution committee they'll think of real+time as meaning best effort or soft real+time . 561875_568955
in that kind of system you only get the maximum reward if you meet some sort of deadline but if you pass that deadline it's still okay to to keep going and do those tasks . 569495_578875
so this curve represents &-um the &~do dashed line represents a soft real+time task where if you don't finish it in time the reward degrades but it's +//. 579595_588095
your system is still okay . 588315_589255
we're talking specifically about a system where if you don't meet the deadline you will catastrophically fail . 589715_594635
so we require absolutely to meet that deadline and say our system is not safe if it does not . 595495_600835
so the two methods that are typically used to do this &-um one is to use &-um real+time scheduling algorithms which it specifically put tasks on a timeline to prove that deadlines will be met . 601635_612475
the other method is to demonstrate your system is fast enough . 612975_615635
a_lot_of people use this approach and it has been shown to be successful in a_lot_of applications however it is very difficult to prove that all of your testing is comprehensive so you can guarantee deadlines will be met . 616275_628915
(0.6) for our system we have a specific definition of what we mean when we say plan . 635145_638785
we mean real+time control plan . 639325_640865
there are two parts to this plan . 641285_642565
the first part is what we call task action pairs which specify the set of tasks or actions that we want to do &-um as part of the plan and the tasks which basically describe which states you will be in when you actually do those actions . 642725_656865
&-um &~th the set of of TAPs as I will call them is divided into a guaranteed set and a best effort set . 657585_664005
the guaranteed set &-um is the set that's +//. 664645_667265
are the hard real+time &-um tasks and they hafta be scheduled so that they will meet their guarantees so they come with a deadline that you have to schedule them with . 667525_676045
the best effort tasks basically execute whenever there's time so they're the soft real+time tasks . 676565_681045
do the &-um tests overlap between different &-um TAPs ? 681185_684505
&-uh no the planner is set up so you can only choose one action for each state . 685355_690035
so wait assume these tests are things like sensing . 692295_694035
⌈ &-um ⌉ .
⌊ yeah so ⌋ so basically if you start with a description of a plan as a list of states that go with an action then we basically pass that list of states into the ID three decision making algorithm and it comes up with tests that uniquely describe that set of states versus all of the other states that you don't do that action in +... 694755_712915
okay so &~y so any kind of overlap is handled by that process ⌈ not by ⌉ +/. 716375_719855
⌊ right ⌋ +/.
+, not when it's not at scheduling time . 720515_721515
right no . 721835_722075
that this is so basically part one is done by the planner . 722275_725095
and the planner also comes up with the deadlines . 725795_727475
and then part two the development of this TAP schedule on a timeline for the guaranteed TAPs is done by the scheduler . 727675_734615
and it doesn't know anything about tests versus actions it just knows the worst case execution times WCET there for each TAP which is what it assumes when it builds the schedule . 735755_744655
but then as you see there there is this average case execution time so any time one of the TAPs takes less than its worst case execution time you can reclaim that time for all of the best effort TAPs plus any time that remains once everything is scheduled . 745455_758215
so is this a a partition of the sensors basically ? 759395_762315
no it doesn't &~pa no you might use the sensors &-um in any of these tests so say you had a feature altitude for example you might use it in every test that you have . 763275_773795
let me take all the sensors and put them together let's call that the sensorium okay ? 775295_778935
okay .
is are do these does the &~un do the union of all these tests <if you> if you look at the on of all of them +/. 779695_786595
mhm +/.
+, is that does that recover the entire sensorium or are there parts of the sensorium which are not ? 786835_790735
if your plan does not require knowledge of a certain sensor value then you'll never care about it in this plan . 791395_796715
is that what you're asking ? 797235_797755
I'm asking I guess you've rejected you've referred to this paper in the in your thesis that +/. 797795_803095
uhuh +/.
+, talks about how stupid universal plans are . 803515_805415
+, oh yes +/. 805495_805795
+, is this if if you didn't have this scheduler if you just had this planner +/. 806055_809215
+, in is this has this planner come up with a universal ⌊ plan <for this state> ⌋ ? 809375_811735
⌈ no it has ⌉ not because it only considers states starting with you you have knowledge of your initial state . 811735_816395
and it looks at all the state transitions and comes up with the set of actions specifically for those which it considers reachable from its initial state . 817215_824635
so &-um if you never think that a state is reachable then it won't put that into into this list . 825835_831775
I was confused I thought you didn't deal with states I thought you dealt in &~se in outputs and in perception in &~per and in perceptions and then you imputed families of states to those perceptions ⌊ that's right ⌋ ? 832335_842815
⌈ right ⌉ .
right . 843875_847055
so it's possible that you will accidentally do one of these tests for a state that you considered unreachable .
because what you end up with when you plan is a list of states that you consider reachable that map to each of those &~fa states map to one or zero of these actions .
at that point that list of states is fed into ID three so that it comes up with these tests . 858595_863135
so you know that for all of your reachable states only one of these actions will be done . 864055_867635
or zero of them . 868535_869135
but if your system reaches some state that you don't have one of these tests for then it might do one of these actions by accident . 869395_878795
the presumption here is that as I'll talk about later we worry about the unhandled states basically those that you haven't considered reachable that reach failure very quickly . 879775_889995
but the others we don't really worry about in delta plan . 890795_894515
<are we> are we equating states and sensor outputs so that there's ⌊ nothing wrong ⌋ . 895065_899425
⌈ no no ⌉ not at all . 899425_899885
not at all +/. 899945_900325
+, no a state is the typical AI planning sort_of &-um set of features and values that uniquely describe the world . 900465_909285
so the plan execution idea you don't have there's no +//. 909545_911845
states aren't there . 912305_912745
⌊ you just have to ⌋ .
⌈ no the plan &~ex ⌉ execution system doesn't know anything about states . 912985_915725
okay .
but &~su suppose TAP one involves checking the altitude and TAP two involves checking the altitude +/. 916185_920885
⌊ right ⌋ +/.
+, ⌈ and that ⌉ takes you know a few milliseconds or something +/. 920925_923345
+, yeah mhm +/. 923465_923825
+, does the &~schedul can the scheduler in some way exploit the fact that &-uh +/. 923825_927105
+, ⌊ well not not ⌋ +/. 927405_928885
+, ⌈ <you could> you could get surrounded ⌉ by doing them both or ? 929105_931205
not as part of the architecture but for the architecture we have for our UAV &-um we separate the low level controlled state estimation processes from the stuff that CIRCA does so that it actually +//. 931205_942945
the feature tests are virtually instantaneous because the state estimator already goes out and reads all of the features and stores them in memory at &~a which time any of these tasks have access to that memory . 943225_953845
so for that specific case feature tests mean reading something from memory . 954465_959185
this is not generally the case because in previous versions of CIRCA there have been robots that really haven't had any underlying control mechanisms where feature tests meant actively going out and looking at something in the world . 960085_970465
so as far as the architecture is concerned all it knows is there're some functions do feature tests . 971185_975725
and .
they don't take time ? 977105_977645
I mean .
hm ?
they don't take any time ? 978925_979685
<to do the> .
no well in the UAV they take a very small amount of time but we still have to account for the amount of time it takes to read something from memory . 980005_986725
&-um for the general case they could take time and the the times that we use to schedule these TAPs include the worst case execution times for both the feature tests and the actions +... 987965_997325
does this &-uh the attack classification stay static or change depending on where your control system is in ? 1000235_1010375
for any particular plan it stays static . 1011435_1013755
why should it be though if you're talking about aircraft landing problem or ⌊ aircraft control problem ⌋ ? 1014915_1019535
⌈ well ⌉ the way we've designed &-uh &~w the aircraft control problem versus landing what's ⌊ the difference ⌋ ? 1019535_1024155
&=laughs .
⌈ well like the good ⌉ example the &-uh the altitude the sensing +/. 1024455_1027635
yes +/. 1028425_1028565
+, &-uh when the airplane is &-uh thirty five thousand feet above above the ground +/. 1029025_1033245
+, ⌊ right ⌋ +/.
+, ⌈ is ⌉ not as critical as ⌊ when ⌋ . 1033525_1035445
⌈ well ⌉ we assume for for &~th okay so I'm hoping not to cause confusion here we have for our unmanned aerial vehicle specifically designed the low level controller tasks and state estimations and so forth so that's a unique situation for CIRCA . 1035445_1049105
if you talk about that particular situation we assume that the state estimator is sampling the world &~fa &~th fast enough to maintain an accurate state estimate . 1049545_1059225
so it can figure out if it needs to sample the world frequently on landing versus not very frequently at high altitude and CIRCA does not concern itself with that . 1059445_1067565
in general CIRCA would assume that for any particular plan a TAP the TAP schedule is constant . 1068225_1078625
however it can split up the space into different subgoals . 1079285_1081785
meaning that you can have one plan for high altitude flight and one plan for landing +/. 1082345_1086285
mhm +/.
+, in which case if it worried about &-um how quickly you need to actually sense the feature to avoid failure that would hafta be &-um integrated somehow into the transition model in terms of how quickly you could fail . 1086785_1099425
but it seems to me the &-uh altitude sensing and elevator control TAP +/. 1101145_1116225
mhm +/.
+, &-uh could be classified as a best effort TAP or the guaranteed or time critical TAP depending on which phase of your flight it's in .
well I would have a tough time seeing that elevator control could be best effort but &-um so pretend that you don't care about altitude when you're at high altitude . 1118205_1125985
although actually I would care about that too because otherwise you could end up in this dive or severe climb so <I would> &~s I would argue and say that they &~we they were all supposed to be guaranteed . 1126245_1134385
for example you can miss deadlines for several periods +/. 1134645_1137985
⌊ right ⌋ +/.
+, ⌈ when ⌉ you're in &~hi high altitude whereas ⌊ in the ⌋ . 1138425_1141025
⌈ right ⌉ I mean with our particular airplane that's not the case to the extent that we could make our airplane unstable because once we enter a spin our controller is not necessarily gonna be able to recover from that because we don't have a full state space controller that can recover from everything . 1141025_1155485
so . 1156925_1156985
okay .
(0.8) .
so anyway the CIRCA two is what we use to generate those control plans and then to execute them . 1163735_1167995
the it's divided into two parts the planning subsystem and the plan execution subsystem . 1168515_1172455
the planning subsystem is in blue because it's executed in soft or best effort mode meaning that it takes as long as it needs to to come up with an accurate plan that's scheduled and the plan execution subsystem is the the part that we require hard real+time response for . 1172935_1188555
I'm first gonna go into the planning subsystem algorithm very briefly so when we start up the system it first reads in the user knowledge base which contains the state transitions the initial states goal states and so forth and at that point &-um we have a very simple algorithm right now that just goes down through a list of subgoals and plans for them in order . 1190065_1209245
so we select the first subgoal . 1209765_1210705
at that point we run the planner which basically starts with the initial state and &-um develops the the set of TAPs that it needs &-um to avoid failure and achieve the goal and it develops the deadlines for the guaranteed TAPs which are then turned into a schedule by the scheduler . 1211345_1227145
if the scheduler succeeds that plan is downloaded and everything's happy and we're all done . 1227845_1231345
otherwise if the scheduler is unable to schedule all the TAPs onto the timeline that it has it generates feedback for the planner which then hasta make tradeoffs to alter the plan so that it can be scheduled . 1231635_1242815
(0.5) so that's what happens in the planner . 1244115_1247915
&-um I don't have a separate slide for the plan execution subsystem because it's basically a dispatcher which processes messages between the planning subsystem and the real+time plan executor and it also accesses the plan database &-um which contains all of the plans that it needs to retrieve in real+time for failure avoidance . 1248265_1265625
I'll talk a little more about that later +... 1266165_1267365
so this is a simple example of something that might be generated by the CIRCA planner . 1268605_1274745
&-um the oval talks &~i is the what I'll use to represent the initial state . 1275315_1279255
so this has three features &-um a navigation setting a location in space and &-um an altitude . 1279835_1286975
and these are heavily discretized just for the example purposes so don't look at this and think that somehow the airplane's gonna fly itself with just these states . 1287535_1294275
so if you start out in the state s@l zero &-um we have what we call temporal transitions which are things that can occur over time and actions which are represented by the dashed lines which &-um the the planning &-uh &-uh CIRCA has control over . 1295215_1310555
so in state s@l zero in in fact from any of these states we have a temporal transition to somehow you can lose altitude . 1311115_1316515
this would correspond to hitting severe wind shear or something like that . 1316755_1319935
and if that happens then you end up with low altitude which if you do nothing you're going to crash . 1320675_1324455
&-um the there is one action we have to avoid that which is to climb and that action hasta be guaranteed in all of the states where the crash could occur from . 1325195_1333855
so you also see that this represents a cyclic state space &-um and &-uh also you see that there are temporal transitions that occur in a sequence of states which we we'll call dependent temporal transitions . 1334515_1346915
so basically the if everything goes well you will &~tr traverse the top five states which is to &-um set the next fix and then to wait while you fly to that fix and so forth until you get to your goal . 1348065_1358745
(0.8) so why do we want to have some sort of probabilistic planning in CIRCA we first of all &-um we want to &~pri prioritize states by some measure and the likelihood of them occurring is the measure that we currently use . 1365705_1378545
this enables us to use best first search which currently maybe it's not absolutely necessary but in the future one of the things we're going to be looking at is actually placing bounds on planning time &-um &~wh at which case best first search will become more important . 1379205_1392765
the others ⌊ we ⌋ . 1393425_1394645
⌈ search ⌉ for what ? 1393795_1394675
hm ?
search for what ? 1395195_1396295
best first search . 1396455_1397315
what are you searching for ? 1397875_1398455
we're searching for all of the ways to avoid failure primarily &-um in all of the states that are reachable from the initial state and then also &-um at least one way to get to our goal state . 1398475_1408655
(0.5) ⌊ so yes ⌋ . 1409455_1413935
⌈ but but ⌉ all the things that you're prioritizing are things are are the the ways things could go wrong right so ⌊ &~best-fir ⌋ . 1413935_1419535
⌈ well ⌉ prioritizing here is strictly by state probability . 1420705_1424525
⌊ so ⌋ .
⌈ right ⌉ but you don't this this search is not concluded when you've found a path right because you you need to find want to find all of the . 1427005_1433145
all of the paths to ? 1433365_1434485
to failure . 1434865_1435145
well that's what we're when we relax our &~probab guarantees from absolute to probabilistic what we say is that we can truncate the search and everything after we truncate the search has some nonzero probability but we didn't have time to think about them . 1435715_1450675
okay so it's best first search but instead of stopping &~y &~y you're &~y you're proceeding until you hit some ⌊ some limit ⌋ . 1452235_1458395
⌈ yeah some ⌉ some numerical limit for searching . 1458395_1461115
+, well although I mean so right now we don't have real+time planning so I can't just say we're gonna plan (un)til the time expires and then truncate that search because that can leave states with a ninety percent probability . 1461435_1473875
so we hafta think more carefully about how to do that and not have some ridiculously low probabilistic guarantee . 1474575_1480235
that's the the hard tradeoff that we haven't done yet . 1480855_1483095
see that's not why I'm <I'm not sure> I'm not sure there's a probability of +//. 1483335_1486775
involved with how &-uh much of a plan you've been able to find +/. 1487045_1490465
⌊ mhm ⌋ +/.
+, ⌈ and ⌉ the probabilities of the thing actually succeeding when you execute it and these are two completely different things aren't they ? 1490645_1495865
so which which one are you &-um ? 1495985_1498365
are you talking <for the> for the real+time plan or are you talking about ⌊ strictly for ⌋ . 1499045_1502325
⌈ which one ⌉ are you prioritizing ? 1502545_1503025
well so we're prioritizing the probability of ever visiting a state . 1503425_1506845
so that we end up &~cons expanding first the states that we expect to visit with the highest ⌊ probability ⌋ . 1507025_1514665
⌈ okay this is ⌉ this is as for priority for whether to put it in the plan or priority whether to be thinking about it in &~plan ⌊ during planning time ⌋ . 1514585_1522605
⌈ well whether ⌉ to be expanding it during planning you don't put a state in a plan you put an action in a plan . 1522605_1527325
⌊ right ⌋ +/.
+, ⌈ so if ⌉ you don't expand a state then you don't have any action for that state . 1527885_1531445
and you don't hafta schedule an action for that state . 1531665_1533985
so the idea is that by setting a threshold and removing &-uh basically we call it removing the states that are lower than that priority or probability but effectively what's happening is that we are just not expanding those states therefore we don't have any actions for them that are put into the plan . 1534305_1550125
so sure to be plan time . 1551725_1552785
⌊ well so ⌋ . 1553405_1564165
⌈ would you ⌉ <would you> would you come up with a different plan if you ordered them in some other way &~tha assuming you still ignored ones that fell below some threshold . 1554035_1563215
no I yeah .
that's right now you would not come up with a different plan because the motivation for best first search right now is not really as as strong as it will be when we try to restrict planning time . 1564415_1577795
so right now if you had the search ordered totally differently and as you got to states that were unlikely just threw them out instead of searching &-uh &~i instead of expanding them you'd come up with the same plan . 1577845_1587065
so the motivation for best first search is really for in the future to be able to think about having real+time planning bounds . 1589005_1595525
&-uh actually Mark has a valid point though . 1596865_1598585
what what you're doing is attaching probabilities to states +/. 1598885_1601585
yes +/. 1601865_1602005
+, and therefore you can prune state+space with &-uh thresholding these probabilities properly +/. 1602285_1608185
+, mhm +/.
+, &-uh but you know it doesn't give the &-uh probability of &-uh finding right plan . 1609425_1615705
well we haven't even really &~def defined what the right plan is . 1617365_1621145
so I &-uh just to +//. 1621825_1624445
so the reason you have to prioritize at all +/. 1624765_1626485
⌊ yes ⌋ +/. 1626765_1627185
+, ⌈ is somehow ⌉ you can't do everything is the reason you can't do everything because you don't have time to plan for everything ? 1627135_1630735
⌊ no it's because &~y you can't ⌋ . 1630955_1631355
⌈ or because you wouldn't have time ⌉ to execute the plan ⌊ accurately ⌋ . 1631355_1633095
⌈ (be)cause you wouldn't have time ⌉ to guarantee execution of the plan with the deadlines that you have . 1633095_1636275
okay so is probability prioritization necessarily the right thing ? 1636455_1641115
&-uh for that ⌊ purpose ⌋ ? 1641715_1643175
⌈ if you ⌉ want to say that you're ignoring &~unli so you hafta have some prioritization and we haven't any in any way proven that probability's the best measure for deciding what to ignore and what not to ignore . 1643175_1654575
but we consider it to be at least advantageous if you're going to ignore things to ignore unlikely things . 1655025_1662545
⌊ <so often> ⌋ .
⌈ so so ⌉ sketch a scenario &~ca could you sketch a scenario where this would be <a very> &~wr a very wrong headed way to . 1663365_1672005
the where this would be a wrong kind of way ? 1672665_1674205
yeah yeah &=laughs:SUm . 1674545_1675105
well I mean one one of the things that I claim CIRCA is not useful for is in a domain where achieving goals is just as useful as avoiding failure . 1677415_1685955
so ⌊ &~s that's ⌋ . 1686795_1687975
⌈ &~wh what ⌉ what I <let me> let me offer something +/. 1688275_1690455
⌊ yes ⌋ +/. 1690675_1690695
+, I'll be <tell me> tell me whether this is &-uh &-uh I &~y one can imagine a situation where the &-um there are some events that are somewhat less probable +/. 1690835_1700015
+, mhm +/.
+, than other events . 1700395_1700855
but the computational cost to extricate oneself from those events is so much less that it might have been wiser to put your the the ensemble of those +/. 1701445_1710085
+, right .
⌈ right so so ⌉ +/.
+, ⌊ tasks might ⌋ be a wiser thing to to you know you don't +/. 1711345_1713765
+, mhm +/.
+, always want to search where the light is but sometimes it does make sense to search for your keys where the light is . 1714005_1717905
⌈ so does that is that ⌉ ? 1718105_1718385
⌊ right .
right so a little yeah ⌋ . 1718385_1719585
well so a little bit later I'm going to talk about two different mechanisms we have that the scheduler directs the planner to backtrack . 1720125_1725865
the one that I have have mostly talked about here which is the one that has been fully implemented and tested in CIRCA is by generating this threshold for removing low probability states . 1726325_1734505
the second one that we've thought about at least from the higher level how it works how the scheduler and planner talk to each_other is to identify a bottleneck task &~y that doesn't &-um that uses a_lot_of resources but it may not necessarily . 1734905_1747185
it considers the probability but it doesn't focus only on that . 1747645_1749985
so I think that kind of gets at what you're talking about which is that maybe there's some task that's expensive and you wanna consider removing that instead of the threshold . 1750445_1757825
so did you &~pa try to work up a representation of the &~p I mean seems to me that <there's a> &~fun there's a more fundamental problem +/. 1758105_1766105
mhm +/.
+, that I don't hear you articulating that we're that I don't I'm not sure I know how to articulate it +/. 1766885_1772525
+, right +/. 1772685_1772765
+, but I I don't believe that I'm not sure that you've really done your job in looking at the various ways that you could make the decision without having proof . 1772885_1782785
and I think that if not &~pro possibly not this month but +/. 1783545_1787865
+, ⌈ mhm ⌉ +/.
+, ⌊ maybe ⌋ in the next couple months as you settle into your new +/. 1788065_1790885
+, right . 1791385_1791485
+, situation <you might> you might really make it a more fundamental contribution by trying to work out what the pruning dimensions are . 1792005_1799785
how how do what are some of the what almost formally what are some of the dimensions along which you could prove this . 1800795_1806535
⌈ you know large &~expan ⌉ .
⌊ well so there's two ⌋ basic dimensions one is relaxing the deadlines for tasks and the other is removing them altogether or replacing them with a task that requires fewer resources . 1807595_1816555
so the difficulty is &-uh mapping that back to a planner which thinks about states and actions to select for those states . 1817635_1824535
whereas in the planner basically the only control you have is over directing the backtracking and selecting different actions . 1825285_1831205
&-um we have &~i in the dissertation I talked about two probability thresholds one is &-uh threshold where locally you consider a transition to be preempted . 1832165_1843245
which I called p@l thresh or something like that . 1843505_1845405
if that threshold was not &~wa you hadta not exceed that threshold . 1845905_1850285
so that speaks in terms of what deadline you're going to compute for an action . 1850765_1854025
we haven't really come up with a principal way to vary that dynamically so we set that originally and in fact in these tests we set it to zero &-um because we have our simple transition models for probability but &-uh in future work we hope to address changing that as_well_as this threshold for removing unlikely states . 1854565_1872285
so that &~al addresses the problem at least considering deadline changing the deadlines in addition to &-um just ignoring states altogether +... 1872725_1880485
but okay so let me move on then since I'm sure I'm gonna at least approach two o'clock in finishing . 1883745_1891225
okay so I haven't said anything about &-uh wait . 1892185_1895805
I didn't even finish this slide let me finish this slide first sorry . 1896165_1898445
so we have motivation . 1899405_1901005
&-um I think so the requirements that we have for our planning &-um model are to select actions compute their deadlines to preempt temporal transitions to failure . 1902125_1910445
this threshold that I was talking about is kind_of a a line that you draw that says if the temporal transition to failure is &-um &~i &~i less has less net probability of occurring then &-um it's not &~go you can consider it in planner planning to be preempted . 1910785_1925045
and then to account for dependent temporal transitions which effectively state history effects how long has a transition been active &-um . 1925445_1932905
so &-uh desired properties we want for our model is to minimize knowledge base size because a_lot_of the models the knowledge base models that &-um one has are &-uh very impossible to really think about that some expert in that domain would be able to sit down and make it . 1933485_1947845
so we want to at least start to think about making it easy for them to create a knowledge base . 1948625_1953285
and then also we want to &-uh think about maximizing planner efficiency which we really have not come close to yet but we wanna at least think about how to do that so when we talk about real+time planning in the future we'll at least have a start . 1953825_1965925
so given that we started with CIRCA why not just use its model . 1967065_1971445
well it uses a nondeterministic model which was very nice in terms of minimizing knowledge base size and &-uh also in how it represented the state+space &-um with cycles and so forth to guarantee failure avoidance . 1971715_1984595
it assumed worst case transition properties where it had a minimum delay where transitions to failure you hadta finish any action before that and that was totally inflexible and it had a maximum delay for reliable temporal transitions . 1985115_1997395
&-um you really couldn't do any state prioritization because you had no notion of what was more likely than another state or really and you had no flexibility of those deadlines in those delays either and for the state representation it was either reachable or it wasn't reachable . 1998115_2012155
since we're focusing for a &~tr in tradeoffs in this work &-um we thought okay well if we had a stochastic planner we could think about things like relative likelihood of states and &-um how they change deadlines and so forth . 2013995_2026635
so in our stochastic planner that we've come up with &-um we first assign knowledge base temporal transitions &-um what I'm calling temporally dependent unconditional probability rate functions . 2027495_2038815
basically what those are are histograms of for discrete time steps how likely something is to occur . 2039015_2045935
so here's two examples of these rate functions . 2047615_2050475
in one case there's a temporal &~tran &-uh transition to failure which is preemptible because there's some delay before it's possible . 2051095_2057715
&-um I'll call this hit hit collision course traffic after it's detected on radar so at time zero you detect traffic on radar at that point it's at the edge of your radar so you have some time to get out_of its way and based on where it started you have some maximum probability of it actually hitting you which eventually it'll pass if it doesn't hit you . 2058125_2076265
another example of a temporal transition is a reliable transition which all else being equal if you have a &~c a course set and you're flying towards that particular location you'll eventually get there . 2076815_2087495
what does the unconditional mean in the ⌈ in the plan ⌉ . 2089295_2092815
⌊ so the unconditional ⌋ means that if you have +... 2092815_2095195
two temporal transitions that could happen at the same time like &~s in state s@l one there you have both fly to fix two and lose altitude that could happen at the same time that function that I showed you for flying to fix two basically said you're gonna get there . 2098385_2110785
there's no question about it so it doesn't consider the fact that you might lose altitude . 2111245_2114605
at from that same state . 2114985_2117125
so we try to combine those effects to give an overall &-um &-uh representation of well if you go to state s@l three then obviously you're not gonna go to state s@l four because &-um so we try to combine the unconditional functions into conditional ⌈ representations ⌉ . 2117785_2132705
⌊ so you could actually ⌋ call it conditional on no other transition . 2132705_2137325
right . 2137485_2137685
&=laughs:multiple yes you could do that . 2138045_2139025
&=laughs .
okay as a &~r is it also conditional on &-uh no action ? 2139665_2143125
&-uh yes so if you put an action in then that also alters it its probability . 2144165_2147925
in fact we rely on that because like this crash &-um transition will have some function that shows that it's going to happen if you don't do anything . 2148685_2156585
but &~beyon you have to change that by having an action in that says well actually I'm gonna get out_of that state s@l two and before a crash will happen so that effectively causes the crash's conditional probability to be zero at all time . 2157385_2170045
so that's what we're trying to do with those . 2170725_2172565
(0.7) and speaking of how the action is specified &-um we have a very specific way that we think of a guaranteed action . 2175285_2185625
now if you remember from the plan it was not an ordered set of actions so &-um one could show up in a certain state at any place in that cyclic schedule and you can't predict in advance where that will be . 2186205_2198145
so worst case you'll go all the way around the schedule and just barely meet your deadline . 2198735_2203255
&-um that's represented by this max delta which is the deadline . 2204035_2206575
so we represent the probability of the guaranteed action occurring at the given time step by this function which basically gives us an equal probability of occurring between the current time step and when the deadline's going to happen . 2206835_2220615
we don't really have a good representation for a best effort action because we don't really know &-um we haven't yet incorporated average case execution time and haven't iterated between planning and scheduling to try to guess at what the best &-um function for that is . 2221475_2237555
okay so this is confusing so what does it mean to have a probability of the action I mean after all you're &~contr the action is what you're controlling . 2237955_2245055
⌈ so what does it mean to take the ⌉ ? 2245755_2247475
⌊ right . 2247475_2251335
well you're controlling the action ⌋ but you can't control where you are in this &~s cyclic schedule when you do so yeah <where's my plan> .
so say you need to do TAP three . 2253205_2257385
if you first reach the state at time four on the schedule then you will do this TAP immediately so it will be +//. 2258305_2267865
happen within the first time &~p interval . 2268365_2270145
however if you are at time unit five when you first enter &-um the state where TAP three needs to be done then you won't notice that you're in that state until you go all the way around the schedule . 2270485_2279785
so that's kind_of the the ⌈ unpredictability of the ⌉ . 2280985_2283185
⌊ so this is so the &~p ⌋ so in a way you're modelling the planner's unpredictability about what the scheduler's gonna do ⌈ or about how the &~how &-uh ⌉ . 2283245_2289005
⌊ &~w about how the plan is ⌋ going to be +/. 2289005_2291305
⌈ about when the when ⌉ +/.
+, ⌊ &-uh where you're going to be in the plan when you execute ⌋ . 2292045_2294005
⌈ well ⌉ it's the trajectory you don't know the exact trajectory right different trajectories are going to incur different actions and consequence of what you have essentially a closed loop ⌊ &~o one second ⌋ . 2293835_2303695
⌈ but &~essen ⌉ but essentially what the planner's controlling is just does this thing get into the schedule . 2303955_2307355
⌊ but given that ⌋ .
⌈ well the planner controls ⌉ whether it's in the schedule . 2308475_2310295
⌊ and how ⌋ .
⌈ right but ⌉ it doesn't control +/. 2310655_2311415
yeah +/.
+, anything else about when it happens . 2312275_2314295
right . 2314535_2314615
⌊ because the plan execution is gonna ⌋ . 2315135_2319115
⌈ so it so in deciding ⌉ whether it's gonna get approved in the schedule it's figuring out &-um you know <and with> and with what parameters to put it in the schedule it's it's having to make some prediction under uncertainty about how responsive that thing will be in some +/. 2315785_2328885
⌊ right ⌋ .
+, ⌈ executing ⌉ schedule . 2329385_2329885
right .
(0.5) .
so the actual choice the planner's making is should I put this on the schedule mkay . 2331165_2339045
yeah . 2339365_2339565
should I put it in and +/. 2339685_2340605
⌊ yeah ⌋ +/.
+, ⌈ how ⌉ frequently should I +/. 2340885_2341725
+, ⌊ right ⌋ .
+, ⌈ ask it ⌉ to be scheduled so that I +/. 2341805_2343665
+, ⌊ mhm ⌋ +/.
+, ⌈ can ⌉ guarantee that between +//. 2343705_2345485
if if it just was tested and it was false and then we just entered the state how much time could elapse before we do the tests again and take the action . 2346065_2353685
okay .
so why +... 2356185_2356545
in a situation where tests are free +/. 2357345_2361585
mhm +/.
+, would you even would you do this at all . 2362765_2364565
would you instead of searching through all the states ? 2365545_2367825
yeah . 2368005_2368065
well the tests are almost free . 2368605_2370645
but even searching through memory if you think of the exponential worst case set of states that you're gonna end up with they're not free anymore . 2371265_2377125
so when I said they were free I meant they were free relative to going out into the world and looking at each sensor value each time you look at a feature value . 2379225_2384965
so we're not willing to go back to the representation where you have just the complete list of states because even in our simple little problems we have &-uh &~potent we have hundreds of states that we would have to look at . 2387285_2397945
certainly in more complicated problems we would have thousands or more states . 2398445_2402725
so .
but &~tho a &~thou a thousand thousands of . 2404185_2408565
well &~s it could be I I hesitate to put a number on it because I mean this is an example that a grad student sitting in front of a computer trying to do too many things comes up with for a model ⌊ that ⌋ . 2408565_2417485
⌈ well no ⌉ you actually had a motivating implication +/. 2417485_2420245
⌊ right ⌋ +/.
+, ⌈ I'm asking ⌉ a question about that motivating ⌊ implication ⌋ . 2420545_2422065
⌈ but we ⌉ have not finished that model yet and it's hard to say how many well when we fly our airplane and it flies autonomously we're gonna be looking at two emergencies engine failure and airframe icing . 2422035_2433635
and I'm nowhere close to saying that's all you need to consider . 2434415_2437595
so for each new problem that you add into your system I'm I really don't have a good handle on how much state+space complexity that's gonna add . 2438335_2445175
(0.6) so &-um (0.7) so anyway those were the state transitions that we assigned which we call probability rate functions . 2450315_2463015
&-um initial states we could have more than one all the examples that I present have one but you could have more than one in which case we assume they all have equal likelihood (be)cause we have no representation of how you got to those initial states . 2463995_2474915
&-um as I said before we do best first state expansion which right now is not absolutely critical but in the future it might become critical as we move to real+time planning . 2475535_2484115
&-um and we update all of the reachable state probabilities during each state expansion step . 2485055_2490055
I'm sure the members of the committee have seen most of the set of equations in the thesis so I I feel like it would take me an hour just to go through those so instead I'm going to summarize and give an example of how we compute the probability . 2490795_2503235
so for each state that we expand we first estimate the conditional cumulative probabilities for the outgoing transitions temporal and the selected action for that state . 2503785_2514465
we estimate the conditional probabilities from those unconditional &-um &-uh transition probabilities that we start with and then we calculate the cumative &~pro cumulative probabilities by summing those from time zero &~s time step t@l zero to when they meet the convergece convergence criteria basically when they're not gonna change very much in the future . 2515085_2537325
&-um the we compute the action maximum delay which you can think of as the deadline for that real+time schedule to preempt any temporal transitions to failure . 2538405_2547145
&-um and then we look at &~temp dependent temporal transition effects also . 2548145_2551805
⌊ second state after re@n &~yes . 2552445_2553685
⌋ .
⌈ <okay so> okay so ⌉ sorry . 2553785_2554765
what I don't understand is what exactly your is this probability you're computing . 2555005_2558885
this is from a given state +/. 2559045_2560705
yes +/. 2561185_2561405
+, &-uh given that you don't do any actions ? 2561825_2563485
⌊ what's ⌋ .
⌈ no given ⌉ given that you if okay so first you decide if you need an action . 2564025_2568305
that's a separate algorithm before you ever talk about probabilities . 2568845_2571565
if there's temporal transition to failure from the state then you have to select some action or else you have to show that there's a reliable temporal transition . 2572265_2578705
&-um otherwise &-um so so before you ever calculate the probabilities you either have one action or no actions . 2579645_2585205
okay +/.
+, &-um at that point you have probability rate functions for all the temporal transitions as_well_as any action that you've chosen . 2586215_2593215
and that would be +//. 2594775_2595395
so let let me go into the example and ⌊ then I'll +//. 2596255_2597795
okay no . 2598595_2598735
okay no ⌋ . 2599095_2600095
⌈ oh <no no> no no no ⌉ &=laughs no I really want to understand you know I I think I've been getting part of it I want to get all ⌊ of it ⌋ . 2600215_2603615
⌈ alright .
okay ⌉ .
+, so &-uh you're gonna &~choo given a state you've got a black box that gives you the action for that state +/. 2604295_2610515
+, yeah +/. 2610715_2610815
+, based on just the local information at that +/. 2610955_2612895
+, ⌊ right ⌋ +/.
+, ⌈ state temporal transitions to failure or whatever okay ⌉ ? 2613095_2616015
+, ⌊ mhm mhm ⌋ .
+, so you can assume that if you're executing the plan you're gonna do that action .
and you know there may be some uncertainty about time . 2620095_2622275
+, yeah . 2622615_2622635
+, of_course there may also be some uncertainty about +/. 2622735_2624095
+, ⌈ right ⌉ . 2624395_2624475
+, ⌊ also ⌋ making transition out_of that state before you ⌈ get to that ⌉ . 2624495_2626975
⌊ yes that ⌋ we don't talk about that in this particular work it was briefly referenced in &-uh the original CIRCA but the challenges +//. 2626995_2634655
so so in this particular work when you get feature tests for free &-uh most likely &~i if you start doing the feature tests you will end up doing the action and everything will be fine . 2635295_2644675
however if you never if it's a best effort action in particular yes you might transition out_of that state without doing that action first which is represented by the probability rate function in terms of you don't know exactly what time step you're gonna do a particular action so if you don't do it then one of the other transitions will occur . 2644955_2661195
okay that's in this ⌈ model too so ⌉ . 2661755_2664695
⌊ that's yes that's in ⌋ this model . 2662855_2664455
so in this model you've basically got the probability distribution over the possible next states &-uh and their &~ti and the time of the transition +/. 2664755_2673155
yes +/.
+, given that you will have &~sche you will have planned to do this particular action +/. 2673735_2678975
+, yes +/. 2679055_2679335
+, and that has some probability of happening +/. 2679835_2681595
+, right +/. 2681755_2682055
+, various times .
&-um okay . 2682215_2685635
okay and the probability that we're computing is very dependent on for the guaranteed actions what we set that deadline to because that affects where that max delta on that rate curve is going to end up being so . 2686495_2700055
&~the &-um if I I didn't understand but I I when I pretended that I understood +/. 2701635_2706495
⌈ okay ⌉ +/.
+, ⌊ what I ⌋ said to myself was this noisy or@q +/. 2706795_2708675
+, yes +/. 2709235_2709335
+, was a way of &~sh short+circuiting if if you were gonna do a Markov chain +/. 2709495_2713095
+, right . 2713355_2715775
+, then you've got a transition matrix +/. 2713625_2715905
+, yes +/.
+, and in some sense what this noisy or@q is doing is it's picking up some of the numbers in the particular row of that Markov ⌈ transition matrix ⌉ . 2716645_2723885
⌊ well it may not ⌋ actually pick up any of them . 2723885_2726045
it may not pick up any of them I understand +/. 2726305_2727625
⌈ yes but it could pick up ⌉ +/. 2727805_2728285
+, ⌊ I understand but it's it's picking them ⌋ off it's +/. 2728285_2729525
+, ⌈ it it would ⌉ +/.
+, ⌊ it's pruning off ⌋ +/. 2729585_2730665
+, yeah . 2730965_2731105
+, <for the particular> &~s for the particular &-uh +/. 2731205_2733645
+, right . 2733665_2733845
+, &-uh expansion it's pruning off some of the +/. 2733905_2736225
+, mhm +/.
+, columns for that row +/. 2736865_2737545
+, right +/.
+, some of the entries in the column of that row +/. 2737745_2739005
+, mhm +/.
+, maybe all of them . 2739525_2740065
+, yes . 2740285_2740385
+, is that roughly what what's going on ? 2740405_2741785
yes ⌈ yes ⌉ . 2742835_2744015
⌊ so it's ⌋ it's a heuristic way of collapsing at the . 2744595_2746635
yes and &~n so <it's a> it's a heuristic way of approximating both the state history effects +/. 2746955_2752455
uhuh +/.
+, and looking at the deadlines &~dif for the different actions and &-um combining that so that you don't hafta specify this large ⌈ matrix ⌉ . 2753295_2761915
⌊ so ⌋ you you could have but chose not to +/. 2761915_2764815
right . 2764955_2765115
+, look at a cartoon version of this in a make +//. 2765115_2767575
completely made up +/. 2768035_2768615
+, right .
+, problem +/. 2769315_2769855
+, yeah .
+, &~s to understand situations where this is a very very poor &~we well you really lose badly that way that you would have been better off ⌈ actually ⌉ . 2770905_2777925
⌊ right well ⌋ you wouldn't necessarily lose this way because it's up to the user whether they &-uh <want to> &~pr want to fake conditional probabilities into this knowledge base they can pretend they're unconditional but they can specify extra state features effectively that make them allow &-uh &-uh &-uh that allow them to have effectively more than one row or column <of a> &~Mar of a Markov matrix . 2777925_2798845
you're &~colle you're aggregating states essentially . 2799925_2802385
yeah mhm +/. 2802705_2803045
+, ⌈ and ⌉ .
⌊ well ⌋ it's not aggregating states it's aggregating &-uh conditional probabilities and then trying to get them out . 2803305_2810385
okay you're aggregating transitions from and to ⌈ states essentially right ⌉ ? 2810585_2814125
⌊ yes mhm right ⌋ . 2814125_2814225
which the motivation for that being that it's it would be very &~difficult &~i it's more easy to think in terms of state transitions where you have preconditions and ⌈ postconditions ⌉ . 2814585_2824205
⌊ &~w &~th I ⌋ guess what I'm trying to &~the <there's a> &~lar there's a growing literature +/. 2824225_2827165
⌈ mhm ⌉ +/.
+, ⌊ on ⌋ factoring +/. 2827225_2828145
+, ⌈ mhm mhm right yes mhm ⌉ +/.
+, ⌊ you know on aggregating ⌋ factoring Markov chains +/. 2828905_2831405
+, yes . 2831705_2831885
+, you turned a blind eye to that literature . 2832585_2834545
I referenced a_couple_of papers but then I didn't go into details of what they're doing . 2835485_2839545
&~w &~wh why were you convinced that that was the wrong way to go ? 2839705_2842885
well for several reasons one because they talk about aggregating states in terms of abstraction and feature extraction things like that but they they don't really consider plan execution and making that real+time at all . 2843095_2855595
so <they don't> they don't produce step part two of the plan they don't think about deadlines so in_order_to think about deadlines you first have to guess at which deadlines you needed and then you'd hafta consider those as separate actions . 2856115_2868755
for your transition matrix . 2870305_2871525
well I I actually I don't understand that answer (be)cause this particular question this is a subproblem you've got it has nothing to do with the actions right it's just . 2872245_2879365
what question is that ? 2879525_2880285
the question of what is the &-uh relative probability of achieving these certain states conditional on some particular plan . 2880405_2886345
well &-uh it's ⌈ it does have to do with deadlines ⌉ . 2887385_2890165
⌊ which is essentially you're essentially fixing ⌋ your &~ch action choice and then saying what is the likelihood of various trajectories through state+space . 2890165_2895505
mhm +/.
+, okay so the fact that those people don't consider planning is kind_of irrelevant right ? 2897295_2901895
because they just have machinery ⌈ for talking about ⌉ . 2902155_2904515
⌊ those people don't consider planning ⌋ ? 2904575_2904735
⌈ aggregation aggregation ⌉ .
⌊ the people who look at ⌋ aggregation and whatever +/. 2904775_2907675
oh okay .
+, Markov chains are +/. 2908115_2908535
+, mhm +/.
+, because they're just answer asking questions about how do you effectively compute trajectories and state+space with very large state+spaces by you know factoring into events and propositions and so on . 2908675_2918515
+, mhm +/.
+, &-um so you know might &-uh you_know if someone handed you a black box that was good at that kind of thing you know &~w wouldn't it address your problem ? 2920005_2927425
I would need to see the black box to be able to answer that &-um I have looked at this mostly from the Markov process literature in terms of using it for planning not in terms of using it for a particular domain as a black box . 2928405_2942985
so &~i &~thi the the stuff that I've read about Markov decision processes and using them for planning made it clear that you hadta think about the deadlines separately in_order_to generate this type of real+time plan and that it would be a problem if you didn't know what those were in advance . 2944075_2960235
not to mention the fact that if you hafta think in terms of state history then you have to add a_lot_of extra features in_order_to uniquely specify the conditional probabilities . 2961175_2968615
so if there's some way that they get around all of this and still end up with real+time control plans then I'd certainly like to be pointed to that . 2969725_2978345
well I don't think anyone would suggest that they solve your whole problem for you +/. 2978945_2981985
right +/.
+, okay the question is whether &~s you know some of the technique that comes out_of that literature &-uh is related enough &=laughs that +/. 2982485_2992445
+, right .
+, that you you steal ideas from them . 2992665_2993845
right . 2994185_2994365
yeah no &~n I feel like this is not done . 2994525_2997405
I mean if you can ask my advisors that every other week I come into a meeting and say well we can do this with a Markov decision process . 2997265_3003465
and the fact is we hadta choose one particular route for this work and I don't feel like it's done yet . 3003945_3009885
so I personally plan to continue to look at ⌈ this literature and see what happens ⌉ . 3010205_3014425
⌊ were you driven to ⌋ make these decisions because you had an application or were you driven +... 3014445_3018065
I mean &~w &~w why wouldn't you +/. 3018445_3020465
⌈ well one of the reasons ⌉ +/.
+, ⌊ wonder over this this seems ⌋ like a pretty central issue . 3020825_3023525
right . 3023745_3023865
the but one of the reasons that we made this decision was because we were not out to get the optimal plan . 3024045_3029725
we were out to get something that was sufficient for our +//. 3029905_3033625
the guarantees that we wanted that was able to reach the goals . 3034185_3036625
⌈ and so ⌉ .
⌊ but wouldn't ⌋ that vary with that domain from domain to ⌈ domain ⌉ ? 3036945_3039865
⌊ what's ⌋ what would vary ? 3040065_3041065
your decision about what which way to go . 3041145_3043125
I mean if you're not going to take a fundamental view wouldn't your decision vary from application domain to ⌈ xxx ⌉ . 3043345_3048045
⌊ right so yeah so ⌋ so one future &-um &~un when I talk about unhandled states which hopefully I'll get around to eventually &-um &~i one of the things that it talks about from a general perspective is how do you plug in different planning models depending on how much time you have . 3048125_3062545
so the way I would see it this would probably be the slowest version that we would have . 3062665_3068225
in terms of &-uh when we start talking about real+time bounds . 3068445_3072565
so one of our motivations was to think in terms of something that we could later say +"/. 3072105_3076225
+" okay we're gonna stop here . 3076445_3077425
now &~the I know there are &-um ways to impose time limits on Markov planning models but it's difficult when you start exploding the size of things in this type of way to think that it would also be able to come up with any sort of accurate plan . 3077965_3093745
so +... 3095045_3095125
I have a question of a quite different sort &-uh +/. 3096505_3099505
yes +/. 3101605_3101965
+, relating to the way you bring in the world model the environment and and the probabilities that are somehow associated with your +/.
+, right +/.
+, operation within that +/. 3107105_3107745
+, mhm +/.
+, and thinking in terms of for example the icing context . 3107885_3111005
&-uh I mean &-um do you envision that you would actually have information about weather patterns and spatially and temporal distributions and that that would provide you some information about the a_priori probabilities that go into the Markov ⌈ decision model ⌉ ? 3111965_3128905
⌊ right that's ⌋ well regardless of what kind of planning model we have ⌈ the original but so ⌉ . 3128905_3133065
⌊ that's right this this ⌋ I'm talking about the the way you find these probabilities that set the +//. 3133065_3137225
that ⌈ provide the data for the problem ⌉ . 3137445_3139265
⌊ well the the motivation ⌋ for originally developing this kind of &-um where you'd have time intervals and probabilities within that those time intervals was me going out and trying to find out the probability of engine failure for &~c a Cessna propeller engine &~tha that's &~o over its life span . 3139415_3154915
(be)cause there has a &~break-i a break+in period and then a &~b some long period of time where it has about the same and then as it approaches overhaul the probability increases again . 3155155_3162715
so the same would be the case with other transitions but &-uh I mean I haven't studied &~meterologi meteorology enough to know what they would be but that would be the idea is that based on those reports you would have different transition models . 3163255_3176075
there's a particular issue here too (be)cause you're +//. 3176135_3177535
I &~thi weather is something that you would get you get &-uh execution time information . 3177975_3181515
mhm +/.
+, about and you're all talking about using plan time probabilistic . 3182455_3185735
all this information you have here is plan time probabilities . 3186415_3189615
plan time ? 3190395_3191355
<what do> &~y what do you mean by plan time ? 3191235_3192475
in other words you have these models that use +/. 3192475_3193895
mhm +/.
+, alright planning time ⌈ okay ⌉ ? 3194395_3195455
⌊ this ⌋ is not planning time this is the amount of time that . 3196315_3198875
⌈ &~y &~y &~y you're using ⌉ .
⌊ you're you're you're using ⌋ you're using this probabilistic information to make decisions on planning time . 3199215_3202955
at planning time yes . 3203355_3204195
at planning time .
uhuh +/.
+, but whereas weather &~informa you know weather +/. 3205035_3207995
+, ⌈ well you'd have both probably ⌉ +/.
+, ⌊ information that you would ⌋ use maybe have a planning time but +/. 3208275_3211095
+, right .
+, ⌈ also ⌉ execution time +/. 3211275_3212135
+, ⌊ mhm ⌋ +/.
+, ⌈ you'd ⌉ find things that would change the probabilities of different +/. 3212275_3215375
+, ⌊ right ⌋ . 3215435_3215595
+, ⌈ temporal ⌉ transitions which would change the actions you'd want . 3215775_3217875
right . 3217895_3218095
so so right now what we would assume is that we would take a current forecast before you would ever take off and use all of the the transitions associated with that to develop your plans and then during flight &-um this is something for future work if any of those &~meteorol meteorological events change substantially enough that it invalidates your plan then that's when this real+time planning would be very important . 3218155_3239195
to bring back in . 3239535_3240035
but since we didn't do the real+time planning we also didn't focus on what happens if these change during dynamic execution . 3240415_3247155
because we weren't ready to approach the real+time planning problem either . 3247895_3251155
but there are a_lot_of interesting issues &-uh that relate to what for example flight management systems mostly now they just store data +/. 3251475_3258475
yes +/.
+, so they can record it .
+, right +/. 3259575_3259875
+, and and and what I guess one of the issues that I'm interested in is how &~w how your attempt to incorporate some of this information in terms of planning what that says about the kind of information that should be made available what kind of information do you really need about the +/. 3259975_3275395
+, ⌊ right ⌋ +/.
+, ⌈ environment ⌉ about the world +/. 3275835_3276615
+, mhm +/.
+, &-uh because I don't think people understand that very well at this point ⌊ and probably ⌋ . 3277335_3280855
⌈ no actually ⌉ when when &-uh I went off and tried to find out what the probabilities were for engine failure we called everybody no one would tell us . 3280855_3286875
that's because they don't think about +/. 3286975_3287735
right +/.
+, this higher level of planning that you're +/. 3287715_3289275
+, yes +/.
+, addressing here <and so> and so &-uh these issues well they just aren't thought about . 3289535_3295215
right mhm . 3295475_3296415
right . 3296695_3296935
so so I think to summarize and then move on +//. 3297195_3299855
because I'm not going to finish otherwise . 3300015_3301015
&-um the regardless of what planning model we have I mean this is our current model . 3301795_3307775
we haven't discarded Markov decision processes as a possibility . 3308515_3311335
I think that was obvious from the pages and pages I had at least talking about it in the thesis . 3311515_3315035
and we think this sort_of representation is appropriate because the alternative is that you somehow hafta relate all of the different events that could happen to you in_order_to build up the conditional probability representation before you ever start . 3315715_3329855
so this is our current model and I'm certainly open to suggestions on what ⌊ <should happen to> ⌋ . 3330535_3336175
⌈ &-uh &-uh Lisa &~c ⌉ can we do something in the middle like if you look at the cruise missile type thing where you store some static information of terrain data right ? 3336275_3344755
of train data ? 3345515_3346535
of terrain terrain .
maps of the ⌊ terrain ⌋ . 3346555_3347995
⌈ maps of the terrain ⌉ .
⌊ oh terrain ⌋ okay . 3348175_3348875
&=laughs oh I'm sorry . 3349415_3349595
whereas you're dealing with a highly dynamic you know unpredictable environment . 3350115_3354415
right . 3354835_3354875
+, and there can we conceive of something in the middle +..? 3355295_3357835
I can you define what you mean by in the middle ? 3359395_3361835
what ⌈ is it in the middle of ⌉ ? 3362035_3362615
⌊ it would have the meaning that ⌋ &-uh would try to use &-uh static information as much as we can but provide the provisions for these unanticipated . 3362555_3370875
well right now what &~hel the events would hafta be modelled as state features which is not unreasonable to think of so to handle it with our current architecture we could model &-uh one of these events occurring as a state feature and have that be something we would react to dynamically . 3371355_3386315
so that's kind_of the next part that I'm gonna get to here . 3387135_3389835
so I was gonna go through an example that talked about the computations of these probabilities &-um basically in this simple example I start out &-um having two temporal transitions the blue lines talk about their probabilities &-um unconditional and the red lines talk about the conditional probabilities when you consider the probability of both of them occurring &-um in the same state . 3390825_3413445
at that point &-um we can calculate the cumulative probabilities which is that summed from the time step zero to see what happens &-um over time until they converge basically until the sum of them approaches one or else there is no probability that anything'll happen later &-um which gives us these cumulative probabilities of sixty five percent and thirty five percent . 3414605_3435665
and &-um that also for this very simple example since it's a tree structure gives us the state probabilities for s@l one and s@l two +... 3436345_3443305
so at that point since it's a best first search we would go to s@l one and try to expand it but in this extremely simple example we'll pretend there's no transitions out_of s@l one . 3444085_3454025
in which case then we expand to s@l two . 3454525_3456485
so in s@l two there's a probability of failure so we have to select an action which is the climb action that preempts this failure and then we have to calculate the deadline or max delta to avoid that failure . 3457185_3468905
initially we set that to infinity because we don't know what it's supposed to be in which case we determine that it &~w it will fail . 3469665_3475065
so then we identified what the minimum delay is for TTF zero &-um which is five as you can see from the &-um probability rate function at which case we can calculate &-um that the max delta or deadline for the action hasta be five also . 3475185_3491665
that gives us these state probabilities for the entire state+space . 3492425_3495385
&-um one interesting the table on the center shows well what if you couldn't meet that deadline at five ? 3496165_3500605
&-um what if you fail during scheduling then &-um at that point you would have to relax that deadline perhaps or get a new action . 3501065_3508565
this shows how computing these state probabilities would allow you to at least get a sense of what your probability of failure is so at this point if you chose a deadline of six you would have a one percent chance of failing from that state and if you chose a deadline of ten you'd have an eighteen point seven percent chance of failure . 3509085_3525005
(0.8) so this is all very qualitative because I didn't want to run one example and say +"/. 3532385_3536045
+" oh this is absolutely the way this curve looks . 3536145_3537925
but looking at how this &-um stochastic model improves &-um CIRCA's ability to succeed &-um when resources are potentially overutilized +... 3538685_3547525
for CIRCA it has a hundred percent chance of success and then it can't schedule things to preempt all variance in which case it doesn't really know what to do next . 3548225_3556485
&-um in CIRCA two it has this ability to make these tradeoffs which means that its guarantees do reduce from a hundred percent to some smaller number but &-um it still is able to have some ability to continue and to develop a plan however if the resource capacity really gets restrictive (un)til that it can't schedule anything then it will eventually fail too . 3556985_3578605
so so I mean it's this is just acknowledging that if you don't have any resources then you obviously can't succeed +... 3579825_3585925
&~o one more thing &~c can't you handle more TAPs by using &-uh CIRCA two architecture as opposed to original CIRCA ? 3588405_3595225
more TAPs ? 3596345_3597145
yeah more TAPs . 3597205_3597725
well +/. 3597965_3598005
+, probabilistic I mean +... 3598605_3599265
if you relax their deadlines substantially you could . 3600705_3603745
&-um it's hard to predict for any particular domain whether you'll end up with more TAPs with longer deadlines or whether you'll end up with the same number of TAPs that just have smaller worst case execution times . 3604985_3616405
well you do have +/. 3619125_3619765
⌈ and have smaller deadlines ⌉ +/. 3620045_3620525
+, ⌊ at times you have the ⌋ alternative way of getting out <of a> of a tight situation +/. 3620525_3625785
+, right . 3626385_3626405
+, of letting the other transitions take you out +/. 3626405_3629185
+, ⌈ right ⌉ . 3629725_3629825
+, ⌊ and ⌋ the old stuff if none of those was reliably going to be able to do it then you were stuck but if the +/. 3629825_3635685
+, ⌈ right ⌉ .
+, ⌊ combination ⌋ of a bunch of those now will +/. 3636385_3638025
+, right . 3638585_3638625
+, probabilistically take you out +/. 3638785_3639965
+, right . 3640305_3640525
+, avoid having to schedule some . 3640625_3641945
right .
we we certainly have that but I it's that gets kind of fuzzy because now at least the people at Honeywell claim they have this reliable notion of a temporal ⌈ transition so that's ⌉ . 3642285_3659805
⌊ well <I was> I was ⌋ thinking of the schedulability of &-uh deterministic TAPs versus probabilistic TAPs or the &-uh like the &-uh you_know real+time tasks hard real+time and soft real+time . 3651435_3662055
⌈ right ⌉ .
+, ⌊ if you ⌋ allow some of the &-uh probabilistic . 3662815_3664655
well so part of the future work that we want to do &-um I I did some separate work on quality of service negotiation that hasn't really been put into CIRCA but the idea with that is that you would degrade the &~sched <the the> the the plan not only with the planner but also with the scheduler . 3664835_3679395
&-um that hasn't been connected because we haven't drawn the line at when do you let the scheduler trade things off versus when do you make the planner trade things off ? 3680275_3687155
when the planner alone is trading things off it really doesn't have any mechanism to automatically say I want to make this a soft real+time task . 3687395_3694575
&-um however in future work we hope to allow the scheduler to look at how it can degrade task execution to help it schedule things . 3695515_3704035
okay .
let's see &-um in your domain I'm wondering how you actually get down that curve &-um you've &-uh you stated very clearly in your thesis that safety above all mkay +/. 3705415_3717255
right .
+, that you know you guarantee safety and only when you actually can't then you ⌈ sort_of relax ⌉ .
⌊ then you &~re ⌋ relax yes . 3717955_3719275
so you one of your states is I'm on the ground +/. 3719375_3721555
mhm .
+, &-uh and <if you> &~reali if you ever have to adopt a probability threshold &=laughs:S1 less than one why do you ever ⌈ choose to take off yeah ⌉ . 3722335_3727455
⌊ why do you ever take off ⌋ ? 3727455_3728535
and actually that's one of the things I had trouble with when I first started working with the simulator is it said no I don't wanna do it . 3728655_3733375
so I mean &-uh eventually what I ended up putting into the system is it said well I'm gonna do what I have to but I'm going to fly so it doesn't have this notion that it gets scared when ⌈ you have to relax ⌉ . 3734185_3743745
⌊ so in other words it doesn't ⌋ really believe you were lying about that ⌈ safety deadline ⌉ . 3743745_3746145
⌊ there are some people who operate exactly in this way because this ⌋ &=laughs:multiple &~pe people operate in this way they never &=laughs:S1 they never fly I mean +/. 3746145_3752105
right . 3752485_3752705
+, you know ⌈ there are probabilities but they ⌉ .
⌊ <I'll give you> I'll give you ⌋ .
no no no but there's also this this class of people that go around saying safety is of +/. 3753845_3758005
⌈ is gonna defy the opposition ⌉ +/.
+, ⌊ &-uh you_know is is is ⌋ isn't really important and then they still get on airplanes so &=laughs:SUm . 3758485_3761925
I'll I'll give you an &=laughs:SUm example FAA gave +/. 3762955_3765155
yeah .
+, &-uh what the &-uh the thirty billion dollar contract to IBM to build &-uh the &-uh next generation the &-uh automatic traffic +/. 3765655_3771695
+, yeah .
+, air traffic control +/. 3772295_3772895
+, yeah .
+, control system ? 3773475_3773975
+, right . 3774115_3774275
+, and then they get the &-uh halfway of the project &-uh they cancelled it but legally stated restructured . 3774835_3780875
the reason was the requirement was probabilistic guarantee of safety with &-uh seven nines . 3781995_3788175
okay point nine nine &-uh seven nines . 3788795_3790675
and they couldn't really verify there would be this seven nine requirement . 3790995_3796895
they couldn't . 3798455_3799395
and so they &-uh devised the requirement to six nines and five nines eventually said what the heck let's give up . 3799955_3806755
okay .
⌈ so ⌉ . 3808255_3808415
⌊ so ⌋ you know the safety is not really determinable . 3808475_3810495
yeah . 3811215_3811435
so so anyway I'm getting worried about finishing here so real+time deadlines are requiring that I move on . 3811675_3816035
so &-um the second part of the three parts that were the main part of CIRCA architecture is talking about unhandled states . 3816615_3823915
what happens when you ignore things or when you have an incorrect model &-um well first of all as we said in no +//. 3824415_3830055
in great detail you may not be able to schedule everything in one plan . 3831215_3834215
in which case &-um you hafta be able to detect and react to important unplanned for states as they occur . 3834335_3840575
so what we basically did was to look at all the state classes that you could have and &-uh selected subclasses of those that we thought were important to detect and then implemented algorithms to do that . 3841215_3852135
so +... 3853955_3854075
this is this picture of world state subclasses that's been floating around for a while &-um at the very outside we think all the world states that could possibly occur but then we acknowledge that we might not have the model for everything so the modelled set is within that that all world state set . 3856225_3870325
&-um if something happens that's outside our modelled set since we can't even represent it we can't hope to do anything about that . 3870965_3875385
within the modelled set we have those states which we've called the reachable states &-um that we've planned for &-um there are some of them that can reach our goal states and some of them that can't . 3875985_3885005
but anything that's planned for we've thought about avoiding failure so <that's all> &-um that's all been taken care of . 3885645_3892345
the other two sets which are the focus of really the focus for thinking about real+time catastrophic failure avoidance are removed states . 3892825_3900845
those are the unlikely states that we've talked about where if you have some unlikely transition then you're gonna end up in the state that's not very likely in which case that plus all the downstream states are not &~a are basically thrown out of consideration because we're ignoring unlikely states . 3901095_3916375
however since those are something that could occur we find them certainly important to detect and react to . 3917415_3922715
the last type the imminent failure states are those that &-um we acknowledge that our model may not be completely precise so basically &-uh +... 3923385_3934245
if there is a transition that has not been put into your model and you get to one of these states then it's very important to detect because otherwise you'll fail . 3935105_3945245
(0.7) so to detect these states we use the same ID three algorithm that we use to minimize our TAP preconditions that I talked about earlier to &~bui to &~d build TAPs to detect each of those classes of states . 3951035_3963315
&-um the TAPs for detecting removed imminent failure states are guaranteed because one requires hard real+time response to those and the TAP for a dead end state detection is best effort . 3963795_3973415
so reaction to when one of these states is identified is to notify the plan dispatcher which pulls a contingency plan to &-um execute if it's available otherwise dynamic planning happens . 3974445_3986185
so at a very high level this talks about the transition between different plans . 3988465_3993005
so say you start in this &-um planned for states box . 3993825_3996725
then something happens that takes you out_of that set of states &-um if it's something we call unstable meaning that it's &-uh something that can lead to failure then we detect that as imminent failure removed state and currently we require there to be a cached plan &-um that we &~c can recall in time to react to that state . 3997255_4014575
&-um alternatively &-um if the departure from the planned for states is something that is stable meaning it won't fail but you don't know what to do about it then we do dynamic replanning for that . 4014885_4027025
so looking again at how this tradeoff curve appears &-um we had the original CIRCA and then we had the CIRCA two was just the probability model but no &-um no plan cache &-um which was we talked about after the last section . 4029495_4045015
now with the plan cache we're able to extend that out so that we &-um can have fewer resources and still succeed . 4045795_4052175
however &-um ultimately we'll run out_of resources anyway even with the plan cache in which case &-um that is represented by it eventually degrading also . 4052185_4064325
and this this region when it first starts to degrade with the plan cache is where we have the motivation for real+time planning because one of the modes that could require real+time planning is if the plan cache is populated enough that just searching and retrieving a a plan &-um compromises the guarantees +... 4066005_4081685
okay that was a_lot quicker . 4082425_4086465
so the third &-um item that we really addressed was how did the planner and scheduler talk to each_other when a &~p the proposed plan is unschedulable and how does that help &-um make the tradeoffs . 4087055_4098135
so the approach that we used is to guide the planner backtracking toward the schedulable plan . 4098895_4103255
so we actually did two kind of separate projects on this the first one is we presumed the existence of a single processor plan execution platform &-um which meant that the only resource we were trying to schedule was one processor . 4103985_4115605
&-um in the second part we looked at what if you had one more than one resources and &-uh &-um basically like &-uh communication channels or &-um more than one processor or whatever and then we also looked at well now that we have more than one resource how can we think of fault tolerance in terms of computational system failures . 4116225_4134205
&-um and we also talked about &-uh in the future maybe this approach is not enough . 4135165_4140225
maybe we should have the &-um &-uh the tradeoffs divided between planner and scheduler at which case we look separately at +//. 4140325_4150645
&-um how do you &-um allow the scheduler to actually degrade the quality of service of tests ? 4151185_4156105
&-um this work I'm not going to discuss during this presentation because it doesn't fit into the CIRCA two framework but &-uh hopefully it will soon . 4156785_4165625
so first &-um we looked at the case where we have one processor and when the scheduler fails on the uniprocessor@n execution platform we first use the overall processor utilization which is basically the sum of the worst case execution times for the tasks which we represent as t@l sub i@l . 4168515_4187755
&-um this is the same as TAP &-um I talked about TAPs earlier and divide that by the separation time which is really &~effecti effectively the deadlines are max deltas that we talked about earlier . 4188195_4201215
when that number is greater than one you know that you can't schedule &-um all of the TAPs on the resources furthermore since we have nonpreemptible tasks we also might have task pair conflicts which occur when &-um basically the worst case execution for a TAP is so big that another TAP with a smaller deadline or separation constraint can't fit . 4201725_4222565
with both of them at the same time . 4223465_4224565
so based on the probabilities of ever executing each TAP we recommend a probability threshold for removing &-um &-um or ignoring states <below it> . 4225915_4234915
so this is kind_of algorithm one which I've referenced before in terms of ignoring unlikely states . 4236055_4240735
so this is also so as we moved forward in this we said well maybe that threshold isn't really exactly what we wanna do . 4241755_4248315
so especially when we generalize and have a multiresource &-um allocation and scheduling platform where we have multiple classes and instances of the different resources . 4248775_4258375
it's not so straightforward to compute one number and say well this is the number that we want to somehow &~c treat as a threshold and ignore everything . 4259495_4266095
so instead at this point of_course if you succeed then the schedule is sent to the dispatcher and everyone's happy but &~th the interesting research case is when you fail . 4266875_4276515
&-um with multiple classes instances of resources you end up with a utilization matrix for each class of resource and over the set of tasks . 4276865_4286205
that the scheduler can provide . 4287285_4288305
(0.5) at which time &-um we have an algorithm it's it's to identify the bottleneck resource associated with each task which is basically saying if I execute this task which resource does it use the most of ? 4292745_4305005
or and and at that point we have an algorithm to combine task priorities which at this point are equal to probabilities . 4305765_4313505
but we do acknowledge that maybe it should be more than probabilities when we assess priority . 4313785_4317865
and also the utilization for that bottleneck resource to select the cost of the task &-um that we then recommend that the planner &-um somehow change when it backtracks the next time . 4318625_4330605
so this is an alternative to just ignoring states instead we now say +"/. 4330765_4335025
+" hey planner if you can do something about this task it will help make the plan schedulable . 4335265_4338585
&~i is there any &-um sort_of best effort &-uh in the schedule ? 4345525_4348925
I mean &~a &~a the scheduler uses the worst case +/. 4349245_4352665
yes +/. 4352905_4352965
+, times for everything +/. 4353365_4353985
+, mhm +/.
+, so I would think that more often that that that quite often there's a_lot_of slack in the +/. 4354465_4358005
+, ⌈ yes ⌉ .
+, ⌊ actual ⌋ schedule +/. 4358125_4359045
+, ⌈ mhm ⌉ +/.
+, ⌊ when it's ⌋ executed . 4359345_4360105
+, mhm .
+, &-uh what does it do ? 4360685_4362445
⌈ during this time ⌉ ?
⌊ what what ⌋ do you mean what does it ⌈ do ⌉ ? 4362985_4364085
⌊ what does ⌋ the actual execution system do ⌈ during the slack time ⌉ ? 4364085_4365985
⌊ well so ⌋ during any of the slack time intervals it basically inserts best effort TAPs . 4365985_4372645
so there could be &~tw there are two types of slack time intervals some are if they're actually just holes that result after everything else meets its deadline then it executes those in there . 4373925_4382705
but then also &~y you see here there could be a difference between the worst case and average case execution times and it also fits those best effort TAPs +/. 4382905_4390385
⌈ the actual ⌉ +/. 4390605_4391105
+, ⌊ into there ⌋ but it's not &~i &~i yeah so this is actual that's not actual I keep saying ⌈ that ⌉ . 4391225_4401805
⌊ so ⌋ &-uh &~whe in this case when you're doing this relaxation do &~y do these what were before the guaranteed tasks become best treated as best effort ⌈ TAPs ⌉ ? 4393805_4403685
⌊ the ⌋ what relaxation ? 4403685_4404465
when you decide not to do all your tasks ⌈ because you can't fit (th)em in ⌉ . 4405025_4408065
⌊ &-uh so right now the ⌋ planner all it is capable of doing is either selecting a different task which it hopes might facilitate scheduling (be)cause in many cases it'll have a choice of actions that it can do or else it changes the threshold that it will look at . 4408155_4422615
no no right but +/. 4422775_4423175
⌈ but ⌉ +/.
+, ⌊ that ⌋ determines so at the end you've got this particular schedule +/. 4423395_4426095
+, right . 4426255_4426335
+, how does it decide +//. 4426455_4427275
there's &~lo there's lots_of best effort TAPs how does it decide +/. 4428035_4430095
+, right .
+, which ones what priority to to do those best effort ⌈ &-um ⌉ . 4430295_4433655
⌊ oh ⌋ the the best effort ? 4433655_4434455
so that hasn't really been a big research issue for me I've kind of said well I'm looking at failure avoidance goal achievement is looked at separately so we have ⌈ this thing called ⌉ . 4434685_4443365
⌊ no but once you're ⌋ in the &~r once you're in the realm of doing this tradeoff +/. 4443425_4445325
right . 4445845_4445985
+, you're you're still also talking about failure avoidance . 4446145_4448985
right . 4449265_4449485
so right now &~th &~th the way that we do that is to say we're going to split the actions into two plans so that we have a contingency plan and a nominal plan and then all we have to do is schedule this TAP that will detect this unhandled state and will go off and pull this other plan and that specifically is responsible for reacting to that unhandled state . 4449645_4468125
so it's it's that's that's all we do now in in future work we might ⌈ do that ⌉ . 4468925_4475625
⌊ but but ⌋ that only works when you just &~ha fortuitously &-uh detect the ⌈ <optimal plan> ⌉ . 4475485_4480305
⌊ well it's not ⌋ fortuitous if we have &-uh I mean we build a list of the states that we hope to &-uh &-uh that at least have been identified as reachable and then it's not fortuitous that we actually detect it when . 4480305_4493685
(be)cause those are the detection and response are guaranteed TAPs ? 4493785_4497285
right . 4497365_4497585
mhm .
well we looked at it I I don't think it this will work ? 4498185_4502425
what's that ? 4502905_4503285
no we looked at it the the testing for TAPs &=cough excuse_me . 4503665_4507025
right . 4507305_4507365
+, <the other> the other idea though you didn't address and you didn't really look at this overbook . 4507625_4533505
because the worst case execution time is quite often you know the &-uh hundred percent more even one order of magnitude larger than actual execution time .
so in reality if you have a_lot_of slacks so you can overbook .
in that case it's what's most you can guarantee it is not an absolute guarantee anymore if everybody takes worst case execution time right ?
well so so one of the things that I was hoping with the quality of service negotiation in the future is &-uh to actually provide mechanisms in the plan execution system that it will truncate execution of a TAP if you don't finish . 4536515_4548915
so if you degrade its quality of service that might simply correspond to relaxing its worst case execution time to something that is closer to the average execution time which would allow you to schedule it . 4549075_4559995
and it would allow you to do it most of the time but then if you ran out_of time then you would truncate its execution . 4560185_4564605
then you would have a somewhat of a imprecise computation model ⌈ is what you're saying right ⌉ ? 4565045_4568165
⌊ right ⌋ .
mhm right +... 4569285_4569565
so going back to the last slide so basically we're now talking about the multiresource scheduling and so for this system &-um we've started also thinking about fault tolerance in terms of what happens if the &~com computational resource fails . 4571025_4587405
so to do this instead of having a general model that says okay as it occurs we're going to dynamically &-um decide what to do instead we think about it in advance by thinking about specific faults that could occur . 4588095_4599155
so fault f@l zero would be everything works fault f@l one would be some resource of some sort fails &-uh progressively worse through fault f@l sub n@l . 4599855_4606595
so the idea with this is that we improve the response over a traditional real+time task execution system because we explicitly deliberate about what if this is the case what if we don't have that many resources anymore . 4607775_4619915
so we haven't implemented this in CIRCA two so if you ask implementation questions I'll say &-uh well this is how we hope to do it but &-uh we're in the process of converting the plan execution system so that it can handle multiple resources in the future . 4620815_4634075
so I'll give a very simple example . 4634585_4636125
&-um this is an example of a &~s the features &-uh the &-uh features the &-uh airplane is on course no obstacle and has normal status . 4637205_4645385
&-uh two things can happen it can deviate from its course or it can detect &-um an obstacle that it may collide with . 4646065_4651665
both of these we'll say could result in failure by a temporal transition to failure so we have to guarantee actions for those . 4652085_4659585
so our single timeline's now exploded into multiple timelines one for each instance of a resource. 4662135_4667275
the top two are for processors and one for each class of resource the bottom one is a communication channel . 4667455_4671955
we have at this point divided the TAPs into different modules which go together to form that task this is &-um more how the real+time community thinks of tasks to split up into &~spe separate parts and fit them on the timeline so that they'll meet the deadlines +... 4672775_4686175
so what if a processor fails ? 4690905_4693185
&~tha that's the the one fault that we think about with this particular example . 4693785_4697085
well since this schedule was obviously very much overutilized if you tried to map everything here onto this top timeline you hadta do something so at this point for this very simple example the planner determines that it actually can't do either action that it originally planned and this is by several backtracking steps . 4698205_4716845
so that it &~decli decides that if it declares an emergency that avoids the failures in all states . 4717315_4722795
and at that point it's effectively trading off &-um using lots_of processor resource time or using the communication channel to get air traffic control basically to tell it where to go next +... 4725155_4735775
okay so that example's leading into the next section which is what we've actually done with CIRCA two towards autonomous flight . 4740765_4747905
CIRCA two had nothing to do with this airplane . 4749025_4750245
so basically &-uh the first thing we did was we grabbed an a simulator shareware simulator called Aerial Combat &-um and put a simple linear controller on it that allowed gentle maneuvers takeoff landing so that it was able to fly around a pattern . 4751545_4766005
so the simulator basically looks like this it's &-uh has a heads+up display and was originally designed for basically a human to play games with . 4766435_4774355
but we basically took all those inputs sent them through &~C through CIRCA to get it to control it instead +... 4774955_4780315
and the simple tasks that we had it &-um flying was to take off going south on the runway fly in a rectangle and go back so as far as goal achievement its goals were very simple flying to the next fix &-um which is kind_of what you've been seeing in the examples so far . 4783195_4797215
so during these initial tests we inserted some emergencies basically by pressing keys on the keyboard &-um that allowed us to think about what happened if we failed gearup@n on approach to landing and what happened when collision course traffic was detected . 4799435_4814415
and we carefully engineered the worst case execution times and so forth . 4815095_4818295
yes we engineered them we didn't compute them accurately to &-uh allow us to make things not schedulable to test the ability of the system to make the tradeoffs toward basically bumping gearup@n failure detection and collision course traffic detection off to contingency plans and testing the response of the system that way . 4818825_4836605
so that in the next set of tests basically at this point &-um &-um some researchers at Honeywell who were basically working also with &-uh the original version of CIRCA &-um took the simulator and &-uh adopted it as an unmanned combat aerial vehicle . 4838025_4853925
so they kept the flight controller basically put in a bunch of missiles and targets and things like that so that &-uh they could demonstrate the utility of the system for that . 4854145_4864165
and I know the picture turned out terribly in the dissertation but this is the idea is that there are various targets that you want to destroy and radar threats and infrared missile threats +... 4864385_4874585
that you want to avoid +... 4876185_4877425
so I'll talk about the example that illustrates how CIRCA works with that and then I'll talk about our ongoing research to automate the &-uh University of Michigan Uninhabited Aerial Vehicle . 4879285_4890005
(0.5) so for the unmanned combat aerial vehicle this is again a simulator we basically had a very specific &-um trajectory that we were following so we didn't even model that within CIRCA itself . 4895415_4905915
&-um we had a waypoint &~ge trajectory generator and it basically identified the different targets that it would encounter on the way . 4907035_4912775
so for CIRCA we specifically looked at failure avoidance . 4913315_4916455
so for the first test we looked at how would the original &~C &-um CIRCA system work . 4917075_4922715
well basically if you took the original CIRCA system as is it wouldn't generate any plan because infrared threats and radar threats could not be together scheduled on the variable &-uh <on the> on the available resources . 4923345_4934425
however if someone manually went in and then said okay I'm looking at the likelihood of infrared threat versus radar threat and well since the infrared threat is more likely I'm just gonna ignore radar threats . 4935285_4946765
so this is a manual computation that &~s basically throws out this transition . 4947505_4951305
at which case it is able to develop a plan to handle infrared missile threats and schedule those actions . 4951745_4958765
however if &~i a radar threat then occurs then it has no model of that so it fails . 4959845_4964125
(0.5) so in the next generation of plan we said okay we're gonna put this CIRCA two stochastic planner in and see what it comes up with but we're not gonna use a plan cache we're gonna make it fit everything that it can do into one plan and see what happens . 4969145_4981705
so at that point the stochastic planner decides that instead of ignoring the infrared threat instead of ignoring the radar threats it's going to ignore the infrared threats because there's a very low probability of ever reaching a state a low altitude state where the infrared missiles can find the airplane at which case it has a higher probability of success but it still fails if those are reached . 4982345_5003925
(0.5) so in the final iteration +//. 5008545_5011125
oh those are ugly handwritten numbers oh well . 5011485_5013925
in the final iteration &-um we put the plan cache back in in which case the planner is able to plan for both sets of states by putting the response for the infrared threat into the contingency plan into a contingency plan which is stored and retrieved when necessary . 5014405_5030105
so this shows the probabilities for the various states &-um to illustrate that the reason the infrared threat is less likely is because &-um there is a low probability of going into this state . 5031825_5043465
(0.6) so to summarize the tradeoffs that have happened &-um CIRCA alone with someone manually saying okay I'm gonna remove this &-um radar threat transition from consideration has a twenty percent chance of succeeding . 5048945_5060825
basically because there is an eighty percent chance that this radar threat will happen in which case it will fail because it won't do anything +... 5061925_5068905
with a single plan CIRCA two has a chance has improved the chance &-uh of succeeding to seventy six percent because ⌈ this ⌉ . 5071705_5079745
⌊ &-um ⌋ how did the how did you arrive at these numbers ? 5079945_5081525
&-uh basically by looking at the state diagram and looking at the probability that it'll enter into one of these states that has one of the threats that you wouldn't respond to +... 5081945_5090705
so this is again &~thi this is not an approximation it's a &~s this is the this is a fact ⌈ about the statistics ⌉ . 5092805_5098105
⌊ well it's &-uh ⌋ well it's an approximation given that our stochastic model approximates the real world but it's what our stochastic model is telling us is the guarantee so . 5098455_5109575
if our stochastic model were completely accurate then that would be the statistical chance . 5111555_5116915
so and then with the plan cache since we're not ignoring anything we still have a hundred percent guarantee and that's not approximate because we are reacting to everything +... 5119335_5128955
so actually why do you even think of it as a plan cache I mean it's really just &-uh the overall plan has +/. 5131315_5136335
⌈ yes ⌉ .
+, ⌊ multiple ⌋ you know switches modes and ⌈ &-um ⌉ . 5136935_5142235
⌊ you &~c ⌋ you can think of it like that &-um we think of it as a cache because we're actually &-um have this definition of a control plan that includes a schedule and you <have to> &~le have to basically throw out the old schedule and put in a totally new one . 5138035_5150175
right but that that switch is actually specified in the plan actually +/. 5150475_5153975
⌈ yes ⌉ .
+, ⌊ pretty ⌋ directly as . 5154435_5155195
mhm .
however you could use the same contingency plans for multiple nominal plans . 5155735_5160555
which would mean that you would be effectively having one overall plan for your whole system if you wanted to think of it that way . 5161405_5167085
I mean &~a at this point when we get into terminology which would be saying that like PRS has one plan for the entire system or WRAPS has one plan or however you want to think of it . 5167705_5176745
&~e effectively yes if you think of the whole system as using one plan then that's absolutely correct . 5177745_5182665
but in our terminology we think of whenever we switch schedules that we're switching to a new plan . 5183165_5187965
and it's not just schedules we're switching a set of actions that get done also . 5189645_5192925
(0.6) so briefly I've been spending a_lot_of time working on the University of Michigan &~un uninhabited aerial vehicle which the purpose of it is basically to combine a_lot_of different technologies for online identification fault detection isolation recovery and we can figure a little flight control to fully automate the airplane . 5198765_5219285
CIRCA's role in this &-um is to be for mission planning and fault recovery +... 5219965_5224945
so here's a picture of the airplane note that it's not this airplane so it's still alive +... 5228045_5231805
and very briefly it has lots_of instrumentation and that's what's really slowed us &-uh down a_lot is getting all of the thirty odd sensors and actuators to &-uh actually be calibrated and reliably talk to the airplane and so forth . 5233925_5250065
I'm rushing through these fast (be)cause it's not really CIRCA &~re research I guess . 5250505_5253805
so the software this this gets at how I was before saying that the feature tests were virtually free . 5254365_5260785
the software processes on our UAV consist of not only CIRCA but also the other support algorithms which I I'll call them support algorithms but each one of these boxes some of them can be thought of as entire research disciplines in themselves so we have a very set architecture but &-um the airplane has two processors on it and that's not subject to expansion so we certainly have computational resource limits . 5261325_5285305
one of them has a set of processes that do the control and state estimation and detect the faults and then they pass that information over to the other processor which contains the more high &~va variability processes such as model ID and the CIRCA two plan execution system . 5286195_5303875
on the ground we basically have a GUI and then the soft real+time planning of CIRCA +... 5304535_5308415
so so I've talked about this &-um the one processor in the UAV has a very fixed schedule and does all of the fast real+time processes . 5310515_5319875
the other processor does the slower real+time processes but they're still hard real+time processes . 5320675_5324935
&-um and then on the ground is the soft processes where we really don't know the worst case execution times . 5325735_5331095
(0.5) so instead of presenting &~res results I am simply presenting a a test plan for the future because it became clear several months ago that we weren't actually going to be &-um getting to the point where I could use any high level algorithms for quite some time because the the low level controllers and state estimators are still not in place and of_course CIRCA &~re relies those relies on those to do anything . 5335135_5356055
so we're in the process right now of completing the tests to identify the dynamic model parameters and &-uh the next step will be to verify operation of the high altitude controller . 5356665_5367605
although it didn't make it into my thesis &-um I hope to at that point use CIRCA to think about &-uh one dimensional trajectories and one dimensional emergencies to kind_of get a just &-uh a flight in along the x@l axis and then an altitude to get the &~con the airplane to react to very contrived emergencies in that way . 5368165_5389325
and then at that point &-um they will also introduce a lateral control the other researchers that are working on it . 5390045_5394845
ultimately we hope to look at engine failure and icing and hopefully by that time I will have a better model of the actual statistics &~sto for &-um the probability rate functions for those kind of &-um situations . 5396565_5411185
so to summarize I've talked about CIRCA two to generate and execute in hard real+time plans that hopefully will ultimately <lead to safe> &~a lead to safe autonomous system operation . 5411765_5424185
I've described a probabilistic planning model that has been used to prioritize states and to remove improbable states &-um when schedulability considerations require it . 5425205_5437845
I've talked about detecting and reacting to unhandled states resulting either from these schedulability tradeoffs or from imprecisions in the model &~itsel &~i in the knowledge base itself and then talked about how the planner schedule negotiation at this point feedback from scheduler to planner can guide the schedulability tradeoffs during replanning or for backtracking during planning . 5438515_5460695
then I've talked about how CIRCA two has been used so far to fully automate &-um simulated and real uninhabited aerial vehicles +... 5461385_5468485
kind_of a summary of contributions &-um to stochastic planning it's not &-uh of_course future work needs remains to make it a convincing argument but &-um we believe this is an alternative to Markov decision process specifically for real+time plan development &-um when problem domains are so complex that it gets difficult to think about specifying the problem for an MVP . 5472705_5496745
&-um we have looked at how multilayer architectures can benefit from thinking about detecting and responding specifically in real+time to unplanned for states . 5497785_5508685
and then we've talked about how we could use the &~ben the capabilities of the planner and the scheduler together to guide tradeoffs . 5509525_5516685
and then although we haven't really fully automated an aircraft we have begun to think about the problem well other than the simulator we began to think about the problem of how to use such high level reasoning mechanisms to augment &-um the system response for emergencies where current flight management systems would fail . 5517245_5535545
(0.6) we have quite a bit of future work to to look at &-um in all of the different disciplines . 5541215_5546395
in planning in particular I've talked about &-um how to impose real+time planning bounds because in the worst case we can't store everything in advance and we really have to rely on some dynamic replanning . 5546975_5556935
also although I didn't talk about this in detail &-um right now we specify a list of subgoals for the planner and we'd like to be able to dynamically develop those too . 5557795_5565995
&-um we also would like to continue evaluating our stochastic model because it at this point it's just kind_of been proposed and implemented but we need to do further evaluations specifically to compare it to Markov methods . 5566385_5578065
so for the planner and scheduler as I said before we'd like to to combine the quality of service negotiation techniques with the right now the the planner backtracking to find a a schedulable plan . 5579585_5590245
to look &~spec at specifically the tradeoffs of when you should degrade the task &~lev QS level and when you should do the backtracking in the planner . 5590755_5599675
&-um for &~pl plan execution we have been migrating CIRCA toward a real+time operating system in the past it's run on UNIX which we could get kind of guesses at worst case properties at best so for the UAV in particular we're running everything on the QNX operating system and &~a in parallel work we've been migrating the entire &-um CIRCA two architecture over to that platform . 5600425_5623625
at the same time we will have things like thread support and that will allow us to be able to do better &-um multiresource platform consideration within the plan execution part of CIRCA . 5624255_5635095
and then of_course with autonomous flight we have all kinds of things to do to think about really what features and what values do we want and how do they interact with the flight dynamics and also how can we look at specifically the engine failure and airframe icing emergencies . 5635855_5653235
that's everything .
okay that's it . 5654915_5665735
&=applause .
any ⌈ questions ⌉ ? 5666245_5666925
⌊ questions ⌋ &=laughs:S1 from the committee ? 5667805_5668945
just a personal question +/. 5668945_5670765
yes +/. 5671085_5671105
+, I know you plan to have some continuing contact with the UAV activities here but +/. 5671325_5676165
+, yes . 5676325_5676565
+, have you identified a successor from the AI Lab who might &-uh be interested in ⌈ continuing this ⌉ ? 5676565_5681805
⌊ no I haven't ⌋ and I don't plan to because I plan to work on it myself and I don't wanna be replaced . 5681805_5686385
&=laughs:multiple .
ah okay okay okay . 5686585_5688145
that's a good answer . 5688905_5689365
so we we've talked about it a_lot and &-uh they're gonna of_course keep the airplane here because our expert pilot is here but since my role is in large part doing software and we are close to having MATLAB simulations of what we believe are the dynamics for the airplanes we can do a_lot_of the &-uh software testing remotely . 5689345_5707785
and then if there are major flights I hope to come back and go out to the field and test it . 5708865_5712505
(0.7) .
did did any of your implementations work ? 5719585_5721665
&-um ⌈ &~a ⌉ .
⌊ what ⌋ do you mean did they work ? 5722565_5723445
well how would I know &~ho ⌈ I what I'd like to &~s ⌉ . 5723585_5725805
⌊ well I can bring you the ⌋ video . 5725805_5726905
well no +/. 5727485_5727825
⌈ well it's ⌉ &=laughs +/.
+, ⌊ I don't ⌋ mean I mean I &~y had not not with the &~i &~i not with any hardware but you had two different simulation +/. 5727985_5734345
+, ⌈ right mhm ⌉ . 5734505_5734965
+, ⌊ requirements and ⌋ the only quantitative I didn't see any quantitative measures of performance or or capabilities at all +/. 5734965_5744365
+, right .
+, I saw a few numbers that you scratched on your transparencies but I have no idea whether these are good ideas bad ideas can you help me ? 5744725_5754165
right well that's something that I've been struggling with for a while and the problem is what do I plot <what do I> what do I what do I show because it doesn't really tell anything to show +//. 5754325_5764265
so you saw in the QS negotiation section I had controller response which made sense for that because we were varying worst case execution times for things like the controller and seeing what happened eventually became unstable . 5764495_5775355
for thinking about whether CIRCA succeeds or fails &-uh these are such high level responses that plotting the trajectory of the aircraft really doesn't seem to make a_lot_of sense . 5776315_5787715
and since these are high level discrete values the most I have been able to do is to come up with here's the plan and I could give a video on ⌈ showing it flying ⌉ . 5788105_5799085
⌊ but you could stress ⌋ you could stress your plan in a variety of ways many many different ways I presume ⌈ I I mean what you ⌉ . 5799085_5805185
⌊ well I can change ⌋ I so that was the idea by &-uh +/. 5805205_5807805
⌈ you have three ⌉ +/.
+, ⌊ changing the ⌋ deadlines +/. 5808945_5809645
+, ⌈ you had three ⌉ +/.
+, ⌊ and so forth ⌋ . 5809765_5810325
you had three different scenarios I think ⌈ right ⌉ ? 5810565_5812605
⌊ yeah ⌋ mhm +... 5812605_5813885
⌈ &-uh &-uh ⌉ .
⌊ so ⌋ . 5814145_5814525
so &~wha what would it &~suppo you know suppose you're running the FAA in ten twenty years let's suppose you know . 5815105_5821325
well they don't like &=laughs:multiple yeah they would want more numbers than that before they would give me a shot at running the +/. 5821605_5825525
+, ⌊ FAA but ⌋ yeah . 5825645_5826325
what are you gonna say to people are you gonna you know next year you're gonna be writing grant proposals . 5826665_5831345
mhm .
how do you how do you convince people that these ideas are at least worth trying out some more ? 5831745_5839625
so there are two separate ways that I am looking at this I mean one avenue of me getting more plucks is to put this in with say the simple longitudinal controller for not only model identification but overall what happens when you &-uh detect this problem and do some so so +... 5840865_5863385
⌈ I'm not ⌉ .
⌊ are you ⌋ saying you need a truth model somehow I mean &~a to to really make performance comparisons in some way . 5864545_5870525
I mean you've got to have something to compare with +/. 5870705_5874685
right .
&~s so +/. 5875765_5875805
+, and .
so far I've been doing this kind of high level comparison of CIRCA to CIRCA two and in the future I hope to +//. 5876925_5883545
the reason I keep talking about these Markov decision process models is that at least for that part I want to compare ⌈ the accuracy of that ⌉ . 5884185_5889245
⌊ well I guess that's what I'm asking is ⌋ what's I'd like to understand how &~i in one particular application +/. 5889195_5894595
mhm .
+, if it's more rudimentary than your +/. 5895035_5896635
+, ⌈ yeah ⌉ .
+, ⌊ most ⌋ rudimentary one +/. 5896875_5897615
+, mhm .
+, how we can assess the goodness or the badness of the design decisions that you've made and I don't see ⌈ that you've ⌉ . 5898415_5903435
⌊ right so ⌋ +... 5903435_5903815
in terms of calculating probability accuracy I think that the answer to that is to actually implement the Markov decision process planner in CIRCA and let it run and see what happens with all the complexity that it has . 5906465_5918465
our current probability model is recent enough that we just barely have it working which is why the numbers were scribbled onto that slide and it's not all that trivial to think of taking Markov decision software off the shelf and putting it into CIRCA because we have to customize it to compute all the things we want . 5920185_5935725
so and we don't really have ⌈ we're not really ⌉ . 5937285_5940505
⌊ is it possible that you ⌋ could articulate a tiny tiny tiny scenario and actually give xxx some sort of xxx . 5940505_5946365
well I hesitate to draw these tradeoff curves for a tiny scenario because I think that what we would end up with is two data points and we wouldn't be able to say anything about what they would look at +//. 5946405_5955605
look look like in a more general case because we're not our goal is not to prove one particular example works it's to show that the system somehow improves on previous results so I have purposely hesitated to come up with a simple example and say look here is how it degrades because +... 5955965_5974545
the curve would basically have a very limited step function appearance and would not be representative . 5976345_5981725
&~l let me add I mean the curves you have there of +/. 5982175_5984275
mhm .
+, I guess &-uh perform the vertical axis performance versus . 5984735_5987775
yeah resource capacity . 5988055_5989075
&-uh yeah resource capacity . 5989295_5990315
I mean presumably if you actually had this implemented in some system for example the UAV +/. 5990895_5995055
yeah . 5995335_5995495
+, one could do a whole variety a whole scenario of test flights with a whole &~grou I mean you'd hafta do almost something like a Monte Carlo simulation +/. 5995575_6002995
+, mhm .
+, to really build up +/. 6003995_6005215
+, yeah . 6005595_6005835
+, the real &~cur you know to to get an experimental +/. 6005975_6008775
+, right . 6009015_6009215
+, or a simulation of the +/. 6009395_6011495
+, mhm .
+, of that &~cur that that rook or I I mean I I'm not I think Don was asking something more broad than just that measure but but it I mean that's a measure but +/. 6011975_6020475
+, right . 6020735_6020755
+, what you have is only an inkling of what those curves look like . 6020955_6023375
right . 6023555_6023615
yes +/. 6023995_6024175
⌈ not ⌉ +/.
+, ⌊ I ⌋ I hope that came across &~i that this is what I would expect the shape to roughly look like but that it's not something that I am able to compute . 6024375_6032795
because of the complexity of actually computing the the points on the curve and the how they would differ between different examples . 6033605_6040885
so &~i I am not ignoring this problem but I was I've been thinking about that problem for quite some time and have not yet come up with a good way to quantitatively measure what's going on in terms of making these tradeoffs except to say well look here's the probability that we have in this case and here's the probability that we have in this case . 6043315_6069375
and here's how the schedule changes and so forth . 6070105_6073365
so with a simple example I can show different schedules but &~i the the jump that I have not made is in getting some sort of trend or defining a simulation that even makes sense to vary these parameters in . 6073805_6086525
because when we have a simple domain that has two or three actions and two or three transitions it's not going to give you a smooth curve and neat resource capacity . 6086785_6096725
it's going to give you jumps . 6096885_6097765
because you remove one task &~a or you change the deadline for that task and it's gonna suddenly jump along that curve . 6098445_6107345
and so if I do one simple example that gives me a_couple_of jumps and then I present that that's not representative of what we're gonna get for another example . 6108365_6114965
but I think you know you've got that overall curve but that's actually a composition of two separate things which themselves might be analyzable +/. 6115185_6121585
mhm .
+, individually &-uh missing so one of them is the probability estimation part +/. 6122545_6125645
+, ⌈ mhm ⌉ .
+, ⌊ which ⌋ is separate . 6126105_6126345
+, right . 6126345_6126565
+, mkay simulate &=leaves:SUm you know +/. 6126685_6128705
+, mhm .
+, &-uh ⌈ the transitions and then simulate and then your ⌉ . 6129805_6131705
⌊ right and in fact the the person who just left ⌋ is actually that's part of his research is he's &-uh has a stochastic simulation where he actually &-uh estimates the probability errors of our model relative to the stochastic simulation where he puts the rate functions into that simulation . 6131705_6147345
okay so that's one piece +/. 6147745_6148345
⌈ right ⌉ .
+, ⌊ the ⌋ other piece is &-um +/. 6148425_6149845
+, ⌊ models ⌋ of resource availability and how that trades off with value for different thresholds that we need . 6150755_6155455
and presumably &~e even that is up to the simulation properties is coming up with some parameters that we can vary . 6156375_6160915
and I think that the overall result is just the composition of those two things &-um we . 6161355_6167875
okay +... 6167875_6168675
&-uh I'm not quite sure how to get that second part the first part I I can get for specific examples but again I'm not sure how that generalizes and . 6172635_6179655
see but the second part it doesn't matter actually what the states are you know it's it's really +/. 6179815_6183155
mhm .
+, &-um .
it matters +/. 6185355_6186015
⌈ it's ⌉ +/.
+, ⌊ what's ⌋ &~s the problem is +/. 6186275_6187075
+, ⌈ <you need> you need ⌉ +/.
+, ⌊ &~th &~th the ⌋ variables here are the shape of the probability rate functions . 6187415_6190015
I_mean we've presented bell distributions and reliable transitions and so forth but what is the generic shape ? 6190655_6196475
we've had constant values . 6196575_6197555
&-um we can do a generic shape for an action because we know how we model that . 6198095_6202515
but for a temporal transition should we use a coin flip or should we use something that looks like an action that's reliable or should we use a bell curve and +/? 6202735_6212055
+, ⌈ so I &~w ⌉ +/.
+, ⌊ and then ⌋ &~wha what do you do ? 6212335_6213275
so I would take the results you know suppose you had a hundred actions they were all coin flips +/. 6213435_6217075
right &=laughs +/. 6217455_6217515
+, you know and these are the distribution <of the> of the parameters and ⌈ &-um ⌉ . 6217615_6225975
⌊ but ⌋ it makes a big difference like we have this model of dependent temporal transitions how does that fit in and what does that how does that benefit us ? 6220735_6227695
okay but ⌈ then <start from> start from xxx ⌉ . 6228075_6229375
⌊ <but you> &~kn but you know nothing ⌋ you know nothing apparently right now ⌈ is that true ⌉ ? 6229555_6232595
⌊ which we ⌋ know what ? 6232595_6233635
you know nothing right now really about the performance of your unless you're here you are &~w &-uh &-um working on these very very +/. 6233755_6241275
yes . 6241855_6241915
+, demanding difficult physical +/. 6242175_6243455
+, mhm .
+, limitations +/.
+, mhm .
+, without much idea about how your framework is gonna perform in some over some variety of settings . 6245195_6254935
so I mean we wanted +//. 6255215_6256115
showing that it works well under favorable assumptions all across the board +/. 6256655_6260375
mhm .
+, when there's no +/. 6260935_6261395
+, ⌈ okay mhm ⌉ .
+, ⌊ complicated temporal ⌋ dependency fulfilled . 6261915_6263055
+, ⌈ yes ⌉ .
+, ⌊ that's a ⌋ that's a starting point . 6263975_6265115
+, mhm .
+, and that's sort_of all the evidence okay now let's you know ⌈ investigate further xxx ⌉ . 6266295_6270215
⌊ so this is talking about ⌋ using a stochastic simulation to compare the accuracy of the results as one part and then the other part is to show that it actually &~i I mean ⌈ what am I trying to show that it's xxx ⌉ . 6270535_6281795
⌊ so so that's <so that these> so that these ⌋ tradeoffs are relevant over a broad range of parameters &-um . 6282015_6285815
that you got the right <that you> that you got the right levers here you know ? 6287735_6292075
⌈ yeah ⌉ .
+, ⌊ I &~ha ⌋ I don't understand reading the thesis &~thi things are complicated enough that I just don't have &~a an idea about +/. 6292725_6299405
+, okay .
+, whether the choices were right or wrong and in what context the choices would be right or wrong +/. 6300165_6304365
+, mhm .
+, and I think <for future> for future articles for future +/. 6305325_6309265
+, oh sure . 6309385_6309705
+, funding +/. 6309745_6310145
+, no I agree . 6310725_6311225
+, for your own you know to prevent you from &-um going down a costly road &-uh in <in the> in the &~applicat real application which is even more painful than software I think you know &-um I it seems like it would be really critical to think through +/. 6312745_6331605
+, yes mhm . 6332325_6333085
+, what what the system wants to do and whether it's doing that +... 6333465_6336105
so I thought I presented what the system wants to do . 6339535_6343615
no I don't think +/. 6344035_6344635
⌈ but ⌉ +/.
+, ⌊ you ⌋ have if you can't +/. 6344775_6346275
+, okay .
+, if you can't if you can't state test scenarios if you can't provide &~s &~s test scenarios or even +/. 6346435_6351395
+, ⌈ so ⌉ +/.
+, ⌊ come ⌋ up with a range of Monte Carlo simulations where you ⌈ stress I think ⌉ . 6352215_6369515
⌊ the test scenarios ⌋ were intended to be &-uh the planner coming up with the plans and showing that they meet the deadlines effectively proving that given that particular set of constraints that it can satisfy them and will work . 6354835_6370295
but we didn't see we <you didn't> you didn't have &~y you didn't parameterize those stresses you came up with one stress or another stress and what you would want I think what you would want to do +/. 6370595_6380455
mhm .
+, is you wanna study the ways in which your decisions are wrong or right the decisions about what to prove and how to prove are wrong and right depending on the way your environment changes . 6380495_6388775
you're +/. 6390235_6390315
+, ⌈ okay ⌉ .
+, ⌊ trying ⌋ to understand whether the +//. 6390475_6391275
you made some choices right you +/. 6391435_6392575
+, ⌈ yeah mhm ⌉ .
+, ⌊ &~deci ⌋ <you took> you took something which you &~p arguably model <in a> in a Markov fashion . 6392755_6397415
and you said I don't have time I don't have the I don't have <the the> the the computational power and the time to to compute &-uh &-uh in the controlled Markov chain style +/. 6398035_6409575
+, ⌈ mhm ⌉ .
+, much less to analyze what would happen +/. 6410355_6411695
+, ⌊ right ⌋ .
+, ⌈ so ⌉ what I'm going to do is I'm going to I'm going to do a kind of aggregation I think of it as +/. 6412275_6416595
+, ⌊ okay mhm sure ⌋ .
+, ⌈ aggregation but I'm really not ⌉ sure what you did . 6416855_6418515
+, mhm .
+, &-um the aggregations that you perform have the effect of +... 6419835_6423355
&~i &~y you know &~the they're right for some kinds of +/. 6425725_6428045
+, mhm .
+, environments and wrong for other ⌊ kinds of environments ⌋ . 6428645_6429645
⌈ okay so right now ⌉ you're talking about the +/. 6429645_6431725
the planner . 6432085_6432305
+, testing the abilities of the planner +/. 6432405_6434445
+, yeah +/.
+, to come up with the correct +/. 6434585_6435765
+, yeah +/.
+, stochastic +/. 6436125_6436585
+, ⌊ yeah ⌋ +/. 6436765_6437085
+, ⌈ process ⌉ &-uh .
or or in situations where the time &~rou if you revise the time cost of processes +/. 6437385_6443145
mhm .
+, &-um whether the planner <whether the> whether the &~heu heuristics that you're <introduced in> the planner could keep up with or could could track &-um those sorts of changes in in resource capability . 6443965_6460485
+, mhm .
+, I I don't know how to do +/. 6462245_6463125
+, ⌊ but but ⌋ +/.
+, ⌈ it but ⌉ I think it would be worth your while to put a a fair bit of time into ⌊ this ⌋ . 6463345_6466425
⌈ but but ⌉ there are so many levels of of &-uh I mean there +/. 6466425_6470345
⌊ but ⌋ +/.
+, ⌈ are ⌉ so many factors here that I mean that's a certainly a key one but there are others such as how well does your knowledge &-uh really your probability knowledge really map the real environment within which the system's ⌊ operating it's kind_of a robust issue there ⌋ . 6470195_6482635
⌈ but the claim but there's a claim ⌉ there's a claim for a contribution . 6482635_6484875
&-uh <so so> so so but but but so so in some sense to average all that out to do some ⌊ test the ⌋ . 6485295_6490815
⌈ but that's not the claim ⌉ that's not where the +/. 6490975_6492775
⌊ right ⌋ .
+, ⌈ we've got ⌉ the value added is the claim is not that we're coming up with better models that's not what you're claiming to do what +/. 6493835_6498755
+, ⌊ no ⌋ +/.
+, ⌈ you're ⌉ claiming to do is come up with better ⌊ approximations ⌋ . 6498955_6500575
⌈ no but there is a ⌉ there is a question about how sensitive the plans you come up with are to the data upon which they're based and that's one which only by sufficient testing we might be able to get a handle on . 6500655_6511515
and the hope is that yours are not too sensitive but who knows +... 6511595_6515155
I mean one of the challenges with me somehow running &-uh a whole group of simulations on the aircraft simulator that I have is +... 6517865_6528925
&-uh quite frankly we haven't even been able to accurately characterize worst case execution times because the simulators run on UNIX . 6531185_6536925
and they have since I've had them and so if someone else logs in then the models suddenly become totally inaccurate . 6537205_6544085
and &=laughs:S6 so I +... 6545485_6550145
to fight that situation I and everyone before me who has ever used CIRCA has basically padded the worst case execution time enough that on a good day you won't get that behavior . 6550145_6560765
&-um so the thought of somehow trying to &-uh span &-uh that that sort of actually varying resource capacity and things like that on that kind of platform is not something that I find to be straightforward . 6561845_6577505
now my hope is that by moving to the real+time operating system and which you can characterize a_lot more accurately that we can even do more dummy sort_of nonsensical feature tests and have random number generators for tasks and things like that , that sit there and wait for varying periods of time . 6577755_6597735
that would show us when we met our deadlines and when we didn't without actually having a domain to work in . 6597855_6602635
but that requires that CIRCA first be fully implemented on the real+time operating system . 6602465_6609205
&~an which is very close but not quite there so I certainly have intentions to do those kind of tests once we're there &-um but that will not be with respect to the aircraft . 6610305_6619565
so &-um hopefully that answers your question a bit better &-um it's not all that trivial to totally migrate the CIRCA plan execution software to the real+time operating system . 6620625_6633185
&-um we have kind_of a special purpose version that works with our UAV given that it has one processor and no more &-um and given that it has a specific set of tasks not a general set . 6633825_6645825
&-um ⌊ but ⌋ . 6646925_6647505
⌈ you've ⌉ just identified your own limited resources . 6647905_6650405
right .
&=laughs:S6 yeah . 6651305_6651925
but +/. 6653045_6653245
⌊ trying to meet deadlines ⌋ +/.
+, ⌈ we haven't been able to test them ⌉ much because we don't even have model ⌊ identification ⌋ . 6653365_6655985
⌈ so let me ask you ⌉ something (be)cause you know (be)cause &~the all these answers seem to &~c always be coming back to well I can't do it all +/. 6655985_6661205
⌊ right yeah ⌋ +/. 6661645_6662025
+, ⌈ together there's ⌉ always going to be something well that's +/. 6662025_6663265
+, ⌊ yeah mhm ⌋ .
+, ⌈ going to be ⌉ true forever actually not just the it's not just the limits of the dissertation . 6663505_6667165
+, right . 6667565_6667745
+, and I guess what the committee keeps pushing pushing back on is well it's still possible to provide pieces of evidence +/. 6667985_6674265
+, right . 6674765_6675105
+, &~her you know about aspects that will be +/. 6675155_6677455
+, right .
+, admissible evidence even though they don't capture some aspect +/. 6678075_6680715
+, ⌊ right ⌋ .
+, ⌈ that's ⌉ in your grand ⌊ vision ⌋ . 6680895_6681975
+, ⌈ well ⌉ so +/. 6682255_6682475
+, and you've got to sort_of embrace that I think to . 6682615_6683915
right so the &~f the idea with the the &~n the next generation of CIRCA student that's working here in the lab is that he's comparing our current stochastic model with &-um &-uh the stochastic simulations that he's running based on the actual probabilities . 6684315_6699295
and that should be able to yield some comparative results of what you would actually see versus what our model's predicting . 6699515_6705535
and he's beginning to characterize that error . 6705835_6708095
but then that's not my work . 6708295_6709455
and hopefully I can reference that work in the future &-um &~b but I don't necessarily see myself repeating that work because he's using exactly the same model . 6710315_6720295
&-um I do see myself I mean I hope before I &~wo leave here to have CIRCA running on this airplane . 6721035_6728095
which would give me a specific set of limited computational resources to work with and a specific set of software to work with it on but I didn't see myself spending the next two years waiting for all those processes to be available so that's why I want to leave now &=laughs so &-um I I agree and I certainly plan to work on it . 6728545_6750545
that's probably the best I can say now . 6750905_6752345
right .
I've got to leave shortly so .
okay we've got all the important at least questions asked ? 6752285_6759925
correct ?
xxx .
so if any of you want to talk to me later I'll certainly be around +... 6760705_6764285
okay +/.
+, so . 6771525_6771745
thanks a_lot .
thank you &=applause .
and I'm afraid we have to xxx . 6771745_6772885
xxx 