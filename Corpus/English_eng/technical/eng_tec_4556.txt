# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3 = 3.0.9, PHP 4)
Searches subject for all matches to the regular expression given in pattern and puts them in matches in the order specified by flags.
After the first match is found, the subsequent searches are continued on from end of the last match.
flags can be a combination of the following flags (note that it doesn't make sense to use PREG_PATTERN_ORDER together with PREG_SET_ORDER):
Orders results so that $matches[ 0] is an array of full pattern matches, $matches[1] is an array of strings matched by the first parenthesized subpattern, and so on.
?php preg_match_all ("| [^] + (.*) / [^] + |U"," b example: / b div align=left this is a test / div ", $out, PREG_PATTERN_ORDER); print $out[0][0] .", ".$out[0][1] ."\n"; print $out[1][0] .", ".$out[1][1] ."\n";?
This example will produce:
b example: / b, div align=left this is a test / div example:, this is a test
Orders results so that $matches[ 0] is an array of first set of matches, $matches[1] is an array of second set of matches, and so on.
?php preg_match_all ("| [^] + (.*) / [^] + |U"," b example: / b div align=left this is a test / div ", $out, PREG_SET_ORDER); print $out[0][0] .", ".$out[0][1] ."\n"; print $out[1][0] .", ".$out[1][1] ."\n";?
b example: / b, example: div align=left this is a test / div, this is a test
If this flag is set, for every occuring match the appendant string offset will also be returned.
Note that this changes the return value in an array where every element is an array consisting of the matched string at offset 0 and it 's string offset into subject at offset 1.
This flag is available since PHP 4.3.0.
If no order flag is given, PREG_PATTERN_ORDER is assumed.
Returns the number of full pattern matches (which might be zero), or FALSE if an error occurred.
Example 1.
Getting all phone numbers out of some text.
?php preg_match_all ("/ \(? (\d{3})?\)? (?(1) [\-\s]) \d{3}-\d{4} / x", "Call 555-1212 or 1-800-555-1212", $phones);?
Example 2.
Find matching HTML tags (greedy)
?php / / The \\2 is an example of backreferencing.
This tells pcre that / / it must match the second set of parentheses in the regular expression / / itself, which would be the ([\w]+) in this case.
The extra backslash is / / required because the string is in double quotes. $html = "b bold text / b a href=howdy.html click me / a"; preg_match_all (" / (([\w]+)[^ ]* )(.*) (\ / \\2) / ", $html, $matches); for ($i=0; $i count($matches[0]); $i++) {echo "matched: ".$matches[0][$i] ."\n"; echo "part 1: ".$matches[1][$i] ."\n"; echo "part 2: ".$matches[3][$i] ."\n"; echo "part 3: ".$matches[4][$i] ."\n\n";}?
matched: b bold text / b part 1: b part 2: bold text part 3: / b matched: a href=howdy.html click me / a part 1: a href=howdy.html part 2: click me part 3: / a
See also preg_match(), preg_replace(), and preg_split().
Prev
Home
Next
preg_grep
Up
preg_match