# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/en_GB.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Debugging a Basic Program
/text/sbasic/shared/01030300.xhp
debugging Basic programs
variables; observing values
watching variables
run-time errors in Basic
error codes in Basic
breakpoints
Call Stack window
mw deleted &quot; Basic; &quot;
Debugging a Basic Program
Breakpoints and Single Step Execution
You can check each line in your Basic program for errors using single step execution.
Errors are easily traced since you can immediately see the result of each step.
A pointer in the breakpoint column of the Editor indicates the current line.
You can also set a breakpoint if you want to force the program to be interrupted at a specific position.
breakpoint
column at the left of the Editor window to toggle a breakpoint at the corresponding line.
When the program reaches a breakpoint, the program execution is interrupted.
single step
execution using the
Single Step
icon causes the program to branch into procedures and functions.
Procedure Step
icon causes the program to skip over procedures and functions as a single step.
Properties of a Breakpoint
The properties of a breakpoint are available through its context menu by right-clicking the breakpoint in the breakpoint column.
activate
and
deactivate
a breakpoint by selecting
Active
from its context menu.
When a breakpoint is deactivated, it does not interrupt the program execution.
Properties
from the context menu of a breakpoint or select
Breakpoints
from the context menu of the breakpoint column to open the
Breakpoints
dialogue box in which you can specify other breakpoint options.
breakpoints
with the corresponding line number in the source code.
You can activate or deactivate a selected breakpoint by checking or clearing the
Active
box.
Pass Count
specifies the number of times the breakpoint can be passed over before the program is interrupted.
If you enter 0 (default setting) the program is always interrupted as soon as a breakpoint is encountered.
Delete
to remove the breakpoint from the program.
Observing the Value of Variables
Watch
window.
To add a variable to the list of watched variables, type the variable name in the
Watch
text box and press Enter.
The values of variables are only displayed if they are in scope.
Variables that are not defined at the current source code location display ( &quot; Out of Scope &quot; ) instead of a value.
You can also include arrays in the Watch window.
If you enter the name of an array variable without an index value in the Watch text box, the content of the entire array is displayed.
If you rest the mouse over a predefined variable in the Editor at run-time, the content of the variable is displayed in a pop-up box.
UFI: removed help id
The Call Stack Window
Provides an overview of the call hierarchy of procedures and functions.
You can determine which procedures and functions called which other procedures and functions at the current point in the source code.
List of Run-Time Errors