# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Chapter 33.
Creating Variables
Next
Zend supports the creation of true constants (as opposed to regular variables).
Constants are accessed without the typical dollar sign ($) prefix and are available in all scopes.
Examples include TRUE and FALSE, to name just two.
To create your own constants, you can use the macros in Table 33-6.
All the macros create a constant with the specified name and value.
You can also specify flags for each constant:
CONST_CS - This constant 's name is to be treated as case sensitive.
CONST_PERSISTENT - This constant is persistent and won' t be "forgotten "when the current process carrying this constant shuts down.
/ / register a new constant of type "long" REGISTER_LONG_CONSTANT("NEW_MEANINGFUL_CONSTANT", 324, CONST_CS | CONST_PERSISTENT);
Table 33-6.
Macros for Creating Constants
Macro
Description
Registers a new constant of type long.
Registers a new constant of type double.
Registers a new constant of type string.
The specified string must reside in Zend 's internal memory.
Registers a new constant of type string.
The string length is explicitly set to length.
The specified string must reside in Zend 's internal memory.
Prev
Home
Next
Macros for Automatic Global Variable Creation
Up
Duplicating Variable Contents:
The Copy Constructor