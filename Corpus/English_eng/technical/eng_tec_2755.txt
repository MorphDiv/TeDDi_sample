# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(no version information, might be only in CVS)
This functions appends a child to an existing list of children or creates a new list of children.
The child can be created with e.g. domdocument_create_element(), domdocument_create_text() etc. or simply by using any other node.
(PHP 4.3) Before a new child is appended it is first duplicated.
Therefore the new child is a completely new copy which can be modified without changing the node which was passed to this function.
If the node passed has children itself, they will be duplicated as well, which makes it quite easy to duplicate large parts of a xml document.
The return value is the appended child.
If you plan to do further modifications on the appended child you must use the returned node.
(PHP = 4.3) The new child newnode is first unlinked from its existing context, if it already existed in a document.
Therefore the node is moved and not copies anymore.
This is the behaviour according to the W3C specifications.
If you want to duplicate large parts of a xml document, use DomNode - clone_node() before appending.
The following example will add a new element node to a fresh document and sets the attribute "align" to "left ".
Example 1.
Adding a child
?php $doc = domxml_new_doc( "1.0"); $node = $doc - create_element("para"); $newnode = $doc - append_child($node); $newnode - set_attribute("align", "left");?
Example 2.
Adding a child
?php $doc = domxml_new_doc( "1.0"); $node = $doc - create_element("para"); $node - set_attribute("align", "left"); $newnode = $doc - append_child($node);?
Example 3.
Adding a child
?php include( "example.inc"); if(!$dom = domxml_open_mem($xmlstr)) {echo "Error while parsing the document\n"; exit;} $elements = $dom - get_elements_by_tagname("informaltable"); print_r($elements); $element = $elements[0]; $parent = $element - parent_node(); $newnode = $parent - append_child($element); $children = $newnode - children(); $attr = $children[1] - set_attribute("align", "left"); echo "PRE"; $xmlfile = $dom - dump_mem(); echo htmlentities($xmlfile); echo "/ PRE";?
See also domnode_insert_before(), domnode_clone_node().
Prev
Home
Next
DomNode - add_namespace
Up
DomNode - append_sibling