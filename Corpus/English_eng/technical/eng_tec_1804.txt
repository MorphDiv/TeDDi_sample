# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/en_GB.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Brackets
/text/smath/01/03090500.xhp
Sun Microsystems, Inc.
UFI: added text to fix #i29948# dedr: reviewed
brackets; in $[officename] Math
brackets; round (Math)
parentheses (Math)
brackets; square (Math)
brackets; double square (Math)
braces (curly brackets) in %PRODUCTNAME Math
brackets; angle (Math)
brackets; operator (Math)
brackets; angle with operator
brackets; group
grouping brackets
round brackets
square brackets
double square brackets; scalable
scalable braces (curly brackets)
scalable round brackets
scalable lines with ceiling
vertical bars
brackets; scalable
operator brackets
floor brackets
lines; with edges
ceiling brackets; lines with
lines; scalable
ceiling brackets;scalable lines with
brackets; single, without group function
single brackets without group function
brackets;widowed
widowed brackets
orphaned brackets
Brackets
$[officename] Math
formula.
Bracket types are displayed in the lower part of the Formula Elements window.
These brackets are also listed in the
context menu
of the
Commands
window.
All brackets that are not contained in the Formula Elements window or in the context menu can be typed manually in the
Commands
window.
Commands
window.
Bracket types
Icon
Round brackets (parentheses)
Inserts a placeholder within normal round brackets (parentheses).
You can also type
( < ? > )
in the
Commands
window.
Icon
Square brackets
Inserts a placeholder within square brackets.
You can also type
[ < ? > ]
in the
Commands
window.
Icon
Double square brackets
Inserts a placeholder within double square brackets.
You can also type
ldbracket < ? > rdbracket
in the
Commands
window.
Icon
Braces (curly brackets)
Inserts a placeholder withing braces (curly brackets).
You can also type
lbrace < ? > rbrace
directly in the
Commands
window.
Icon
Single vertical bars
Inserts a placeholder within vertical bars.
You can also type
lline < ? > rline
directly in the
Commands
window.
Icon
Double vertical bars
Inserts a placeholder within double vertical bars.
You can also type
ldline < ? > rdline
directly in the
Commands
window.
Icon
Angle brackets
Inserts a placeholder within angle brackets.
You can also type
langle < ? > rangle
in the
Commands
window.
Icon
Operator brackets
Inserts a placeholder within operator brackets.
You can also type
langle < ? > mline < ? > rangle
in the
Commands
window.
Icon
Group brackets
Inserts group brackets.
You can also type
{ < ? > }
in the
Commands
window.
Icon
Round brackets (scalable)
scalable rounded brackets
with one placeholder.
You can also type
left( < ? > right)
in the
Commands
window.
Icon
Square brackets (scalable)
Inserts scalable square brackets with placeholders.
You can also type
left[ < ? > right]
in the
Commands
window.
The size of the brackets is adjusted automatically.
Icon
Double square brackets (scalable)
Inserts scalable double square brackets with placeholders.
You can also type
left ldbracket < ? > right rdbracket
directly in the
Commands
window.
The bracket size is adjusted automatically.
Icon
Braces (curly brackets) (scalable)
Inserts scalable braces (curly brackets) with a placeholder.
You can also type
left lbrace < ? > right rbrace
in the
Commands
window.
The size of the braces is automatically adjusted.
Icon
Single vertical bars (scalable)
Inserts scalable single vertical bars with a placeholder.
You can also type
left lline < ? > right rline
in the
Commands
window.
The size of the brackets is automatically adjusted.
Icon
Double vertical bars (scalable)
Inserts scalable double vertical bars with a placeholder.
You can also type
left ldline < ? > right rdline
in the
Commands
window.
The size of the brackets is automatically adjusted.
Icon
Angle brackets (scalable)
Inserts scalable angle brackets with a placeholder.
You can also type
left langle < ? > right rangle
in the
Commands
window.
The size of the brackets is automatically adjusted.
Icon
Operator brackets (scalable)
Inserts scalable operator brackets with placeholders.
You can also type
left langle < ? > mline < ? > right rangle
in the
Commands
window.
The bracket size is adjusted automatically.
Icon
Brace (curly bracket) top (scalable)
Inserts a scalable horizontal upper brace (curly bracket) with placeholders.
You can also enter
< ? > overbrace < ? >
directly in the
Commands
window.
The bracket size is adjusted automatically.
Icon
Brace (curly bracket) bottom (scalable)
Inserts a scalable horizontal lower brace (curly bracket) with placeholders.
You can also type
< ? > underbrace < ? >
directly in the
Commands
window.
The bracket size is adjusted automatically.
lfloor < ? > rfloor
directly in the
Commands
window.
lceil < ? > rceil
directly in the
Commands
window.
left lfloor < ? > right rfloor
directly in the
Commands
window.
left lceil < ? > right rceil
directly in the
Commands
window.
left
and
right
in front of the bracket command, for example,
left(a over b right)
.
You can also set the size and spacing of brackets by choosing
Format - Spacing - Category - Brackets
and setting the desired percentages.
Mark the
Scale all brackets
check box to apply the changes to all brackets in the formula.
\
in front of the command.
For example, when you type
\[
, the left square bracket appears without its counterpart.
This is useful for creating reverse brackets or for constructing intervals.
Note that only non-scalable brackets can be used individually.
To change the size, use the
size
command.
Examples of single brackets
For non-scaled brackets:
a = \{ \( \[ b newline
{} + c \] \) \ }
none
as the bracket name
a = left ( a over b right none newline
left none phantom {a over b} + c right )
phantom
statement ensures that the last bracket is the correct size.
Be sure to put spaces (gaps) between elements when entering them directly in the Commands window.
This ensures that the correct structure is recognised.
indices and exponents
as well as
scaling
helps you structure formulae effectively.
For more information about brackets, see
Brackets and Grouping
.