# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(no version information, might be only in CVS)
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
What this nonsense is about is, every edge segment borders at most two fills.
When rasterizing the object, it 's pretty handy to know what those fills are ahead of time, so the swf format requires these to be specified.
swfshape - setleftfill() sets the fill on the left side of the edge - that is, on the interior if you're defining the outline of the shape in a counter-clockwise fashion.
The fill object is an SWFFill object returned from one of the addFill functions above.
This seems to be reversed when you 're defining a shape in a morph, though.
If your browser crashes, just try setting the fill on the other side.
Shortcut for swfshape - setleftfill( $s - addfill($r, $g, $b [, $a]));.
See also swfshape - setrightfill().
Prev
Home
Next
SWFShape - movePenTo
Up
SWFShape - setLine