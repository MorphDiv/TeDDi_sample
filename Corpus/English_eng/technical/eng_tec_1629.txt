# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/en_GB.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Function Statement [Run-time]
/text/sbasic/shared/03090406.xhp
Sun Microsystems, Inc.
converted from old format - fpe
Function statement
Function Statement [Run-time]
Defines a subroutine that can be used as an expression to determine a return type.
Syntax:
see Parameter
Parameters:
Syntax:
Function Name[(VarName1 [As Type][, VarName2 [As Type][,...]]]) [As Type]
statement block
[Exit Function]
statement block
End Function
Parameter
Name:
Name of the subroutine to contain the value returned by the function.
VarName:
Parameter to be passed to the subroutine.
Type:
Type-declaration keyword.
Example:
Sub ExampleExit
Dim sReturn As String
Dim sListArray(10) as String
Dim siStep as Single
For siStep = 0 to 10 REM Fill array with test data
sListArray(siStep) = chr$(siStep + 65)
msgbox sListArray(siStep)
next siStep
sReturn = LinSearch(sListArray(), &quot; B &quot; )
Print sReturn
end sub
Function LinSearch( sList(), sItem As String ) as integer
dim iCount as Integer
REM Linsearch searches a TextArray:sList() for a TextEntry:
REM Return value is the index of the entry or 0 (Null)
for iCount=1 to Ubound( sList() )
if sList( iCount ) = sItem then
exit for REM sItem found
end if
next iCount
if iCount = Ubound( sList() ) then iCount = 0
LinSearch = iCount
end function