# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
These functions allow you to work with arbitrary-length integers using the GNU MP library.
These functions have been added in PHP 4.0.4.
Note:
Most GMP functions accept GMP number arguments, defined as resource below.
However, most of these functions will also accept numeric and string arguments, given that it is possible to convert the latter to a number.
Also, if there is a faster function that can operate on integer arguments, it would be used instead of the slower function when the supplied arguments are integers.
This is done transparently, so the bottom line is that you can use integers in every function that expects GMP number.
See also the gmp_init() function.
Warning
If you want to explicitly specify a large integer, specify it as a string.
If you don 't do that, PHP will interpret the integer-literal first, possibly resulting in loss of precision, even before GMP comes into play.
Note:
This extension is not available on Windows platforms.
You can download the GMP library from http: / /www.swox.com / gmp /.
This site also has the GMP manual available.
You will need GMP version 2 or better to use these functions.
Some functions may require more recent version of the GMP library.
In order to have these functions available, you must compile PHP with GMP support by using the --with-gmp option.
This extension has no configuration directives defined in php.ini.
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Example 1.
Factorial function using GMP
?php function fact ($x) {if ($x = 1) return 1; else return gmp_mul ($x, fact ($x-1));} print gmp_strval (fact (1000)). "\n";?
This will calculate factorial of 1000 (pretty big number) very fast.
More mathmatical functions can be found in the sections BCMath Arbitrary Precision Mathematics Functions and Mathematical Functions.
Prev
Home
Next
textdomain
Up
gmp_abs