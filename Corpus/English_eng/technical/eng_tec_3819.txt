# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 4 = 4.0.4)
mhash_keygen_s2k() generates a key that is bytes long, from a user given password.
This is the Salted S2K algorithm as specified in the OpenPGP document (RFC 2440).
That algorithm will use the specified hash algorithm to create the key.
The salt must be different and random enough for every key you generate in order to create different keys.
That salt must be known when you check the keys, thus it is a good idea to append the key to it.
Salt has a fixed length of 8 bytes and will be padded with zeros if you supply less bytes.
Keep in mind that user supplied passwords are not really suitable to be used as keys in cryptographic algorithms, since users normally choose keys they can write on keyboard.
These passwords use only 6 to 7 bits per character (or less).
It is highly recommended to use some kind of tranformation (like this function) to the user supplied key.
Prev
Home
Next
mhash_get_hash_name
Up
mhash