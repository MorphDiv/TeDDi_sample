# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3 = 3.0.9, PHP 4)
Note:
Parameter flags was added in PHP 4 Beta 3.
Returns an array containing substrings of subject split along boundaries matched by pattern.
If limit is specified, then only substrings up to limit are returned, and if limit is -1, it actually means "no limit", which is useful for specifying the flags.
flags can be any combination of the following flags (combined with bitwise | operator):
If this flag is set, only non-empty pieces will be returned by preg_split().
If this flag is set, parenthesized expression in the delimiter pattern will be captured and returned as well.
This flag was added for 4.0.5.
If this flag is set, for every occuring match the appendant string offset will also be returned.
Note that this changes the return value in an array where every element is an array consisting of the matched string at offset 0 and it 's string offset into subject at offset 1.
This flag is available since PHP 4.3.0.
Example 1. preg_split() Example 1. preg_split() example:
Get the parts of a search string.
/ / split the phrase by any number of commas or space characters, / / which include "", \r, , \n and \f $keywords = preg_split (" / [\s ,]+ / ", "hypertext language, programming");
Example 2.
Splitting a string into component characters.
$str = 'string'; $chars = preg_split(' / /', $str, -1, PREG_SPLIT_NO_EMPTY); print_r($chars);
Example 3.
Splitting a string into matches and their offsets.
$str = 'hypertext language programming'; $chars = preg_split(' / /', $str, -1, PREG_SPLIT_OFFSET_CAPTURE); print_r($chars);
will yield
Array ([0] = Array ([0] = hypertext [1] = 0) [1] = Array ([0] = language [1] = 10) [2] = Array ([0] = programming [1] = 19))
See also spliti(), split(), implode(), preg_match(), preg_match_all(), and preg_replace().
Prev
Home
Next
preg_replace
Up
qtdom functions