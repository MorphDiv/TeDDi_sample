# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Chapter 15.
References Explained
Next
PHP references allow you to make two variables to refer to the same content.
Meaning, when you do:
$a = $b
The same syntax can be used with functions, that return references, and with new operator (in PHP 4.0.4 and later):
$bar = new fooclass(); $foo = find_var ($bar);
Note:
Not using the operator causes a copy of the object to be made.
If you use $this in the class it will operate on the current instance of the class.
The assignment without will copy the instance (i.e. the object) and $this will operate on the copy, which is not always what is desired.
Usually you want to have a single instance to work with, due to performance and memory consumption issues.
While you can use the @ operator to mute any errors in the constructor when using it as @new, this does not work when using the new While you can use the @ operator to mute any errors in the constructor when using it as @new, this does not work when using the new statement.
This is a limitation of the Zend Engine and will therefore result in a parser error.
The second thing references do is to pass variables by-reference.
This is done by making a local variable in a function and a variable in the calling scope reference to the same content.
Example:
function foo ($var) {$var++;} $a=5; foo ($a);
The third thing reference can do is return by reference.
Prev
Home
Next
References Explained
Up
What References Are Not