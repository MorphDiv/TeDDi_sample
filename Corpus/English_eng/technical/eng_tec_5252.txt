# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Chapter 11.
Operators
Next
The basic assignment operator is "=".
Your first inclination might be to think of this as "equal to".
Don 't.
It really means that the the left operand gets set to the value of the expression on the rights (that is, "gets set to").
The value of an assignment expression is the value assigned.
That is, the value of "$a = 3" is 3.
This allows you to do some tricky things:
$a = ($b = 4) + 5; / / $a is equal to 9 now, and $b has been set to 4.
In addition to the basic assignment operator, there are "combined operators" for all of the binary arithmetic and string operators that allow you to use a value in an expression and then set its value to the result of that expression.
For example:
$a = 3; $a += 5; / / sets $a to 8, as if we had said: $a = $a + 5; $b = "Hello "; $b .= "There !"; / / sets $b to "Hello There !", just like $b = $b. "There !";
Note that the assignment copies the original variable to the new one (assignment by value), so changes to one will not affect the other.
This may also have relevance if you need to copy something like a large array inside a tight loop.
PHP 4 supports assignment by reference, using the $var = $othervar; syntax, but this is not possible in PHP 3. 'Assignment by reference 'means that both variables end up pointing at the same data, and nothing is copied anywhere.
To learn more about references, please read References explained.
Prev
Home
Next
Arithmetic Operators
Up
Bitwise Operators