# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3, PHP 4)
Attempts to change the mode of the file specified by filename to that given in mode.
Note that mode is not automatically assumed to be an octal value, so strings (such as "g+w") will not work properly.
To ensure the expected operation, you need to prefix mode with a zero (0):
chmod ("/ somedir / somefile", 755); / / decimal; probably incorrect chmod (" / somedir / somefile", "u+rwx,go+rx"); / / string; incorrect chmod (" / somedir / somefile", 0755); / / octal; correct value of mode
The mode parameter consists of three octal number components specifying access restrictions for the owner, the user group in which the owner is in, and to everybody else in this order.
One component can be computed by adding up the needed permissions for that target user base.
Number 1 means that you grant execute rights, number 2 means that you make the file writeable, number 4 means that you make the file readable.
Add up these numbers to specify needed rights.
You can also read more about modes on UNIX systems with 'man 1 chmod' and'man 2 chmod '.
/ / Read and write for owner, nothing for everybody else chmod ("/ somedir / somefile", 0600); / / Read and write for owner, read for everybody else chmod (" / somedir / somefile", 0644); / / Everything for owner, read and execute for others chmod (" / somedir / somefile", 0755); / / Everything for owner, read and execute for owner's group chmod (" / somedir / somefile", 0750);
Note:
The current user is the user under which PHP runs.
It is probably not the same user you use for normal shell or FTP access.
Returns TRUE on success or FALSE on failure.
See also chown() and chgrp().
Prev
Home
Next
chgrp
Up
chown