# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3, PHP 4)
Outputs arg.
Returns TRUE on success or FALSE on failure.
print() is not actually a real function (it is a language construct) so you are not required to use parentheses with it.
Example 1. print() examples
?php print( "Hello World"); print "print() also works without parentheses ."; print "This spans multiple lines.
The newlines will be output as well"; print "This spans\nmultiple lines.
The newlines will be\noutput as well ."; print "escaping characters is done \"Like this\" ."; / / You can use variables inside of an print statement $foo = "foobar"; $bar = "barbaz"; print "foo is $foo"; / / foo is foobar / / Using single quotes will print the variable name, not the value print'foo is $foo'; / / foo is $foo / / If you are not using any other characters, you can just print variables print $foo; / / foobar print END This uses the "here document "syntax to output multiple lines with $variable interpolation.
Note that the here document terminator must appear on a line with just a semicolon no extra whitespace!
END;?
See also echo(), printf(), and flush().
Prev
Home
Next
parse_str
Up
printf