# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3 = 3.0.8, PHP 4)
Similar to fgets() except that fgetcsv() parses the line it reads for fields in CSV format and returns an array containing the fields read.
The optional third delimiter parameter defaults as a comma.
The optional enclosure cannot be null, and is limited to one character.
If enclosure is more than one character, only the first character is used.
Note:
The enclosure parameter was added in PHP 4.3.0.
The handle parameter must be a valid file pointer to a file successfully opened by fopen(), popen(), or fsockopen().
The length parameter must be greater than the longest line to be found in the CSV file (allowing for trailing line-end characters).
fgetcsv() returns FALSE on error, including end of file.
Note:
A blank line in a CSV file will be returned as an array comprising a single null field, and will not be treated as an error.
Example 1.
Read and print the entire contents of a CSV file
?php $row = 1; $handle = fopen ("test.csv" ,"r"); while ($data = fgetcsv ($handle, 1000, ",")) {$num = count ($data); print" p $num fields in line $row: br \n"; $row++; for ($c=0; $c $num; $c++) {print $data[$c]. "br \n";}} fclose ($handle);?
See also explode(), file(), and pack()
Prev
Home
Next
fgetc
Up
fgets