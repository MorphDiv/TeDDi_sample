# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
A function may be defined using syntax such as the following:
function foo ($arg_1, $arg_2,..., $arg_n) {echo "Example function.\n"; return $retval;}
Any valid PHP code may appear inside a function, even other functions and class definitions.
In PHP 3, functions must be defined before they are referenced.
No such requirement exists in PHP 4.
Except when a function is conditionally defined such as shown in the two examples below.
When a function is defined in a conditional manner such as the two examples shown.
Its definition must be processed prior to being called.
Example 13-1.
Conditional functions
?php $makefoo = true; / * We can't call foo() from here since it doesn't exist yet, but we can call bar() * / bar(); if ($makefoo) {function foo () {echo "I don't exist until program execution reaches me.\n";}} / * Now we can safely call foo() since $makefoo evaluated to true * / if ($makefoo) foo(); function bar() {{echo "I exist immediately upon program start.\n";}?
Example 13-2.
Functions within functions
?php function foo() {function bar() {echo "I don't exist until foo() is called.\n";}} / * We can't call bar() yet since it doesn't exist. * / foo(); / * Now we can call bar(), foo()'s processesing has made it accessable. * / bar();?
PHP does not support function overloading, nor is it possible to undefine or redefine previously-declared functions.
PHP 3 does not support variable numbers of arguments to functions, although default arguments are supported (see Default argument values for more information).
PHP 4 supports both: see Variable-length argument lists and the function references for func_num_args(), func_get_arg(), and func_get_args() for more information.
Prev
Home
Next
include_once()
Up
Function arguments