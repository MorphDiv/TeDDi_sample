# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/en_GB.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Brackets and Grouping
/text/smath/01/03091100.xhp
brackets and grouping in $[officename] Math
grouping and brackets in $[officename] Math
Brackets and Grouping
Note: the quotation marks in the examples are used to emphasise text and do not belong to the content of the formulae and commands.
Commands
window, note that spaces are often required for correct structure.
Braces &quot; {} &quot; are used to group expressions together to form one new expression.
For example, &quot; sqrt {x * y} &quot; is the square root of the entire product x*y, while &quot; sqrt x * y &quot; is the square root of x multiplied by y.
Braces do not require an extra space.
Set brackets were previously inserted in the Formula Elements window or directly in the Commands window as &quot; left lbrace < ? > right rbrace &quot; .
Now, a left and a right set bracket can also be inserted using &quot; lbrace &quot; and &quot; rbrace &quot; , with or without wildcards.
There are a total of eight (8) different types of brackets available.
The &quot; ceil &quot; and &quot; floor &quot; brackets are often used for rounding up or down the argument to the next integer: &quot; lceil -3.7 rceil = -3 &quot; or &quot; lfloor -3.7 rfloor = -4 &quot; .
Operator brackets, also known as Bra-kets (angle brackets with a vertical line in between), are common in Physics notation: &quot; langle a mline b rangle &quot; or &quot; langle a mline b mline c over d mline e rangle. &quot; The height and positioning of the vertical lines always corresponds exactly to the enclosing brackets.
All brackets may only be used in pairs.
The brackets have some common characteristics:
All types of brackets have the same grouping function as described for &quot; {} &quot; brackets.
All types of brackets, including those that are visible, permit empty group definition.
The enclosed expression may therefore be empty.
Brackets do not adjust their size to the enclosed expression.
For example, if you want &quot; ( a over b ) &quot; with a bracket size adjusted to a and b you must insert &quot; left &quot; and &quot; right &quot; .
Entering &quot; left(a over b right) &quot; produces appropriate sizing.
If, however, the brackets themselves are part of the expression whose size is changed, they are included the size change: &quot; size 3(a over b) &quot; and &quot; size 12(a over b) &quot; .
The sizing of the bracket-to-expression ratio does not change in any way.
Since &quot; left &quot; and &quot; right &quot; ensure unique assignment of the brackets, every single bracket can be used as an argument for these two commands, even placing right brackets on the left side, or left brackets on the right.
Instead of a bracket you can use the &quot; none &quot; qualifier, which means that there is no bracket shown and that there is no space reserved for a bracket.
Using this, you can create the following expressions:
left lbrace x right none
left [ x right )
left ] x right [
left rangle x right lfloor
The same rules apply to &quot; left &quot; and &quot; right &quot; as to the other brackets: they also work as group builders and may enclose empty expressions.
The combination of mismatched brackets, single brackets and repositioned left and right brackets occurs often in mathematical formulae.
The following is a formula that will create an error when typed:
[2, 3) - right open interval
Using &quot; left &quot; and &quot; right &quot; makes the above expression valid in $[officename] Math: &quot; left [2, 3 right ) &quot; .
However, the brackets do not have any fixed size because they adjust to the argument.
Setting a single bracket is a bit cumbersome.
Therefore, there you can display single brackets with a fixed size by placing a &quot; \ &quot; (backslash) in front of normal brackets.
These brackets then act like any other symbol and no longer have the special functionality of brackets; that is they do not work as group builders and their orientation corresponds to that of other symbols.
See &quot; size *2 \langle x \rangle &quot; and &quot; size *2 langle x rangle &quot; .
The complete overview is as follows
\{ or \lbrace, \} or \rbrace
\(, \)
\[, \]
\langle, \rangle
\lceil, \rceil
\lfloor, \rfloor
\lline, \rline
\ldline, \rdline
$[officename] Math
without any problems: \[2 &quot; , &quot; 3\) or &quot; \]2 &quot; , &quot; 3\[ (Attention:
These quotation marks are part of the entry.)
Shift+2
and not with typographical quotation marks.
Generally, punctuation marks (like the comma in this case) are set as text.
Although it is also possible to type &quot; \[2,~3\) &quot; the above option is preferable.
In the previous example, &quot; fixed size &quot; always describes a bracket size dependent on the font size used.
Nesting groups within each other is relatively problem-free.
In the formula hat &quot; {a + b} &quot; the &quot; hat &quot; is displayed simply over the centre of &quot; {a + b} &quot; .
Also, &quot; colour red lceil a rceil &quot; and &quot; grave hat langle x * y rangle &quot; work as expected.
The result of the latter can be compared to &quot; grave {hat langle x * y rangle}. &quot; These attributes do not compete, but rather can be combined.
This differs slightly for competing or mutually influencing attributes.
This is often the case with font attributes.
For example, which colour does the b have in &quot; colour yellow colour red (a + colour green b) &quot; , or which size does it have in &quot; size *4 (a + size /2 b) &quot; ?
Given a base size of 12, does it have the size 48, 6 or even 24 (which could be seen as a combination)?
The following are basic resolution rules, which will be followed consistently in the future.
In general, the rules apply to all group operations.
This only has a visible effect on the font attributes, like &quot; bold &quot; , &quot; ital &quot; , &quot; phantom &quot; , &quot; size &quot; , &quot; colour &quot; and &quot; font &quot; :
Group operations in sequence are treated as if every single operation is enclosed by braces (curly brackets).
They are nested, and in every level there can be no more than one operation.
Here is an example of a formula with many group operations: &quot; size 12 colour red font sans size -5 (a + size 8 b) &quot; like &quot; {size 12{colour red{font sans{size -5 (a + {size 8 b})}}}} &quot; .
This example formula is then interpreted from left to right.
The operations only affect its corresponding group (or expression).
Operations further to the right &quot; replace &quot; or &quot; combine themselves with &quot; their predecessors.
A group operation does not have any effect on higher-level operations but rather affects only lower-level groups and expressions, including their brackets and super-/subscripts.
For example, &quot; a + size *2 (b * size -8 c_1)^2 &quot;
&quot; colour ... &quot; and &quot; font ... &quot; as well as &quot; size n &quot; (n is a decimal) replace any preceding operations of the same type
for &quot; size +n &quot; , &quot; size -n &quot; , &quot; size *n &quot; , and &quot; size /n &quot; the effects of the operations are combined,
&quot; size *2 size -5 a &quot; would be double the starting size minus 5
&quot; font sans ( a + font serif b) &quot;
&quot; size *2 ( a + size /2 b ) &quot;
UFI: no more StarSymbol font.
Removed the following paras
id= &quot; par_id3151327 &quot; l10n= &quot; U &quot; oldref= &quot; 45 &quot; For the StarSymbol Unicode font there are 2 exceptions to these rules: id= &quot; par_id3148998 &quot; l10n= &quot; U &quot; oldref= &quot; 46 &quot; It ignores &quot; font &quot; commands.
Otherwise, there would often be different characters from the ones desired, for example, &quot; font sans (a oplus b) &quot; would then neither have brackets nor an &quot; oplus &quot; . id= &quot; par_id3143281 &quot; l10n= &quot; U &quot; oldref= &quot; 47 &quot; The &quot; ital &quot; command is ignored, for example, &quot; ital (a + b) &quot; .
This happens because italicized mathematical symbols are uncommon, even in combination with text in italics.
To change the size of a formula, use &quot; size + &quot; or -,*,/.
Do not use &quot; size n &quot; .
These can easily be used in any context.
This enables you to copy to other areas by using Copy and Paste, and the result remains the same.
Furthermore, such expressions survive a change of base size in the menu better than when using &quot; size n &quot; .
If you use only &quot; size * &quot; and &quot; size / &quot; (for example, &quot; size *1.24 a or size /0.86 a &quot; ) the proportions remain intact.
Examples (with a base size of 12 and 50% for indices):
Exactly identical proportions with &quot; size 18 a_n &quot; and &quot; size *1.5 a_n &quot; .
This differs in different contexts: &quot; x^{size 18 a_n} &quot; and &quot; x^{size *1.5 a_n} &quot;
Examples with size +n for a comparison.
They look identical:
a_{size 8 n}
a_{size +2 n}
a_{size *1.333 n}
The following examples, however, do not look identical:
x^{a_{size 8 n}}
x^{a_{size +2 n}}
x^{a_{size *1.333 n}}
Note that all n here have different sizes.
The size 1.333 results from 8/6, the desired size divided by the default index size 6.
(Index size 50% with a base size of 12)