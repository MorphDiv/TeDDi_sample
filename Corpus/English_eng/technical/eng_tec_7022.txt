# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	GNOME
# source:	https://object.pouta.csc.fi/OPUS-GNOME/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/GNOME.php
# copyright_long:	http://opus.nlpl.eu/GNOME.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

@@image: 'images/using/preparing_for_web1.png'; md5=11d5c27af559069d9b21880736e85160
@@image: 'images/using/preparing_for_web2.png'; md5=bdb201b090a081a6d325c249a5086d29
@@image: 'images/using/preparing_for_web-alphatransparency.png'; md5=78b0d6bf6995eeaec2b2d0e41878dd05
Preparing your Images for the Web
Web
Images for the web
One of the most common uses for
Images with an Optimal Size/Quality Ratio
An optimal image for the web depends upon the image type and the file format. Use
First, open the image as usual. I have opened our Wilber as an example image.
The Wilber image opened in RGBA mode
The image is now in RGB mode, with an additional
A photograph rarely has an alpha channel, so the image will open in RGB mode rather than RGBA mode; and you won't have to remove the alpha channel.
If the image has a soft transition into the transparent areas, you should not remove the alpha channel, since the information used for the transition is not be saved in the file. To export an image with transparent areas that do not have a soft transition, (similar to
After you have flattened the image,
You can export your image in the PNG format with the default settings. Always using maximum compression when creating the image. Maximum compression has no affect on image quality or the time required to display the image, but it does take longer to export. A
Reducing the File Size Even More
If you want to reduce the size of your image a bit more, you could convert your image to Indexed mode. That means that all of the colors will be reduced to only 256 values. Do not convert images with smooth color transitions or gradients to indexed mode, because the original smooth gradients are typically converted into a series of bands. Indexed mode is not recommended for photographs because after the conversion, they typically look coarse and grainy.
The indexed image
An indexed image can look a bit grainy. The left image is Wilber in its original size, the right image is zoomed in by 300 percent.
Use the command described in
After you convert an image to indexed mode, you are once again able to
Saving Images with Transparency
Transparency
Exporting images with transparency
There are two different approaches used by graphic file formats for supporting transparent image areas: simple binary transparency and alpha transparency. Simple binary transparency is supported in the
The GIF format is rarely used because PNG supports all the features of GIF with additional features (e.g., alpha transparency). Nevertheless, GIF is still used for animations.
Creating an Image with Transparent Areas (Alpha Transparency)
First of all, we will use the same image as in the previous tutorials, Wilber the GIMP mascot.
To export an image with alpha transparency, you must have an alpha channel. To check if the image has an alpha channel, go to the
The original XCF file contains background layers that you can remove.
After you're done with your image, you can
The Wilber image with transparency
Mid-Tone Checks in the background layer represent the transparent region of the exported image while you are working on it in
@@image: 'images/using/stretch-shrink-cursor.png'; md5=edadb8b7d447b4f283c904702df0f125
@@image: 'images/using/select-to-brush.png'; md5=ee2f4dd55ec8221baacb5184f952efdc
@@image: 'images/using/create-brush1.png'; md5=04bdf0569fe27c94aac81cedd2fe7a1c
@@image: 'images/using/create-brush2.png'; md5=937190f69002ba6542c178388fdd171a
@@image: 'images/using/create-brush3.png'; md5=aac61f023cbd31e279920995eadbbbdf
Varying brush size
Brushes
From
How to vary the height of a brush
You can get the brush size varying in three ways:
Using the
The Scale slider
By programming the mouse wheel:
In the main window of GIMP, click on
In the left column of the new window, select
You can see
In the column
Then, you see a new window:
In the left column
Click the
You can see the window
Drop-down the
In the left column
Now, in front of
Close the window.
With the same method, program
Don't forget to click the
After these somewhat long explanations, you can use your mouse wheel to vary size brush. For example, choose the pencil tool with the
You can program the
The method is similar to that of the mouse wheel. The only differences are:
In the column
In the column
Then, use the two keys (Up arrow and Down arrow) and the result is the same as you got with the mouse wheel.
Creating a brush quickly
Two methods to create a new brush easily:
First, the
Selection becomes a brush after copying
The second method is more elaborate.
Do
Zoom on this new image to enlarge it and draw on it with a black pencil.
Save it with a
In the Brushes dialog window, click on the button
And your marvellous brush appears right in the middle of the other brushes. You can use it immediately, without starting GIMP again.
Steps to create a brush
Draw image, save as brush
Refresh brushes
Use the brush
@@image: 'images/using/text-toolbar.png'; md5=833ae1a50dd02ad22fc20a9cb0c6c22d
Text Tool Box
Text
Tool Box
You get this box, which overlays canvas, as soon as you click on canvas with the Text Tool. It allows you to edit text directly on canvas.
Apart from the usual text formatting features like font family, style and size selectors you get numeric control over baseline offset and kerning, as well as the ability to change text color for a selection.
Help pop-ups are self-explanatory.
You can also use
These features work on selected text. You get weird effects if no text is selected.
Text Tool Box Context menu
TODO
@@image: 'images/using/straightline1.png'; md5=f55de3d8bd9271198a5c97d8f5667bca
@@image: 'images/using/straightline2.png'; md5=d16513799d6cfe0a53eb1d361bdc51de
@@image: 'images/using/straightline3.png'; md5=74cdc5107704abdf95edce13e83fb0af
@@image: 'images/using/straightline4.png'; md5=b1ebe0b7121ad37ea477f27b88cfcf1b
@@image: 'images/using/basicshape1.png'; md5=eb353efb94c6a9af6f4deb48e541fa47
@@image: 'images/using/basicshape2.png'; md5=4d938c41bc323718adedc209f5c6649c
Drawing Simple Objects
Line
Drawing a straight line
Tutorials
Rectangle
Drawing a rectangle
In this section, you will learn how to create simple objects in
Drawing a Straight Line
Let's begin by painting a straight line. The easiest way to create a straight line is by using your favorite
A new image
The dialog shows a new image, filled with a white background.
Create a
The start of the straight line
The dialog shows a new image, with the first dot which indicates the start of the straight line. The dot has a black foreground color.
Create a starting point by clicking on the
The helpline
The screenshot shows the helpline, which indicates how the finished line will look.
Now, hold down the
The line after the second click
The line created appears in the image window after drawing the second point (or end point), while the
If you're satisfied with the direction and length of the line, click the left mouse button again to finish the line. The
Creating a Basic Shape
Try out e.g.

Creating a rectangular selection
The screenshot shows how a rectangular selection is created. Press and hold the left mouse button while you move the mouse in the direction of the red arrow.
Basic shapes like rectangles or ellipses, can be created using the
Rectangular selection filled with foreground color
The screenshot shows a rectangular selection filled with the foreground color.
After creating the selection, you can either create a filled or an outlined shape with the foreground color of your choice. If you go for the first option, choose a
@@image: 'images/dialogs/dialogs-shortcuts.png'; md5=62a4f9a4fb99b6b96d26c0882b192bff
Creating Shortcuts to Menu Functions
Shortcuts
Customize
Many functions which are accessible via the image menu have a default keyboard shortcut. You may want to create a new shortcut for a command that you use a lot and doesn't have one or, more rarely, edit an existing shortcut. There are two methods for doing this.
Using dynamic keyboard shortcuts
First, you have to activate this capability by checking the
While you're doing that, also check the
To create a keyboard shortcut, simply place the mouse pointer on a command in the menu: it will then be highlighted. Be careful that the mouse pointer doesn't move and type a sequence of three keys, keeping the keys pressed. You will see this sequence appear on the right of the command.
It is best to use the
Configure Keyboard Shortcuts
Using the Keyboard Shortcut Editor
You get to this Editor by clicking on
As shown in this dialog, you can select the command you want to create a shortcut for, in the
This shortcut editor also allows you to
Custom Keyboard shortcuts are stored in one of Gimp's hidden directory (
How to Set Your Tile Cache
Tile cache
During the data processing and manipulation of pictures, GIMP becomes in the need of much main memory. The more is available the better is.
A low value for tile cache means that GIMP sends data to the disk very quickly, not making real use of the available RAM, and making the disks work for no real reason. Too high a value for tile cache, and other applications start to have less system resources, forcing them to use swap space, which also makes the disks work too hard; some of them may even terminate or start to malfunction due lack of RAM.
How do you choose a number for the Tile Cache size? Here are some tips to help you decide what value to use, as well as a few tricks:
The easiest method is to just forget about this and hope the default works. This was a usable method when computers had little RAM, and most people just tried to make small images with GIMP while running one or two other applications at the same time. If you want something easy and only use GIMP to make screenshots and logos, this is probably the best solution.
If you have a modern computer with plenty of memory–say, 512 MB or more–setting the Tile Cache to half of your RAM will probably give good performance for GIMP in most situations without depriving other applications. Probably even 3/4 of your RAM would be fine.
Ask someone to do it for you, which in the case of a computer serving multiple users at the same time can be a good idea: that way the administrator and other users do not get mad at you for abusing the machine, nor do you get a badly underperforming GIMP. If it is your machine and only serves a single user at a given time, this could mean money, or drinks, as price for the service.
Start changing the value a bit each time and check that it goes faster and faster with each increase, but the system does not complain about lack of memory. Be forewarned that sometimes lack of memory shows up suddenly with some applications being killed to make space for the others.
Do some simple math and calculate a viable value. Maybe you will have to tune it later, but maybe you have to tune it anyway with the other previous methods. At least you know what is happening and can get the best from your computer.
Let's suppose you prefer the last option, and want to get a good value to start with. First, you need to get some data about your computer. This data is the amount of RAM installed in your system, the operating system's swap space available, and a general idea about the speed of the disks that store the operating system's swap and the directory used for GIMP's swap. You do not need to do disk tests, nor check the RPM of the disks, the thing is to see which one seems clearly faster or slower, or whether all are similar. You can change GIMP's swap directory in the Folders page of the Preferences dialog.
The next thing to do is to see how much resources you require for other apps you want to run at the same time than GIMP. So start all your tools and do some work with them, except GIMP of course, and check the usage. You can use applications like free or top, depending in what OS and what environment you use. The numbers you want is the memory left, including file cache. Modern Unix keeps a very small area free, in order to be able to keep large file and buffer caches. Linux's
Now time for decisions and a bit of simple math. Basically the concept is to decide if you want to base all Tile Cache in RAM, or RAM plus operating system swap:
Do you change applications a lot? Or keep working in GIMP for a long time? If you spend a lot of time in GIMP, you can consider free RAM plus free swap as available; if not, you need to go to the following steps. (If you're feeling unsure about it, check the following steps.) If you are sure you switch apps every few minutes, only count the free RAM and just go to the final decision; no more things to check.
Does the operating system swap live in the same physical disk as GIMP swap? If so, add RAM and swap. Otherwise go to the next step.
Is the disk that holds the OS swap faster or the same speed as the disk that holds the GIMP swap? If slower, take only the free RAM; if faster or similar, add free RAM and swap.
You now have a number, be it just the free RAM or the free RAM plus the free OS swap. Reduce it a bit, to be on the safe side, and that is the Tile Cache you could use as a good start.
As you can see, all is about checking the free resources, and decide if the OS swap is worth using or will cause more problems than help.
There are some reasons you want to adjust this value, though. The basic one is changes in your computer usage pattern, or changing hardware. That could mean your assumptions about how you use your computer, or the speed of it, are no longer valid. That would require a reevaluation of the previous steps, which can drive you to a similar value or a completely new value.
Another reason to change the value is because it seems that GIMP runs too slowly, while changing to other applications is fast: this means that GIMP could use more memory without impairing the other applications. On the other hand, if you get complaints from other applications about not having enough memory, then it may benefit you to not let GIMP hog so much of it.
If you decided to use only RAM and GIMP runs slowly, you could try increasing the value a bit, but never to use also all the free swap. If the case is the contrary, using both RAM and swap, and you have problems about lack of resources, then you should decrease the amount of RAM available to GIMP.
Another trick is to put the Swap Dir on a very fast disk, or on a different disk than the one where most of your files reside. Spreading the operating system swap file over multiple disks is also a good way to speed things up, in general. And of course, you might have to buy more RAM or stop using lots of programs at the same time: you can not expect to edit a poster on a computer with 16MB and be fast.
You can also check what memory requirements your images have. The larger the images, and the number of undoes, the more resources you need. This is another way to choose a number, but it is only good if you always work with the same kind of images, and thus the real requirements do not vary. It is also helpful to know if you will require more RAM and/or disk space.
@@image: 'images/using/select-move-1.png'; md5=59f92c5d042d8a9a664edc3d2f15f974
@@image: 'images/using/select-move-2.png'; md5=8128e7f4c88a2b28c75c85cffff221ba
@@image: 'images/using/select-move-3.png'; md5=8e2856e4acb1cdf711f696040a45b008
@@image: 'images/using/rect+lasso-ex.png'; md5=10d41167eeb361f36cac967e39a9d443
Creating and Using Selections
Selections
Using
Moving a Selection
Selection
Move selection
Rectangular and elliptical selections have two modes. The default mode has handles on the selection. If you click the selection or press the
Moving rectangular and elliptical selections
If you click-and drag a selection with handles, you move the selection outline, and you don't move the contents of rectangular or elliptic selections.
Select the
Moving selection outline
Most systems support moving the selection using the arrow keys. The precise behavior is system dependent. If the arrow keys do not cause the selection to move, try hovering the mouse cursor over the selection first. Press and hold the
If you click-and-drag the selection without handles, you create a new selection! To move the selection contents, you have to
hold down
Moving a selection and its content, emptying the original place
hold down
Moving a selection and its content without emptying the original place
On some systems, you must push
Moving the other selections
The other selections (Lasso, Magic wand, By Color) have no handle. Click-and dragging them doesn't move them. To move their contents, as with rectangular and elliptical selections, you have to hold down
If you use keyboard arrow keys instead of click-and-drag, you move the outline.
Other method
You can also use a more roundabout method to move a selection. Make it floating. Then you can move its content, emptying the origin, by click-and-dragging or keyboard arrow keys. To move without emptying, use copy-paste.
Adding or subtracting selections
Add / Subtract selections
Replace is the most used selection mode. In replace mode, a selection replaces any existing selection.
Add mode, causes new selections to be added to any existing selection. Press and hold the
Subtract mode, causes new selections to be removed from any existing selection. Press and hold the
Intersect mode, causes areas in both the new and existing selection to become the new selection. Press and hold both the
Tools have options that you can configure. Each selection tool allows you to set the selection mode. The following selection modes are supported:
Enlarging a rectangular selection with the Lasso
The figure shows an existing rectangular selection. Select the Lasso. While pressing the
To correct selection defects precisely, use the
@@image: 'images/using/script-fu-console.png'; md5=329cadfd55a68e60cb6936529869a85e
@@image: 'images/using/script-fu-menu.png'; md5=29cddb5794c7d4fb988e6fa9b0141f52
@@image: 'images/using/script-fu-screen.png'; md5=67ea87d7bba780963438781008e4ec49
A Script-Fu Tutorial
Script-Fu
Tutorial
In this training course, we'll introduce you to the fundamentals of Scheme necessary to use Script-Fu, and then build a handy script that you can add to your toolbox of scripts. The script prompts the user for some text, then creates a new image sized perfectly to the text. We will then enhance the script to allow for a buffer of space around the text. We will conclude with a few suggestions for ways to ramp up your knowledge of Script-Fu.
This section as adapted from a tutorial written for the
Getting Acquainted With Scheme
Let's Start Scheme'ing
The first thing to learn is that:
Every statement in Scheme is surrounded by parentheses ().
The second thing you need to know is that:
The function name/operator is always the first item in the parentheses, and the rest of the items are parameters to the function.
However, not everything enclosed in parentheses is a function &mdash; they can also be items in a list &mdash; but we'll get to that later. This notation is referred to as prefix notation, because the function prefixes everything else. If you're familiar with postfix notation, or own a calculator that uses Reverse Polish Notation (such as most HP calculators), you should have no problem adapting to formulating expressions in Scheme.
The third thing to understand is that:
Mathematical operators are also considered functions, and thus are listed first when writing mathematical expressions.
This follows logically from the prefix notation that we just mentioned.
Examples Of Prefix, Infix, And Postfix Notations
Here are some quick examples illustrating the differences between
Prefix notation:
Infix notation:
Postfix notation:
Practicing In Scheme
Now, let's practice what we have just learned. Start up
The Script-Fu Console Window
At the bottom of this window is an entry-field ought to be entitled
(+ 3 5)
Typing this in and hitting
Use Script-Fu Console.
Now, what if we wanted to add more than one number? The
(+ 3 5 6)
This also yields the expected answer of 14.
So far, so good &mdash; we type in a Scheme statement and it's executed immediately in the Script-Fu Console window. Now for a word of cautionhellip;
Watch Out For Extra Parentheses
If you're like me, you're used to being able to use extra parentheses whenever you want to &mdash; like when you're typing a complex mathematical equation and you want to separate the parts by parentheses to make it clearer when you read it. In Scheme, you have to be careful and not insert these extra parentheses incorrectly. For example, say we wanted to add 3 to the result of adding 5 and 6 together:
3 + (5 + 6) + 7 = ?
Knowing that the + operator can take a list of numbers to add, you might be tempted to convert the above to the following:
(+ 3 (5 6) 7)
However, this is incorrect &mdash; remember, every statement in Scheme starts and ends with parens, so the Scheme interpreter will think that you're trying to call a function named
The correct way to write the above statement would be:
(+ 3 (+ 5 6) 7)
Make Sure You Have The Proper Spacing, Too
If you are familiar with other programming languages, like C/C++, Perl or Java, you know that you don't need white space around mathematical operators to properly form an expression:
3+5, 3 +5, 3+ 5
These are all accepted by C/C++, Perl and Java compilers. However, the same is not true for Scheme. You must have a space after a mathematical operator (or any other function name or operator) in Scheme for it to be correctly interpreted by the Scheme interpreter.
Practice a bit with simple mathematical equations in the Script-Fu Console until you're totally comfortable with these initial concepts.
Variables And Functions
Now that we know that every Scheme statement is enclosed in parentheses, and that the function name/operator is listed first, we need to know how to create and use variables, and how to create and use functions. We'll start with the variables.
Declaring Variables
Although there are a couple of different methods for declaring variables, the preferred method is to use the
(let*
 (
 (a 1)
 (b 2)
 )
 (+ a b)
 )
or, as one line:
(let* ( (a 1) (b 2) ) (+ a b) )
You'll have to put all of this on one line if you're using the console window. In general, however, you'll want to adopt a similar practice of indentation to help make your scripts more readable. We'll talk a bit more about this in the section on White Space.
This declares two local variables, a and b, initializes them, then prints the sum of the two variables.
What Is A Local Variable?
You'll notice that we wrote the summation
This is because the
The General Syntax Of
The general form of a
(let* (
where variables are declared within parens, e.g.,
White Space
Previously, we mentioned the fact that you'll probably want to use indentation to help clarify and organize your scripts. This is a good policy to adopt, and is not a problem in Scheme &mdash; white space is ignored by the Scheme interpreter, and can thus be liberally applied to help clarify and organize the code within a script. However, if you're working in Script-Fu's Console window, you'll have to enter an entire expression on one line; that is, everything between the opening and closing parens of an expression must come on one line in the Script-Fu Console window.
Assigning A New Value To A Variable
Once you've initialized a variable, you might need to change its value later on in the script. Use the
(let* ( (theNum 10) ) (set! theNum (+ theNum theNum)) )
Try to guess what the above statement will do, then go ahead and enter it in the Script-Fu Console window.
The
Functions
Now that you've got the hang of variables, let's get to work with some functions. You declare a function with the following syntax:
(define
 (
where
(define (AddXY inX inY) (+ inX inY) )

If you've programmed in other imperative languages (like C/C++, Java, Pascal, etc.), you might notice that a couple of things are absent in this function definition when compared to other programming languages.
First, notice that the parameters don't have any
Second, notice that we don't need to worry about how to
(AddXY (AddXY 5 6) 4)
Lists, Lists And More Lists
We've trained you in variables and functions, and now enter the murky swamps of Scheme's lists.
Defining A List
Before we talk more about lists, it is necessary that you know the difference between atomic values and lists.
You've already seen atomic values when we initialized variables in the previous lesson. An atomic value is a single value. So, for example, we can assign the variable
(let* ( (x 8) ) x)
(We added the expression
A variable may also refer to a list of values, rather than a single value. To assign the variable
(let* ( (x '(1 3 5))) x)
Try typing both statements into the Script-Fu Console and notice how it replies. When you type the first statement in, it simply replies with the result:
8
However, when you type in the other statement, it replies with the following result:
(1 3 5)
When it replies with the value 8 it is informing you that
The syntax to define a list is:
'(a b c)
where
An empty list can be defined as such:
'()
or simply:
()
Lists can contain atomic values, as well as other lists:
(let*
 (
 (x
 '("GIMP" (1 2 3) ("is" ("great" () ) ) )
 )
 )
 x
)
Notice that after the first apostrophe, you no longer need to use an apostrophe when defining the inner lists. Go ahead and copy the statement into the Script-Fu Console and see what it returns.
You should notice that the result returned is not a list of single, atomic values; rather, it is a list of a literal
How To Think Of Lists
It's useful to think of lists as composed of a
Creating Lists Through Concatenation (The Cons Function)
One of the more common functions you'll encounter is the cons function. It takes a value and places it to its second argument, a list. From the previous section, I suggested that you think of a list as being composed of an element (the head) and the remainder of the list (the tail). This is exactly how cons functions &mdash; it adds an element to the head of a list. Thus, you could create a list as follows:
(cons 1 '(2 3 4) )
The result is the list
You could also create a list with one element:
(cons 1 () )
You can use previously declared variables in place of any literals, as you would expect.
Defining A List Using The
To define a list composed of literals or previously declared variables, use the
(list 5 4 3 a b c)
This will compose and return a list containing the values held by the variables
(let* (
 (a 1)
 (b 2)
 (c 3)
 )

 (list 5 4 3 a b c)
 )
This code creates the list
Accessing Values In A List
To access the values in a list, use the functions
The

(car '("first" 2 "third"))
which is:
"first"
The

(cdr '("first" 2 "third"))
returns:
(2 "third")
whereas the following:
(cdr '("one and only"))
Accessing Other Elements In A List
OK, great, we can get the first element in a list, as well as the rest of the list, but how do we access the second, third or other elements of a list? There exist several "convenience" functions to access, for example, the head of the head of the tail of a list (
The basic naming convention is easy: The a's and d's represent the heads and tails of lists, so
(car (cdr (car x) ) )
could be written as:
(cadar x)
To get some practice with list-accessing functions, try typing in the following (except all on one line if you're using the console); use different variations of
(let* (
 (x '( (1 2 (3 4 5) 6) 7 8 (9 10) )
 )
 )
 ; place your car/cdr code here
 )
Try accessing the number 3 in the list using only two function calls. If you can do that, you're on your way to becoming a Script-Fu Master!
In Scheme, a semicolon (
Your First Script-Fu Script
Do you not need to stop and catch your breath? No? Well then, let's proceed with your fourth lesson &mdash; your first Script-Fu Script.
Creating A Text Box Script
One of the most common operations I perform in
The Script-Fu Master (and student) will quickly realize that this problem can easily be solved and automated with Script-Fu.
We will, therefore, create a script, called Text Box, which creates an image correctly sized to fit snugly around a line of text the user inputs. We'll also let the user choose the font, font size and text color.
Editing And Storing Your Scripts
Up until now, we've been working in the Script-Fu Console. Now, however, we're going to switch to editing script text files.
Where you place your scripts is a matter of preference &mdash; if you have access to
In the
The Bare Essentials
Every Script-Fu script defines at least one function, which is the script's main function. This is where you do the work.
Every script must also register with the procedural database, so you can access it within
We'll define the main function first:
(define (script-fu-text-box inText inFont inFontSize inTextColor))
Here, we've defined a new function called
Naming Conventions
Scheme's naming conventions seem to prefer lowercase letters with hyphens, which I've followed in the naming of the function. However, I've departed from the convention with the parameters. I like more descriptive names for my parameters and variables, and thus add the "in" prefix to the parameters so I can quickly see that they're values passed into the script, rather than created within it. I use the prefix "the" for variables defined within the script.
It's
Registering The Function
Now, let's register the function with
Here's the listing for registering this function (I will explain all its parameters in a minute):
If you save these functions in a text file with a
If you invoke this new script, it won't do anything, of course, but you can view the prompts you created when registering the script (more information about what we did is covered next).
Finally, if you invoke the Procedure Browser (
Steps For Registering The Script
To register our script with
The Required Parameters
The
Before version 2.6,
The
If your script does not operate on an existing image (and thus creates a new image, like our Text Box script will), you'll want to insert it in the image window menu, which you can access through the image menu bar, by right-clicking the image window, by clicking the menu button icon at the left-top corner of the image window, or by pressing
The original, written by Mike, says put the menu entry in the Script-Fu menu of the
If your script is intended to work on an image being edited, you'll want to insert it in the image window menu. The rest of the path points to the menu lists, menus and sub-menus. Thus, we registered our Text Box script in the
If you notice, the Text sub-menu in the File/Create menu wasn't there when we began &mdash;
A


The
The
The menu of our script.
Registering The Script's Parameters
Once we have listed the required parameters, we then need to list the parameters that correspond to the parameters our script needs. When we list these params, we give hints as to what their types are. This is for the dialog which pops up when the user selects our script. We also provide a default value.
This section of the registration process has the following format:
Param Type
Description
Example
SF-IMAGE
If your script operates on an open image, this should be the first parameter after the required parameters.
3
SF-DRAWABLE
If your script operates on an open image, this should be the second parameter after the
17
SF-VALUE
Accepts numbers and strings. Note that quotes must be escaped for default text, so better use
42
SF-STRING
Accepts strings.
"Some text"
SF-COLOR
Indicates that a color is requested in this parameter.
'(0 102 255)
SF-TOGGLE
A checkbox is displayed, to get a Boolean value.
TRUE or FALSE
Giving Our Script Some Guts
Let us continue with our training and add some functionality to our script.
Creating A New Image
In the previous lesson, we created an empty function and registered it with
Once you know how to set variables, define functions and access list members, the rest is all downhill &mdash; all you need to do is familiarize yourself with the functions available in
Let's begin by making a new image. We'll create a new variable,
As you can see from the DB Browser, the function
(define (script-fu-text-box inText inFont inFontSize inTextColor)
 (let*
 (
 ; define our local variables
 ; create a new image:
 (theImageWidth 10)
 (theImageHeight 10)
 (theImage (car
 (gimp-image-new
 theImageWidth
 theImageHeight
 RGB
 )
 )
 )
 (theText) ;a declaration for the text
 ;we create later
Note: We used the value
You should also notice that we took the head of the result of the function call. This may seem strange, because the database explicitly tells us that it returns only one value &mdash; the ID of the newly created image. However, all
Adding A New Layer To The Image
Now that we have an image, we need to add a layer to it. We'll call the
;create a new layer for the image:
 (theLayer
 (car
 (gimp-layer-new
 theImage
 theImageWidth
 theImageHeight
 RGB-IMAGE
 "layer 1"
 100
 NORMAL
 )
 )
 )
 ) ;end of our local variables
Once we have the new layer, we need to add it to the image:
(gimp-image-add-layer theImage theLayer 0)
Now, just for fun, let's see the fruits of our labors up until this point, and add this line to show the new, empty image:
(gimp-display-new theImage)
Save your work, select
Adding The Text
Go ahead and remove the line to display the image (or comment it out with a (
Before we add text to the image, we need to set the background and foreground colors so that the text appears in the color the user specified. We'll use the gimp-context-set-back/foreground functions:
(gimp-context-set-background '(255 255 255) )
 (gimp-context-set-foreground inTextColor)
With the colors properly set, let's now clean out the garbage currently in the image by filling the drawable with the background color:
(gimp-drawable-fill theLayer BACKGROUND-FILL)
With the image cleared, we're ready to add some text:
(set! theText
 (car
 (gimp-text-fontname
 theImage theLayer
 0 0
 inText
 0
 TRUE
 inFontSize PIXELS
 "Sans")
 )
 )
Although a long function call, it's fairly straightforward if you go over the parameters while looking at the function's entry in the DB Browser. Basically, we're creating a new text layer and assigning it to the variable
Now that we have the text, we can grab its width and height and resize the image and the image's layer to the text's size:
(set! theImageWidth (car (gimp-drawable-width theText) ) )
 (set! theImageHeight (car (gimp-drawable-height theText) ) )

 (gimp-image-resize theImage theImageWidth theImageHeight 0 0)

 (gimp-layer-resize theLayer theImageWidth theImageHeight 0 0)
If you're like me, you're probably wondering what a drawable is when compared to a layer. The difference between the two is that a drawable is anything that can be drawn into, including layers but also channels, layer masks, the selection, etc; a layer is a more specific version of a drawable. In most cases, the distinction is not important.
With the image ready to go, we can now re-add our display line:
(gimp-display-new theImage)
Save your work, refresh the database and give your first script a run!
Clearing The Dirty Flag
If you try to close the image created without first saving the file,
To do this, we can clear the dirty flag after displaying the image:
(gimp-image-clean-all theImage)
This will set dirty count to 0, making it appear to be a
Whether to add this line or not is a matter of personal taste. I use it in scripts that produce new images, where the results are trivial, as in this case. If your script is very complicated, or if it works on an existing image, you will probably not want to use this function.
Extending The Text Box Script
Handling Undo Correctly
When creating a script, you want to give your users the ability to undo their actions, should they make a mistake. This is easily accomplished by calling the functions
If you are creating a new image entirely, it doesn't make sense to use these functions because you're not changing an existing image. However, when you are changing an existing image, you most surely want to use these functions.
Undoing a script works nearly flawlessly when using these functions.
Extending The Script A Little More
Now that we have a very handy-dandy script to create text boxes, let's add two features to it:
Currently, the image is resized to fit exactly around the text &mdash; there's no room for anything, like drop shadows or special effects (even though many scripts will automatically resize the image as necessary). Let's add a buffer around the text, and even let the user specify how much buffer to add as a percentage of the size of the resultant text.
This script could easily be used in other scripts that work with text. Let's extend it so that it returns the image and the layers, so other scripts can call this script and use the image and layers we create.
Modifying The Parameters And The Registration Function
To let the user specify the amount of buffer, we'll add a parameter to our function and the registration function:
(define (script-fu-text-box inTest inFont inFontSize inTextColor inBufferAmount)
 (let*
 (
 ; define our local variables
 ; create a new image:
 (theImageWidth 10)
 (theImageHeight 10)
 (theImage (car
 (gimp-image-new
 theImageWidth
 theImageHeight
 RGB
 )
 )
 )
 (theText) ;a declaration for the text
 ;we create later

 (theBuffer) ;
Adding The New Code
We're going to add code in two places: right before we resize the image, and at the end of the script (to return the new image, the layer and the text).
After we get the text's height and width, we need to resize these values based on the buffer amount specified by the user. We won't do any error checking to make sure it's in the range of 0-100% because it's not life-threatening, and because there's no reason why the user can't enter a value like
(set! theBuffer (* theImageHeight (/ inBufferAmount 100) ) )

 (set! theImageHeight (+ theImageHeight theBuffer theBuffer) )
 (set! theImageWidth (+ theImageWidth theBuffer theBuffer) )
All we're doing here is setting the buffer based on the height of the text, and adding it twice to both the height and width of our new image. (We add it twice to both dimensions because the buffer needs to be added to both sides of the text.)
Now that we have resized the image to allow for a buffer, we need to center the text within the image. This is done by moving it to the (x, y) coordinates of (
(gimp-layer-set-offsets theText theBuffer theBuffer)
Go ahead and save your script, and try it out after refreshing the database.
All that is left to do is return our image, the layer, and the text layer. After displaying the image, we add this line:
(list theImage theLayer theText)
This is the last line of the function, making this list available to other scripts that want to use it.
To use our new text box script in another script, we could write something like the following:
(set! theResult (script-fu-text-box
 "Some text"
 "Charter" "30"
 '(0 0 0)
 "35"
 )
 )
 (gimp-image-flatten (car theResult))
Congratulations, you are on your way to your Black Belt of Script-Fu!
Your script and its working
What you write
Below the complete script:
What you obtain
And the result on the screen.
This section is not part of the original tutorial.
The Script-Fu parameter API
Beside the above parameter types there are more types for the interactive mode, each of them will create a widget in the control dialog. You will find a list of these parameters with descriptions and examples in the test script
SF-ADJUSTMENT
Creates an adjustment widget in the dialog.
SF-ADJUSTMENT "label" '(value lower upper step_inc page_inc digits type)
Widget arguments list
Element
"label"
Text printed before the widget.
value
Value print at the start.
lower / upper
The lower / upper values (range of choice).
step_inc
Increment/decrement value.
page_inc
Increment/decrement value using page key.
digits
Digits after the point (decimal part).
type
One of: SF-SLIDER or 0, SF-SPINNER or 1
Creates a color button in the dialog.
SF-COLOR "label" '(red green blue)
or
SF-COLOR "label" "color"
'(red green blue)
List of three values for the red, green and blue components.
"color"
Color name in CSS notatation.
SF-FONT
Creates a font-selection widget in the dialog. It returns a fontname as a string. There are two new gimp-text procedures to ease the use of this return parameter:
(gimp-text-fontname image drawable x-pos y-pos text border antialias size unit font)
(gimp-text-get-extents-fontname text size unit font)
where font is the fontname you get. The size specified in the fontname is silently ignored. It is only used in the font-selector. So you are asked to set it to a useful value (24 pixels is a good choice).
SF-FONT "label" "fontname"
"fontname"
Name of the default font.
SF-BRUSH
It will create a widget in the control dialog. The widget consists of a preview area (which when pressed will produce a popup preview ) and a button with the "..." label. The button will popup a dialog where brushes can be selected and each of the characteristics of the brush can be modified.
SF-BRUSH "Brush" '("Circle (03)" 100 44 0)
Here the brush dialog will be popped up with a default brush of Circle (03) opacity 100 spacing 44 and paint mode of Normal (value 0).
If this selection was unchanged the value passed to the function as a parameter would be '("Circle (03)" 100 44 0).
SF-PATTERN
It will create a widget in the control dialog. The widget consists of a preview area (which when pressed will produce a popup preview ) and a button with the "..." label. The button will popup a dialog where patterns can be selected.
SF-PATTERN "Pattern" "Maple Leaves"
The value returned when the script is invoked is a string containing the pattern name. If the above selection was not altered the string would contain "Maple Leaves".
SF-GRADIENT
It will create a widget in the control dialog. The widget consists of a button containing a preview of the selected gradient.
If the button is pressed a gradient selection dialog will popup.
SF-GRADIENT "Gradient" "Deep Sea"
The value returned when the script is invoked is a string containing the gradient name. If the above selection was not altered the string would contain "Deep Sea".
SF-PALETTE
It will create a widget in the control dialog. The widget consists of a button containing the name of the selected palette.
If the button is pressed a palette selection dialog will popup.
SF-PALETTE "Palette" "Named Colors"
The value returned when the script is invoked is a string containing the palette name. If the above selection was not altered the string would contain "Named Colors".
SF-FILENAME
It will create a widget in the control dialog. The widget consists of a button containing the name of a file.
If the button is pressed a file selection dialog will popup.
SF-FILENAME "label" (string-append "" gimp-data-directory "/scripts/beavis.jpg")
The value returned when the script is invoked is a string containing the filename.
SF-DIRNAME
Only useful in interactive mode. Very similar to SF-FILENAME, but the created widget allows to choose a directory instead of a file.
SF-DIRNAME "label" "/var/tmp/images"
The value returned when the script is invoked is a string containing the dirname.
SF-OPTION
It will create a widget in the control dialog. The widget is a combo-box showing the options that are passed as a list.
The first option is the default choice.
SF-OPTION "label" '("option1" "option2")
The value returned when the script is invoked is the number of the chosen option, where the option first is counted as 0.
SF-ENUM
It will create a widget in the control dialog. The widget is a combo-box showing all enum values for the given enum type. This has to be the name of a registered enum, without the "Gimp" prefix. The second parameter speficies the default value, using the enum value's nick.
SF-ENUM "Interpolation" '("InterpolationType" "linear")
The value returned when the script is invoked corresponds to chosen enum value.
Using QuickMask Mode
Masks
Quick Mask
Using Quick Mask
Open an image or begin a new document.
Activate QuickMask mode using the left-bottom button in the image window. If a selection is present the mask is initialized with the content of the selection.
Choose any drawing tool. Paint on the QuickMask with black to remove selected areas, and paint with white to add selected areas. Use grey colors to partially select areas.
You can also use selection tools and fill these selections with the Bucket Fill tool; this does not destroy the QuickMask selections!
Toggle QuickMask mode off using the left-bottom button in the image window: the selection will be displayed with marching ants.
@@image: 'images/dialogs/stock-vchain-24.png'; md5=7c1f223b72d0d77f316a2ee9b96a08fb
Working with Digital Camera Photos
Photography
Introduction
One of the most common uses of GIMP is to fix digital camera images that for some reason are less than perfect. Maybe the image is overexposed or underexposed; maybe rotated a bit; maybe out of focus: these are all common problems for which GIMP has good tools. The purpose of this chapter is to give you an overview of those tools and the situations in which they are useful. You will not find detailed tutorials here: in most cases it is easier to learn how to use the tools by experimenting with them than by reading about them. (Also, each tool is described more thoroughly in the Help section devoted to it.) You will also not find anything in this chapter about the multitude of "special effects" that you can apply to an image using GIMP. You should be familiar with basic GIMP concepts before reading this chapter, but you certainly don't need to be an expert–if you are, you probably know most of this anyway. And don't hesitate to experiment: GIMP's powerful "undo" system allows you to recover from almost any mistake with a simple
Most commonly the things that you want to do to clean up an imperfect photo are of four types: improving the composition; improving the colors; improving the sharpness; and removing artifacts or other undesirable elements of the image.
Improving Composition
Rotating an Image
It is easy, when taking a picture, to hold the camera not quite perfectly vertical, resulting in a picture where things are tilted at an angle. In GIMP, the way to fix this is to use the
Now as a matter of fact, it isn't so easy to get things right by this method: you often find that things are better but not quite perfect. One solution is to rotate a bit more, but there is a disadvantage to that approach. Each time you rotate an image, because the rotated pixels don't line up precisely with the original pixels, the image inevitably gets blurred a little bit. For a single rotation, the amount of blurring is quite small, but two rotations cause twice as much blurring as one, and there is no reason to blur things more than you have to. A better alternative is to undo the rotation and then do another, adjusting the angle.
Fortunately, GIMP provides another way of doing it that is considerably easier to use: in the Rotate Tool Options, for the Transform Direction you can select "Backward (Corrective)". When you do this, instead of rotating the grid to compensate for the error, you can rotate it to
Since GIMP 2.2, there is an option to preview the results of transformations, instead of just seeing a grid. This makes it easier to get things right on the first try.
After you have rotated an image, there will be unpleasant triangular "holes" at the corners. One way to fix them is to create a background that fills the holes with some unobtrusive or neutral color, but usually a better solution is to crop the image. The greater the rotation, the more cropping is required, so it is best to get the camera aligned as well as possible when you take the picture in the first place.
Cropping
When you take a picture with a digital camera, you have some control over what gets included in the image but often not as much as you would like: the result is images that could benefit from trimming. Beyond this, it is often possible to enhance the impact of an image by trimming it so that the most important elements are placed at key points. A rule of thumb, not always to be followed but good to keep in mind, is the
To crop an image, activate the
Improving Colors
Automated Tools
In spite of sophisticated exposure-control systems, pictures taken with digital cameras often come out over- or under-exposed, or with color casts due to imperfections in lighting. GIMP gives you a variety of tools to correct colors in an image, ranging to automated tools that run with a simple button-click to highly sophisticated tools that give you many parameters of control. We will start with the simplest first.
GIMP gives you several automated color correction tools. Unfortunately they don't usually give you quite the results you are looking for, but they only take a moment to try out, and if nothing else they often give you an idea of some of the possibilities inherent in the image. Except for "Auto Levels", you can find these tools by following the menu path
Here they are, with a few words about each:
Normalize
This tool (it is really a plug-in) is useful for underexposed images: it adjusts the whole image uniformly until the brightest point is right at the saturation limit, and the darkest point is black. The downside is that the amount of brightening is determined entirely by the lightest and darkest points in the image, so even one single white pixel and/or one single black pixel will make normalization ineffective.
Equalize
This is a very powerful adjustment that tries to spread the colors in the image evenly across the range of possible intensities. In some cases the effect is amazing, bringing out contrasts that are very difficult to get in any other way; but more commonly, it just makes the image look weird. Oh well, it only takes a moment to try.
Color Enhance
This command increases the saturation range of the colors in the layer, without altering brightness or hue. So this command does not work on grayscale images.
Stretch Contrast
This is like
Stretch HSV
Does the same as Stretch Contrast but works in HSV color space, rather than RGB color space. It preserves the Hue.
White balance
This may enhance images with poor white or black by removing little used colors and stretch the remaining range as much as possible.
Auto Levels
This is done by activating the Levels tool (
If you can find a point in the image that ought to be perfect white, and a second point that ought to be perfect black, then you can use the Levels tool to do a semi-automatic adjustment that will often do a good job of fixing both brightness and colors throughout the image. First, bring up the Levels tool as previously described. Now, look down near the bottom of the Layers dialog for three buttons with symbols on them that look like eye-droppers (at least, that is what they are supposed to look like). The one on the left, if you mouse over it, shows its function to be
Those are the automated color adjustments: if you find that none of them quite does the job for you, it is time to try one of the interactive color tools. All of these, except one, can be accessed via Tools-gt;Color Tools in the image menu. After you select a color tool, click on the image (anywhere) to activate it and bring up its dialog.
Exposure Problems
The simplest tool to use is the
A more sophisticated, and only slightly more difficult, way of correcting exposure problems is to use the Levels tool. The dialog for this tool looks very complicated, but for the basic usage we have in mind here, the only part you need to deal with is the
A very powerful way of correcting exposure problems is to use the
The most powerful approach to adjusting brightness and contrast across an image, for more expert GIMP users, is to create a new layer above the one you are working on, and then in the Layers dialog set the Mode for the upper layer to
Actually,
Duplicate the layer (producing a new layer above it).
Desaturate the new layer.
Apply a Gaussian blur to the result, with a large radius (100 or more).
Set Mode in the Layers dialog to Divide.
Control the amount of correction by adjusting opacity in the Layers dialog, or by using Brightness/Contrast, Levels, or Curves tools on the new layer.
When you are happy with the result, you can use
In addition to
Adjusting Hue and Saturation
In our experience, if your image has a color cast---too much red, too much blue, etc---the easiest way to correct it is to use the Levels tool, adjusting levels individually on the red, green, and blue channels. If this doesn't work for you, it might be worth your while to try the Color Balance tool or the Curves tool, but these are much more difficult to use effectively. (They are very good for creating certain types of special effects, though.)
Sometimes it is hard to tell whether you have adjusted colors adequately. A good, objective technique is to find a point in the image that you know should be either white or a shade of gray. Activate the
If your image is washed out---which can easily happen when you take pictures in bright light---try the
Even if an image does not seemed washed out, often you can increase its impact by pushing up the saturation a bit. Veterans of the film era sometimes call this trick
When you take pictures in low light conditions, in some cases you have the opposite problem: too much saturation. In this case too the Hue/Saturation tool is a good one to use, only by reducing the saturation instead of increasing it.
Adjusting Sharpness
Unblurring
If the focus on the camera is not set perfectly, or the camera is moving when the picture is taken, the result is a blurred image. If there is a lot of blurring, you probably won't be able to do much about it with any technique, but if there is only a moderate amount, you should be able to improve the image.
The most generally useful technique for sharpening a fuzzy image is called the
Sometimes using Unsharp Mask can cause color distortion where there are strong contrasts in an image. When this happens, you can often get better results by decomposing the image into separate Hue-Saturation-Value (HSV) layers, and running Unsharp Mask on the Value layer only, then recomposing. This works because the human eye has much finer resolution for brightness than for color. See the sections on
Next to "Unsharp Mask" in the Filters menu is another filter called
In some situations, you may be able to get useful results by selectively sharpening specific parts of an image using the
Reducing Graininess
When you take pictures in low-light conditions or with a very fast exposure time, the camera does not get enough data to make good estimates of the true color at each pixel, and consequently the resulting image looks grainy. You can
Softening
Every so often you have the opposite problem: an image is
Removing Unwanted Objects from an Image
There are two kinds of objects you might want to remove from an image: first, artifacts caused by junk such as dust or hair on the lens; second, things that were really present but impair the quality of the image, such as a telephone wire running across the edge of a beautiful mountain landscape.
Despeckling
A good tool for removing dust and other types of lens grunge is the
If you have more than one artifact in the image, it is necessary to use Despeckle on each individually.
Garbage Removal
The most useful method for removing unwanted
Consult the
Another tool looking very much as the clone tool, but smarter, is the
In some cases you may be able to get good results by simply cutting out the offending object from the image, and then using a plug-in called
Removing Red-eye
Red-eyes
When you take a flash picture of somebody who is looking directly toward the camera, the iris of the eye can bounce the light of the flash back toward the camera in such a way as to make the eye appear bright red: this effect is called
From version 2.4, GIMP incorporated a special
Saving Your Results
Files
What file format should you use to save the results of your work, and should you resize it? The answers depend on what you intend to use the image for.
If you intend to open the image in GIMP again for further work, you should save it in GIMP's native XCF format (i. e., name it something.xcf), because this is the only format that guarantees that none of the information in the image is lost.
If you intend to print the image on paper, you should avoid shrinking the image, except by cropping it. The reason is that printers are capable of achieving much higher resolutions than video monitors &mdash; 600 to 1400 dpi (
If you intend to display the image on screen or project it with a video projector, bear in mind that the highest screen resolution for most commonly available systems is 1600 x 1200, so there is nothing to gain by keeping the image larger than that. For this purpose, the JPEG format is almost always a good choice.
If you want to put the image on a web page or send it by email, it is a good idea to make every effort to keep the file size as small as possible. First, scale the image down to the smallest size that makes it possible to see the relevant details (bear in mind that other people may be using different sized monitors and/or different monitor resolution settings). Second, save the image as a JPEG file. In the JPEG save dialog, check the option to
See the
Printing Your Photos
Printing
Printing your photos
As in most softwares, in GIMP, printing needs to go to main menu
that image displayed on the screen is in RGB mode and printing will be in CMYK mode; consequently color feature you'll get on printed sheet will not be exactly what you was waiting for. That depends on the used corresponding chart. For the curious ones some adding explanations can be got through a click on these useful Wikipedia links:
ICC-Profile
CMYK
Gamut
that a screen resolution is roughly within a range from 75 up to 100 dpi; a printer resolution is about 10x higher (or more) than a screen one; printed image size depends on available pixels and resolution; so actual printed size doesn't correspond inevitably to what is displayed on screen nor available sheet size.
Consequently, before any printing it is relevant to go to:
Last recommendation: think of checking your margins as well as centering. It would be a pity if a too much large margin cuts off some part of your image or if an inappropriate centering damages your work especially if you use a special photo paper.
EXIF Data
Modern digital cameras, when you take a picture, add information to the data file about the camera settings and the circumstances under which the picture was taken. This data is included in JPEG or TIFF files in a structured format called EXIF. For JPEG files, GIMP is capable of maintaining EXIF data, if it is built appropriately: it depends on a library called
If you would like to see the contents of the EXIF data, you can download from the registry an Exif Browser plug-in
@@image: 'images/using/path-examples.png'; md5=a481b9ce8ff98222e260a0df7b971ed6
@@image: 'images/using/path-with-anchors.png'; md5=9e168dc103f8be62c3b04a6852528337
@@image: 'images/using/path-stroking-examples.png'; md5=c49284748ddac775cc702987fec34e06
@@image: 'images/menus/edit/stroke-path.png'; md5=3631e41d419fef447d65fa928093f3d5
@@image: 'images/using/path-from-text.png'; md5=7bf70fcbfd90eb571bdff45c229e1a3d
@@image: 'images/using/path-text-stroked.png'; md5=1fe33d8a8a4f73e8b6fe5c3f1c889223
Paths
Image
Paths are curves (known as Bézier-curves). Paths are easy to learn and use in
In
A Path has two main purposes:
You can convert a closed path to a selection.
Any path, open or closed, can be
Illustration of four different path creating
Four examples of GIMP paths: one closed and polygonal; one open and polygonal; one closed and curved; one with a mixture of straight and curved segments.
Path Creation
Start by drawing the outline for your path; the outline can be modified later (see the
Use
Use the relevant icon
Use the hotkey
When the Paths tool is selected, the mouse cursor changes into a pointer (arrow) with a curve. Left click in the image to create the first point on the path. Move the mouse to a new point and left click the mouse to create another point linked to the previous point. Although you can create as many points as you desire, you only need two points to learn about Paths. While adding points, the mouse cursor has a little
Move the mouse cursor close to a line segment, left-click and drag the line segment. Two events occur.
The line segment bends and curves as it is pulled.
Each line segment has a start point and an end point that is clearly labeled. A
The curved line segment leaves an end point in the same direction that the
Appearance of a path while it is manipulated
Appearance of a path while it is manipulated using the Path tool.
The path is comprised of two components with both straight and curved segments. Black squares are anchor points, the open circle indicates the selected anchor, and the two open squares are the handles associated with the selected anchor.
Path Properties
Paths, like layers and channels, are components of an image. When an image is saved in

Paths can be very complex. If you create them by hand using the Path tool, unless you are obsessive they probably won't contain more than a few dozen anchor points (often many fewer); but if you create them by transforming a selection into a path, or by transforming text into a path, the result can easily contain hundreds of anchor points, or even thousands.
A path may contain multiple
Each component of a path can be either
Path segments can be either straight or curved. A path is called
One nice thing about paths is that they use very few resources, especially in comparison with images. Representing a path in RAM requires storing only the coordinates of its anchors and handles: 1K of memory is enough to hold a complex path, but not enough to hold a small 20x20 pixel RGB layer. Therefore, it is possible to have literally hundreds of paths in an image without causing any significant stress to your system; the amount of stress that hundreds of paths might cause
Paths can be created and manipulated using the
Paths and Selections
GIMP lets you transform the selection for an image into a path; it also lets you transform paths into selections. For information about the selection and how it works, see the
When you transform a selection into a path, the path closely follows the
Transforming Paths
Each of the Transform tools (Rotate, Scale, Perspective, etc) can be set to act on a layer, selection, or path. Select the transform tool in the toolbox, then select layer, selection, or path for the
By default a Transform tool, when it is set to affect paths, acts on only one path: the
Stroking a Path
Stroking paths
The four paths from the top illustration, each stroked in a different way.
Paths do not alter the appearance of the image pixel data unless they are
Choosing
The
You can further increase the range of stroking effects by stroking a path multiple times, or by using lines or brushes of different widths. The possibilities for getting interesting effects in this way are almost unlimited.
Paths and Text
Text converted to a path
Text converted to a path and then transformed using the Perspective tool.
The path shown above, stroked with a fuzzy brush and then gradient-mapped using the Gradient Map filter with the
A text item created using the Text tool can be transformed into a path using the
Stroking the path, which gives you many possibilities for fancy text.
More importantly, transforming the text. Converting text into a path, then transforming the path, and finally either stroking the path or converting it to a selection and filling it, often leads to much higher-quality results than rendering the text as a layer and transforming the pixel data.
Paths and

Fortunately, paths are represented in
It also means that GIMP can create paths from
The
Creating paths is not the only thing GIMP can do with
Creating New Layers
Layer
Creating new layers
There are several ways to create new layers in an image. Here are the most important ones:
Selecting
Selecting
When you
Rendering a Grid
How can you create a grid that is actually part of the image? You can't do this using the image grid: that is only an aid, and is only visible on the monitor or in a screenshot. You can, however, use the
See also
@@image: 'images/using/unstuck-floating-sel.png'; md5=226cb89c97cd03443c3f90c1f0fcc762
@@image: 'images/using/unstuck-show-selection-menu.png'; md5=8ee4bc9294a9dd8a05fe08af4f7bb5c9
@@image: 'images/using/unstuck-select-all.png'; md5=eeda2cba5c9142ab46a5f711e4440919
@@image: 'images/using/unstuck-layers-dialog-invislayer.png'; md5=a02e72b17f6b8e8d2c078967d727d3b9
@@image: 'images/using/unstuck-layers-dialog-transparentlayer.png'; md5=998bcb5034da0bd1b196913e073cbf89
Getting Unstuck
GIMP
Stuck!
All right, okay: you're stuck. You're trying to use one of the tools on an image, and nothing is happening, and nothing you try makes any difference. Your fists are starting to clench, and your face is starting to feel warm. Are you going to have to kill the program, and lose all your work? This sucks!
Well, hold on a second. This happens pretty frequently, even to people who've used
Common Causes of GIMP Non-Responsiveness
There is a floating selection
Layers dialog showing a floating selection.


The selection is hidden
Unstuck show selection menu
In the View menu, make sure that "Show Selection" is checked.


You are acting outside of the selection
Unstuck select all
Click

The active drawable is not visible
Unstuck layer invisibility
Layers dialog with visibility off for the active layer.


The active drawable is transparent
Unstuck layer transparency
Layers dialog with opacity set to zero for the active layer.


You are trying to act outside the layer


The image is in indexed color mode.


@@image: 'images/using/logo-examples.png'; md5=d5e1265a0ff3bd7fd656c06ae66d3537
Embellishing Text
Embellishing text
Fancy text
Four fancy text items created using logo scripts:
There are many things you can do to vary the appearance of text beyond just rendering it with different fonts or different colors. By converting a text item to a selection or a path, you can fill it, stroke the outlines, transform it, or generally apply the whole panoply of GIMP tools to get interesting effects. As a demonstration of some of the possibilities, try out the "logo" scripts at
Adding Fonts
Fonts
Add
For the most authoritative and up-to-date information on fonts in GIMP, consult the
GIMP uses the FreeType 2 font engine to render fonts, and a system called Fontconfig to manage them. GIMP will let you use any font in Fontconfig's font path; it will also let you use any font it finds in GIMP's font search path, which is set on the
FreeType 2 is a very powerful and flexible system. By default, it supports the following font file formats:
TrueType fonts (and collections)
Type 1 fonts
CID-keyed Type 1 fonts
CFF fonts
OpenType fonts (both TrueType and CFF variants)
SFNT-based bitmap fonts
X11 PCF fonts
Windows FNT fonts
BDF fonts (including anti-aliased ones)
PFR fonts
Type42 fonts (limited support)
You can also add modules to support other types of font files. See FREETYPE 2
Linux
On a Linux system, if the Fontconfig utility is set up as usual, all you need to do to add a new font is to place the file in the directory
Windows
The easiest way to install a font is to drag the file onto the Fonts directory and let the shell do its magic. Unless you've done something creative, it's probably in its default location of
Mac OS X
There are several ways to install fonts on your system. You can drag-and-drop them to the
To install a Type 1 file, you need both the
In principle, GIMP can use any type of font on Windows that FreeType can handle; however, for fonts that Windows can't handle natively, you should install them by placing the font files in the
GIMP uses Fontconfig to manage fonts on Windows as well as Linux. The instructions above work because Fontconfig by default uses the Windows fonts directory, i. e., the same fonts that Windows uses itself. If for some reason your Fontconfig is set up differently, you will have to figure out where to put fonts so that GIMP can find them: in any case, the
Font Problems
Problems
Problems with fonts have probably been responsible for more GIMP 2 bug reports than any other single cause, although they have become much less frequent in the most recent releases in the 2.0 series. In most cases they have been caused by malformed font files giving trouble to Fontconfig. If you experience crashes at start-up when GIMP scans your font directories, the best solution is to upgrade to a version of Fontconfig newer than 2.2.0. As a quick workaround you can start gimp with the
Another known problem is that Pango 1.2 cannot load fonts that don't provide an Unicode character mapping. (Pango is the text layout library used by GIMP.) A lot of symbol fonts fall into this category. On some systems, using such a font can cause GIMP to crash. Updating to Pango 1.4 will fix this problem and makes symbol fonts available in GIMP.
A frequent source of confusion occurs on Windows systems, when GIMP encounters a malformed font file and generates an error message: this causes a console window to pop up so that you can see the message.
@@image: 'images/using/close-warning.png'; md5=daf43dc485b063912be438bd8196b348
@@image: 'images/using/export-gif-dialog.png'; md5=6c0effc027a23e667a6da56e007eda6d
@@image: 'images/using/export-jpeg-dialog.png'; md5=9e3cb45071a45a4b1fbd43de66079830
@@image: 'images/using/export-png-dialog.png'; md5=a7e763ba4e72b4a8be0c207d91781a70
@@image: 'images/using/export-tiff-dialog.png'; md5=1911ab89ff8b7b2ddd1ba3228c6ef94c
@@image: 'images/using/export-mng-dialog.png'; md5=77f5b2f7624bbfe11d26c730ad28d6a7

Save / Export Images
Save/Export Images
Export Images
In former
When you are finished working with an image, you will want to save the results. (In fact, it is often a good idea to save at intermediate stages too:
File Formats
There are several commands for

Exporting an image does not modify the image itself, so you do not lose anything by exporting. See
When you close an image (possibly by quitting GIMP), you are warned if the image is "dirty"; that is, if it has been changed without subsequently being saved (an asterisk is in front of the image name).
Closing warning
Saving an image in any file format will cause the image to be considered "not dirty", even if the file format does not represent all of the information from the image.
Export Image as GIF
GIF
.gif
Formats
The GIF Export dialog
The GIF file format does not support some basic image properties such as
GIF Options
Interlace
Checking interlace allows an image on a web page to be progressively displayed as it is downloaded. Progressive image display is useful with slow connection speeds, because you can stop an image that is of no interest; interlace is of less use today with our faster connection speeds.
GIF comment
GIF comments support only 7-bit ASCII characters. If you use a character outside the 7-bit ASCII set,
Animated GIF Options
Animation
Animated GIF options
Loop forever
When this option is checked, the animation will play repeatedly until you stop it.
Delay between frames where unspecified
You can set the delay, in milliseconds, between frames if it has not been set before. In this case, you can modify every delay in the Layer Dialog.
Frame disposal where unspecified
If this has not been set before, you can set how frames will be superimposed. You can select among three options :



Use delay entered above for all frames
Self-explanatory.
Use disposal entered above for all frames
Export Image as JPEG
JPEG
.jpg
.jpeg
JPEG files usually have an extension .jpg, .JPG, or .jpeg. It is a very widely used format, because it compresses images very efficiently, while minimizing the loss of image quality. No other format comes close to achieving the same level of compression. It does not, however, support transparency or multiple layers.
The JPEG Export dialog
The JPEG algorithm is quite complex, and involves a bewildering number of options, whose meaning is beyond the scope of this documentation. Unless you are a JPEG expert, the Quality parameter is probably the only one you will need to adjust.
Quality
When you save a file in JPEG format, a dialog is displayed that allows you to set the Quality level, which ranges from 0 to 100. Values above 95 are generally not useful, though. The default quality of 85 usually produces excellent results, but in many cases it is possible to set the quality substantially lower without noticeably degrading the image. You can test the effect of different quality settings by checking
Please note, that the numbers for the JPEG quality level have a different meaning in different applications. Saving with a quality level of 80 in GIMP is not necessarily comparable with saving with a quality level of 80 in a different application.
Preview in image window
Checking this option causes each change in quality (or any other JPEG parameter) to be shown in the image display. (This does not alter the image: the image reverts back to its original state when the JPEG dialog is closed.)
Advanced settings
Some information about the advanced settings:
Optimize
If you enable this option, the optimization of entropy encoding parameters will be used. The result is typically a smaller file, but it takes more time to generate.
Progressive
With this option enabled, the image chunks are stored in the file in an order that allows progressive image refinement during a slow connection web download. The progressive option for JPG has the same purpose as the interlace option for GIF. Unfortunately, the progressive option produces slightly larger JPG files (than without the progressive option).
Save EXIF data
EXIF
JPEG files from many digital cameras contain extra information, called EXIF data. EXIF data provides information about the image such as camera make and model, image size, image date, etc. Although GIMP uses the
Save thumbnail
This option lets you save a thumbnail with the image. Many applications use the small thumbnail image as a quickly available small preview image.
This option is present only if
Save XMP data
XMP data is
Use quality settings from original image
If a particular quality setting (or
If you have only made a few changes to the image, then re-using the same quality setting will give you almost the same quality and file size as the original image. This will minimize the losses caused by the quantization step, compared to what would happen if you used different quality setting.
If the quality setting found in the original file are not better than your default quality settings, then the option
Smoothing
JPG compression creates artifacts. By using this option, you can smooth the image when saving, reducing them. But your image becomes somewhat blurred.
Restart markers
The image file can include markers which allow the image to be loaded as segments. If a connection is broken while loading the image in a web page, loading can resume from the next marker.
Subsampling
The human eye is not sensitive in the same way over the entire color spectrum. The compression can use this to treat slightly different colors that the eye perceives as very close, as identical colors. Three methods are available :




DCT Method
DCT is



Image comments
In this text box, you can enter a comment which is saved with the image.
Export Image as PNG
PNG
The
Interlacing
Save background color
If your image has many transparency levels, the Internet browsers that recognize only two levels, will use the background color of your Toolbox instead. Internet Explorer up to version 6 did not use this information.
Save gamma
Gamma correction is the ability to correct for differences in how computers interpret color values. This saves gamma information in the PNG that reflects the current Gamma factor for your display. Viewers on other computers can then compensate to ensure that the image is not too dark or too bright.
Save layer offset
PNG supports an offset value called the
Save Resolution
Save the image resolution, in ppi (pixels per inch).
Save creation time
Date the file was saved.
Save comment
You can read this comment in the
Save color values from transparent pixels
With this option is checked, the color values are saved even if the pixels are completely transparent.
Compression level
Since compression is not lossy, the only reason to use a compression level less than 9, is if it takes too long to compress a file on a slow computer. Nothing to fear from decompression: it is as quick whatever the compression level.
Save Defaults
Click to save the current settings. Latter, you can use
The PNG format supports indexed images. Using fewer colors, therefore, results in a smaller file; this is especially useful for creating web images; see
Computers work on 8 bits blocks named
If you want PNG transparency to be fully displayed by Internet Explorer, you can use the AlphaImageLoader DirectX filter in the code of your Web page. See Microsoft Knowledge Base
Export Image as TIFF
TIFF
The TIFF Export dialog
Compression
This option allows you to specify the algorithm used to compress the image.






These options can only be selected, if the image is in indexed mode and reduced to two colors. Use
With this option the color values are saved even if the pixels are completely transparent.
Comment
In this text box, you can enter a comment that is associated with the image.
Export Image as MNG
MNG
Export MNG File Dialog
MNG is acronym for
The main problem is that Konqueror is the only Web navigator that recognizes the MNG animation format. Please see
Customize Splash-Screen
Splash-screen
When you start
Of course, you can customize the splash-screen: Create a
Copy your image(s) into this
Make sure that your images aren't too small.
@@image: 'images/using/file-gbr-save.png'; md5=9dc83346c647c95e74234f0d30fdd263
Adding New Brushes
Add New
To add a new brush, after either creating or downloading it, you need to save it in a format GIMP can use. The brush file needs to be placed in the GIMP's brush search path, so that GIMP is able to index and display it in the Brushes dialog. You can hit the
File formats
GBR
The
Save a
GIH
The
VBR
The
To make a brush available, place it in one of the folders in GIMP's brush search path. By default, the brush search path includes two folders, the system
When you create a new parametric brush using the Brush Editor, it is automatically saved in your personal
There are a number of web sites with downloadable collections of GIMP brushes. Rather than supplying a list of links that will soon be out of date, the best advice is to do a search with your favorite search engine for
@@image: 'images/using/file-gih-save.png'; md5=c38cc3eddf82d57a85a41e2f23b65f7b
@@image: 'images/using/gih-array2D.png'; md5=c15b84ef6a337006a1f39b307847a573
@@image: 'images/using/gih-array3D.png'; md5=9feefe655bf2c5034f05b9faaafc82b6
@@image: 'images/using/gih-array1D.png'; md5=68095ff8ef85b22e5a9f104026505900
@@image: 'images/using/gih1234incr.png'; md5=916ee26278465b6f392b47d3441e6316
@@image: 'images/using/gih1234rand.png'; md5=8d8cb33c9bcf1271675c898c3e80edda
@@image: 'images/using/gih1234angl.png'; md5=61d5f4b2f9828f9f838601a663a4e2e1
@@image: 'images/using/gih-3Dnum.png'; md5=fc2b9899af4d83c132c50ebe6c61bd1e
@@image: 'images/using/gih-correlation.png'; md5=f0421f134c5e4534ac1b1dff89a7ab05
@@image: 'images/using/gih-hands-layers.png'; md5=aeecc0dc6089d90f578aaded7a68b988
@@image: 'images/using/gih-hands-stroke.png'; md5=3032494d8893f9cb754b05b12af748ec
The GIH Dialog Box
Creating an animated brush
When your new animated brush is created, it is displayed within the image window and you would like save it into a gih format. You select
The dialog to describe the animated brush
This dialog box shows up, if you save an image as GIMP image hose
This dialog box has several options not easy to understand. They allow you to determine the way your brush is animated.
Spacing (Percent)

It's the brush name that will appear at the top of Brush Dialog (grid mode) when the brush is selected.
Cell Size
That's size of cells you will cut up in layers... Default is one cell per layer and size is that of the layer. Then there is only one brush aspect per layer.
We could have only one big layer and cut up in it the cells that will be used for the different aspects of the animated brush.
For instance, we want a 100x100 pixels brush with 8 different aspects. We can take these 8 aspects from a 400x200 pixels layer, or from a 300x300 pixels layer but with one cell unused.
Number of cells
That's the number of cells (one cell per aspect) that will be cut in every layer. Default is the number of layers as there is only one layer per aspect.
Display as
This tells how cells have been arranged in layers. If, for example, you have placed height cells at the rate of two cells per layer on four layers, GIMP will display:
Dimension, Ranks, Selection
There things are getting complicated! Explanations are necessary to understand how to arrange cell and layers.
GIMP starts retrieving cells from each layer and stacks them into a FIFO stack (First In First Out: the first in is at the top of the stack and so can be first out). In our example 4 layers with 2 cells in each, we'll have, from top to bottom: first cell of first layer, second cell of first layer, first cell of second layer, second cell of second layer..., second cell of fourth layer. With one cell per layer or with several cells per layer, result is the same. You can see this stack in the Layer Dialog of the resulting
Then GIMP creates a computer array from this stack with the
In computer science an array has a
To fill up this array, GIMP starts retrieving cells from the top of stack. The way it fills the array reminds that of an odometer: right rank digits turn first and, when they reach their maximum, left rank digits start running. If you have some memories of Basic programming you will have, with an array(4,2,2), the following succession: (1,1,1),(1,1,2),(1,2,1),(1,2,2),(2,1,1),(2,1,2),(2,2,2),(3,1,1).... (4,2,2). We will see this later in an example.
Besides the rank number that you can give to each dimension, you can also give them a
Incremental

Random

Angular

For previous
The first rank is for the direction 0°, upwards. The other ranks are affected, clockwise, to an angle whose value is 360/number of ranks. So, with 4 ranks in the concerned dimension, the angle will move 90° clockwise for each direction change: second rank will be affected to 90° (rightwards), third rank to 180° (downwards) and fourth rank to 270° (-90°) (leftwards).
Speed, Pressure, x tilt, y tilt
These options are for sophisticated drawing tablets.
Examples
A one dimension image pipe
Well! What is all this useful for? We'll see that gradually with examples. You can actually place in each dimension cases that will give your brush a particular action.
Let us start with a 1D brush which will allow us to study selection modes action. We can imagine it like this:
Open a new 30x30 pixels image, RGB with Transparent fill type. Using the Text tool create 4 layers
Save this image first with
The Save As Dialog is opened: select a destination for your image. OK. The GIH dialog is opened: Choose Spacing 100, give a name in Description box, 30x30 for Cell Size, 1 dimension, 4 ranks and choose
You see 1, 2, 3, 4 digits following one another in order.
You may have difficulties to save directly in the GIMP Brush directory. In that case, save the
Digits will be displayed at random order.
Take your
Now select
A 3 dimensions image hose
We are now going to create a 3D animated brush: its orientation will vary according to brush direction, it will alternate Left/Right hands regularly and its color will vary at random between black and blue.
The first question we have to answer to is the number of images that is necessary. We reserve the first dimension (x) to the brush direction (4 directions). The second dimension (y) is for Left/Right alternation and the third dimension (z) for color variation. Such a brush is represented in a 3D array
Creating images of dimension 1 (x)
Ok, we are cheating here: our hand is borrowed from
Open a new 30x30 pixels image, RGB with Transparent Fill Type. Using the zoom draw a left hand with fingers upwards.
Open the Layer Dialog. Double click on the layer to open the Layer Attributes Dialog and rename it to handL0k.
Duplicate the layer. Let visible only the duplicated layer, select it and apply a 90° rotation (Layer/Transform/ 90° rotation clockwise). Rename it to handL90k.
Repeat the same operations to create handL180k and handL-90k (or handL270k).
Creating images of dimension 2 (y)
This dimension in our example has two ranks, one for left hand and the other for right hand. The left hand rank exists yet. We shall build right hand images by flipping it horizontally.
Duplicate the handL0k layer. Let it visible only and select it. Rename it to handR0K. Apply Layer/Transform/Flip Horizontally.
Repeat the same operation on the other left hand layers to create their right hand equivalent.
Re-order layers to have a clockwise rotation from top to bottom, alternating Left and Right: handL0k, handR0k, handL90k, handR90k, ..., handR-90k.
Creating images of dimension 3 (z)

Select the handL0k layer and let it visible only. Using Image/Canvas Size change canvas size to 60x30 pixels.
Duplicate hand0k layer. On the copy, fill the hand with blue using Bucket Fill tool.
Now, select the Move tool. Double click on it to accede to its properties: check
Make sure only handL0k and its blue copy are visible. Right click on the Layer Dialog: Apply the
Repeat the same operations on the other layers.
Set layers in order
Layers must be set in order so that GIMP can find the required image at some point of using the brush. Our layers are yet in order but we must understand more generally how to have them in order.There are two ways to imagine this setting in order. The first method is mathematical: GIMP divides the 16 layers first by 4; that gives 4 groups of 4 layers for the first dimension. Each group represents a direction of the brush. Then, it divides each group by 2; that gives 8 groups of 2 layers for the second dimension: each group represents a L/R alternation. Then another division by 2 for the third dimension to represent a color at random between black and blue.
The other method is visual, by using the array representation. Correlation between two methods is represented in next image:

Voilà. Your brush is ready. Save it as
Spacing: 100
Description: Hands
Cell Size: 30x30
Number of cells: 16
Dimensions: 3
Dimension 1: 4 ranks Selection: Angular
Dimension 2: 2 ranks Selection: Incremental
Dimension 3: 2 ranks Selection: Random
Place your
Here is the result by stroking an elliptical selection with the brush:
This brush alternates right hand and left hand regularly, black and blue color at random, direction according to four brush directions.
translator-credits
@@image: 'images/using/gif-save-dialog.png'; md5=18e73a491e516f7006c5aea9a73ec2fd
@@image: 'images/using/save-jpeg-dialog.png'; md5=8f727eb1345bd7fea3c3afcf43fb0bbe
@@image: 'images/using/save-tiff-dialog.png'; md5=0c2f1e58089f71e9daac13fb461fb557
Not all file types are equally good for all purposes. This part of the documentation should help you understand the advantages and disadvantages of each type.
Saving Files
Example of an Export dialog
As stated above, there is no file format, with the exception of GIMP's native
Saving as GIF
Saving as JPEG
After you save an image as a JPEG file, the image is no longer considered
Saving as PNG
Saving as TIFF