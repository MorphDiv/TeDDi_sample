# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3, PHP 4)
min() returns the numerically lowest of the parameter values.
In the first variant, you need at least two parameters and min() returns the lowest of these values.
You can compare an unlimited number of values.
If one of the variables is undefined, min() will fail.
In the second variant, min() returns the lowest value in numbers.
If one or more of the values is a float, all the values will be treated as floats, and a float is returned.
If none of the values is a float, all of them will be treated as integer s, and an integer is returned.
Upon failure, min() returns NULL and an error of level E_WARNING is generated.
?php $a = 4; $b = 9; $c = 3; $arr = array(99, 34, 11); / / You may want to implement your own error checking in / / case of failure (a variable may not be set) if (!$min_value = @min($a, $b, $c)) {echo "Could not get min value, please try again .";} else {echo "min value is $min_value";} print min($arr); / / 11?
See also max().
Prev
Home
Next
max
Up
mt_getrandmax