# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Chapter 7.
Types
Next
Floating point numbers (AKA "floats", "doubles "or "real numbers") can be specified using any of the following syntaxes:
?php $a = 1.234; $b = 1.2e3; $c = 7E-10;?
LNUM [0-9] + DNUM ([0-9]*[\ .]{LNUM}) | ({LNUM}[\ .][0-9]*) EXPONENT_DNUM (({LNUM} | {DNUM}) [eE][+ -]? {LNUM})
Floating point precision
It is quite usual that simple decimal fractions like 0.1 or 0.7 cannot be converted into their internal binary counterparts without a little loss of precision.
This can lead to confusing results: for example, floor( (0.1+0.7)*10) will usually return 7 instead of the expected 8 as the result of the internal representation really being something like 7.9999999999....
This is related to the fact that it is impossible to exactly express some fractions in decimal notation with a finite number of digits.
For instance, 1 / 3 in decimal form becomes 0.3333333....
So never trust floating number results to the last digit and never compare floating point numbers for equality.
If you really need higher precision, you should use the arbitrary precision math functions or gmp functions instead.
For information on when and how strings are converted to floats, see the section titled String conversion to numbers.
For values of other types, the conversion is the same as if the value would have been converted to integer and then to float.
See the Converting to integer section for more information.
Prev
Home
Next
Integers
Up
Strings