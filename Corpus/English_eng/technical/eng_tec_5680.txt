# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Cancel
Setup Custom Include Paths
Failed to save custom include paths in directory: %1
Add Custom Include Path
Open Project
Not Found: %1
Private Class Implementation Options
Refactoring is an experimental feature, it may damage your code. Before using it, make sure to make a backup.
Rename %1
Create separate definition for %1
Create Class
Did not select anything, not adding to a target.
No declaration under cursor
No source file available for %1.
Failed to update DU chain for %1.
Cannot create definition for this declaration.
Insertion failed
Applying changes failed
No document for %1
Declaration lost while updating
New name:
Rename
Note: All overloaded functions, overloads, forward-declarations, etc. will be renamed too
Uses
Renaming "%1" to "%2"
Applying changes failed: %1
Error Generating code
Update Definition from %1(%2) to (%3)
Failed to apply changes: %1
Tried include path resolution while another resolution process was still running
Makefile is missing in folder "%1"
Problem while trying to resolve include paths for %1
Cached: %1
Filename %1 seems to be malformed
Make process failed
Output: %1
Recursive make call failed
The parameter string "%1" does not seem to be valid. Output was: %2.
The directory "%1" does not exist. Output was: %2.
Malformed recursive make call
Output was: %1
Could not extract include paths from make output
Folder: "%1" Command: "%2" Output: "%3"
Add include directive
Add Forward-Declaration
forward-declare
Not Included
Override
Implement
Create Slot
From %1
Initialize
Not Included Container
Connect to %1 (%2)
Signals/ Slots
Virtual Override
Implement Function
C++ Builtin
Could not resolve base class, adding it indirectly: %1
Invalid base class: %1
Function macro
Macro
Preprocessed body:
Body:
Included
Included by
Defined macros
Declaration not found: %1
Create local declaration %1 %2
Declare %1 %2 %3
File was included recursively from within itself: %1
Included file was not found: %1
Searched include path: %1
Could not open file '%1 '
File could not be read from.
File could not be opened.
File permissions prevent opening for read.
Build manager for project %1 did not return a build directory
The include path resolver needs the build directory to resolve additional include paths. Consider setting up a build directory in the project manager if you have not done so yet.
Build manager did not return an include path
The build manager did not return the include path %1, which could be resolved by the include path resolver
Include path resolver: %1
Used build directory: "%1" Include path resolver: %2
This file imports the current open document
In include path %1
Included through %1
Directory %1
In %1th include path
Includes
Include Path
Includers
C++ Support
Support for C++ Language
Files
& Switch Definition/ Declaration
Create & New Class
Rename Declaration
Move into Source
Emptied by preprocessor
Parsing included files
Parsing actual file
Not updating duchain for %1
Building uses
Ready
Macro error
Call to macro %1 missing argument number %2
Formals: %1
Unterminated #if statement
character %1
Expected "identifier", found: %1
Token text %1 Input %2
Expected ")", found %1
Division by zero
Input text: %1
expected ` `: '' = %1
#else without #if
#endif without #if at output line %1
KDE forwarding header generator
An application which creates forwarding headers (like Qt headers) from source code.
(c) 2006, Hamish Rodda
KDE include directory - headers go into includes / KDE
Build information from the cmake XML generator
invalid input: %1
Navigation
Code
Your names
Your emails
Public
Protected
Private
Slot
Signal
C++ Options
& Export:
& Macro:
Options & settings to move the private data fields of a class into a private structure
Private structure name:
Options
Use class instead of struct
Move Variable initialization to private structure
Move all currently declared private methods to the private implementation structure.
Move Private methods
Pointer name:
The name of the member variable that will be the pointer held to the private implementation
d
Storage Directory
The custom include-path will be stored in a special file called ". kdev_include_paths" stored within a source directory. The custom path will be used for all files below that directory.
Storage Directory:
Automatic Resolution
If your project uses simple Makefiles, it may be possible to automatically resolve the include-paths using the make utility. For this, set up a mapping from a source- to a build-directory here.
Source Directory:
Build Directory:
Custom Include Paths
You can add a list of custom include paths here.
Note: These settings do not affect the compiler or the project in any way, they are only used to find included headers within KDevelop.