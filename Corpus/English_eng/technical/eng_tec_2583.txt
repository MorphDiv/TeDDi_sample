# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3, PHP 4)
Every array has an internal pointer to its "current" element, which is initialized to the first element inserted into the array.
The current() function simply returns the array element that's currently being pointed by the internal pointer.
It does not move the pointer in any way.
If the internal pointer points beyond the end of the elements list, current() returns FALSE.
Warning
If the array contains empty elements (0 or "", the empty string) then this function will return FALSE for these elements as well.
This makes it impossible to determine if you are really at the end of the list in such an array using current().
To properly traverse an array that may contain empty elements, use the each() function.
See also end(), next(), prev(), and reset().
Prev
Home
Next
count
Up
each