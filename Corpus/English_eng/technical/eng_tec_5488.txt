# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
Various parts of the PHP language are represented internally by types like T_SR.
PHP outputs identifiers like this one in parse errors, like "Parse error: unexpected T_SR, expecting ',' or ';' in script.php on line 10."
You 're supposed to know what T_SR means.
For everybody who doesn 't know that, here is a table with those identifiers, PHP-syntax and references to the appropriate places in the manual.
Table J-1.
Tokens
Token
Syntax
Reference
T_AND_EQUAL
=
assignment operators
T_ARRAY
array()
array(), array syntax
T_ARRAY_CAST
(array)
type-casting
T_AS
as
foreach
T_BAD_CHARACTER
anything below ASCII 32 except (0x09), \n (0x0a) and \r (0x0d)
T_BOOLEAN_AND
logical operators
T_BOOLEAN_OR
| |
logical operators
T_BOOL_CAST
(bool) or (boolean)
type-casting
T_BREAK
break
break
T_CASE
case
switch
T_CHARACTER
T_CLASS
class
classes and objects
T_CLOSE_TAG
? or%
T_COMMENT
/ / or #
comments
T_CONCAT_EQUAL
.=
assignment operators
T_CONST
const
T_CONSTANT_ENCAPSED_STRING
"foo" or'bar '
string syntax
T_CONTINUE
continue
T_CURLY_OPEN
T_DEC
- -
incrementing / decrementing operators
T_DECLARE
declare
declare
T_DEFAULT
default
switch
T_DIV_EQUAL
/=
assignment operators
T_DNUMBER
0.12, etc
floating point numbers
T_DO
do
do..while
T_DOLLAR_OPEN_CURLY_BRACES
${
complex variable parsed syntax
T_DOUBLE_ARROW
=
array syntax
T_DOUBLE_CAST
(real), (double) or (float)
type-casting
T_ECHO
echo
echo()
T_ELSE
else
else
T_ELSEIF
elseif
elseif
T_EMPTY
empty
empty()
T_ENCAPSED_AND_WHITESPACE
T_ENDDECLARE
enddeclare
declare, alternative syntax
T_ENDFOR
endfor
for, alternative syntax
T_ENDFOREACH
endforeach
foreach, alternative syntax
T_ENDIF
endif
if, alternative syntax
T_ENDSWITCH
endswitch
switch, alternative syntax
T_ENDWHILE
endwhile
while, alternative syntax
T_END_HEREDOC
heredoc syntax
T_EVAL
eval()
eval()
T_EXIT
exit or die
exit(), die()
T_EXTENDS
extends
extends, classes and objects
T_FILE
__FILE__
constants
T_FOR
for
for
T_FOREACH
foreach
foreach
T_FUNCTION
function or cfunction
functions
T_GLOBAL
global
variable scope
T_IF
if
if
T_INC
+ +
incrementing / decrementing operators
T_INCLUDE
include()
include()
T_INCLUDE_ONCE
include_once()
include_once()
T_INLINE_HTML
T_INT_CAST
(int) or (integer)
type-casting
T_ISSET
isset()
isset()
T_IS_EQUAL
==
comparison operators
T_IS_GREATER_OR_EQUAL
=
comparison operators
T_IS_IDENTICAL
===
comparison operators
T_IS_NOT_EQUAL
!= or
comparison operators
T_IS_NOT_IDENTICAL
!==
comparison operators
T_SMALLER_OR_EQUAL
=
comparison operators
T_LINE
__LINE__
constants
T_LIST
list()
list()
T_LNUMBER
123, 012, 0x1ac, etc
integers
T_LOGICAL_AND
and
logical operators
T_LOGICAL_OR
or
logical operators
T_LOGICAL_XOR
xor
logical operators
T_MINUS_EQUAL
-=
assignment operators
T_ML_COMMENT
/* and * /
comments
T_MOD_EQUAL
%=
assignment operators
T_MUL_EQUAL
*=
assignment operators
T_NEW
new
classes and objects
T_NUM_STRING
T_OBJECT_CAST
(object)
type-casting
T_OBJECT_OPERATOR
-
classes and objects
T_OLD_FUNCTION
old_function
old_function
T_OPEN_TAG
?php,? or%
escaping from HTML
T_OPEN_TAG_WITH_ECHO
?= or %=
escaping from HTML
T_OR_EQUAL
| =
assignment operators
T_PAAMAYIM_NEKUDOTAYIM
::
::
T_PLUS_EQUAL
+=
assignment operators
T_PRINT
print()
print()
T_REQUIRE
require()
require()
T_REQUIRE_ONCE
require_once()
require_once()
T_RETURN
return
returning values
T_SL
bitwise operators
T_SL_EQUAL
=
assignment operators
T_SR
bitwise operators
T_SR_EQUAL
=
assignment operators
T_START_HEREDOC
heredoc syntax
T_STATIC
static
variable scope
T_STRING
T_STRING_CAST
(string)
type-casting
T_STRING_VARNAME
T_SWITCH
switch
switch
T_UNSET
unset()
unset()
T_UNSET_CAST
(unset)
(not documented; casts to NULL)
T_USE
use
(not implemented)
T_VAR
var
classes and objects
T_VARIABLE
$foo
variables
T_WHILE
while
while, do..while
T_WHITESPACE
T_XOR_EQUAL
^=
assignment operators
T_FUNC_C
__FUNCTION__
constants, since PHP 4.3.0
T_CLASS_C
__CLASS__
constants, since PHP 4.3.0
Prev
Home
Next
Compression Streams
Up
About the manual