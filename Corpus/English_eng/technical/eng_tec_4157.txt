# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3 = 3.0.8, PHP 4)
OCIFetchStatement() fetches all the rows from a result into a user-defined array.
OCIFetchStatement() returns the number of rows fetched.
Example 1.
OCIFetchStatement
?php / * OCIFetchStatement example mbritton@verinet.com (990624) * / $conn = OCILogon("scott" ,"tiger"); $stmt = OCIParse($conn ,"select * from emp"); OCIExecute($stmt); $nrows = OCIFetchStatement($stmt,$results); if ($nrows 0) {print "TABLE BORDER=\"1\" \n"; print "TR \n"; while (list ($key, $val) = each ($results)) {print" TH $key / TH \n";} print "/ TR \n"; for ($i = 0; $i $nrows; $i+ +) {reset($results); print" TR \n"; while ($column = each($results)) {$data = $column['value']; print "TD $data[$i] / TD \n";} print" / TR \n";} print "/ TABLE \n";} else {echo "No data found BR \n";} print "$nrows Records Selected BR \n"; OCIFreeStatement($stmt); OCILogoff($conn);?
Prev
Home
Next
OCIFetchInto
Up
OCIFreeCollection