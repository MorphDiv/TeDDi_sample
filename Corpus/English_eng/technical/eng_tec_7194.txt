# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	Ubuntu
# source:	https://object.pouta.csc.fi/OPUS-Ubuntu/v14.10/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/Ubuntu.php
# copyright_long:	http://opus.nlpl.eu/Ubuntu.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

script or expression reference to %s
%s: no archive symbol table (run ranlib)
%s: bad archive symbol table names
%s: malformed archive header at %zu
%s: malformed archive header size at %zu
%s: malformed archive header name at %zu
%s: bad extended name index at %zu
%s: bad extended name entry at header %zu
%s: short archive header at %zu
%s: member at %zu is not an ELF object
%s: archive libraries: %u
%s: total archive members: %u
%s: loaded archive members: %u
%s: lib groups: %u
%s: total lib groups members: %u
%s: loaded lib groups members: %u
invalid reloc %u
reloc
unimplemented reloc
dynamic reloc
private reloc
obsolete reloc
** ARM cantunwind
%s: Thumb BLX instruction targets thumb function '%s'.
conditional branch to PLT in THUMB-2 not supported yet.
PREL31 overflow in EXIDX_CANTUNWIND entry
uneven .ARM.exidx section size in %s section %u
Found non-EXIDX input sections in EXIDX output section
unwinding may not work because EXIDX input section %u of %s is not in EXIDX output section
cannot scan executable section %u of %s for Cortex-A8 erratum because it has no mapping symbols.
invalid symbol table name index: %u
symbol table name section has wrong type: %u
EXIDX section %s(%u) links to invalid section %u in %s
EXIDX sections %s(%u) and %s(%u) both link to text section%s(%u) in %s
EXIDX section %s(%u) links to non-allocated section %s(%u) in %s
EXIDX section %s(%u) links to non-executable section %s(%u) in %s
SHF_LINK_ORDER not set in EXIDX section %s of %s
relocation section %u has invalid info %u
section %u has multiple relocation sections %u and %u
undefined or discarded local symbol %u from object %s in GOT
undefined or discarded symbol %s in GOT
** PLT
%s: unsupported reloc %u against local symbol
requires unsupported dynamic reloc %s; recompile with -fPIC
section symbol %u has bad shndx %u
%s: unexpected reloc %u in object file
local symbol %u has bad shndx %u
%s: unsupported reloc %u against global symbol %s
%s: unsupported RELA reloc section
unable to provide V4BX reloc interworking fix up; the target profile does not support BX instruction
cannot relocate %s in object file
relocation overflow in %s
unexpected opcode while processing relocation %s
unsupported reloc %u
%s: unexpected %s in object file
cannot handle %s in a relocatable link
Source object %s has EABI version %d but output has EABI version %d.
%s: unsupported ELF file type %d
%s: unknown CPU architecture
%s: conflicting CPU architectures %d/%d
%s has both the current and legacy Tag_MPextension_use attributes
%s uses VFP register arguments, output does not
conflicting architecture profiles %c/%c
%s: conflicting platform configuration
%s: conflicting use of R9
%s: SB relative addressing conflicts with use of R9
%s uses %u-byte wchar_t yet the output is to use %u-byte wchar_t; use of wchar_t values across objects may fail
%s uses %s enums yet the output is to use %s enums; use of enum values across objects may fail
%s uses iWMMXt register arguments, output does not
fp16 format mismatch between %s and output
%s has has both the current and legacy Tag_MPextension_use attributes
%s: unknown mandatory EABI object attribute %d
%s: unknown EABI object attribute %d
cannot handle branch to local %u in a merged section %s
relocation refers to discarded section
multiple SHT_ARM_EXIDX sections %s and %s in a non-relocatable link
%s: must be processed by '%s' toolchain
%s: object tag '%d, %s' is incompatible with tag '%d, %s'
cannot open %s: %s:
out of patch space in section %s; relink with --incremental-full
not compressing section data: zlib error
cannot open symbol count file %s: %s
Cross Reference Table
Symbol
File
file %s was removed during the link
out of file descriptors and couldn't close any
while closing %s: %s
%s: can not read directory: %s
%s: DWARF info may be corrupt; offsets in a range list entry are in different sections
%s: corrupt debug info in %s
unexpected duplicate type %u section: %u, %u
unexpected link in section %u header: %u != %u
DYNAMIC section %u link out of range: %u
DYNAMIC section %u link %u is not a strtab
DT_SONAME value out of range: %lld >= %lld
DT_NEEDED value out of range: %lld >= %lld
missing DT_NULL in dynamic segment
invalid dynamic symbol table name index: %u
dynamic symbol table name section has wrong type: %u
bad section name offset for section %u: %lu
duplicate definition for version %u
unexpected verdef version %u
verdef vd_cnt field too small: %u
verdef vd_aux field out of range: %u
verdaux vda_name field out of range: %u
verdef vd_next field out of range: %u
unexpected verneed version %u
verneed vn_aux field out of range: %u
vernaux vna_name field out of range: %u
verneed vna_next field out of range: %u
verneed vn_next field out of range: %u
size of dynamic symbols is not multiple of symbol size
symbol %s has undefined version %s
overflow in PLT unwind data; unwinding through PLT may fail
** eh_frame_hdr
** eh_frame
%s: fatal error:
%s: error:
%s: warning:
warning
error
%s: %s: undefined reference to '%s'
%s: %s: undefined reference to '%s', version '%s'
%s: the vtable symbol may be undefined because the class is missing its key function
%s:
undefined symbol '%s' referenced in expression
invalid reference to dot symbol outside of SECTIONS clause
unary
binary
by zero
max applied to section relative value
min applied to section relative value
aligning to section relative value
unknown constant %s
munmap failed: %s
%s: fstat failed: %s
could not reopen file %s
%s: pread failed: %s
%s: file too short: read only %lld of %lld bytes at %lld
%s: attempt to map %lld bytes at offset %lld exceeds size of file; the file may be corrupt
%s: lseek failed: %s
%s: readv failed: %s
%s: file too short: read only %zd of %zd bytes at %lld
%s: total bytes mapped for read: %llu
%s: maximum bytes mapped for read at one time: %llu
%s: stat failed: %s
cannot find %s%s
cannot find %s
cannot open %s: %s
%s: --gdb-index currently supports only C and C++ languages
%s: top level DIE is not DW_TAG_compile_unit or DW_TAG_type_unit
%s: DWARF info may be corrupt; low_pc and high_pc are in different sections
%s: DWARF CUs: %u
%s: DWARF CUs without pubnames/pubtypes: %u
%s: DWARF TUs: %u
%s: DWARF TUs without pubnames/pubtypes: %u
** gdb_index
pthead_mutextattr_init failed: %s
pthread_mutextattr_settype failed: %s
pthread_mutex_init failed: %s
pthread_mutexattr_destroy failed: %s
pthread_mutex_destroy failed: %s
pthread_mutex_lock failed: %s
pthread_mutex_unlock failed: %s
pthread_cond_init failed: %s
pthread_cond_destroy failed: %s
pthread_cond_wait failed: %s
pthread_cond_signal failed: %s
pthread_cond_broadcast failed: %s
pthread_once failed: %s
%s: internal error in %s, at %s:%d
no input files
linking with --incremental-full
restart link with --incremental-full
cannot mix -r with --gc-sections or --icf
cannot mix -static with dynamic object %s
cannot mix -r with dynamic object %s
cannot use non-ELF output format with dynamic object %s
cannot mix split-stack '%s' and non-split-stack '%s' when using -r
missing expected TLS relocation
%s: unsupported TLS reloc %u for IFUNC symbol
unexpected reloc %u in object file
both SUN and GNU model TLS relocations
unsupported reloc %u in object file
failed to match split-stack sequence at section %u offset %0zx
%s: ICF Converged after %u iteration(s)
%s: ICF stopped after %u iteration(s)
Could not find symbol %s to unfold
** incremental_inputs
the link might take longer: cannot perform incremental link: %s
no incremental data from previous build
different version of incremental build data
command line changed
%s: script file changed
unsupported ELF machine number %d
%s: incompatible target
output is not an ELF file.
unsupported file: 32-bit, big-endian
unsupported file: 32-bit, little-endian
unsupported file: 64-bit, big-endian
unsupported file: 64-bit, little-endian
COMDAT group has no signature
COMDAT group %s included twice in incremental link
Unusually large LEB128 decoded, debug information may be corrupted
%s: total free lists: %u
%s: total free list nodes: %u
%s: calls to Free_list::remove: %u
%s: nodes visited: %u
%s: calls to Free_list::allocate: %u
Unable to create output section '%s' because it is not allowed by the SECTIONS clause of the linker script
multiple '.interp' sections in input files may cause confusing PT_INTERP segment
%s: missing .note.GNU-stack section implies executable stack
%s: requires executable stack
unable to open --section-ordering-file file %s: %s
--build-id=uuid failed: could not open /dev/urandom: %s
/dev/urandom: read failed: %s
/dev/urandom: expected %zu bytes, got %zd bytes
--build-id argument '%s' not a valid hex number
unrecognized --build-id argument '%s'
load segment overlap [0x%llx -> 0x%llx] and [0x%llx -> 0x%llx]
out of patch space for section %s; relink with --incremental-full
%s: section changed size; relink with --incremental-full
out of patch space for symbol table; relink with --incremental-full
out of patch space for section header table; relink with --incremental-full
read-only segment has dynamic relocations
shared library text segment is not shareable
cannot open map file %s: %s
cannot close map file: %s
Archive member included because of file (symbol)
Allocating common symbols
Common symbol size file
Memory map
Discarded input sections
%s: %s merged constants size: %lu; input: %zu; output: %zu
mergeable string section length not multiple of character size
%s: last entry in mergeable string section '%s' not null terminated
%s: section %s contains incorrectly aligned strings; the alignment of those strings won't be preserved
%s: %s input bytes: %zu
%s: %s input strings: %zu
** merge constants
** merge strings
%s: %s
missing SHT_SYMTAB_SHNDX section
symbol %u out of range for SHT_SYMTAB_SHNDX section
extended index for symbol %u out of range: %u
section name section has wrong type: %u
section group %u info %u out of range
symbol %u name offset %u out of range
symbol %u invalid section index %u
section %u in section group %u out of range
invalid section group %u refers to earlier section %u
relocation section %u has bad info %u
%s: removing unused section from '%s' in file '%s'
%s: ICF folding section '%s' in file '%s'into '%s' in file '%s'
size of symbols is not multiple of symbol size
local symbol %u section name out of range: %u >= %u
unknown section index %u for local symbol %u
local symbol %u section index %u out of range
could not decompress section %s
%s is not supported but is required for %s in %s
function
%s: unsupported ELF machine number %d
%s: not configured to support 32-bit big-endian object
%s: not configured to support 32-bit little-endian object
%s: not configured to support 64-bit big-endian object
%s: not configured to support 64-bit little-endian object
Usage: %s [options] file...
Options:
%s: supported targets:
%s: supported emulations:
Report bugs to %s
%s: invalid option value (expected an integer): %s
%s: invalid option value (expected a floating point number): %s
%s: must take a non-empty argument
%s: must take one of the following arguments: %s
Supported targets:
Supported emulations:
invalid argument to --section-start; must be SECTION=ADDRESS
--section-start address missing
--section-start argument %s is not a valid hex number
unable to parse script file %s
unable to parse version script file %s
unable to parse dynamic-list script file %s
format '%s' not supported; treating as elf (supported formats: elf, binary)
%s: use the --help option for usage information
%s: %s: %s
unexpected argument
missing argument
unknown -z option
ignoring --threads: %s was compiled without thread support
ignoring --thread-count: %s was compiled without thread support
unable to open -retain-symbols-file file %s: %s
-shared and -static are incompatible
-shared and -pie are incompatible
-pie and -static are incompatible
-shared and -r are incompatible
-pie and -r are incompatible
-F/--filter may not used without -shared
-f/--auxiliary may not be used without -shared
-retain-symbols-file does not yet work with -r
binary output format not compatible with -shared or -pie or -r
--hash-bucket-empty-fraction value %g out of range [0.0, 1.0)
Options --incremental-changed, --incremental-unchanged, --incremental-unknown require the use of --incremental
incremental linking is not compatible with -r
incremental linking is not compatible with --emit-relocs
incremental linking is not compatible with --plugin
ignoring --gc-sections for an incremental link
ignoring --icf for an incremental link
ignoring --compress-debug-sections for an incremental link
May not nest groups
may not nest groups in libraries
Group end without group start
may not nest libraries
may not nest libraries in groups
lib end without lib start
unknown option
%s: missing group end
Report usage information
Report version information
Report version and target information
Not supported
Do not copy DT_NEEDED tags from shared libraries
Allow multiple definitions of symbols
Do not allow multiple definitions
Allow unresolved references in shared libraries
Do not allow unresolved references in shared libraries
Only set DT_NEEDED for shared libraries if used
Always DT_NEEDED for shared libraries
Ignored
[ignored]
Set input format
-l searches for shared libraries
-l does not search for shared libraries
alias for -Bdynamic
alias for -Bstatic
Use group name lookup rules for shared library
Bind defined symbols locally
Bind defined function symbols locally
Generate build ID note
[=STYLE]
Chunk size for '--build-id=tree'
SIZE
Minimum output file size for '--build-id=tree' to work differently than '--build-id=sha1'
Check segment addresses for overlaps (default)
Do not check segment addresses for overlaps
Compress .debug_* sections in the output file
[none]
Output cross reference table
Do not output cross reference table
Use DT_INIT_ARRAY for all constructors (default)
Handle constructors as directed by compiler
Define common symbols
Do not define common symbols
Alias for -d
Turn on debugging
[all,files,script,task][,...]
Define a symbol
SYMBOL=EXPRESSION
Demangle C++ symbols in log messages
Do not demangle C++ symbols in log messages
Look for violations of the C++ One Definition Rule
Do not look for violations of the C++ One Definition Rule
Delete all local symbols
Delete all temporary local symbols
Add data symbols to dynamic symbols
Add C++ operator new/delete to dynamic symbols
Add C++ typeinfo to dynamic symbols
Read a list of dynamic symbols
FILE
Set program start address
ADDRESS
Exclude libraries from automatic export
Export all dynamic symbols
Do not export all dynamic symbols (default)
Export SYMBOL to dynamic symbol table
SYMBOL
Link big-endian objects.
Link little-endian objects.
Create exception frame header
(ARM only) Do not warn about objects with incompatible enum sizes
Auxiliary filter for shared object symbol table
SHLIB
Filter for shared object symbol table
Treat warnings as errors
Do not treat warnings as errors
Call SYMBOL at unload-time
(ARM only) Fix binaries for Cortex-A8 erratum.
(ARM only) Do not fix binaries for Cortex-A8 erratum.
(ARM only) Fix binaries for ARM1176 erratum.
(ARM only) Do not fix binaries for ARM1176 erratum.
(ARM only) Merge exidx entries in debuginfo.
(ARM only) Do not merge exidx entries in debuginfo.
(ARM only) Rewrite BX rn as MOV pc, rn for ARMv4
(ARM only) Rewrite BX rn branch to ARMv4 interworking veneer
Generate .gdb_index section
Do not generate .gdb_index section
Enable STB_GNU_UNIQUE symbol binding (default)
Disable STB_GNU_UNIQUE symbol binding
Set shared library name
FILENAME
Min fraction of empty buckets in dynamic hash
FRACTION
Dynamic hash style
[sysv,gnu,both]
Set dynamic linker path
PROGRAM
Do an incremental link if possible; otherwise, do a full link and prepare output for incremental linking
Do a full link (default)
Do a full link and prepare output for incremental linking
Do an incremental link; exit if not possible
Set base file for incremental linking (default is output file)
Assume files changed
Assume files didn't change
Use timestamps to check files (default)
Assume startup files unchanged (files preceding this option)
Amount of extra space to allocate for patches
PERCENT
Call SYMBOL at load-time
Read only symbol values from FILE
Map whole files to memory (default on 64-bit hosts)
Map relevant file parts to memory (default on 32-bit hosts)
Keep files mapped across passes (default)
Release mapped files after each pass
Generate unwind information for PLT (default)
Do not generate unwind information for PLT
Search for library LIBNAME
LIBNAME
Add directory to search path
DIR
Enable text section reordering for GCC section names (default)
Disable text section reordering for GCC section names
Only search directories specified on the command line.
Put read-only non-executable sections in their own segment
Set offset between executable and read-only segments
OFFSET
Set GNU linker emulation; obsolete
EMULATION
Map the output file for writing (default).
Do not map the output file for writing.
Write map file on standard output
Write map file
MAPFILENAME
Do not page align data
Do not page align data, do not make text readonly
Page align data, make text readonly
Enable use of DT_RUNPATH and DT_FLAGS
Disable use of DT_RUNPATH and DT_FLAGS
Create an output file even if errors occur
Report undefined symbols (even with --shared)
Set output file name
Optimize output file size
LEVEL
Set output format
[binary]
(ARM only) Ignore for backward compatibility
Create a position independent executable
(PowerPC64 only) Align PLT call stubs to fit cache lines
[=P2ALIGN]
(PowerPC64 only) PLT call stubs should load r11
(PowerPC64 only) PLT call stubs should not load r11
(PowerPC64 only) PLT call stubs with load-load barrier
(PowerPC64 only) PLT call stubs without barrier
Load a plugin library
PLUGIN
Pass an option to the plugin
OPTION
Use posix_fallocate to reserve space in the output file (default).
Use fallocate or ftruncate to reserve space.
Preread archive symbols when multi-threaded
Print default output format
Print symbols defined and used for each input
Ignored for SVR4 compatibility
Generate relocations in output
Generate relocatable output
Synonym for -r
Relax branches on certain targets
keep only symbols listed in this file
Add DIR to runtime search path
Add DIR to link time shared library search path
Layout sections in the order specified.
Set address of section
SECTION=ADDRESS
Sort common symbols by alignment
[={ascending,descending}]
Sort sections by name. '--no-text-reorder' will override '--sort-section=name' for .text
[none,name]
Dynamic tag slots to reserve (default 5)
COUNT
Strip all symbols
Strip debugging information
Emit only debug line number information
Strip debug symbols that are unused by gdb (at least versions <= 7.4)
Strip LTO intermediate code sections
(ARM, PowerPC only) The maximum distance from instructions in a group of sections to their stubs. Negative values mean stubs are always after (PowerPC before) the group. 1 means use default size.
Use less memory and more disk I/O (included only for compatibility with GNU ld)
Generate shared library
Stack size when -fsplit-stack function calls non-split
Do not link against shared libraries
Identical Code Folding. '--icf=safe' Folds ctors, dtors and functions whose pointers are definitely not taken.
Number of iterations of ICF (default 2)
List folded identical sections on stderr
Do not list folded identical sections
Do not fold this symbol during ICF
Remove unused sections
Don't remove unused sections (default)
List removed unused sections on stderr
Do not list removed unused sections
Print resource usage statistics
Set target system root directory
Print the name of each input file
Read linker script
Run the linker multi-threaded
Do not run the linker multi-threaded
Number of threads to use
Number of threads to use in initial pass
Number of threads to use in middle pass
Number of threads to use in final pass
Set the address of the bss segment
Set the address of the data segment
Set the address of the text segment
Set the address of the rodata segment
(PowerPC64 only) Optimize TOC code sequences
(PowerPC64 only) Don't optimize TOC code sequences
(PowerPC64 only) Sort TOC and GOT sections
(PowerPC64 only) Don't sort TOC and GOT sections
Create undefined reference to SYMBOL
How to handle unresolved symbols
Synonym for --debug=files
Read version script
Warn about duplicate common symbols
Do not warn about duplicate common symbols (default)
Warn if the stack is executable
Do not warn if the stack is executable (default)
Don't warn about mismatched input files
Warn when skipping an incompatible library
Don't warn when skipping an incompatible library
Warn if text segment is not shareable
Do not warn if text segment is not shareable (default)
Report unresolved symbols as warnings
Report unresolved symbols as errors
(ARM only) Do not warn about objects with incompatible wchar_t sizes
Include all archive contents
Include only needed archive contents
Use wrapper functions for SYMBOL
Trace references to symbol
Allow unused version in script (default)
Do not allow unused version in script
Default search path for Solaris compatibility
PATH
Start a library search group
End a library search group
Start a library
End a library
Ignored for GCC linker option compatibility
Sort dynamic relocs
Do not sort dynamic relocs
Set common page size to SIZE
Mark output as requiring executable stack
Mark DSO to be initialized first at runtime
Mark object to interpose all DSOs but executable
Mark object for lazy runtime binding (default)
Mark object requiring immediate process
Set maximum page size to SIZE
Do not create copy relocs
Mark object not to use default search paths
Mark DSO non-deletable at runtime
Mark DSO not available to dlopen
Mark DSO not available to dldump
Mark output as not requiring executable stack
Mark object for immediate function binding
Mark DSO to indicate that needs immediate $ORIGIN processing at runtime
Where possible mark variables read-only after relocation
Don't mark variables read-only after relocation
Do not permit relocations in read-only segments
Permit relocations in read-only segments (default)
section group retained but group element discarded
out of patch space (GOT); relink with --incremental-full
invalid alignment %lu for section "%s"
dot moves backward in linker script from 0x%llx to 0x%llx
address of section '%s' moves backward from 0x%llx to 0x%llx
%s: incremental base and output file name are the same
%s: stat: %s
%s: incremental base file is empty
%s: open: %s
%s: read failed: %s
%s: file too short: read only %lld of %lld bytes
%s: mremap: %s
%s: mmap: %s
%s: mmap: failed to allocate %lu bytes for output file: %s
%s: munmap: %s
%s: write: unexpected 0 return-value
%s: write: %s
%s: close: %s
** section headers
** segment headers
** file header
** fill
** string table
** dynamic relocs
** relocs
** group
** GOT
** dynamic
** symtab xindex
input file does not match -EB/EL option
-Trodata-segment is meaningless without --rosegment
unrecognized output format %s
unrecognized emulation %s
no supported target for -EB/-EL option
%s: could not load plugin library: %s
%s: could not find onload entry point
input files added by plug-ins in --incremental mode not supported yet
missing expected __tls_get_addr call
%s: ABI version %d is not compatible with ABI version %d output
%s: .opd invalid in abiv%d
%s: unexpected reloc type %u in .opd section
%s: .opd is not a regular array of opd entries
%s: local symbol %d has invalid st_other for ABI version 1
%s:%s exceeds group size
%s:%s: branch in non-executable section, no long branch stub for you
** glink
%s: linkage table error against `%s'
** save/restore
requires unsupported dynamic reloc; recompile with -fPIC
%s: unsupported reloc %u for IFUNC symbol
%s: unsupported REL reloc section
__tls_get_addr call lacks marker reloc
call lacks nop, can't restore toc; recompile with -fPIC
toc optimization is not supported for %#08x instruction
relocation overflow
%s: file is empty
%s: not an object or archive
Debug abbreviations extend beyond .debug_abbrev section; failed to reduce debug abbreviations
Extremely large compile unit in debug info; failed to reduce debug info
Debug info extends beyond .debug_info section;failed to reduce debug info
Invalid DIE in debug info; failed to reduce debug info
Debug info extends beyond .debug_info section; failed to reduce debug info
relocation section %u uses unexpected symbol table %u
unexpected entsize for reloc section %u: %lu != %u
reloc section %u size %lu uneven
could not convert call to '%s' to '%s'
reloc section size %zu is not a multiple of reloc size %d
invalid STB_LOCAL symbol in external symbols
unsupported symbol binding %d
%s symbol '%s' in %s is referenced by DSO %s
common of '%s' overriding smaller common
common of '%s' overidden by larger common
multiple common of '%s'
symbol '%s' used as both __thread and non-__thread
multiple definition of '%s'
definition of '%s' overriding common
definition of '%s' overriding dynamic common definition
common '%s' overridden by previous definition
COPY reloc
command line
linker script
linker defined
section %s overflows end of region %s
Attempt to set a memory region for a non-output section
dot may not move backward
** expression
fill value is not absolute
alignment of section %s is not absolute
subalign of section %s is not absolute
fill of section %s is not absolute
SPECIAL constraints are not implemented
mismatched definition for constrained sections
region '%.*s' already defined
DATA_SEGMENT_ALIGN may only appear once in a linker script
DATA_SEGMENT_RELRO_END may only appear once in a linker script
DATA_SEGMENT_RELRO_END must follow DATA_SEGMENT_ALIGN
no matching section constraint
creating a segment to contain the file and program headers outside of any MEMORY region
TLS sections are not adjacent
allocated section %s not in any segment
no segment %s
section in two PT_LOAD segments
allocated section not in any PT_LOAD segment
may only specify load address for PT_LOAD segment
PHDRS load address overrides section %s load address
using only one of FILEHDR and PHDRS is not currently supported
sections loaded on first page without room for file and program headers are not supported
using FILEHDR and PHDRS on more than one PT_LOAD segment is not currently supported
invalid use of PROVIDE for dot symbol
%s: SECTIONS seen after other input files; try -T/--script
'%s' appears as both a global and a local symbol for version '%s' in script
wildcard match appears in both version '%s' and '%s' in script
wildcard match appears as both global and local in version '%s' in script
using '%s' as version for '%s' which is also named in version '%s' in script
version script assignment of %s to symbol %s failed: symbol not defined
%s:%d:%d: %s
library name must be prefixed with -l
%s:%d:%d: ignoring command OPTION; OPTION is only valid for scripts specified via -T/--script
%s:%d:%d: ignoring SEARCH_DIR; SEARCH_DIR is only valid for scripts specified via -T/--script
%s:%d:%d: invalid use of VERSION in input file
unrecognized version script language '%s'
%s:%d:%d: DATA_SEGMENT_ALIGN not in SECTIONS clause
unknown PHDR type (try integer)
%s:%d:%d: MEMORY region '%.*s' referred to outside of SECTIONS clause
%s:%d:%d: MEMORY region '%.*s' not declared
unknown MEMORY attribute
undefined memory region '%s' referenced in ORIGIN expression
undefined memory region '%s' referenced in LENGTH expression
%s: little endian elf flag set on BE object
%s: little endian elf flag clear on LE object
%s: %s entries: %zu; buckets: %zu
%s: %s entries: %zu
%s: %s Stringdata structures: %zu
Cannot export local symbol '%s'
%s: reference to %s
%s: definition of %s
bad global symbol name offset %u at %zu
--just-symbols does not make sense with a shared object
too few symbol versions
bad symbol name offset %u at %zu
versym for symbol %zu out of range: %u
versym for symbol %zu has no name: %u
%s: unsupported symbol section 0x%x
%s: symbol table entries: %zu; buckets: %zu
%s: symbol table entries: %zu
while linking %s: symbol '%s' defined in multiple places (possible ODR violation):
%s from %s
internal
hidden
protected
%s symbol '%s' is not defined locally
reloc has bad offset %zu
linker does not include stack split support required by %s
out of patch space (PLT); relink with --incremental-full
TLS_DESC not yet supported for incremental linking
TLS_DESC not yet supported for TILEGX
requires unsupported dynamic reloc %u; recompile with -fPIC
TLS relocation out of range
TLS relocation against invalid instruction
Copyright 2014 Free Software Foundation, Inc.
This program is free software; you may redistribute it under the terms of
the GNU General Public License version 3 or (at your option) a later version.
This program has absolutely no warranty.
%s failed: %s
requires dynamic R_X86_64_32 reloc which may overflow at runtime; recompile with -fPIC
requires dynamic %s reloc against '%s' which may overflow at runtime; recompile with -fPIC
unsupported reloc type %u
unsupported reloc %u against local symbol