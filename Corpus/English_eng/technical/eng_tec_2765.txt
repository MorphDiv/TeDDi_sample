# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(no version information, might be only in CVS)
This function inserts the new node newnode right before the node refnode.
The return value is the inserted node.
If you plan to do further modifications on the appended child you must use the returned node.
(PHP = 4.3 only) If newnode already is part of a document, it will be first unlinked from its existing context.
If refnode is NULL, then newnode will be inserted at the end of the list of children.
domnode_insert_before() is very similar to domnode_append_child() as the following example shows which does the same as the example at domnode_append_child().
Example 1.
Adding a child
include( "example.inc"); if(!$dom = domxml_open_mem($xmlstr)) {echo "Error while parsing the document\n"; exit;} $elements = $dom - get_elements_by_tagname("informaltable"); print_r($elements); $element = $elements[0]; $newnode = $element - insert_before($element, $element); $children = $newnode - children(); $attr = $children[1] - set_attribute("align", "left"); echo "PRE"; $xmlfile = $dom - dump_mem(); echo htmlentities($xmlfile); echo "/ PRE";
See also domnode_append_child().
Prev
Home
Next
DomNode - has_child_nodes
Up
DomNode - is_blank_node