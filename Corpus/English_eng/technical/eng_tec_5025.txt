# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3, PHP 4)
Note:
The optional charlist parameter was added in PHP 4.1.0
This function returns a string with whitespace stripped from the beginning and end of str.
Without the second parameter, trim() will strip these characters:
"" (ASCII 32 (0x20)), an ordinary space.
" " (ASCII 9 (0x09)), a tab.
"\n" (ASCII 10 (0x0A)), a new line (line feed).
"\r" (ASCII 13 (0x0D)), a carriage return.
"\0" (ASCII 0 (0x00)), the NUL -byte.
"\x0B" (ASCII 11 (0x0B)), a vertical tab.
You can also specify the characters you want to strip, by means of the charlist You can also specify the characters you want to strip, by means of the charlist parameter.
Simply list all characters that you want to be stripped.
With.. you can specify a range of characters.
Example 1.
Usage example of trim()
?php $text = " These are a few words:)..."; $trimmed = trim($text); / / $trimmed = "These are a few words:)... "$trimmed = trim($text," ."); / / $trimmed = "These are a few words:) "$clean = trim($binary ,"\0x00..\0x1F"); / / trim the ASCII control characters at the beginning and end of $binary / / (from 0 to 31 inclusive)?
See also ltrim() and rtrim().
Prev
Home
Next
substr
Up
ucfirst