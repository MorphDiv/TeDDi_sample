# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3, PHP 4)
Reads to EOF on the given file pointer from the current position and writes the results to the output buffer.
If an error occurs, fpassthru() returns FALSE.
Otherwise, fpassthru() returns the number of characters read from handle and passed through to the output.
The file pointer must be valid, and must point to a file successfully opened by fopen(), popen(), or fsockopen().
You may need to call rewind() You may need to call rewind() to reset the file pointer to the beginning of the file if you have already written data to the file.
The file is closed when fpassthru() is done reading it (leaving handle useless).
If you just want to dump the contents of a file to the output buffer, without first modifying it or seeking to a particular offset, you may want to use the readfile(), which saves you the fopen() call.
Note:
When using fpassthru() on a binary file on Windows systems, you should make sure to open the file in binary mode by appending a b to the mode used in the call to fopen().
You are encouraged to use the b flag when dealing with binary files, even if your system does not require it, so that your scripts will be more portable.
See also readfile(), fopen(), popen(), and fsockopen()
Prev
Home
Next
fopen
Up
fputs