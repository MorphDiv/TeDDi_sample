# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 4 = 4.3.0)
debug_backtrace() generates a PHP backtrace and returns this information as an associative array.
The possible returned elements are listed in the following table:
Table 1.
Possible returned elements from debug_backtrace()
Name
Type
Description
function
string
The current function name.
See also __FUNCTION__.
line
integer
The current line number.
See also __LINE__.
file
string
The current file name.
See also __FILE__.
class
string
The current class name.
See also __CLASS__
type
string
The current class type.
args
array
If inside a function, this lists the functions arguments.
If inside a included file, this lists the included file name( s).
The following is a simple example.
Example 1. debug_backtrace() example
/ / filename: a.php ?php function a_test( $str) {print "\nHi: $str"; var_dump(debug_backtrace());} a_test('friend');? / / filename: b.php ?php include_once '/ tmp / a.php';? / * Results when executing / tmp / b.php Hi: friend array(2) {[0]= array(4) {["file"] = string(10) "/ tmp / a.php" ["line"] = int(10) ["function"] = string(6) "a_test "["args"]= array(1) {[0] = string(6) "friend"}} [1]= array(4) {["file"] = string(10) "/ tmp / b.php" ["line"] = int(2) ["args"] = array(1) {[0] = string(10) "/ tmp / a.php"} ["function"] = string(12) "include_once "}} * /
See also trigger_error().
Prev
Home
Next
Error Handling and Logging Functions
Up
error_log