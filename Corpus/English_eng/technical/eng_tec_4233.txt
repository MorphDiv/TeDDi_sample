# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 4 = 4.2.0)
openssl_csr_sign() generates an x509 certificate resource from the csr previously generated by openssl_csr_new(), but it can also be the path to a PEM encoded CSR when specified as file: / /path / to / csr or an exported string generated by openssl_csr_export().
The generated certificate will be signed by cacert.
If cacert is NULL, the generated certificate will be a self-signed certificate. priv_key is the private key that corresponds to cacert. days specifies the length of time for which the generated certificate will be valid, in days.
Returns an x509 certificate resource on success, FALSE on failure.
Note:
You need to have a valid openssl.cnf installed for this function to operate correctly.
See the notes under the installation section for more information.
Example 1. openssl_csr_sign() example - signing a CSR (how to implement your own CA)
/ / Let' s assume that this script is set to receive a CSR that has / / been pasted into a textarea from another page $csrdata = $_POST["CSR"]; / / We will sign the request using our own "certificate authority "/ / certificate.
You can use any certificate to sign another, but / / the process is worthless unless the signing certificate is trusted / / by the software / users that will deal with the newly signed certificate / / We need our CA cert and it' s private key $cacert = "file: / /path / to / ca.crt"; $privkey = array("file: / /path / to / ca.key", "your_ca_key_passphrase"); $userscert = openssl_csr_sign($csrdata, $cacert, $privkey, 365); / / Now display the generated certificate so that the user can / / copy and paste it into their local configuration (such as a file / / to hold the certificate for their SSL server) openssl_x509_export($usercert, $certout) and echo $certout; / / Show any errors that occurred here while (($e = openssl_error_string()) !== false) {echo $e. "\n";}
Prev
Home
Next
openssl_csr_new
Up
openssl_error_string