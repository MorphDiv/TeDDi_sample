# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 4)
compact() takes a variable number of parameters.
Each parameter can be either a string containing the name of the variable, or an array of variable names.
The array can contain other arrays of variable names inside it; compact() handles it recursively.
For each of these, compact() For each of these, compact() looks for a variable with that name in the current symbol table and adds it to the output array such that the variable name becomes the key and the contents of the variable become the value for that key.
In short, it does the opposite of extract().
It returns the output array with all the variables added to it.
Any strings that are not set will simply be skipped.
Example 1. compact() example
$city = "San Francisco"; $state = "CA"; $event = "SIGGRAPH"; $location_vars = array ("city", "state"); $result = compact ("event", "nothing_here", $location_vars);
After this, $result will be:
Array ([event] = SIGGRAPH [city] = San Francisco [state] = CA)
See also extract().
Prev
Home
Next
asort
Up
count