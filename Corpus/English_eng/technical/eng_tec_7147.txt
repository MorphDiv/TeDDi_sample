# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	Ubuntu
# source:	https://object.pouta.csc.fi/OPUS-Ubuntu/v14.10/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/Ubuntu.php
# copyright_long:	http://opus.nlpl.eu/Ubuntu.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

from %s
attempt to use a scalar value as array
attempt to use scalar parameter `%s' as an array
attempt to use scalar `%s' as an array
attempt to use array `%s' in a scalar context
delete: index `%s' not in array `%s'
attempt to use scalar `%s["%.*s"]' as an array
adump: first argument not an array
asort: second argument not an array
asorti: second argument not an array
asort: first argument not an array
asorti: first argument not an array
asort: cannot use a subarray of first arg for second arg
asorti: cannot use a subarray of first arg for second arg
asort: cannot use a subarray of second arg for first arg
asorti: cannot use a subarray of second arg for first arg
`%s' is invalid as a function name
sort comparison function `%s' is not defined
%s blocks must have an action part
each rule must have a pattern or an action part
old awk does not support multiple `BEGIN' or `END' rules
`%s' is a built-in function, it cannot be redefined
regexp constant `//' looks like a C++ comment, but is not
regexp constant `/%s/' looks like a C comment, but is not
duplicate case values in switch body: %s
duplicate `default' detected in switch body
`break' is not allowed outside a loop or switch
`continue' is not allowed outside a loop
`next' used in %s action
`nextfile' used in %s action
`return' used outside function context
plain `print' in BEGIN or END rule should probably be `print ""'
`delete' is not allowed with SYMTAB
`delete' is not allowed with FUNCTAB
`delete(array)' is a non-portable tawk extension
multistage two-way pipelines don't work
regular expression on right of assignment
regular expression on left of `~' or `!~' operator
old awk does not support the keyword `in' except after `for'
regular expression on right of comparison
`getline var' invalid inside `%s' rule
`getline' invalid inside `%s' rule
non-redirected `getline' undefined inside END action
old awk does not support multidimensional arrays
call of `length' without parentheses is not portable
indirect function calls are a gawk extension
can not use special variable `%s' for indirect function call
invalid subscript expression
warning:
fatal:
unexpected newline or end of string
can't open source file `%s' for reading (%s)
can't open shared library `%s' for reading (%s)
reason unknown
can't include `%s' and use it as a program file
already included source file `%s'
already loaded shared library `%s'
@include is a gawk extension
empty filename after @include
@load is a gawk extension
empty filename after @load
empty program text on command line
can't read sourcefile `%s' (%s)
source file `%s' is empty
source file does not end in newline
unterminated regexp ends with `\\' at end of file
%s: %d: tawk regex modifier `/.../%c' doesn't work in gawk
tawk regex modifier `/.../%c' doesn't work in gawk
unterminated regexp
unterminated regexp at end of file
use of `\\ #...' line continuation is not portable
backslash not last character on line
POSIX does not allow operator `**='
old awk does not support operator `**='
POSIX does not allow operator `**'
old awk does not support operator `**'
operator `^=' is not supported in old awk
operator `^' is not supported in old awk
unterminated string
invalid char '%c' in expression
`%s' is a gawk extension
POSIX does not allow `%s'
`%s' is not supported in old awk
`goto' considered harmful!
%d is invalid as number of arguments for %s
%s: string literal as last arg of substitute has no effect
%s third parameter is not a changeable object
match: third argument is a gawk extension
close: second argument is a gawk extension
use of dcgettext(_"...") is incorrect: remove leading underscore
use of dcngettext(_"...") is incorrect: remove leading underscore
index: regexp constant as second argument is not allowed
function `%s': parameter `%s' shadows global variable
could not open `%s' for writing (%s)
sending variable list to standard error
%s: close failed (%s)
shadow_funcs() called twice!
there were shadowed variables.
function name `%s' previously defined
function `%s': can't use function name as parameter name
function `%s': can't use special variable `%s' as a function parameter
function `%s': parameter #%d, `%s', duplicates parameter #%d
function `%s' called but never defined
function `%s' defined but never called directly
regexp constant for parameter #%d yields boolean value
function `%s' called with space between name and `(',
or used as a variable or an array
division by zero attempted
division by zero attempted in `%%'
cannot assign a value to the result of a field post-increment expression
invalid target of assignment (opcode %s)
%s to "%s" failed (%s)
standard output
exp: received non-numeric argument
exp: argument %g is out of range
fflush: cannot flush: pipe `%s' opened for reading, not writing
fflush: cannot flush: file `%s' opened for reading, not writing
fflush: `%s' is not an open file, pipe or co-process
index: received non-string first argument
index: received non-string second argument
int: received non-numeric argument
length: received array argument
`length(array)' is a gawk extension
length: received non-string argument
log: received non-numeric argument
log: received negative argument %g
fatal: must use `count$' on all formats or none
field width is ignored for `%%' specifier
precision is ignored for `%%' specifier
field width and precision are ignored for `%%' specifier
fatal: `$' is not permitted in awk formats
fatal: arg count with `$' must be > 0
fatal: arg count %ld greater than total number of supplied arguments
fatal: `$' not permitted after period in format
fatal: no `$' supplied for positional field width or precision
`l' is meaningless in awk formats; ignored
fatal: `l' is not permitted in POSIX awk formats
`L' is meaningless in awk formats; ignored
fatal: `L' is not permitted in POSIX awk formats
`h' is meaningless in awk formats; ignored
fatal: `h' is not permitted in POSIX awk formats
[s]printf: value %g is out of range for `%%%c' format
ignoring unknown format specifier character `%c': no argument converted
fatal: not enough arguments to satisfy format string
^ ran out for this one
[s]printf: format specifier does not have control letter
too many arguments supplied for format string
sprintf: no arguments
printf: no arguments
sqrt: received non-numeric argument
sqrt: called with negative argument %g
substr: length %g is not >= 1
substr: length %g is not >= 0
substr: non-integer length %g will be truncated
substr: length %g too big for string indexing, truncating to %g
substr: start index %g is invalid, using 1
substr: non-integer start index %g will be truncated
substr: source string is zero length
substr: start index %g is past end of string
substr: length %g at start index %g exceeds length of first argument (%lu)
strftime: format value in PROCINFO["strftime"] has numeric type
strftime: received non-numeric second argument
strftime: second argument less than 0 or too big for time_t
strftime: received non-string first argument
strftime: received empty format string
mktime: received non-string argument
mktime: at least one of the values is out of the default range
'system' function not allowed in sandbox mode
system: received non-string argument
reference to uninitialized field `$%d'
tolower: received non-string argument
toupper: received non-string argument
atan2: received non-numeric first argument
atan2: received non-numeric second argument
sin: received non-numeric argument
cos: received non-numeric argument
srand: received non-numeric argument
match: third argument is not an array
gensub: third argument of 0 treated as 1
lshift: received non-numeric first argument
lshift: received non-numeric second argument
lshift(%f, %f): negative values will give strange results
lshift(%f, %f): fractional values will be truncated
lshift(%f, %f): too large shift value will give strange results
rshift: received non-numeric first argument
rshift: received non-numeric second argument
rshift(%f, %f): negative values will give strange results
rshift(%f, %f): fractional values will be truncated
rshift(%f, %f): too large shift value will give strange results
and: called with less than two arguments
and: argument %d is non-numeric
and: argument %d negative value %g will give strange results
or: called with less than two arguments
or: argument %d is non-numeric
or: argument %d negative value %g will give strange results
xor: called with less than two arguments
xor: argument %d is non-numeric
xor: argument %d negative value %g will give strange results
compl: received non-numeric argument
compl(%f): negative value will give strange results
compl(%f): fractional value will be truncated
dcgettext: `%s' is not a valid locale category
Type (g)awk statement(s). End with the command "end"
invalid frame number: %d
info: invalid option - "%s"
source "%s": already sourced.
save "%s": command not permitted.
Can't use command `commands' for breakpoint/watchpoint commands
no breakpoint/watchpoint has been set yet
invalid breakpoint/watchpoint number
Type commands for when %s %d is hit, one per line.
End with the command "end"
`end' valid only in command `commands' or `eval'
`silent' valid only in command `commands'
trace: invalid option - "%s"
condition: invalid breakpoint/watchpoint number
argument not a string
option: invalid parameter - "%s"
no such function - "%s"
enable: invalid option - "%s"
invalid range specification: %d - %d
non-numeric value for field number
non-numeric value found, numeric expected
non-zero integer value
backtrace [N] - print trace of all or N innermost (outermost if N < 0) frames.
break [[filename:]N|function] - set breakpoint at the specified location.
clear [[filename:]N|function] - delete breakpoints previously set.
commands [num] - starts a list of commands to be executed at a breakpoint(watchpoint) hit.
condition num [expr] - set or clear breakpoint or watchpoint condition.
continue [COUNT] - continue program being debugged.
delete [breakpoints] [range] - delete specified breakpoints.
disable [breakpoints] [range] - disable specified breakpoints.
display [var] - print value of variable each time the program stops.
down [N] - move N frames down the stack.
dump [filename] - dump instructions to file or stdout.
enable [once|del] [breakpoints] [range] - enable specified breakpoints.
end - end a list of commands or awk statements.
eval stmt|[p1, p2, ...] - evaluate awk statement(s).
finish - execute until selected stack frame returns.
frame [N] - select and print stack frame number N.
help [command] - print list of commands or explanation of command.
ignore N COUNT - set ignore-count of breakpoint number N to COUNT.
info topic - source|sources|variables|functions|break|frame|args|locals|display|watch.
list [-|+|[filename:]lineno|function|range] - list specified line(s).
next [COUNT] - step program, proceeding through subroutine calls.
nexti [COUNT] - step one instruction, but proceed through subroutine calls.
option [name[=value]] - set or display debugger option(s).
print var [var] - print value of a variable or array.
printf format, [arg], ... - formatted output.
quit - exit debugger.
return [value] - make selected stack frame return to its caller.
run - start or restart executing program.
save filename - save commands from the session to file.
set var = value - assign value to a scalar variable.
silent - suspends usual message when stopped at a breakpoint/watchpoint.
source file - execute commands from file.
step [COUNT] - step program until it reaches a different source line.
stepi [COUNT] - step one instruction exactly.
tbreak [[filename:]N|function] - set a temporary breakpoint.
trace on|off - print instruction before executing.
undisplay [N] - remove variable(s) from automatic display list.
until [[filename:]N|function] - execute until program reaches a different line or line N within current frame.
unwatch [N] - remove variable(s) from watch list.
up [N] - move N frames up the stack.
watch var - set a watchpoint for a variable.
error:
can't read command (%s)
can't read command (%s)
invalid character in command
unknown command - "%.*s", try help
%s
invalid character
undefined command: %s
set or show the number of lines to keep in history file.
set or show the list command window size.
set or show gawk output file.
set or show debugger prompt.
(un)set or show saving of command history (value=on|off).
(un)set or show saving of options (value=on|off).
(un)set or show instruction tracing (value=on|off).
program not running.
can't read source file `%s' (%s)
source file `%s' is empty.
no current source file.
cannot find source file named `%s' (%s)
WARNING: source file `%s' modified since program compilation.
line number %d out of range; `%s' has %d lines
unexpected eof while reading file `%s', line %d
source file `%s' modified since start of program execution
Current source file: %s
Number of lines: %d
Source file (lines): %s (%d)
Number Disp Enabled Location
 no of hits = %ld
 ignore next %ld hit(s)
 stop condition: %s
 commands:
Current frame:
Called by frame:
Caller of frame:
None in main().
No arguments.
No locals.
All defined variables:
All defined functions:
Auto-display variables:
Watch variables:
no symbol `%s' in current context
`%s' is not an array
$%ld = uninitialized field
array `%s' is empty
["%s"] not in array `%s'
`%s["%s"]' is not an array
`%s' is not a scalar variable
attempt to use array `%s["%s"]' in a scalar context
attempt to use scalar `%s["%s"]' as array
`%s' is a function
watchpoint %d is unconditional
No display item numbered %ld
No watch item numbered %ld
%d: ["%s"] not in array `%s'
attempt to use scalar value as array
Watchpoint %d deleted because parameter is out of scope.
Display %d deleted because parameter is out of scope.
in file `%s', line %d
at `%s':%d
#%ld in
More stack frames follow ...
invalid frame number
Note: breakpoint %d (enabled, ignore next %ld hits), also set at %s:%d
Note: breakpoint %d (enabled), also set at %s:%d
Note: breakpoint %d (disabled, ignore next %ld hits), also set at %s:%d
Note: breakpoint %d (disabled), also set at %s:%d
Breakpoint %d set at file `%s', line %d
Can't set breakpoint in file `%s'
line number %d in file `%s' out of range
Can't find rule!!!
Can't set breakpoint at `%s':%d
Can't set breakpoint in function `%s'
breakpoint %d set at file `%s', line %d is unconditional
Deleted breakpoint %d
No breakpoint(s) at entry to function `%s'
No breakpoint at file `%s', line #%d
invalid breakpoint number
Delete all breakpoints? (y or n)
y
Will ignore next %ld crossing(s) of breakpoint %d.
Will stop next time breakpoint %d is reached.
Can only debug programs provided with the `-f' option.
Failed to restart debugger
Program already running. Restart from beginning (y/n)?
Program not restarted
error: cannot restart, operation not allowed
error (%s): cannot restart, ignoring rest of the commands
Starting program:
Program exited %s with exit value: %d
The program is running. Exit anyway (y/n)?
Not stopped at any breakpoint; argument ignored.
invalid breakpoint number %d.
Will ignore next %ld crossings of breakpoint %d.
'finish' not meaningful in the outermost frame main()
Run till return from
'return' not meaningful in the outermost frame main()
Can't find specified location in function `%s'
invalid source line %d in file `%s'
Can't find specified location %d in file `%s'
element not in array
untyped variable
Stopping in %s ...
'finish' not meaningful with non-local jump '%s'
'until' not meaningful with non-local jump '%s'
 ------[Enter] to continue or q [Enter] to quit------
q
["%s"] not in array `%s'
sending output to stdout
invalid number
`%s' not allowed in current context; statement ignored
`return' not allowed in current context; statement ignored
No symbol `%s' in current context
unbalanced [
invalid character class
character class syntax is [[:space:]], not [:space:]
unfinished \\ escape
Invalid content of \\{\\}
Regular expression too big
unbalanced (
no syntax specified
unbalanced )
unknown nodetype %d
unknown opcode %d
opcode %s not an operator or keyword
buffer overflow in genflags2str
 # Function Call Stack:
`IGNORECASE' is a gawk extension
`BINMODE' is a gawk extension
BINMODE value `%s' is invalid, treated as 3
bad `%sFMT' specification `%s'
turning off `--lint' due to assignment to `LINT'
reference to uninitialized argument `%s'
reference to uninitialized variable `%s'
attempt to field reference from non-numeric value
attempt to field reference from null string
attempt to access field %ld
reference to uninitialized field `$%ld'
function `%s' called with more arguments than declared
unwind_stack: unexpected type `%s'
division by zero attempted in `/='
division by zero attempted in `%%='
extensions are not allowed in sandbox mode
-l / @load are gawk extensions
load_ext: received NULL lib_name
load_ext: cannot open library `%s' (%s)
load_ext: library `%s': does not define `plugin_is_GPL_compatible' (%s)
load_ext: library `%s': cannot call function `%s' (%s)
load_ext: library `%s' initialization routine `%s' failed
`extension' is a gawk extension
extension: received NULL lib_name
extension: cannot open library `%s' (%s)
extension: library `%s': does not define `plugin_is_GPL_compatible' (%s)
extension: library `%s': cannot call function `%s' (%s)
make_builtin: missing function name
make_builtin: can't redefine function `%s'
make_builtin: function `%s' already defined
make_builtin: function name `%s' previously defined
make_builtin: can't use gawk built-in `%s' as function name
make_builtin: negative argument count for function `%s'
extension: missing function name
extension: illegal character `%c' in function name `%s'
extension: can't redefine function `%s'
extension: function `%s' already defined
extension: function name `%s' previously defined
extension: can't use gawk built-in `%s' as function name
function `%s' defined to take no more than %d argument(s)
function `%s': missing argument #%d
function `%s': argument #%d: attempt to use scalar as an array
function `%s': argument #%d: attempt to use array as a scalar
dynamic loading of library not supported
chdir: called with incorrect number of arguments, expecting 1
stat: unable to read symbolic link `%s'
stat: called with wrong number of arguments
stat: bad parameters
fts init: could not create variable %s
fts is not supported on this system
fill_stat_element: could not create array
fill_stat_element: could not set element
fill_path_element: could not set element
fill_error_element: could not set element
fts-process: could not create array
fts-process: could not set element
fts: called with incorrect number of arguments, expecting 3
fts: bad first parameter
fts: bad second parameter
fts: bad third parameter
fts: could not flatten array
fts: ignoring sneaky FTS_NOSTAT flag. nyah, nyah, nyah.
fts: clear_array() failed
fnmatch: called with less than three arguments
fnmatch: called with more than three arguments
fnmatch: could not get first argument
fnmatch: could not get second argument
fnmatch: could not get third argument
fnmatch is not implemented on this system
fnmatch init: could not add FNM_NOMATCH variable
fnmatch init: could not set array element %s
fnmatch init: could not install FNM array
fork: called with too many arguments
fork: PROCINFO is not an array!
waitpid: called with too many arguments
wait: called with no arguments
wait: called with too many arguments
inplace_begin: in-place editing already active
inplace_begin: expects 2 arguments but called with %d
inplace_begin: cannot retrieve 1st argument as a string filename
inplace_begin: disabling in-place editing for invalid FILENAME `%s'
inplace_begin: Cannot stat `%s' (%s)
inplace_begin: `%s' is not a regular file
inplace_begin: mkstemp(`%s') failed (%s)
inplace_begin: chmod failed (%s)
inplace_begin: dup(stdout) failed (%s)
inplace_begin: dup2(%d, stdout) failed (%s)
inplace_begin: close(%d) failed (%s)
inplace_end: cannot retrieve 1st argument as a string filename
inplace_end: in-place editing not active
inplace_end: dup2(%d, stdout) failed (%s)
inplace_end: close(%d) failed (%s)
inplace_end: fsetpos(stdout) failed (%s)
inplace_end: link(`%s', `%s') failed (%s)
inplace_end: rename(`%s', `%s') failed (%s)
ord: called with too many arguments
ord: called with no arguments
ord: called with inappropriate argument(s)
chr: called with too many arguments
chr: called with no arguments
chr: called with inappropriate argument(s)
dir_take_control_of: opendir/fdopendir failed: %s
readfile: called with too many arguments
readfile: called with no arguments
writea: called with too many arguments
do_writea: argument 0 is not a string
do_writea: argument 1 is not an array
write_array: could not flatten array
write_array: could not release flattened array
reada: called with too many arguments
do_reada: argument 0 is not a string
do_reada: argument 1 is not an array
do_reada: clear_array failed
read_array: set_array_element failed
gettimeofday: ignoring arguments
gettimeofday: not supported on this platform
sleep: called with too many arguments
sleep: missing required numeric argument
sleep: argument is negative
sleep: not supported on this platform
NF set to negative value
split: fourth argument is a gawk extension
split: fourth argument is not an array
split: second argument is not an array
split: cannot use the same array for second and fourth args
split: cannot use a subarray of second arg for fourth arg
split: cannot use a subarray of fourth arg for second arg
split: null string for third arg is a gawk extension
patsplit: fourth argument is not an array
patsplit: second argument is not an array
patsplit: third argument must be non-null
patsplit: cannot use the same array for second and fourth args
patsplit: cannot use a subarray of second arg for fourth arg
patsplit: cannot use a subarray of fourth arg for second arg
`FIELDWIDTHS' is a gawk extension
invalid FIELDWIDTHS value, near `%s'
null string for `FS' is a gawk extension
old awk does not support regexps as value of `FS'
`FPAT' is a gawk extension
awk_value_to_node: received null retval
node_to_awk_value: received null node
node_to_awk_value: received null val
remove_element: received null array
remove_element: received null subscript
api_flatten_array: could not convert index %d
api_flatten_array: could not convert value %d
%s: option '%s' is ambiguous; possibilities:
%s: option '--%s' doesn't allow an argument
%s: option '%c%s' doesn't allow an argument
%s: option '--%s' requires an argument
%s: unrecognized option '--%s'
%s: unrecognized option '%c%s'
%s: invalid option -- '%c'
%s: option requires an argument -- '%c'
%s: option '-W %s' is ambiguous
%s: option '-W %s' doesn't allow an argument
%s: option '-W %s' requires an argument
command line argument `%s' is a directory: skipped
cannot open file `%s' for reading (%s)
close of fd %d (`%s') failed (%s)
redirection not allowed in sandbox mode
expression in `%s' redirection only has numeric value
expression for `%s' redirection has null string value
filename `%s' for `%s' redirection may be result of logical expression
unnecessary mixing of `>' and `>>' for file `%.*s'
can't open pipe `%s' for output (%s)
can't open pipe `%s' for input (%s)
can't open two way pipe `%s' for input/output (%s)
can't redirect from `%s' (%s)
can't redirect to `%s' (%s)
reached system limit for open files: starting to multiplex file descriptors
close of `%s' failed (%s).
too many pipes or input files open
close: second argument must be `to' or `from'
close: `%.*s' is not an open file, pipe or co-process
close of redirection that was never opened
close: redirection `%s' not opened with `|', second argument ignored
failure status (%d) on pipe close of `%s' (%s)
failure status (%d) on file close of `%s' (%s)
no explicit close of socket `%s' provided
no explicit close of co-process `%s' provided
no explicit close of pipe `%s' provided
no explicit close of file `%s' provided
error writing standard output (%s)
error writing standard error (%s)
pipe flush of `%s' failed (%s).
co-process flush of pipe to `%s' failed (%s).
file flush of `%s' failed (%s).
local port %s invalid in `/inet'
remote host and port information (%s, %s) invalid
no (known) protocol supplied in special filename `%s'
special file name `%s' is incomplete
must supply a remote hostname to `/inet'
must supply a remote port to `/inet'
TCP/IP communications are not supported
could not open `%s', mode `%s'
close of master pty failed (%s)
close of stdout in child failed (%s)
moving slave pty to stdout in child failed (dup: %s)
close of stdin in child failed (%s)
moving slave pty to stdin in child failed (dup: %s)
close of slave pty failed (%s)
moving pipe to stdout in child failed (dup: %s)
moving pipe to stdin in child failed (dup: %s)
restoring stdout in parent process failed
restoring stdin in parent process failed
close of pipe failed (%s)
`|' not supported
cannot open pipe `%s' (%s)
cannot create child process for `%s' (fork: %s)
register_input_parser: received NULL pointer
input parser `%s' conflicts with previously installed input parser `%s'
input parser `%s' failed to open `%s'
register_output_wrapper: received NULL pointer
output wrapper `%s' conflicts with previously installed output wrapper `%s'
output wrapper `%s' failed to open `%s'
register_output_processor: received NULL pointer
two-way processor `%s' conflicts with previously installed two-way processor `%s'
two way processor `%s' failed to open `%s'
data file `%s' is empty
could not allocate more input memory
multicharacter value of `RS' is a gawk extension
IPv6 communication is not supported
empty argument to `-e/--source' ignored
%s: option `-W %s' unrecognized, ignored
%s: option requires an argument -- %c
environment variable `POSIXLY_CORRECT' set: turning on `--posix'
`--posix' overrides `--traditional'
`--posix'/`--traditional' overrides `--non-decimal-data'
running %s setuid root may be a security problem
`--posix' overrides `--characters-as-bytes'
can't set binary mode on stdin (%s)
can't set binary mode on stdout (%s)
can't set binary mode on stderr (%s)
no program text at all!
Usage: %s [POSIX or GNU style options] -f progfile [--] file ...
Usage: %s [POSIX or GNU style options] [--] %cprogram%c file ...
POSIX options: GNU long options: (standard)
 -f progfile --file=progfile
 -F fs --field-separator=fs
 -v var=val --assign=var=val
Short options: GNU long options: (extensions)
 -b --characters-as-bytes
 -c --traditional
 -C --copyright
 -d[file] --dump-variables[=file]
 -D[file] --debug[=file]
 -e 'program-text' --source='program-text'
 -E file --exec=file
 -g --gen-pot
 -h --help
 -i includefile --include=includefile
 -l library --load=library
 -L [fatal] --lint[=fatal]
 -n --non-decimal-data
 -M --bignum
 -N --use-lc-numeric
 -o[file] --pretty-print[=file]
 -O --optimize
 -p[file] --profile[=file]
 -P --posix
 -r --re-interval
 -S --sandbox
 -t --lint-old
 -V --version
 -W nostalgia --nostalgia
 -Y --parsedebug
To report bugs, see node `Bugs' in `gawk.info', which is
section `Reporting Problems and Bugs' in the printed version.
gawk is a pattern scanning and processing language.
By default it reads standard input and writes standard output.
Examples:
 gawk '{ sum += $1 }; END { print sum }' file
 gawk -F: '{ print $1 }' /etc/passwd
Copyright (C) 1989, 1991-%d Free Software Foundation.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program. If not, see http://www.gnu.org/licenses/.
-Ft does not set FS to tab in POSIX awk
unknown value for field spec: %d
%s: `%s' argument to `-v' not in `var=value' form
`%s' is not a legal variable name
`%s' is not a variable name, looking for file `%s=%s'
cannot use gawk builtin `%s' as variable name
cannot use function `%s' as variable name
floating point exception
fatal error: internal error
fatal error: internal error: segfault
fatal error: internal error: stack overflow
no pre-opened fd %d
could not pre-open /dev/null for fd %d
PREC value `%.*s' is invalid
RNDMODE value `%.*s' is invalid
%s: received non-numeric argument
compl(%Rg): negative value will give strange results
comp(%Rg): fractional value will be truncated
cmpl(%Zd): negative values will give strange results
%s: received non-numeric argument #%d
%s: argument #%d has invalid value %Rg, using 0
%s: argument #%d negative value %Rg will give strange results
%s: argument #%d fractional value %Rg will be truncated
%s: argument #%d negative value %Zd will give strange results
cmd. line:
backslash at end of string
old awk does not support the `\\%c' escape sequence
POSIX does not allow `\\x' escapes
no hex digits in `\\x' escape sequence
hex escape \\x%.*s of %d characters probably not interpreted the way you expect
escape sequence `\\%c' treated as plain `%c'
Invalid multibyte data detected. There may be a mismatch between your data and your locale.
%s %s `%s': could not get fd flags: (fcntl F_GETFD: %s)
%s %s `%s': could not set close-on-exec: (fcntl F_SETFD: %s)
could not open `%s' for writing: %s
sending profile to standard error
 # %s block(s)
 # Rule(s)
internal error: %s with null vname
internal error: builtin with null fname
 # Loaded extensions (-l and/or @load)
 # gawk profile, created %s
 # Functions, listed alphabetically
redir2str: unknown redirection type %d
regexp component `%.*s' should probably be `[%.*s]'
Success
No match
Invalid regular expression
Invalid collation character
Invalid character class name
Trailing backslash
Invalid back reference
Unmatched [ or [^
Unmatched ( or \\(
Unmatched \\{
Invalid range end
Memory exhausted
Invalid preceding regular expression
Premature end of regular expression
Unmatched ) or \\)
No previous regular expression
can not pop main context