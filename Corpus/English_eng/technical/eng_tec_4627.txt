# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3, PHP 4)
Returns the filename of the next file from the directory.
The filenames are returned in the order in which they are stored by the filesystem.
Please note the fashion in which readdir() 's return value is checked in the examples below.
We are explicitly testing whether the return value is identical to (equal to and of the same type as--see Comparison Operators for more information) FALSE since otherwise, any directory entry whose name evaluates to FALSE will stop the loop (e.g. a directory named "0").
Example 1.
List all files in a directory
/ / Note that !== did not exist until 4.0.0-RC2 ?php if ($handle = opendir(' / path / to / files')) {echo "Directory handle: $handle\n"; echo "Files:\n"; / * This is the correct way to loop over the directory. * / while (false !== ($file = readdir($handle))) {echo "$file\n";} / * This is the WRONG way to loop over the directory. * / while ($file = readdir($handle)) {echo "$file\n";} closedir($handle);}?
Note that readdir() will return the. and.. entries.
If you don 't want these, simply strip them out:
Example 2.
List all files in the current directory and strip out. and..
?php if ($handle = opendir(' .')) {while (false !== ($file = readdir($handle))) {if ($file != "." $file != ". .") {echo "$file\n";}} closedir($handle);}?
See also is_dir().
Prev
Home
Next
opendir
Up
rewinddir