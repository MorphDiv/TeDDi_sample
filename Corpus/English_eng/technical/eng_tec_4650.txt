# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Chapter 12.
Control Structures
Next
If called from within a function, the return() statement immediately ends execution of the current function, and returns its argument as the value of the function call. return() will also end the execution of an eval() statement or script file.
If called from the global scope, then execution of the current script file is ended.
If the current script file was include() ed or require() ed, then control is passed back to the calling file.
Furthermore, if the current script file was include() ed, then the value given to return() will be returned as the value of the include() Furthermore, if the current script file was include() ed, then the value given to return() will be returned as the value of the include() call.
If return() is called from within the main script file, then script execution ends.
If the current script file was named by the auto_prepend_file or auto_append_file configuration options in the configuration file, then that script file 's execution is ended.
For more information, see Returning values.
Note:
Note that since return() is a language construct and not a function, the parentheses surrounding its arguments are not required--in fact, it is more common to leave them out than to use them, although it doesn't matter one way or the other.
Prev
Home
Next
declare
Up
require()