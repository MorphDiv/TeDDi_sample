# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/en_GB.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

RSet Statement [Run-time]
/text/sbasic/shared/03120308.xhp
Sun Microsystems, Inc.
converted from old format - fpe
RSet statement
RSet Statement [Run-time]
Right-aligns a string within a string variable, or copies a user-defined variable type into another.
Syntax:
RSet Text As String = Text or RSet Variable1 = Variable2
Parameters:
Text:
Any string variable.
Text:
String that you want to right-align in the string variable.
Variable1:
User-defined variable that is the target for the copied variable.
Variable2:
User-defined variable that you want to copy to another variable.
RSet
aligns the string to the right within the string variable.
Any remaining characters in the string variable are replaced with spaces.
If the string is longer than the string variable, characters exceeding the length of the variable are truncated and only the remaining characters are right-aligned within the string variable.
RSet statement
to assign variables of one user-defined type to another.
RSet
and
LSet
statements to modify the left and right alignment of a string.
Example:
Sub ExampleRLSet
Dim sVar as string
Dim sExpr as string
sVar = String(40, &quot; * &quot; )
sExpr = &quot; SBX &quot;
REM Right-align &quot; SBX &quot; in a 40-character string
REM Replace asterisks with spaces
RSet sVar = sExpr
Print &quot; > &quot; ; sVar; &quot; < &quot;
sVar = String(5, &quot; * &quot; )
sExpr = &quot; 123457896 &quot;
RSet sVar = sExpr
Print &quot; > &quot; ; sVar; &quot; < &quot;
sVar = String(40, &quot; * &quot; )
sExpr = &quot; SBX &quot;
REM Left-align &quot; SBX &quot; in a 40-character string
LSet sVar = sExpr
Print &quot; > &quot; ; sVar; &quot; < &quot;
sVar = String(5, &quot; * &quot; )
sExpr = &quot; 123456789 &quot;
LSet sVar = sExpr
Print &quot; > &quot; ; sVar; &quot; < &quot;
End Sub