# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

The & kwatchgnupg; Handbook
Marc Mutz
& Marc. Mutz. mail;
Steffen Hansen
Developer
& Steffen. Hansen. mail;
David Faure
& David. Faure. mail;
ROLES_OF_TRANSLATORS
& kwatchgnupg; is a simple & gnupg; log viewer.
KDE
Kapp
gpg
gpgsm
GnuPG
Log viewer
Introduction
& kwatchgnupg; is simple & gnupg; log viewer for the upcoming & gnupg; versions 1.4 and 2.0. It works as a & GUI; wrapper around the command line tool & watchgnupg;, which listens on a socket for log lines from the & gnupg; backend applications. See info watchgnupg for more information about & watchgnupg;.
& kwatchgnupg; can be started from the Tools menu of both & kleopatra; and & kmail;, as well as from the command line. The & kwatchgnupg; executable is named kwatchgnupg.
Main Functions
Viewing the Log
& kwatchgnupg; 's main function is of course to present the & gnupg; debugging and logging information to the user. The main window is divided into a large text viewing area, where & gnupg; messages will appear as they are generated, a toolbar giving quick access to the most often needed functions, as well as the obligatory menu bar.
Each line in the text view is normally prefixed with a FD identifier and a time stamp in ISO format. The FD identifier can be used to distinguish between output from different & gnupg; instances running in parallel. Following the timestamp is the name of the component that is the source of the log line, together with some internal information in sqare brackets, followed by the original debugging or log output as printed by the component.
By default, the number of log lines that are kept in the history is limited to 1000 lines. You can configure the history size in the configuration dialog.
Saving the Contents of the Log Window to a File
Sometimes it might be convenient to save the current log window contents to a file, & eg; to mail it to the developers as part of a bug report. There are two ways to achieve this in & kwatchgnupg;:
First, you can choose File Save As... (or the corresponding toolbar icon) to save the complete log window contents to a file. You will be prompted to specify a save file location.
Second, you can select the interesting lines with normal left-mouse selection and paste them into a word processor or mail user agent, just like any other text. You should make sure, though, that lines are not broken, since this reduces the readability of the log.
Clearing the Log Window
For convenience, you can instruct & kwatchgnupg; to clear the log window using File Clear History (or the corresponding toolbar icon).
Use this prior to starting the crypto operation that you want to monitor to get only the output from that operation. You can then save the log using File Save As... as described above.
Clearing the log discards any previous log window contents. If you are unsure about whether you'll need the current contents afterwards, you should save them to a file (see above) before clearing.
Configuring & kwatchgnupg;
To configure & kwatchgnupg;, select Settings Configure & kwatchgnupg;, or the corresponding toolbar icon. & kwatchgnupg; 's configure dialog is divided into two parts, each of which will be described below.
& watchgnupg; Settings
& watchgnupg; is the process that actually monitors the logging socket for activity and formats the lines as seen in the & kwatchgnupg; text view. Settings in this group are passed down to the backend using the & gpgconf; mechanism.
Executable contains the path to the & watchgnupg; application. If & watchgnupg; is in your $PATH, you can keep the default watchgnupg. If & watchgnupg; is not in your $PATH, or if you have more than one version installed, enter the absolute filename of the watchgnupg executable here.
Socket contains the socket that & watchgnupg; should listen on. A change here is distributed to all & gnupg; backend modules using & gpgconf;, so you do n't need to change this setting if your & gnupg; config files have another log-file set.
Default log level determines the amount of logging information returned by the backend modules. See the & watchgnupg; documentation for what level includes which information. A change here is distributed to all & gnupg; backend modules using & gpgconf;, so you do n't need to change this setting if your & gnupg; config files have another log-level set.
Log Window Settings
Here, you can configure the size of the history buffer, & ie; the number of log lines that is kept. If more lines have been emitted by the & gnupg; backend since the last clearance of the history, then the oldest lines are discarded until there is enough room for the new lines again.
You can disable the history size limit by clicking Set Unlimited. Note, however, that & kwatchgnupg; 's memory consumption will grow with the number of lines it currently displays. If you use an unlimited history size, then make sure to run & kwatchgnupg; only for short operations, or regularly clear the history manually.
Credits and License
& kwatchgnupg; copyright 2004 Klarauml; lvdalens Datakonsult AB
Documentation copyright 2004 Klarauml; lvdalens Datakonsult AB
Contributors
& Steffen. Hansen; hansen@kde. org
& Marc. Mutz; & Marc. Mutz. mail;
& David. Faure; & David. Faure. mail;
CREDIT_FOR_TRANSLATORS
& underFDL; & underGPL;