# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Appendix E.
Extending PHP
Next
To report errors from an internal function, you should call the php3_error() function.
This takes at least two parameters - - the first is the level of the error, the second is the format string for the error message (as in a standard printf() call), and any following arguments are the parameters for the format string.
The error levels are:
Notices are not printed by default, and indicate that the script encountered something that could indicate an error, but could also happen in the normal course of running a script.
For example, trying to access the value of a variable which has not been set, or calling stat() on a file that doesn't exist.
Warnings are printed by default, but do not interrupt script execution.
These indicate a problem that should have been trapped by the script before the call was made.
For example, calling ereg() with an invalid regular expression.
Errors are also printed by default, and execution of the script is halted after the function returns.
These indicate errors that can not be recovered from, such as a memory allocation problem.
Parse errors should only be generated by the parser.
The code is listed here only for the sake of completeness.
This is like an E_ERROR, except it is generated by the core of PHP.
Functions should not generate this type of error.
This is like an E_WARNING, except it is generated by the core of PHP.
Functions should not generate this type of error.
This is like an E_ERROR, except it is generated by the Zend Scripting Engine.
Functions should not generate this type of error.
This is like an E_WARNING, except it is generated by the Zend Scripting Engine.
Functions should not generate this type of error.
This is like an E_ERROR, except it is generated in PHP code by using the PHP function trigger_error().
Functions should not generate this type of error.
This is like an E_WARNING, except it is generated by using the PHP function trigger_error().
Functions should not generate this type of error.
This is like an E_NOTICE, except it is generated by using the PHP function trigger_error().
Functions should not generate this type of error.
All of the above.
Using this error_reporting level will show all error types.
Prev
Home
Next
Calling User Functions
Up
List of Function Aliases