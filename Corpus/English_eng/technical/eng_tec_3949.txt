# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3, PHP 4)
Returns an array that corresponds to the fetched row, or FALSE if there are no more rows.
mysql_fetch_array() is an extended version of mysql_fetch_row().
In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys.
If two or more columns of the result have the same field names, the last column will take precedence.
To access the other column( s) of the same name, you must use the numeric index of the column or make an alias for the column.
For aliased columns, you cannot access the contents with the original column name (by using'field 'in this example).
Example 1.
Query with duplicate field names
select table1.field as foo table2.field as bar from table1, table2
An important thing to note is that using mysql_fetch_array() is not significantly slower than using mysql_fetch_row(), while it provides a significant added value.
The optional second argument result_type in mysql_fetch_array() is a constant and can take the following values:
MYSQL_ASSOC, MYSQL_NUM, and MYSQL_BOTH.
This feature was added in PHP 3.0.7.
MYSQL_BOTH is the default for this argument.
By using MYSQL_BOTH, you 'll get an array with both associative and number indices.
Using MYSQL_ASSOC, you only get associative indices (as mysql_fetch_assoc() works), using MYSQL_NUM, you only get number indices (as mysql_fetch_row() works).
Example 2. mysql_fetch_array with MYSQL_NUM
?php mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Could not connect: ". mysql_error()); mysql_select_db("mydb"); $result = mysql_query("SELECT id, name FROM mytable"); while ($row = mysql_fetch_array($result, MYSQL_NUM)) {printf ("ID: %s Name: %s", $row[0], $row[1]);} mysql_free_result($result);?
Example 3. mysql_fetch_array with MYSQL_ASSOC
?php mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Could not connect: ". mysql_error()); mysql_select_db("mydb"); $result = mysql_query("SELECT id, name FROM mytable"); while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {printf ("ID: %s Name: %s", $row["id"], $row["name"]);} mysql_free_result($result);?
Example 4. mysql_fetch_array with MYSQL_BOTH
?php mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Could not connect: ". mysql_error()); mysql_select_db("mydb"); $result = mysql_query("SELECT id, name FROM mytable"); while ($row = mysql_fetch_array($result, MYSQL_BOTH)) {printf ("ID: %s Name: %s", $row[0], $row["name"]);} mysql_free_result($result);?
For further details, see also mysql_fetch_row() and mysql_fetch_assoc().
Prev
Home
Next
mysql_escape_string
Up
mysql_fetch_assoc