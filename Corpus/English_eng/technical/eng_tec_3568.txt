# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3, PHP 4)
Returns an array of values for the attribute on success and FALSE on error.
ldap_get_values() function is used to read all the values of the attribute in the entry in the result. entry is specified by the result_entry_identifier.
The number of values can be found by indexing "count" in the resultant array.
Individual values are accessed by integer index in the array.
The first index is 0.
This call needs a result_entry_identifier, so needs to be preceded by one of the ldap search calls and one of the calls to get an individual entry.
You application will either be hard coded to look for certain attributes (such as "surname "or "mail") or you will have to use the ldap_get_attributes() call to work out what attributes exist for a given entry.
LDAP allows more than one entry for an attribute, so it can, for example, store a number of email addresses for one person' s directory entry all labeled with the attribute "mail "
return_value[ "count"] = number of values for attribute return_value[0] = first value of attribute return_value[i] = ith value of attribute
Example 1.
List all values of the "mail" attribute for a directory entry
/ / $ds is a valid link identifier for a directory server / / $sr is a valid search result from a prior call to / / one of the ldap directory search calls / / $entry is a valid entry identifier from a prior call to / / one of the calls that returns a directory entry $values = ldap_get_values( $ds, $entry ,"mail"); echo $values["count"]. "email addresses for this entry. p"; for ($i=0; $i $values["count"]; $i++) echo $values[$i]. "br";
Prev
Home
Next
ldap_get_values_len
Up
ldap_list