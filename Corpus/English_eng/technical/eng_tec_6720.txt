# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	GNOME
# source:	https://object.pouta.csc.fi/OPUS-GNOME/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/GNOME.php
# copyright_long:	http://opus.nlpl.eu/GNOME.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

@@image: 'figures/gpk-repo-auth.png'; md5=682ab42697248616de88ed303a3c7b2b
@@image: 'figures/gpk-application-groups.png'; md5=f1be60047636fb65dd6a1483a00ec9e3
@@image: 'figures/gpk-repo.png'; md5=82c7ef7993610379fe016e6afa3db6e0
@@image: 'figures/gpk-updates-overview.png'; md5=491f52da0b66e47ab89930d88c4547a4
@@image: 'figures/gpk-updates.png'; md5=c58b7bb62f8c1f15b502f27a4cce2605
@@image: 'figures/gpk-prefs.png'; md5=a3ee22d79d3f8e6ca9dff9010eb692bc
@@image: 'figures/gpk-log.png'; md5=b1be16689ab1d8581d14cdf51c0e703d
@@image: 'figures/gpk-service-pack.png'; md5=d92448b667a962fd2cc3cb7bba4e4933
@@image: 'figures/gpk-service-pack-example.png'; md5=bb4add00cfc369e4138a528cf15840d3
@@image: 'figures/gpk-updates-warning.png'; md5=064f76d2a5779b719263d29e7c1f9a21
@@image: 'figures/gpk-eula.png'; md5=6fb5d18ec4149b9052d25817549c1c3e
@@image: 'figures/gpk-signature.png'; md5=01dfa61cbd91923c4f92a3d69f1c0db6
@@image: 'figures/gpk-client-copy-local.png'; md5=7b7ef37a2a28cf0df6aac8ca63deb813
@@image: 'figures/gpk-client-codecs.png'; md5=e571891f826b6b50f295a60daad29e24
@@image: 'figures/gpk-remove-confirm.png'; md5=941c29b3ac13f1235b9ce240064ad0f8
@@image: 'figures/gpk-added-deps.png'; md5=089940f8c21f88d7282b7b8bffe7ed74


2008
Richard Hughes (richard@hughsie.com)
Richard Hughes
Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License (GFDL), Version 1.1 or any later version published by the Free Software Foundation with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts. You can find a copy of the GFDL at this
This manual is part of a collection of GNOME manuals distributed under the GFDL. If you want to distribute this manual separately from the collection, you can do so by adding a copy of the license to the manual, as described in section 6 of the license.
Many of the names used by companies to distinguish their products and services are claimed as trademarks. Where those names appear in any GNOME documentation, and the members of the GNOME Documentation Project are made aware of those trademarks, then the names are in capital letters or initial capital letters.
DOCUMENT IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT THE DOCUMENT OR MODIFIED VERSION OF THE DOCUMENT IS FREE OF DEFECTS MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY, ACCURACY, AND PERFORMANCE OF THE DOCUMENT OR MODIFIED VERSION OF THE DOCUMENT IS WITH YOU. SHOULD ANY DOCUMENT OR MODIFIED VERSION PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE INITIAL WRITER, AUTHOR OR ANY CONTRIBUTOR) ASSUME THE COST OF ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF ANY DOCUMENT OR MODIFIED VERSION OF THE DOCUMENT IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS DISCLAIMER; AND
UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER IN TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL THE AUTHOR, INITIAL WRITER, ANY CONTRIBUTOR, OR ANY DISTRIBUTOR OF THE DOCUMENT OR MODIFIED VERSION OF THE DOCUMENT, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE LIABLE TO ANY PERSON FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER DAMAGES OR LOSSES ARISING OUT OF OR RELATING TO USE OF THE DOCUMENT AND MODIFIED VERSIONS OF THE DOCUMENT, EVEN IF SUCH PARTY SHALL HAVE BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.
DOCUMENT AND MODIFIED VERSIONS OF THE DOCUMENT ARE PROVIDED UNDER THE TERMS OF THE GNU FREE DOCUMENTATION LICENSE WITH THE FURTHER UNDERSTANDING THAT:
Richard
Hughes
richard@hughsie.com
3.0
2008-03-31
Rahul Sundaram
Rahul Sundaram
2.0
2007-08-30
Richard Hughes
Feedback
To report a bug or make a suggestion regarding the gnome-packagekit application or this manual, follow the directions in the
gnome-packagekit
gpk-application
Introduction
Manual
gnome-packagekit is a suite of tools for the
PackageKit is designed to unify all the software graphical tools used in different distributions. It abstracts the various underlying package management technologies like yum, apt, smart etc. and provides unified graphical and command line frontends. It also provides a framework that includes programming interfaces that other software applications can take advantage of. It is not a replacement for existing package managers like yum.
Some of the architectural advantages of PackageKit over other package management solutions are that the PackageKit daemon runs as a system process that is not tied to any user session, which means that a long-running update or installation will not be interrupted if the user who started it logs out. Tasks are queued up, meaning that a user can initiate multiple tasks which will be executed one by one and also that multiple users can also use PackageKit in parallel without completely locking each other out. Access to all privileged operations is controlled via
PolicyKit Permissions UI
Applications

Below is a list containing the names and a short description of the utilities included in the gnome-packagekit pack:
Command line








Add/Remove Software
Add/Remove software application accessed via
Searching for a group with filters
Typically, you can find several thousands of software packages under different groups available. Since this can be overwhelming you can choose to filter the lists of software packages based on several criteria such as whether the package is already installed, whether it is a development or graphical application and based on the software license. See
A software source configuration is available in the system menu that allows you to enable or disable a existing software repository. You can also refresh the application lists for displaying the latest information about software packages available in the repository.
Filters
You can limit the amount of software packages that is shown by several criteria.
To see only installed or only uninstalled software, choose the corresponding menuitem in the
To see only software containing applications with a graphical user interface or only applications with a commandline interface, choose a filter from the
Note that PackageKit uses a heuristic to determine if a package is a 'graphical' application and can get this wrong when a package has dependencies like gtk2+.
To see only software that qualify as free software, choose the corresponding menu item from the
Searching for software
The search entry and
Software Sources
The software repository viewer allows you to enable or disable software sources - also known as
Software Sources UI
At this time, PackageKit does not offer a way to add new repositories to your system. It only allows you to enable or disable known repositories. However, it is often possible to make a new repository known to PackageKit by installing a package with the necessary information. These are usually called (foo)-release, where foo is the name of the repository.
File Handler Helper
Sometimes you will not have the software on your system to open a particular file. If the file type is not recognised, then applications that can open this file type are shown.
At this time, only a limited number of results will be shown, as they will need to be rebuilt by the distro to support the extra data needed by PackageKit. This will happen automatically, and soon all suitable applications will be shown.
Update Viewer
You can update your system via
Note that the severity information must be provided by the software repositories where the software packages originate. This information may not be available for development branches of distributions.
Updates overview
Below the summary of available updates, the update viewer gives and indication how long ago the last check (or
You can choose to manually refresh and verify the presence of updates by clicking the
You can change how often PackageKit refreshes on its own in the
There is a option to view the history of updates including previous installations, removal or updates of software.
Use the
Detailed information about updates
The
Note that the detailed update information must be provided by the software repositories where the software packages originate. This information may not be available for development branches of distributions.
The checkboxes next to each package in the list allow to select individual updates for installation. Use the
Update viewer tool
You can uncheck all the updates quickly by right clicking on the list and selecting the menu item
Software Updates Preferences
Preferences tool
Preferences can be configured via
Software Log Viewer
Log viewer
This tool can be opened using
The log viewer can be used to find out what updates were downloaded and installed. The filter will match on the package name, version or architecture.
It can also can be used to roll back to a specific point for package backends that support
Service Pack Creator
Service pack creator
This tool can be opened using
A service pack is a tarball which contains a set of packages and their dependencies. To explain better what a service pack is, it is best to show a few use-cases.
You can add multiple packages to a service pack by separating the package names with a comma, for instance
You have seven desktops you've just installed with Fedora 9. Each one needs to have 204Mb of updates installed.
You have a laptop that needs network drivers before it can download updates, and you have a similar up to date laptop with internet access nearby. The network drivers require a few dependencies, and other packages to be upgraded before they will install.
You frequently install Linux on other peoples computers. You carry around a live-cd and a pendrive with a single 204Mb file
A free software magazine wants to distribute patent encumbered multimedia plugins and programs with the latest Fedora release DVD. They want a way in which even the most lazy user can get the things installed without much fuss.
Internally, the pack file is just an uncompressed tarball, with the packages and a single metadata.conf file inside. The metadata file is just the distribution identifier and the time of creation. This ensures you don't try installing a
We need a destination file list because we not know what packages are installed on the destination computer. For example:
Two example computers
Computer A has the following packages installed, and has internet access.
glib
dbus
dbus-glib
libgnome
Computer B has the following packages installed, and does not have internet access.
kdebase
kdeapps
Computer B wants to have a service pack containing a new version of
The
If we generate a package list on computer B, and the transfer it to computer A on a USB pendrive or CDRW we can download the correct packages. In this case we would download
The service pack can now be transferred from computer A to computer B on the USB pendrive.
The
Automatic Updates
Automatic updates can be performed in the background system wide using the PackageKit-cron package. The settings are controlled via the configuration file at
Update Icon
The icon offers menu items for installing the available updates or for starting the update viewer, which allows you to obtain detailed information about the available updates before installing them. See
Agreeing to EULAs
A license agreement is a contract between a producer and a user of software which grants the user a software license. A software license agreement defines the legal terms under which a user may use the software. This is called an end-user license agreement or EULA for short.
Many EULAs assert extensive liability limitations for the software. Typically a EULA will hold the software producer immune in the event that the software causes damage to the computer hardware or data. Some software also includes limitations if the user can be held liable for damage that arises through improper use of the software.
Example EULA
Be sure to carefully read and accept the EULA text before continuing with the install or update.
Accepting a security signature
Packages from a software source are typically signed by the project managing the repository or packages. This allows users to be sure a package signed with a security key is actually from the software source it claims to be.
For a package management infrastructure to operate effectively, it has to trust repositories so that updates can be downloaded and installed automatically. The other benefit is that signed packages can be installed without using the administrator password, assuming your admin has enabled this option.
Example signature prompt
To trust a repository, you should verify the details of the signing key. Normally the best way to do this is to go to the web page of the software source, and try to find details about the key used to sign the packages. This is normally called a
You should only proceed with this dialog if you are happy to trust packages from this software source.
Common Dialogs Explained
This application tries to reuse dialogs as much as possible, so that there is a repeatable and consistent user interface when managing packages. In the following subsections, some of the dialogs will be explained further, often with examples or web links.
Copying Files To Another Location
Example dialog
If a file has been downloaded to your home directory, it is usually downloaded to a location similar to
Installing Local Files
An application has asked to install local files on your system. If you initiated the action, please click the install button.
Installing Catalogs
A package catalog is a simple file that indicates that other packages should be installed. There are no optional packages, as a catalog file is designed to be simple and need no user interaction. Using a catalog file allows you to install different packages quickly and easily.
To find more information about catalogs, please visit the
No Packages Required
The catalog that you tried to install made no changes to your system as you already have the required packages installed. No further actions are required.
Confirmation Required
Example plugin dialog
An application needs your permission before modifying packages on your system. The program name and the icon is from the application asking for permission.
Finding Other Required Packages
Other packages may depend on this package to operate correctly. This application is searching for other packages that require the package you are trying to remove. No changes are being made, and you will be prompted later if this is required.
Finding Other Dependent Packages
This package may require resources in other packages to operate correctly. This application is searching for other required packages of the package you are trying to install.
Removing Other Packages
Example dialog when removing rarian
Other packages need to be removed if this package is to be removed. If you remove these packages you may loose functionality in other applications.
If you are unsure you should not remove the package.
Installing Other Packages
Example dialog when installing xfce-utils
Other packages need to be installed if this package is to be installed. If you remove these packages you may loose functionality in other applications. Downloading and installing extra packages will increase the time it takes to install this package.
Finding Packages
The package database is being searched for your query. This may take some time if new package lists need to be downloaded from the Internet.
Package Not Found
No packages could be found in any remote software source. This normally means that you do not have any third party repositories enabled or installed. These extra repositories can often be found using search engines or forums.
Only install packages from reputable software sources.
Progress Window
If we start an action automatically, we typically do it non-interactively. If this task starts doing something using the network, or that will take a long time, then a new dialog will appear. This gives you the opportunity to cancel the task if this is not desired.
No Privileges
You don't have the necessary privileges to perform this action. This can happen when you fail to authenticate correctly, for instance by entering your password correctly twice in a row. NOTE: you also need to enter the root password on some distributions, not your own password.
If you cannot authenticate, you need to speak to your systems administrator.
No PackageKit Service Running
The core PackageKit service could not be started. This will only happen when you have a serious system error. You can get more information about the error by running (as the root user):
Update System
All the packages that can be updated on your system are now being updated. You can cancel the update if the cancel button is not insensitive.
Update Packages
Some packages on your system are now being upgraded. You can cancel the update if the cancel button is not insensitive.
Refreshing Package Lists
Once a week (although this can be changed in the preferences) you will automatically have the latest package lists downloaded. This means that when you search for a package you do not have installed, you will get any new software that was added to a software source.
Once the package lists are downloaded, the installed and available packages will be cached so client tools can auto-complete. When this is completed, any new applications are scanned and added to a client database.
About
gnome-packagekit is maintained Richard Hughes
To report a bug or make a suggestion regarding this application or this manual, follow the directions at the
This program is distributed under the terms of the GNU General Public license as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. A copy of this license can be found at this
translator-credits