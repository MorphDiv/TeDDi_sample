# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3, PHP 4)
Opens a pipe to a process executed by forking the command given by command.
Returns a file pointer identical to that returned by fopen(), except that it is unidirectional (may only be used for reading or writing) and must be closed with pclose().
This pointer may be used with fgets(), fgetss(), and fputs().
If an error occurs, returns FALSE.
Note:
If you' re looking for bi-directional support (two-way), use proc_open().
Example 1. popen() examole
?php $handle = popen ("/ bin / ls", "r");?
Note:
If the command to be executed could not be found, a valid resource is returned.
This may seem odd, but makes sense; it allows you to access any error message returned by the shell:
?php error_reporting( E_ALL); / * Add redirection so we can get stderr. * / $handle = popen(' / path / to / spooge 2 1', 'r'); echo "'$handle'; ". gettype($handle). "\n"; $read = fread($handle, 2096); echo $read; pclose($handle);?
See also pclose(), fopen(), and proc_open().
Prev
Home
Next
pclose
Up
readfile