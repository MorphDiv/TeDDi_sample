# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/en_GB.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

While...Wend Statement[Run-time]
/text/sbasic/shared/03090203.xhp
Sun Microsystems, Inc.
converted from old format - fpe
While;While...Wend loop
While...Wend Statement[Run-time]
While
statement.
If the condition is still True, the loop is executed again.
Do...Loop
statement, you cannot cancel a
While...Wend
loop with
Exit
.
Never exit a While...Wend loop with
GoTo
, since this can cause a run-time error.
A Do...Loop is more flexible than a While...Wend.
Syntax:
While Condition [Statement] Wend
Example:
Sub ExampleWhileWend
Dim stext As String
Dim iRun As Integer
sText = &quot; This is a short text &quot;
iRun = 1
while iRun < Len(sText)
if Mid(sText, iRun, 1) < > &quot; &quot; then Mid( sText, iRun, 1, Chr( 1 + Asc( Mid(sText, iRun, 1) ) )
iRun = iRun + 1
Wend
MsgBox sText,0, &quot; Text encoded &quot;
end sub