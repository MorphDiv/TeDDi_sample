# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
These functions interface the MCVE API (libmcve), allowing you to work directly with MCVE from your PHP scripts.
MCVE is Main Street Softworks' solution to direct credit card processing.
It lets you directly address the credit card clearing houses via your *nix box, modem and / or internet connection (bypassing the need for an additional service such as Authorize.Net or Pay Flow Pro).
Using the MCVE module for PHP, you can process credit cards directly through MCVE via your PHP scripts.
The following references will outline the process.
Note:
MCVE is the replacement for RedHat 's CCVS.
They contracted with RedHat in late 2001 to migrate all existing clientelle to the MCVE platform.
Note:
This extension is not available on Windows platforms.
To enable MCVE Support in PHP, first verify your LibMCVE installation directory.
You will then need to configure PHP with the --with-mcve option.
If you use this option without specifying the path to your MCVE installation, PHP will attempt to look in the default LibMCVE Install location (/ usr / local).
If MCVE is in a non-standard location, run configure with: --with-mcve=$mcve_path, where $mcve_path is the path to your MCVE installation.
Please note that MCVE support requires that $mcve_path / lib and $mcve_path / include exist, and include mcve.h under the include directory and libmcve.so and / or libmcve.a under the lib directory.
Since MCVE has true server / client separation, there are no additional requirements for running PHP with MCVE support.
To test your MCVE extension in PHP, you may connect to testbox.mcve.com on port 8333 for IP, or port 8444 for SSL using the MCVE PHP API.
Use 'vitale' for your username, and'test 'for your password.
Additional information about test facilities are available at www.mcve.com.
Additional documentation about MCVE 's PHP API can be found at http: / /www.mcve.com / docs / phpapi.pdf.
Main Street 's documentation is complete and should be the primary reference for functions.
Prev
Home
Next
mdecrypt_generic
Up
mcve_adduser