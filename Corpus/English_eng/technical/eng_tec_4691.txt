# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 4)
session_register() accepts a variable number of arguments, any of which can be either a string holding the name of a variable or an array consisting of variable names or other arrays.
For each name, session_register() registers the global variable with that name in the current session.
Caution
If you want your script to work regardless of register_globals, you need to use the $_SESSION array.
All $_SESSION entries are automatically registered.
If your script uses session_register(), it will not work in environments where register_globals is disabled.
Caution
This registers a global variable.
If you want to register a session variable from within a function, you need to make sure to make it global using the global keyword or the $GLOBALS[] array, or use the special session arrays as noted below.
Caution
If you are using $_SESSION (or $HTTP_SESSION_VARS), do not use session_register(), session_is_registered() and session_unregister().
This function returns TRUE when all of the variables are successfully registered with the session.
If session_start() was not called before this function is called, an implicit call to session_start() with no parameters will be made. $_SESSION does not mimick this behavior and requires session_start() before use.
You can also create a session variable by simply setting the appropriate member of the $_SESSION or $HTTP_SESSION_VARS (PHP 4.1.0) array.
$barney = "A big purple dinosaur ."; session_register("barney"); $_SESSION["zim"] = "An invader from another planet ."; # The old way was to use $HTTP_SESSION_VARS $HTTP_SESSION_VARS["spongebob"] = "He's got square pants .";
Note:
It is currently impossible to register resource variables in a session.
For example, you cannot create a connection to a database and store the connection id as a session variable and expect the connection to still be valid the next time the session is restored.
PHP functions that return a resource are identified by having a return type of resource in their function definition.
A list of functions that return resources are available in the resource types appendix.
If $_SESSION (or $HTTP_SESSION_VARS for PHP 4.0.6 or less) is used, assign values to $_SESSION.
For example: $_SESSION[ 'var'] = 'ABC';
See also session_is_registered() and session_unregister().
Prev
Home
Next
session_readonly
Up
session_save_path