# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 4 = 4.2.0)
The exif_read_data() function reads the EXIF headers from a JPEG or TIFF image file.
It returns an associative array where the indexes are the header names and the values are the values associated with those headers.
If no data can be returned the result is FALSE.
filename is the name of the file to read.
This cannot be a url.
sections a comma separated list of sections that need to be present in file to produce a result array.
FILE
FileName, FileSize, FileDateTime, SectionsFound
COMPUTED
html, Width, Height, IsColor and some more if available.
ANY_TAG
Any information that has a Tag e.g.
IFD0, EXIF,...
IFD0
All tagged data of IFD0.
In normal imagefiles this contains image size and so forth.
THUMBNAIL
A file is supposed to contain a thumbnail if it has a second IFD.
All tagged information about the embedded thumbnail is stored in this section.
COMMENT
Comment headers of JPEG images.
EXIF
The EXIF section is a sub section of IFD0.
It contains more detailed information about an image.
Most of these entries are digital camera related.
arrays specifies whether or not each section becomes an array.
The sections FILE, COMPUTED and THUMBNAIL allways become arrays as they may contain values whose names are conflict with other sections.
thumbnail whether or not to read the thumbnail itself and not only its tagged data.
Note:
Exif headers tend to be present in JPEG / TIFF images generated by digital cameras, but unfortunately each digital camera maker has a different idea of how to actually tag their images, so you can 't always rely on a specific Exif header being present.
Example 1. exif_read_data() example
?php echo "test1.jpg: br / \n"; $exif = exif_read_data ('tests / test1.jpg' ,'IFD0'); echo $exif===false? "No header data found. br / \n": "Image contains headers br / "; $exif = exif_read_data ('tests / test2.jpg',0,true); echo "test2.jpg: br / \n"; foreach($exif as $key= $section) {foreach($section as $name= $val) {echo "$key.$name: $val br / \n";}}?
The first call fails because the image has no header information.
test1.jpg:
No header data found. test2.jpg:
FILE.FileName: test2.jpg FILE.FileDateTime:
1017666176 FILE.FileSize:
1240 FILE.FileType:
2 FILE.SectionsFound:
ANY_TAG, IFD0, THUMBNAIL, COMMENT COMPUTED.html: width=" 1 "height="1" COMPUTED.Height:
1 COMPUTED.Width:
1 COMPUTED.IsColor:
1 COMPUTED.ByteOrderMotorola:
1 COMPUTED.UserComment:
Exif test image.
COMPUTED.UserCommentEncoding:
ASCII COMPUTED.Copyright:
Photo (c) M.Boerger, Edited by M.Boerger.
COMPUTED.Copyright.Photographer:
Photo (c) M.Boerger COMPUTED.Copyright.Editor:
Edited by M.Boerger.
IFD0.Copyright:
Photo (c) M.Boerger IFD0.UserComment:
ASCII THUMBNAIL.JPEGInterchangeFormat:
134 THUMBNAIL.JPEGInterchangeFormatLength:
523 COMMENT.0:
Comment #1.
COMMENT.1:
Comment #2.
COMMENT.2:
Comment #3end THUMBNAIL.JPEGInterchangeFormat:
134 THUMBNAIL.Thumbnail.Height:
1 THUMBNAIL.Thumbnail.Height:
1
Note:
If the image contains any IFD0 data then COMPUTED contains the entry ByteOrderMotorola which is 0 for little-endian (intel) and 1 for big-endian (motorola) byte order.
This was added in PHP 4.3.
When an Exif header contains a Copyright note this itself can contain two values.
As the solution is inconsitent in the Exif 2.10 standard the COMPUTED section will return both entries Copyright.Photographer and Copyright.Editor while the IFD0 sections contains the byte array with the NULL character that splits both entries.
Or just the first entry if the datatype was wrong (normal behaviour of Exif).
The COMPUTED will contain also an entry Copyright Which is either the original copyright string or it is a comma separated list of photo and editor copyright.
Note:
The tag UserComment has the same problem as the Copyright tag.
It can store two values first the encoding used and second the value itself.
If so the IFD section only contains the encoding or a byte array.
The COMPUTED section will store both in the entries UserCommentEncoding and UserComment.
The entry UserComment is available in both cases so it should be used in preference to the value in IFD0 section.
If the user comment uses Unicode or JIS encoding and the module mbstring is available this encoding will automatically changed according to the exif ini settings.
This was added in PHP 4.3.
Note:
Height and Width are computed the same way getimagesize() does so their values must not be part of any header returned.
Also html is a height / width text string to be used inside normal HTML.
Note:
Starting from PHP 4.3 the function can read all embedded IFD data including arrays (returned as such).
Also the size of an embedded thumbnail is returned in THUMBNAIL subarray and the function exif_read_data() can return thumbnails in TIFF Also the size of an embedded thumbnail is returned in THUMBNAIL subarray and the function exif_read_data() can return thumbnails in TIFF format.
Last but not least there is no longer a maximum legth for returned values (not until memory limit is reached).
Note:
This function is only available in PHP 4 compiled using --enable-exif.
Its functionality and behaviour has changed in PHP 4.2.
Earlier versions are very unstable.
Since PHP 4.3 user comment can automatically change encoding if PHP 4 was compiled using --enable-mbstring.
This function does not require the GD image library.
See also exif_thumbnail() and getimagesize().
Prev
Home
Next
exif_imagetype
Up
exif_thumbnail