# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Chapter 13.
Functions
Next
PHP supports the concept of variable functions.
This means that if a variable name has parentheses appended to it, PHP will look for a function with the same name as whatever the variable evaluates to, and will attempt to execute it.
Among other things, this can be used to implement callbacks, function tables, and so forth.
Variable functions won' t work with language constructs such as echo(), print(), unset(), isset(), empty(), include(), require() Variable functions won't work with language constructs such as echo(), print(), unset(), isset(), empty(), include(), require() and the like.
You need to use your own wrapper function to utilize any of these constructs as variable functions.
Example 13-3.
Variable function example
?php function foo() {echo "In foo() br \n";} function bar($arg = '') {echo "In bar(); argument was '$arg'. br \n";} / / This is a wrapper function around echo function echoit($string) {echo $string;} $func = 'foo'; $func(); / / This calls foo() $func = 'bar'; $func('test'); / / This calls bar() $func = 'echoit'; $func('test'); / / This calls echoit()?
You can also call an object 's method by using the variable functions feature.
Example 13-4.
Variable method example
?php class Foo {function Var() {$name = 'Bar'; $this - $name(); / / This calls the Bar() method} function Bar() {echo "This is Bar";}} $foo = new Foo(); $funcname = "Var"; $foo - $varname(); / / This calls $foo - Var()?
See also call_user_func(), variable variables and function_exists().
Prev
Home
Next
old_function
Up
Classes and Objects