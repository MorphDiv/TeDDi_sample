# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Translator's Guide to & kturtle;
As you probably already know & kturtle; 's programming language, & turtlescript;, allows to be translated. This takes away a barrier for some, especially younger students, on their effort to understand the basics of programming.
When translating & kturtle; to a new language you will find, in addition to the GUI strings, the programming commands, the examples and the error messages are included in the standard. pot files as used for translation in & kde;. Everything is translated using the regular translation method found in & kde;, yet you are strongly advised to learn a little on how to translate these (as you will also read in the translator comments).
Please look at http: / /edu. kde. org/ kturtle/ translator. php for more information about the translation process. Thanks a lot for your work! KTurtle depends heavily on its translations.
As you probably already know, the unique feature of the & logo; programming language is that the & logo; commands are often translated to the language of the programmer. This takes away a barrier for some learners to understand the basics of programming. When translating & kturtle; to a new language, the commands and default examples are included in the standard. pot files used for translation in & kde;.
Creating a Directory to hold the Translated Files
First, you need to create a directory to store the translated files. Create a directory called kde-i18n/ code / data/ kdeedu/ kturtle/ in your KDE SVN directory, where code is your country code (the 2- or 4- letter ISO code).
Copy the Makefile. am file from kdeedu/ kturtle/ data/ into this directory. Open it using your favorite text editor, replace all instances of en_US in the file with your country code (the one used above), and save the file.
How To Translate the & logo; Keywords (commands)
Copy the logokeywords. en_US. xml file from kdeedu/ kturtle/ data/ to the directory you have just created, and rename it to logokeywords. code. xml where code is your country code (the 2- or 4- letter ISO code).
Translate the contents of the keyword tag (ie; the information between keyword and keyword) into your own language wherever possible. Also, translate the contents of the alias tag, (ie; the information between the alias and alias): these are used as shortcuts for the keyword.
For example, translate while in: keyword while keyword
Please do not translate anything else and do not translate the English words in command name="english_word ": these must stay in English.
Last bit: do not change the order of this file, this is needed for Rafael Beccar's automatic translation generation scripts.
Save your file as UTF-8 (in & kate;, use Save As... and change to utf8 in the box on the right of the file name).
Commit your file (add your filename in the Makefile. am) or send it to Anne-Marie.
In case of any doubt, please contact Anne-Marie Mahfouf annemarie. mahfouf@free. fr for more information.
How To Translate the Syntax Highlighting Files
Translating the logohighlightstyle. en_US. xml is a breeze when using Rafael Beccar's script in kdeedu/ kturtle/ data/. Please make sure to read the README file in that directory.
For backward compatibility with all people who do not want to the perl scripted blessing mentioned in the previous paragraph, here the old fashioned way of doing it:
Copy the logohighlightstyle. en_US. xml file from kdeedu/ kturtle/ data/ to the directory you created to store the translated keywords file, and rename it to logohighlightstyle. code. xml where code is your country code (the 2- or 4- letter ISO code).
In line 4 of the file, there is language name="en_US "...: here you change en_US to your language's ISO code (2 or 4 letters).
Translate into your own language the content of the item tag (ie; the information between item and item). This content must match the logokeyword file. For example, translate while in: item while item and leave the spaces as they are (one at the beginning and one at the end). Please do not translate anything else.
How To Translate the Examples
Again this task is simplified a lot by Rafael Beccar's script in kdeedu/ kturtle/ data/. Please make sure to read the README file in that directory, since some work still has to be done after the example logo files are autotranslated.
When you followed the instructions, given in the README file that you found in the scripts directory, you should now be almost ready. Please do not forget to test the translated example logo code you created, since it is very common that an error sneaks in. Also make sure the Makefile. am in kde-i18n/ code / data/ kdeedu/ kturtle/ is updated according to the new files. For the Dutch the Makefile. am should look like this:
txt_DATA = advertentie. logo driehoeken. logo krullen. logo tafels. logo\\ bloem. logo driehoek. logo logohighlightstyle. nl. xml pijl. logo vierkanten. logo\\ kleuren. logo logokeywords. nl. xml randomnaam. logo vierkant. logo txtdir = $(kde_datadir)/ kturtle/ examples/ nl xml_DATA = logohighlightstyle. nl. xml xmldir = $(kde_datadir)/ katepart/ syntax keywords_DATA = logokeywords. nl. xml keywordsdir = $(kde_datadir)/ kturtle/ data EXTRA_DIST = $(txt_DATA) $(xml_DATA) $(keywords_DATA)
Here a description of how to do the translation WITHOUT the use of Rafael's perl scripts:
Copy the English example files from kdeedu/ kturtle/ data/ to the directory used to store the translated keyword and hilighting files. Translate the filenames of the examples in your directory: this will allow users to easily and quickly understand what the example is about.
Translate the keywords in the examples, using those in the logokeywords. xml for your language. The keywords file file must be done, first, before translating the examples.
Save your file as UTF-8 (in & kate;, use Save As... and change to utf8 in the box on the right of the file name)
Commit your folder (add a Makefile. am inside) or send it to Anne-Marie.
In case of any doubt, please contact Anne-Marie Mahfouf, annemarie. mahfouf@free. fr for more information.
Finally, if you want, you can add your own examples in this folder.