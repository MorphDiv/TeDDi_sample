# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/en_GB.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Financial Functions Part One
/text/scalc/01/04060103.xhp
financial functions
functions; financial functions
Function Wizard; financial
amortisations, see also depreciations
mw added one entry
Financial Functions Part One
%PRODUCTNAME
Calc.
AMORDEGRC function
depreciations;degressive amortisations
mw added one entry
AMORDEGRC
Calculates the amount of depreciation for a settlement period as degressive amortisation.
Unlike AMORLINC, a depreciation coefficient that is independent of the depreciable life is used here.
Syntax:
AMORDEGRC(Cost; DatePurchased; FirstPeriod; Salvage; Period; Rate; Basis)
Cost
is the acquisition costs.
DatePurchased
is the date of acquisition.
FirstPeriod
is the end date of the first settlement period.
Salvage
is the salvage value of the capital asset at the end of the depreciable life.
Period
is the settlement period to be considered.
Rate
is the rate of depreciation.
AMORLINC function
depreciations;linear amortisations
mw added &quot; depreciations;... &quot;
AMORLINC
Calculates the amount of depreciation for a settlement period as linear amortisation.
If the capital asset is purchased during the settlement period, the proportional amount of depreciation is considered.
Syntax:
AMORLINC(Cost; DatePurchased; FirstPeriod; Salvage; Period; Rate; Basis)
Cost
is the acquisition costs.
DatePurchased
is the date of acquisition.
FirstPeriod
is the end date of the first settlement period.
Salvage
is the salvage value of the capital asset at the end of the depreciable life.
Period
is the settlement period to be considered.
Rate
is the rate of depreciation.
ACCRINT function
ACCRINT
accrued interests;periodic payments
mw changed &quot; accrued interests &quot;
Calculates the accrued interest of a security in the case of periodic payments.
Syntax:
ACCRINT(Issue; FirstInterest; Settlement; Rate; Par; Frequency; Basis)
Issue
is the issue date of the security.
First interest
is the first interest date of the security.
Settlement
is the date at which the interest accrued up until then is to be calculated.
Rate
is the annual nominal rate of interest (coupon interest rate)
Par
is the par value of the security.
Frequency
is the number of interest payments per year (1, 2 or 4).
Example:
A security is issued on 28/02/2001.
First interest is set for 31/08/2001.
The settlement date is 01/05/2001.
The Rate is 0.1 or 10% and Par is 1000 currency units.
Interest is paid half-yearly (frequency is 2).
The basis is the US method (0).
How much interest has accrued?
=ACCRINT( &quot; 28/02/2001 &quot; ; &quot; 31/08/2001 &quot; ; &quot; 01/05/2001 &quot; ; 0.1; 1000; 2; 0)
returns 16.94444.
ACCRINTM function
accrued interests;one-off payments
mw added one index entry
ACCRINTM
Calculates the accrued interest of a security in the case of one-off payment at the settlement date.
Syntax:
ACCRINTM(Issue; Settlement; Rate; Par; Basis)
Issue
is the issue date of the security.
Settlement
is the date at which the interest accrued up until then is to be calculated.
Rate
is the annual nominal rate of interest (coupon interest rate).
Par
is the par value of the security.
Example:
A security is issued on 01/04/2001.
The maturity date is set for 15/06/2001.
The Rate is 0.1 or 10% and Par is 1000 currency units.
The basis of the daily/annual calculation is the daily balance (3).
How much interest has accrued?
=ACCRINTM( &quot; 01/04/2001 &quot; ; &quot; 15/06/2001 &quot; ; 0.1; 1000; 3)
returns 20.54795.
RECEIVED function
amount received for fixed-interest securities
mw added one entry
RECEIVED
Calculates the amount received that is paid for a fixed-interest security at a given point in time.
Syntax
RECEIVED( &quot; Settlement &quot; ; &quot; Maturity &quot; ; Investment; Discount; Basis)
Settlement
is the date of purchase of the security.
Maturity
is the date on which the security matures (expires).
Investment
is the purchase sum.
Discount
is the percentage discount on acquisition of the security.
Example:
Settlement date:
15th February 1999, maturity date:
15th May 1999, investment sum:
1000 currency units, discount:
5.75 per cent, basis:
Daily balance/360 = 2.
The amount received on the maturity date is calculated as follows:
=RECEIVED( &quot; 15/02/1999 &quot; ; &quot; 15/05/1999 &quot; ; 1000; 0.0575; 2)
returns 1014.420266.
PV function
present values
calculating; present values
PV
Returns the present value of an investment resulting from a series of regular payments.
Use this function to calculate the amount of money needed to be invested at a fixed rate today, to receive a specific amount, an annuity, over a specified number of periods.
You can also determine how much money is to remain after the elapse of the period.
Specify as well if the amount is to be paid out at the beginning or at the end of each period.
Rate
and
%PRODUCTNAME
Calc with automatically calculate the correct factor.
Syntax:
PV(Rate; NumPeriods; Payment; FV; Type)
Rate
defines the interest rate per period.
NumPeriods
is the total number of periods (payment period).
Payment
is the regular payment made each period.
FV
(optional) defines the future value remaining after the final instalment has been made.
Type
(optional) denotes due date for payments.
Type = 1 means due at the beginning of a period and Type = 0 (default) means due at the end of the period.
Example:
What is the present value of an investment, if 500 currency units are paid out monthly and the annual interest rate is 8%?
The payment period is 48 months and 20,000 currency units are to remain at the end of the payment period.
=PV(8%/12; 48; 500; 20000)
= -35,019.37 currency units.
Under the named conditions, you must deposit 35,019.37 currency units today, if you want to receive 500 currency units per month for 48 months and have 20,000 currency units left over at the end.
Cross-checking shows that 48 x 500 currency units + 20,000 currency units = 44,000 currency units.
The difference between this amount and the 35,000 currency units deposited represents the interest paid.
If you enter references instead of these values into the formula, you can calculate any number of &quot; If-then &quot; scenarios.
Please note: references to constants must be defined as absolute references.
Examples of this type of application are found under the depreciation functions.
calculating; depreciations
SYD function
depreciations; arithmetic declining
arithmetic declining depreciations
SYD
Returns the arithmetic-declining depreciation rate.
Use this function to calculate the depreciation amount for one period of the total depreciation span of an object.
Arithmetic declining depreciation reduces the depreciation amount from period to period by a fixed sum.
Syntax:
SYD(Cost; Salvage; Life; Period)
Cost
is the initial cost of an asset.
Salvage
is the value of an asset after depreciation.
Life
is the period fixing the time span over which an asset is depreciated.
Period
defines the period for which the depreciation is to be calculated.
Example:
A video system initially costing 50,000 currency units is to be depreciated annually for the next 5 years.
The salvage value is to be 10,000 currency units.
You want to calculate depreciation for the first year.
=SYD(50000; 10000; 5; 1)
=13,333.33 currency units.
The depreciation amount for the first year is 13,333.33 currency units.
%PRODUCTNAME
Calc next to each other, you can see which depreciation form is the most appropriate.
Enter the table as follows:
A
B
C
D
E
1
Initial Cost
Salvage Value
Useful Life
Time Period
Deprec.
SYD
2
50,000 currency units
10,000 currency units
5
1
13,333.33 currency units
3
2
10,666.67 currency units
4
3
8,000.00 currency units
5
4
5,333.33 currency units
6
5
2,666.67 currency units
7
6
0.00 currency units
8
7
9
8
10
9
11
10
12
13
> 0
Total
40,000.00 currency units
The formula in E2 is as follows:
=SYD($A$2; $B$2; $C$2; D2)
This formula is duplicated in column E down to E11 (select E2, then drag down the lower right corner with the mouse).
Cell E13 contains the formula used to check the total of the depreciation amounts.
It uses the SUMIF function as the negative values in E8:E11 must not be considered.
The condition > 0 is contained in cell A13.
The formula in E13 is as follows:
=SUMIF(E2:E11; A13)
Now view the depreciation for a 10 year period, or at a salvage value of 1 currency unit, or enter a different initial cost and so on.
DISC function
allowances
discounts
mw added &quot; discounts &quot; and &quot; allowances &quot;
DISC
Calculates the allowance (discount) of a security as a percentage.
Syntax:
DISC( &quot; Settlement &quot; ; &quot; Maturity &quot; ; Price; Redemption; Basis)
Settlement
is the date of purchase of the security.
Maturity
is the date on which the security matures (expires).
Price
is the price of the security per 100 currency units of par value.
Redemption
is the redemption value of the security per 100 currency units of par value.
Example:
A security is purchased on 25/01/2001; the maturity date is 15/11/2001.
The price (purchase price) is 97, the redemption value is 100.
Using daily balance calculation (basis 3) how high is the settlement (discount)?
=DISC( &quot; 25/01/2001 &quot; ; &quot; 15/11/2001 &quot; ; 97; 100; 3)
returns 0.03840 or 3.84 per cent.
DURATION_ADD function
Microsoft Excel functions
durations;fixed interest securities
mw added two entries
DURATION_ADD
Calculates the duration of a fixed interest security in years.
Syntax:
DURATION_ADD( &quot; Settlement &quot; ; &quot; Maturity &quot; ; Coupon; Yield; Frequency; Basis)
Settlement
is the date of purchase of the security.
Maturity
is the date on which the security matures (expires).
Coupon
is the annual coupon interest rate (nominal rate of interest)
Yield
is the annual yield of the security.
Frequency
is the number of interest payments per year (1, 2 or 4).
Example:
A security is purchased on 01/01/2001; the maturity date is 01/01/2006.
The Coupon rate of interest is 8%.
The yield is 9.0%.
Interest is paid half-yearly (frequency is 2).
Using daily balance interest calculation (basis 3) What is the duration?
=DURATION_ADD( &quot; 01/01/2001 &quot; ; &quot; 01/01/2006 &quot; ; 0.08; 0.09; 2; 3)
annual net interest rates
calculating; annual net interest rates
net annual interest rates
EFFECTIVE function
mw added one entry
EFFECTIVE
Returns the net annual interest rate for a nominal interest rate.
Nominal interest refers to the amount of interest due at the end of a calculation period.
Effective interest increases with the number of payments made.
In other words, interest is often paid in instalments (for example, monthly or quarterly) before the end of the calculation period.
Syntax:
EFFECTIVE(Nom; P)
Nom
is the nominal interest.
P
is the number of interest payment periods per year.
Example:
If the annual nominal interest rate is 9.75% and four interest calculation periods are defined, what is the actual interest rate (effective rate)?
=EFFECTIVE(9.75%; 4)
= 10.11% The annual effective rate is therefore 10.11%.
effective interest rates
EFFECT_ADD function
mw changed &quot; effective rates &quot;
EFFECT_ADD
Calculates the effective annual rate of interest on the basis of the nominal interest rate and the number of interest payments per annum.
Syntax:
EFFECT_ADD(NominalRate; NumPerYear)
NominalRate
is the annual nominal rate of interest.
NumPerYear
is the number of interest payments per year.
Example:
What is the effective annual rate of interest for a 5.25% nominal rate and quarterly payment.
=EFFECT_ADD(0.0525; 4)
returns 0.053543 or 5.3534%.
calculating; arithmetic-degressive depreciations
arithmetic-degressive depreciations
depreciations;arithmetic-degressive
DDB function
mw corrected two typos and added &quot; depreciations;... &quot;
DDB
Returns the depreciation of an asset for a specified period using the arithmetic-declining method.
Use this form of depreciation if you require a higher initial depreciation value as opposed to linear depreciation.
The depreciation value gets less with each period and is usually used for assets whose value loss is higher shortly after purchase (for example, vehicles, computers).
Please note that the book value will never reach zero under this calculation type.
Syntax:
DDB(Cost; Salvage; Life; Period; Factor)
Cost
fixes the initial cost of an asset.
Salvage
fixes the value of an asset at the end of its life.
Life
is the number of periods (for example, years or months) defining how long the asset is to be used.
Period
defines the length of the period.
The length must be entered in the same time unit as life.
Factor
(optional) is the factor by which depreciation decreases.
If a value is not entered, the default is factor 2.
Example:
A computer system with an initial cost of 75,000 currency units is to be depreciated monthly over 5 years.
The value at the end of the depreciation is to be 1 currency unit.
The factor is 2.
=DDB(75000; 1; 60; 12; 2)
= 1,721.81 currency units.
Therefore, the double-declining depreciation during the first month after purchase is 1,721.81 currency units.
calculating; geometric-degressive depreciations
geometric-degressive depreciations
depreciations;geometric-degressive
DB function
mw added &quot; depreciations;.. &quot;
DB
Returns the depreciation of an asset for a specified period using the double-declining balance method.
This form of depreciation is used if you want to get a higher depreciation value at the beginning of the depreciation (as opposed to linear depreciation).
The depreciation value is reduced with every depreciation period by the depreciation already deducted from the initial cost.
Syntax:
DB(Cost; Salvage; Life; Period; Month)
Cost
is the initial cost of an asset.
Salvage
is the value of an asset at the end of the depreciation.
Life
defines the period over which an asset is depreciated.
Period
is the length of each period.
The length must be entered in the same date unit as the depreciation period.
Month
(optional) denotes the number of months for the first year of depreciation.
If an entry is not defined, 12 is used as the default.
Example:
A computer system with an initial cost of 25,000 currency units is to be depreciated over a three year period.
The salvage value is to be 1,000 currency units.
One period is 30 days.
=DB(25000; 1000; 36; 1; 6)
= 1,075.00 currency units
The fixed-declining depreciation of the computer system is 1,075.00 currency units.
IRR function
calculating;internal rates of return, regular payments
internal rates of return;regular payments
mw changed &quot; calculating;... &quot; and &quot; internal rates &quot;
IRR
Calculates the internal rate of return for an investment.
The values represent cash flow values at regular intervals, at least one value must be negative (payments) and at least one value must be positive (income).
Syntax:
IRR(Values; Guess)
Values
is an array containing the values.
Guess
(optional) is the estimated value.
An iterative method is used to calculate the internal rate of return.
If you can provide only few values, you should provide an initial guess to enable the iteration.
Example:
-10000
, A2=
3500
, A3=
7600
and A4=
1000
, the formula
=IRR(A1:A4)
gives a result of 80.24%.
calculating; interests for unchanged amortisation instalments
interests for unchanged amortisation instalments
ISPMT function
ISPMT
Calculates the level of interest for unchanged amortisation instalments.
Syntax:
ISPMT(Rate; Period; TotalPeriods; Invest)
Rate
sets the periodic interest rate.
Period
is the number of instalments for calculation of interest.
TotalPeriods
is the total number of instalment periods.
Invest
is the amount of the investment.
Example:
For a credit amount of 120,000 currency units with a two-year term and monthly instalments, at a yearly interest rate of 12% the level of interest after 1.5 years is required.
=ISPMT(1%; 18; 24; 120000)
= -300 currency units.
The monthly interest after 1.5 years amounts to 300 currency units.
Financial Functions Part Two
Financial Functions Part Three