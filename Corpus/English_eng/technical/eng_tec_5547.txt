# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Chapter 33.
Creating Variables
Next
Since objects can be converted to arrays (and vice versa), you might have already guessed that they have a lot of similarities to arrays in PHP.
Objects are maintained with the same hash functions, but there 's a different API for creating them.
To initialize an object, you use the function object_init():
zval *new_object; MAKE_STD_ZVAL(new_object); if(object_init(new_object) != SUCCESS) {/ / do error handling here}
Table 33-4.
Zend 's API for Object Creation
Function
Description
add_property_long( zval *object, char *key, long l) ;()
Adds a long to the object.
add_property_unset( zval *object, char *key) ;()
Adds an unset property to the object.
add_property_bool( zval *object, char *key, int b) ;()
Adds a Boolean to the object.
add_property_resource( zval *object, char *key, long r) ;()
Adds a resource to the object.
add_property_double( zval *object, char *key, double d) ;()
Adds a double to the object.
add_property_string( zval *object, char *key, char *str, int duplicate) ;()
Adds a string to the object.
add_property_stringl( zval *object, char *key, char *str, uint length, int duplicate) ;()
Adds a string of the specified length to the object.
This function is faster than add_property_string() and also binary-safe.
add_property_zval( zval *obect, char *key, zval *container) :()
Adds a zval container to the object.
This is useful if you have to add properties which aren 't simple types like integers or strings but arrays or other objects.
Prev
Home
Next
Arrays
Up
Resources