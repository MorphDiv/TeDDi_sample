# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/en_GB.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Line Input # Statement [Run-time]
/text/sbasic/shared/03020203.xhp
Sun Microsystems, Inc.
converted from old format - fpe
Line Input statement
mw changed index entry
Line Input # Statement [Run-time]
Reads strings from a sequential file into a variable.
Syntax:
Line Input #FileNumber As Integer, Var As String
Parameters:
FileNumber:
Number of the file that contains the data that you want to read.
The file must have been opened in advance with the Open statement using the key word INPUT.
var:
The name of the variable that stores the result.
Line Input#
statement, you can read strings from an open file into a variable.
String variables are read line-by-line up to the first carriage return (Asc=13) or linefeed (Asc=10).
Line end marks are not included in the resulting string.
Example:
Sub ExampleWorkWithAFile
Dim iNumber As Integer
Dim sLine As String
Dim aFile As String
Dim sMsg as String
aFile = &quot; c:\data.txt &quot;
iNumber = Freefile
Open aFile For Output As #iNumber
Print #iNumber, &quot; This is a line of text &quot;
Print #iNumber, &quot; This is another line of text &quot;
Close #iNumber
iNumber = Freefile
Open aFile For Input As iNumber
While not eof(iNumber)
Line Input #iNumber, sLine
If sLine < > &quot; &quot; then
sMsg = sMsg & sLine & chr(13)
end if
wend
Close #iNumber
Msgbox sMsg
End Sub