# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 4)
array_keys() returns the keys, numeric and string, from the input array.
If the optional search_value is specified, then only the keys for that value are returned.
Otherwise, all the keys from the input are returned.
Example 1. array_keys() example
$array = array (0 = 100, "color "= "red"); print_r(array_keys ($array)); $array = array ("blue", "red", "green", "blue", "blue"); print_r(array_keys ($array, "blue")); $array = array ("color" = array("blue", "red", "green"), "size "= array("small", "medium", "large")); print_r(array_keys ($array));
The printout of the program above will be:
Array ([0] = 0 [1] = color) Array ([0] = 0 [1] = 3 [2] = 4) Array ([0] = color [1] = size)
Note:
This function was added to PHP 4, below is an implementation for those still using PHP 3.
Example 2.
Implementation of array_keys() for PHP 3 users
function array_keys ($arr, $term="") {$t = array(); while (list($k,$v) = each($arr)) {if ($term $v != $term) {continue;} $t[] = $k;} return $t;}
See also array_values().
Prev
Home
Next
array_key_exists
Up
array_map