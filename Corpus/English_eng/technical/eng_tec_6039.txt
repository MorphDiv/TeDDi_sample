# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Gardner Bell
& konsole; Introduction
Extremely brief intro to managing in a shell
Emergency procedures: killing wild apps, etc
SSH, sessions, envars, other fun things
Some tips and tricks
& konsole; is a terminal emulator for the X Window System. It is essentially based on the DEC's VT100 and many of its succesors. & konsole; & ndash; also referred to as a shell & ndash; is an essential tool on & Linux; and & UNIX; based machines for fast and productive work.
Emergency Procedures:
On & Linux; and & UNIX; -based systems every process runs independently in its own memory space so it ca n't accidentally overwrite any other processes memory, unless of course it has root privileges. If a process in & kde; crashes due to a bug one should not need to worry about it accessing any other active process.
To keep track of all system processes use the top command or ps in & konsole;. Using these utilities will make it much easier to find and kill off rogue programs.
An example of using signals in & konsole;, & konqueror; has crashed leaving behind a running process of nspluginviewer which is taking up 12% of your memory and 10% of your cpu cycles. In top use the k command switch to kill the task. You will be prompted for the PID and then the signal to send to kill it. For more on info on what signals you can send to a running process see the full manual on signals (type man signal in a & konsole; or go to #signal in & konqueror;).
SSH, sessions, envars, other fun things.
If you are using & konsole; for remote administration consider using & konsole; 's Session feature. To use this click on the menu entry Settings Configure & konsole;. From here choose the Sessions tab and fill in the name for your new session. This will now become your default session when you start & konsole;.
When & konsole; is invoked bash specific commands and & kde; specific variables are read and executed from ~/. bashrc or ~/. bash_profile. The preferred configuration file for user environments is ~/. bash_profile, the commands printenv or env can be used to display all currently set variables. To set a variable in the shell use VARNAME= value. For a full list of variables that can be set in & kde; see the wiki.
To rename & konsole; 's session use Ctrl; Alt; S and enter the new name.
If you find the need to run any & kde; program with root privileges, you can use the & kdesu; command with the -c switch from the command line like this: kdesu -c -n PROGRAM, using the -n switch will prevent & kde; from remembering your passwords.
Related Information
The & konsole; Handbook has much more information about the features available in & konsole;. You can read it in & khelpcenter; or by entering help: / konsole in & konqueror; 's Location bar.