# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 4 = 4.0.6)
fbsql_field_type() is similar to the fbsql_field_name() function.
The arguments are identical, but the field type is returned instead.
The field type will be one of "int", "real", "string", "blob", and others as detailed in the FrontBase documentation.
Example 1. fbsql_field_type() example
?php fbsql_connect ("localhost", "_SYSTEM", ""); fbsql_select_db ("wisconsin"); $result = fbsql_query ("SELECT * FROM onek ;"); $fields = fbsql_num_fields ($result); $rows = fbsql_num_rows ($result); $i = 0; $table = fbsql_field_table ($result, $i); echo "Your '".$table ." 'table has ".$fields. "fields and ".$rows." records BR "; echo "The table has the following fields BR"; while ($i $fields) {$type = fbsql_field_type ($result, $i); $name = fbsql_field_name ($result, $i); $len = fbsql_field_len ($result, $i); $flags = fbsql_field_flags ($result, $i); echo $type. "".$name." ".$len. "".$flags." BR "; $i++;} fbsql_close();?
Prev
Home
Next
fbsql_field_table
Up
fbsql_free_result