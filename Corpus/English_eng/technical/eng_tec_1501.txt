# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/en_GB.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Print Statement [Run-time]
/text/sbasic/shared/03010103.xhp
Print statement
Print Statement [Run-time]
Outputs the specified strings or numerical expressions in a dialogue box or to a file.
Syntax:
Print [#FileName,] Expression_1[{;|,} [Spc(Number As Integer);] [Tab(pos As Integer);] [Expression_n[...]]
Parameter:
FileName:
A numerical expression that contains the file number that was set by the Open statement for the respective file.
Expression:
A numerical or string expression to be printed.
Multiple expressions can be separated by a semicolon.
If separated by a comma, the expressions are indented to the next tab stop.
The tab stops cannot be adjusted.
Number:
Number of spaces to be inserted by the
Spc
function.
Pos:
Spaces are inserted until the specified position.
If a semicolon or comma appears after the last expression to be printed, $[officename] Basic stores the text in an internal buffer and continues program execution without printing.
When another Print statement without a semicolon or comma at the end is encountered, all text to be printed is printed at once.
Positive numerical expressions are printed with a leading space.
Negative expressions are printed with a leading minus sign.
If a certain range is exceeded for floating-point values, the respective numerical expression is printed in exponential notation.
If the expression to be printed exceeds a certain length, the display will automatically wrap to the next line.
Spc
function to insert a specified number of spaces.
Example:
Sub ExamplePrint
Print &quot; ABC &quot;
Print &quot; ABC &quot; , &quot; 123 &quot;
i = FreeFile()
&quot; C:\Temp.txt &quot;
&quot; ~/temp.txt &quot;
For Output As i
Print #i, &quot; ABC &quot;
Close #i
end Sub