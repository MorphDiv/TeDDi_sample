# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
PHP and HTML interact a lot:
PHP can generate HTML, and HTML can pass information to PHP.
Before reading these faqs, it 's important you learn how to retrieve variables from outside of PHP.
The manual page on this topic includes many examples as well.
Pay close attention to what register_globals means to you too.
1.
What encoding / decoding do I need when I pass a value through a form / URL?
There are several stages for which encoding is important.
Assuming that you have a string $data, which contains the string you want to pass on in a non-encoded way, these are the relevant stages:
HTML interpretation.
In order to specify a random string, you must include it in double quotes, and htmlspecialchars() the whole value.
URL:
A URL consists of several parts.
If you want your data to be interpreted as one item, you must encode it with urlencode().
Example 51-1.
A hidden HTML form element
?php echo "input type=hidden value=\"". htmlspecialchars($data). "\ "\n";?
Note:
It is wrong to urlencode() $data, because it's the browsers responsibility to urlencode() the data.
All popular browsers do that correctly.
Note that this will happen regardless of the method (i.e., GET or POST).
You 'll only notice this in case of GET request though, because POST requests are usually hidden.
Example 51-2.
Data to be edited by the user
?php echo "textarea name=mydata \n"; echo htmlspecialchars($data) ."\n"; echo" / textarea ";?
Note:
The data is shown in the browser as intended, because the browser will interpret the HTML escaped symbols.
Upon submitting, either via GET or POST, the data will be urlencoded by the browser for transferring, and directly urldecoded by PHP.
So in the end, you don 't need to do any urlencoding / urldecoding yourself, everything is handled automagically.
Example 51-3.
In an URL
?php echo "a href=\"". htmlspecialchars(" / nextpage.php?stage=23 data= ". urlencode($data)). "\" \n";?
Note:
In fact you are faking a HTML GET request, therefore it' s necessary to manually urlencode() the data.
Note:
You need to htmlspecialchars() the whole URL, because the URL occurs as value of an HTML-attribute.
In this case, the browser will first un - htmlspecialchars() the value, and then pass the URL on.
PHP will understand the URL correctly, because you urlencoded() the data.
You' ll notice that the in the URL is replaced by amp;.
Although most browsers will recover if you forget this, this isn 't always possible.
So even if your URL is not dynamic, you need to htmlspecialchars() the URL.
2.
I' m trying to use an input type="image "tag, but the $foo.x and $foo.y variables aren't available. $_GET['foo.x'] isn't existing either.
Where are they?
When submitting a form, it is possible to use an image instead of the standard submit button with a tag like:
input type=" image "src="image.gif" name="foo "
Because foo.x and foo.y would make invalid variable names in PHP, they are automagically converted to foo_x and foo_y.
That is, the periods are replaced with underscores.
So, you 'd access these variables like any other described within the section on retrieving variables from outside of PHP.
For example, $_GET[ 'foo_x'].
3.
How do I create arrays in a HTML form?
To get your form result sent as an array to your PHP script you name the input, select or textarea elements like this:
input name=" MyArray[] "input name="MyArray[]" input name="MyArray[] "input name="MyArray[]"
input name=" MyArray[] "input name="MyArray[]" input name="MyOtherArray[] "input name="MyOtherArray[]"
input name=" AnotherArray[] "input name="AnotherArray[]" input name="AnotherArray[email] "input name="AnotherArray[phone]"
Note:
Specifying an arrays key is optional in HTML.
If you do not specify the keys, the array gets filled in the order the elements appear in the form.
Our first example will contain keys 0, 1, 2 and 3.
See also Array Functions and Variables from outside PHP.
4.
How do I get all the results from a select multiple HTML tag?
The select multiple tag in an HTML construct allows users to select multiple items from a list.
These items are then passed to the action handler for the form.
The problem is that they are all passed with the same widget name. ie.
select name=" var "multiple
var=option1 var=option2 var=option3
select name=" var[] "multiple
Note that if you are using JavaScript the [] on the element name might cause you problems when you try to refer to the element by name.
Use it 's numerical form element ID instead, or enclose the variable name in single quotes and use that as the index to the elements array, for example:
variable = documents.forms[ 0].elements['var[]'];
Prev
Home
Next
Using PHP
Up
PHP and COM