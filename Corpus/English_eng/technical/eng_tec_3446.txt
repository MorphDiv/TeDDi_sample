# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 4)
Searches haystack for needle and returns TRUE if it is found in the array, FALSE otherwise.
If the third parameter strict is set to TRUE then the in_array() function will also check the types of the needle in the haystack.
Note:
If needle is a string, the comparison is done in a case-sensitive manner.
Note:
In PHP versions before 4.2.0 needle was not allowed to be an array.
Example 1. in_array() example
$os = array ("Mac", "NT", "Irix", "Linux"); if (in_array ("Irix", $os)) {print "Got Irix";} if (in_array ("mac", $os)) {print "Got mac";}
The second condition fails because in_array() is case-sensitive, so the program above will display:
Got Irix
Example 2. in_array() with strict example
?php $a = array( '1.10', 12.4, 1.13); if (in_array('12.4', $a, TRUE)) echo "'12.4 'found with strict check\n"; if (in_array(1.13, $a, TRUE)) echo "1.13 found with strict check\n";?
This will display:
1.13 found with strict check
Example 3. in_array() with an array as needle
?php $a = array( array('p', 'h'), array('p', 'r'), 'o'); if (in_array(array ('p', 'h'), $a)) echo "'ph 'was found\n"; if (in_array(array ('f', 'i'), $a)) echo "'fi' was found\n"; if (in_array('o', $a)) echo "'o 'was found\n";? / / This will output: 'ph' was found'o 'was found
See also array_search().
Prev
Home
Next
extract
Up
key