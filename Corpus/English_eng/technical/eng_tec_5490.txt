# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Chapter 2.
A simple tutorial
Next
One of the most powerful features of PHP is the way it handles HTML forms.
The basic concept that is important to understand is that any form element in a form will automatically be available to your PHP scripts.
Please read the manual section on Variables from outside of PHP for more information and examples on using forms with PHP.
Here 's an example HTML form:
Example 2-6.
A simple HTML form
form action=" action.php "method="POST" Your name: input type="text "name="name" / Your age: input type="text "name="age" / input type="submit "/ form
There is nothing special about this form.
It is a straight HTML form with no special tags of any kind.
When the user fills in this form and hits the submit button, the action.php page is called.
In this file you would have something like this:
Example 2-7.
Printing data from our form
Hi ?php echo $_POST[ "name"];?.
You are ?php echo $_POST[ "age"];? years old.
A sample output of this script may be:
Hi Joe.
You are 22 years old.
It should be obvious what this does.
There is nothing more to it.
The $_POST[ "name"] and $_POST["age"] variables are automatically set for you by PHP.
Earlier we used the $_SERVER autoglobal, now above we just introduced the $_POST Earlier we used the $_SERVER autoglobal, now above we just introduced the $_POST autoglobal which contains all POST data.
Notice how the method of our form is POST.
If we used the method GET then our form information would live in the $_GET If we used the method GET then our form information would live in the $_GET autoglobal instead.
You may also use the $_REQUEST autoglobal if you don 't care the source of your request data.
It contains a mix of GET, POST, COOKIE and FILE data.
See also the import_request_variables() function.
Prev
Home
Next
Something Useful
Up
Using old code with new versions of PHP