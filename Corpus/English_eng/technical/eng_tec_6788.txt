# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

The & appname; Handbook
Guillaume DE BURE
guillaume. debure@gmail. com
Stephane MANKOWSKI
stephane@mankowski. fr
Developer
ROLES_OF_TRANSLATORS
Stéphane MANKOWSKI
Guillaume DE BURE
This document is a handbook for using & appname;, a personal finances manager application.
KDE
extragear
office
skrooge
personal finances
Introduction
appname;
& appname; is an application for managing your personal finances. It can keep track of your incomes and expenses across several accounts, in several currencies. It has all the features you should expect from such a tool, such as categories, scheduled operations, graphical reporting, stocks management... It also has some less common features, like fast operation edition, search as you type, refund trackers, customizable attributes...
appname; displaying the balance evolution of an account
appname; displaying the balance evolution of an account
What & appname; Is
& appname; is a personal finances manager for & kde; 4. It is intended to be used by individuals who want to keep track of their incomes, expenses and investments.
What & appname; Is Not
& appname; is not a professional tool. It does n't have functions expected from a software you would use to run a small business. It does n't manage taxes, does n't use double-entry system, or any advanced financial function.
Terminology
Document
A document is a & appname; file (extension. skg). It can contain an indefinite number of accounts. You can use one document to manage all your accounts at once.
Account
A & appname; account is similar to your bank account. For example, if you own one account for you, one for your wife, and one in common, you can create these three accounts in & appname;. Every time you spend or earn some money, you register an operation, and indicate the account this operation was made on.
Operation
An operation is either a credit or a debt on one of your accounts. By affecting a category to an operation, you are able to analyze how you spend your money.
Standard Operation
A standard operation is the basic operation in & appname;. Like "Today, spent 20 €in credit card for groceries".
Split Operation
A split operation is an operation for which the total amount is split over several categories or trackers.
For example, "Yesterday, spent 100 €at the supermarket, of which 60 €were for food, and 40€ for clothes".
Transfer
A transfer in & appname; is equivalent to moving a quantity of money from one of your & appname; accounts to another of your & appname; accounts.
This must not be confused with the payment mode chosen: if you made a transfer, for example using your bank's website, to someone else's account, this is not a transfer operation, because & appname; does n't know about that other person's account. It is a standard operation made with transfer as a payment mode.
Read the dedicated chapter if things are still unclear
Validated Operation
When Importing operations, they are not considered valid right away. You need first to manually validate them before. A validated operation is this, an imported operation that has been validated.
Note that it is possible to automatically validate operations on import, by turning on the corresponding option in the settings.
Pointed Operation
During the reconciliation process, you point in & appname; all operations that appear in the corresponding account position. A pointed operation is one of these operations. It is not Checked until the reconciliation is completed.
Checked Operation
When all operations on your account's position have been pointed in & appname;, you can complete the reconciliation process. All Pointed operation are then turned into Checked Operations.
Category
A category is basically a class of operations. Some classic examples include "Food", "Taxes", "Salary"... A category can contain other categories: it is a hierarchical structure. For example, category "transport" can contain categories "Bus", "Automotive", "plane"... & appname; handles an infinite depth of categories.
Unit
A unit in & appname; can be anything that has a value. Examples:
Currency
$(US Dollar)
€(euro)
£(Sterling Pound)
Stock
GOOG (Google)
Anything you own
Your house
Your car
Using & appname;
User Interface
The & appname; window is composed of a main area, surrounded by docks, and a status bar. Docks can be closed and reopened, and positioned left or right of the main area.
The main area
This is where & appname; will display the information you're interested in. It can contain many tabs, each one with the view you assigned to it.
Docks
Docks can be found in many & kde; applications. They are a subpart of an application window, and can be relocated, stacked, closed, or even detached from the main window.
Some examples of docks layout:
& appname; docks are:
The context chooser
The bookmark list
The undo / redo browser
The property editor
Status Bar
The status bar is a small section at the bottom of the & appname; window, displaying various information as you work. It includes a progress bar and a cancel button, in case you want to interrupt a long task, such as importing a large file.
The & appname; progress bar
Context Chooser
The context chooser is a dock where you can select the view to be displayed in the current tab or in a new tab. To open in a new tab, hold the & Ctrl; key while clicking on the selected view.
The context chooser
Each context will be described in a specific chapter in this handbook.
Multiple Tabs
& appname; showing several tabs
& appname; can display several tabs. You can add as many tabs as you want, each one containing the information you need. The above screenshot shows 4 tabs (accounts, operations, and two graphs).
Edition Panels
In most & appname; tabs, the way to edit items is to use the edition panel, located at the bottom of the page. In order to preserve maximum space for visualizing information, especially on small screens, edition panels can be hidden or displayed using buttons.
Buttons for showing or hiding Operations edition panels.
When more than one edition mode is available, several buttons allow choosing amongst them. In the above screenshot, there are four buttons allowing to choose the edition mode for Operations, "Standard", "Split", "Transfer" and "Shares".
Tables
In & appname;, all tables are customizable. Bring up the contextual menu (usually by right-clicking) on the column header, and you will see a menu appear:
Customizing a table
Columns
Customize the columns appearance.
View Appearance
Use a predefined set of columns. The "default" column usually shows all columns. Other predefined sets may exist on a per table basis.
Resize to Content
Resize all columns to fit to the content.
Auto Resize
When activated, you will not be able to manually resize columns, & appname; will do it automatically based on the columns content.
List of displayed columns
shows the list of all columns that can be displayed for this table. The ones currently displayed are ticked. Untick to hide a column, tick to show.
Smooth Scrolling
When enabled, allows you to scroll in the table by left clicking and moving the mouse. Quickly move the mouse in one direction, as if you were "throwing" it, and the table will scroll faster with a dampening effect. Mostly useful on touch devices.
Show Grid
Draw grid lines in the table.
Alternate row colors
Alternate the colors used for each row. The colors used are based on the chosen & kde; color scheme.
Export
Export the table as a stand-alone file. Supported formats are pdf, csv or txt.
You may also click on a header to choose the sorting column, or reorder columns by dragging them left or right.
Save Customized Content
As explained in the previous chapter, tables can be totally customized to your liking. But you probably do n't want to loose all the customization work you made upon closing a tab. There are two ways to save this work.
Save Default Context
This option allows you saving the current tab state as the default state that will always be called when opening this context. For example, you may want your Dashboard to contain 4 widgets, organized to your liking. What's even more important is that you always want the Dashboard to look the same, you do n't want to repeat the customization work every time you open it.
To do this, you simply need to do customization work once, then to save the tab state as the Default State for the context being displayed. Setting the default state is done either by right clicking on the tab and selecting Save Context State.
Contextual menu on tabs
A faster way is to click on the disk icon that appears on the left of the tab title whenever you modified the default state in a tab.
Using Bookmarks
Imagine you need to customize the operations view on a per account basis: each account would be displayed in its own tab, maybe with different columns in each table. The forementioned method does not work, since it applies on all tabs with the same type.
The solution here is to save each individual tab as a Bookmark. Much like in a web browser, bookmarks can be organized in a hierarchy of bookmark folders, that you can visualize in the Bookmark Browser:
The bookmarks browser
To create a bookmark, select a context from the context chooser you want to bookmark, and customize its content to your liking. Once you're done with that, in the Bookmarks dock, bring up the context menu, and select Bookmark current page.
Each bookmark or bookmark folder can be "autostarted", & ie; it will be automatically opened when starting & appname;. This way, you can fully customize the default & appname; layout.
Undo / Redo
& appname; manages undo/ redo in a rather classic fashion, except that you can undo or redo any action, even if it was made several days ago. As per default settings, the history is not cleared upon closing & appname; (you can change this behaviour in the settings), which means you could undo virtually everything up to the document creation.
In order to limit the impact on filesize, & appname; is configured by default to keep an history of 50 entries. You can change this value in the settings.
& appname; has a dock that lists all undoable actions.
The history browser
The history browser shows three columns:
an icon showing the state of the action. A yellow counter clockwise arrow means the action is undoable. A green clockwise icon means the action is redoable.
the description of the action
the date when the action was made
a disk icon means this action corresponds to a saved state, & ie; the document was saved right after this action.
To undo an undoable operation, or redo a redoable operation, double click on it.
Mass Update
In & appname;, it is possible to massively update a selection of items. Though mostly useful for operations, it can also be used on accounts, units, scheduled operations...
The way to do this is quite straightforward: select items to be updated, set the attribute value(s) that should be applied on all items, and click on Apply. For all attributes where you did n't set a value, it will be left untouched on items.
Set mode as "Credit Card" and payee as "ACME" on selected operations.
Updated operations.
It is intentionally impossible to set date or quantity with a mass update
Property Editor
One of & appname; rather uncommon features is the ability to add custom properties to any object. For example, you may want to add the name and phone number of a bank employee to an account, because he / she is your contact. Or maybe attach a file to an operation, like an invoice scan.
This can be achieved using the property editor, which is a dock of its own.
The property editor, with an attachment
When this dock is visible, it will display the custom properties of the selected object, whether it is an account, an operation, category, unit...
Search as you type
In all & appname; views, you will find a "filter" field allowing you to search as you type in the view:
In an operation view, it will filter the operations containing the text entered, whatever the column (date, payee, category, comment...)
In an accounts view, it will filter the accounts containing the text entered, whatever the column (bank, account name, number...)
In a report view, it will redraw the graph based on this filter
In a... well, you get the idea, right?
Import Files
& appname; is able to import files from other financial applications or from your bank. So, whether you're coming from another application, or simply do n't want to go through the hassle of manually entering your operations, & appname; has a fast lane for you.
Supported File Formats
One the following formats may be used:
OFX
Open Financial eXchange. It is a well defined & documented format, that & appname; imports using a third party library (libofx). This is the recommended format for imports.
QFX
QFX is a customization of OFX from the commercial software Quicken.
QIF
Quicken Import File. Maybe the most common financial file format. However, it has some rather annoying limitations, like not giving the unit for operation, or no strict date formatting.
CSV
Comma Separated Value. Though not strictly a financial format, it is quite often available as an export format from banks or other applications, mostly because it is so easy to use in a spreadsheet.
CSV Specificities
Since CSV has no strictly defined format, there is no way for & appname; to know where it is supposed to find dates, categories, values... To do so, & appname; expects your CSV file to contain some headers indicating what is the column for. The file must contain at least columns "Date" and "Amount".
You may manually define how the file is set up (ie; ignoring the headers in the file) by setting them in the application settings (Settings Configure & appname;), in the Import / Export section.
Importing Operations
One of & appname; principles is to avoid multiple wizards or dialog boxes. This is especially true for imports, where other applications require many information from the user. Not & appname;. When selecting File Import, you will be asked to select the files (yes you can import many at once), and that's it. Behind the scene, & appname; will find the file format and apply the relevant import mode.
One thing that might surprise you is that you wo n't be asked in which account the operations should be imported. That is because & appname; will read the account number in the file, and will associate imported operations to that account.
If no account exists with this account number, or if the file does not contain this information, & appname; will use the file name as the account number.
If there is still no account with that number, & appname; will create a new account having the filename as the account number, and import all operations in that account. You will then be free to either rename the account, perform a mass update, or use Search & Process to associate imported operations to an existing account.
If no unit is specified in the imported file (which is often the case for QIF & CSV), & appname; will assume the unit is your primary currency. If this was not the case, use the Search & Process function to correct.
Date
Sometimes, the input files will will not have dates formatted as per your country's customs (it may happen in QIF or CSV, OFX has an imposed date format). & appname; will do its best to detect the format.
Import Status
Imported Operations have a specific status. Right after import, they are considered as "Imported, not yet validated". The idea here is that you may want to check if the import went as expected, so you need to identify quickly those operations. As per default settings, those operations will also appear in blue.
If you do n't want this behaviour, you can set the option Automatic Validation after Import in the application's settings.
Merge operations after import
There are some cases where you have manually entered an operation, but also imported it from your bank. In such cases, the operation will appear twice in the list.
You may merge these two operations by selecting them, and select Merge operations in the contextual menu. This will add all information you manually entered to the imported operation, and will delete the manually entered operation.
Export
There are different ways of exporting data with & appname; depending on what you intend to do.
Export all your data in one file
Using the menu File Export, a CSV or QIF file will be created, containing all operations in the current document. This is the option to choose if you need to export your data to another application.
Export a specific table
All tables in & appname; can be exported, either in CSV, PDF, or TXT format.
This works wherever a table is displayed, so you can use it to export whatever tabular information you need.
Export Graph
& appname; allows you exporting a graph, either in PDF, SVG or just any image format supported by & kde; (PNG, JPG, GIF, TIFF...). You can do so by right-clicking on the graph, and choosing the Export option.
Dashboard
The Dashboard is a & appname; plugin that displays global information about your financial situation.
You can configure it using icons on the top right hand, or by right clicking and select or remove the blocks to display. Some blocks may also be configured by right clicking on their title.
Bank & Accounts
This is the plugin dedicated to managing your different accounts.
The Bank & Accounts view
Account properties
A & appname; account has the following properties:
Bank
You may choose a bank from the drop down box (containing the list of known banks for your country), or type the name if your bank is not in the list (If the list is empty, the & appname; team has not yet been provided this information. You may contact us to help!).
Account
The name you want to use for this account.
Type
The account type can be Current Credit Card Investment Assets Other The Account type is not used for any kind of processing at the moment, it is just there for information.
Bank Number
The identification number of your bank
Agency Number
The identification number of the agency
Account Number
The identification number of the account
Address
The address of of the agency
Comment
Anything you want!
Accounts list
The accounts list takes the form of a table with one line per account. In addition to the properties you defined for this account, & appname; displays the following columns:
Amount
The amount available on the account, considering all operations registered, whether they are validated or not.
Checked
The amount of all validated operations. This should be equal to the amount written on your last account's position from your bank.
Foreseen
The difference between the two previous columns
Number of operations
The total number of operations made on this account
As with all & appname; list views, you can fully customize the table appearance.
Create an Account
The account creation is done using the edition panel below the accounts list.
To create an account, enter its attributes (the mandatory ones are in bold), and click on Add. & appname; does n't need you to provide the initial amount of this account. In order to set the initial amount of the account, create an operation corresponding to the initial amount.
Modify an Account
To modify an account, select it, modify its attributes, and click on "Modify"
Delete Accounts
To delete accounts, select them and either press Delete on the keyboard, use the contextual menu, or use the icon in the toolbar.
Upon deleting an account, all operations belonging to this account will also be deleted! (But you can always undo the deletion)
Operations
Operations are, well, any operation you make on an account, be it an expense, income, transfer, sales, purchase... This is where you will probably spend most of your time when using & appname;.
In order to enter operations, you need to have at least one account created.
The operations view
Operation Properties
The account the operation is made on. Select it from the list of existing accounts.
Date
The date when the operation was made. A calendar is accessible using the down arrow right of the field.
The amount is how much you spent or earned with this operation. & appname; requires you enter this in two separate fields: Quantity, and Unit.
The quantity is negative for an expense (-30, for example), and positive for an income (250, or simply 250). This field acts as a calculator, & ie; entering an expression such as 10 + 3.23*2 will result in the field containing 16.46.
& appname; requires you to enter the unit because an operation is not necessarily made in your main currency. For example, when you buy or purchase shares, the unit of the operation is the share unit.
Payee
Who did you pay this to, or who gave you the money.
Mode
What was the payment mode used for this operation. Something in the line of Credit Card, Cheque, Deposit... You name it!
Associated with the operation mode, is an optional number. It is mostly used to enter the check number, or a transfer number.
Category
Which Category this operation belongs to. If you need to affect more than one category to an operation, use the split mode.
You can either choose an existing category, or type a new one. In this case, & appname; will create it for you along with the operation.
The separator between a parent category and its children is the & gt; character. If you type Clothes & gt; Shoes, & appname; will create the category Clothes if it does n't exist yet, and its child category Shoes.
Of course, you may create entire category trees, such as Transport & gt; Car & gt; Fuel & gt; Unleaded, & appname; will happily create all the hierarchical structure.
Any comment you'd like.
Tracker
If you want to track refund for this operation, enter the name of the Tracker here. If you need to affect more than one tracker to an operation, use the split mode.
Operations list
Status
This check box indicates whether this operation has been confirmed during account reconciliation. A half-greyed check box means the reconciliation is ongoing.
Bookmark
Mark this operation as Bookmarked, a synonym for Favorite.
Scheduled
When an operation is scheduled, this column shows a chronometer icon.
These columns also have some specificities:
When the operation is part of a transfer, the mode is preceded by a double arrow icon.
When the operation is split, the category is preceded by a triple arrow icon.
Create an operation
To create a standard operation, you may use the Clear button to clear all fields and start a new operation from scratch. You can then fill its attributes (manually or using fast edition), and click on Add.
You may also select a similar operation from the existing operations, modify what needs to be changed, and then click on Add.
A split operation is an operation that has several categories, comments or trackers. You switch to the split operation edition mode using the Split Button at the bottom of & appname; window. When switching into the split operation edition mode, the fields Category, Comment and Tracker are replaced by a table.
The split operation edition panel.
To edit a cell in this table, double click on it.
You can add as many lines in this table as you need. When changing the quantity in a line, & appname; will compute the difference with the operation global quantity, and display the remaining quantity in the last table line. If you changed the quantity in the last line, a new line will be added with the remaining quantity.
The fields here have the same behaviour as in the standard operation edition mode:
The Category is a drop down box of existing categories. You can add a new category structure, & appname; will create it when creating the operation.
The Amount acts as a calculator.
The Tracker is a drop down box of existing trackers. You can add a new tracker, & appname; will create it when creating the operation.
A transfer operation is effectively a dual operation: when creating a transfer, & appname; will create two operations of opposite amounts (one positive, the other negative), on two different accounts. The attributes to provide here are slightly different from a standard operation:
The transfer operation edition panel.
Instead of a Payee field, you will find a "To Account" list where you should select the account receiving the money.
Since a transfer means "Take some money from account A and put it account B", if you put a sign in the quantity field (+ or -), it will be ignored. The operation for account A will always be negative, positive for account B.
At the moment, once the operations are created they bear no relationship with each other: any modification on one of them will not be reflected on the other one.
Shares
& tbw; (this author has absolutely no knowledge of shares / stocks principles; -D... You may help!)
Schedule Operations
If an operation is known to be repeated on a regular basis, you may want & appname; to automatically enter it for you in the list of operations. This can be done by scheduling an operation, using the Schedule button.
The default scheduling parameters are:
Repeat every month
Remind me 5 days before term
Automatically write on term
You may change the default parameters in & appname; settings.
You may also change each scheduled operation parameters in the Scheduled plugin.
& appname; uses values from the last entry of the scheduled operation for writing the next one. If you increase for example the amount of your monthly contribution to the & kde; effort from 100$ to 200$, next operations automatically written by & appname; will have an amount of 200$.
Fast Edition
Whatever the chosen edition mode, there is a nifty function called Fast Edition that may speed up the work while creating new operations. It will fill the operation's attributes based on previously entered operations. Enter a value in any field of the editor, and press F10, or click on the Fast Edition Icon (without leaving the selected field).
& appname; will look for the first (ie; the most recent one) operation that has the same value in the same field, and fill all other fields with values from that operation. Call Fast Edition again, it will look for the next operation, and so on.
Fast Edition has no effect on the date, since it is rather unlikely that you want to create exactly the same operation, complete with the same date...
If you modified a field's value before calling Fast Edition, its content will not be affected. This is materialized by a small snowflake appearing in the field, so you know it is "frozen".
What's different here from similar functions in other personal finances software:
It is called on user demand
It loops in all past operations with the same field value
And it even works on split operations!
Reconciliation
Reconciliation is the process by which you ensure that all operations are aligned with your account's position from the bank point of view. It will involve you, your account's position, and a pen. Reconciliation can happen only for an account at one point in time.
In the operation view, select the account you wish to reconciliate from the drop down box. Switch into reconciliation mode using the Switch Information button below the operations table.
The reconciliation mode information.
Enter the position of your account as provided by your bank in the dedicated field. Now, you can proceed to checking in & appname; every operation that appears on the account recordings. For the moment, the check box for this operation will appear half greyed, until you really validate the reconciliation.
As you check operations, you will see & appname; display in the information zone:
Delta: the difference between the previously entered account position and the sum of all checked operations
Expenditure: the total amount of expenses
Income: the total amount of incomes
This may be useful when trying to spot operations you may have forgot to enter in & appname;. When all relevant operations have been checked, Delta is equal to 0, and the Validate checked operations button is activated. Click on this button to validate the reconciliation: all checked operations are now validated.
If the option Hide checked operations is selected, all these operations will now be hidden.
Template Operations
& appname; allows you creating template operations, & ie; operations that can be reused whenever you need it. For example, imagine are used to renting a DVD to watch at home. The operation is always the same:
Amount: -4.99
Mode: Credit Card
Payee: Acme Video
Category: Leisure > Video
However, you cannot make it a recurrent operation, because you rent a DVD when you feel like it, not every week. The idea behind template operations is that it gives you a basic skeleton that can be quickly inserted in your operations list.
Since Template operations are just another kind of operations, you can access them through the operations tab, using the button above the edition panel:
Switching between templates and operations.
Creating a template is strictly equal to creating an operation, by defining its attributes. Note that you can also create a template from an existing operation (bring up the contextual menu on an operation). In this case, the template will have the same attributes as the operation.
To use a template and create a new operation from it, double click on it. A new operation will be created with the same attributes as the template, at the current date. You can then modify its attributes if needed.
Templates can also be scheduled.
Scheduled
This plugin shows you the list of all scheduled operations.
This is where you can set up each scheduled operation to have its own parameters.
Next Occurrence
Displayed for information, but can also be used to force the date of the next occurrence.
Once every
You can set an operation to be repeated over a given number of days, months, or years.
Number of Occurrences
If the occurrence has a limited number of occurrences, you can check this option and define either the number of remaining occurrences, or the date of the last occurrence.
Remind me
If you want & appname; to display a notification to remind you about the upcoming scheduled operation, you may check this option and set the number of days before term when the warning shall occur.
Automatically Write
If you want & appname; to automatically write the upcoming scheduled operation, you may check this option and set the number of days before term when it will be written.
Double clicking on a scheduled operation will display the list of operations already registered for this scheduled operation in a new tab.
Scheduled Operations
If you schedule an operation, it will be used as a reference when inserting the next occurrence. Let us see an example, with this operation:
Date
Payee
Category
Amount
20/ 06/ 2009
& kde;
Donations & gt; Open Source
20 €
Now, if you schedule this operation, it will be written exactly like this for the next occurrence:
20/ 07/ 2009
If you change something in the last occurrence, it will become the new reference for the next occurrence. For example, if you raise your monthly contribution to & kde; to 25 €in July, the next occurrence will also be with an amount of 25€:
25 €
20/ 08/ 2009
All in all, a scheduled operation is a dynamic object, where the last occurrence is the reference. But maybe you'd like all occurrences to be static, & ie; the same values are always inserted for each new occurrence? Enter Scheduled Templates.
Scheduled Templates
Templates are some sort of reference operations. When scheduling a template, every new occurrence will be exactly equal to the template. Let's reuse our previous chapter example, by creating a template like this:
The next occurrence will be:
Now change your July contribution to & kde; to 25 €. Because you have scheduled a template with 20€ as amount, the next occurrence will also have an amount of 20€:
If you need to change the monthly value, just edit the template, and all future occurrences will have the new value.
Trackers
The trackers allow you to aggregate some operations together in a group, so you can follow them more closely. This may come handy to follow expenses for which you expect a refund, or simply knowing how much you spent during your last holidays in the Bahamas.
For example, imagine you have been sent to Italy by your company. Once there, you paid your hotel room: in & appname;, you can create an operation in category "Business & gt; Travels & gt; Hotel", and assign a tracker called "Business Travel in Italy". You can assign this tracker to all professional expenses you make there. Then, if all goes well, your company pays you back for all these these, and you can create an income operation, and also affect it to the "Business Travel in Italy" tracker.
By affecting trackers to operations that shall be reimbursed, you are able to follow completion of the reimbursement.
This, of course, works also the other way round: if someone lends you some money, you are able to monitor how much you still have to reimburse.
Double clicking on a tracker in the track view will open a new tab containing all operations attached to this tracker.
Close Tracker
When you no longer need the tracker, for example because it has been fully reimbursed, you may simply delete it. Doing, this, however, will loose all information you have entered, and that may be of interest for future reference.
A cleaner solution is to close the tracker: when a tracker is closed, it can be easily hidden from the trackers view, using the dedicated option.
Categories
The Categories view allow you to browse the categories tree.
In addition to the name of categories, the table also shows:
The sum of all operations in this category.
Number of Operations
The number of operations in this category.
Amount (Cumulative)
The sum of all operations in this category and children categories (down to the last level).
Number of Operations (Cumulative)
The number of operations in this category and children categories (down to the last level).
Double clicking on a line in this table will open the list of all operations in this category in a new tab.
When deleting a category, all operations attached to it will have their category deleted, hence will not have any category attached
Reports
& appname; allows you to build highly customized reports, for a deep analysis of your financial status.
A report is composed of a table (on the left) containing all data used to draw the graph (on the right). The table can be filtered using the dedicated field above, causing the graph to be redrawn with filtered data.
You can choose to display only the table, only the graph, or both.
Set up report
Representation
Table Only
Display only the table, and hide the graph.
Graph Only
Display only the graph, and hide the table.
Both
Display the table and the graph.
Data
This is where you choose what is the data to be present in the report. Select what will be shown in lines and in columns, and the mode of computation. There are two distinct values for the mode:
Sum
In this mode, the total amount of operations for each month will be computed. If you selected "category" in line, and "month" in column, this will compute the total amount of operations for each category and for every month.
History
If we reuse our previous example ("category" in line, "month" in column), we will have here a cumulated sum, & ie; for each month, we will compute the total amount of operations up to this month, for each category.
As a hand on example, this author uses this mode to draw the evolution of his accounts balance by setting "Accounts" for Lines, and "Month" for Columns.
For lines and columns, it is possible to expand the level of data presented using the plus icon right of the field. Use this to show subcategories in the report.
Dates
Use this to specify the date range for your report. You can use several ways to specify the date range, that should cover pretty much every possible date range you need.
Operation Types
Select the type of operations you want to include in your report. For example, if you want to draw a graph showing your expenses distribution per category, you probably do not want to include "Incomes" to your report.
Graph Types
Once everything is set up to your needs, you should select the graph appearance using the drop down box below the graph. To better understand the differences between each type, let us build a report showing expenses per category (lines) and month (columns):
Stack
One bar per line, columns stacked.
The second bar (yellowish) shows category "Security", all months stacked up.
Histogram
For each columns, every line has its own bar.
Line
Point
Pie
The classical pie graph. If the selected value for column is different from "nothing", displays one pie per column.
Concentric Pie
This one is a bit tricky, and probably needs rework on our side. The intention is to show one ring per level of data.
Zoom on graph
& appname; makes it possible to zoom in a graph for getting all the small details. Use the zoom control zone above the graph:
Report Examples
Here are some screenshots showing some classical report configurations. You may use them as a reference for your own reports.
Incomes and Expenses
For each month, compare the total amount of incomes versus the total amount of expenses. Incomes are in blue, expenses in yellow.
Balance Evolution
Show the evolution of the final balance on a monthly basis.
Display the distribution of expenses per category for the previous month.
Going Deeper
So you know you can make a deep analysis of your finances thanks to reports. But how deep is deep? Well, that's even deeper than you imagined... If you're interested, read the hands on exercise analysing this author's expenses during its holidays:)
Monthly Report
This plugin shows an overview of your financial situation for a chosen month.
Units
A unit is anything you can express an operation in. In most cases, this is a currency, but it can also be a stock, or even a car or a house. A unit has different values over time, its value being express in another unit. Example: the ACME stock is worth 31.2$ on January 2009.
Edit Units
Editing units can be done in different ways:
Standard
This mode allows you choosing amongst the set of predefined units which one you would like to add to the current document.
Manual
This mode allows you creating your own unit. Parameters to be provided are:
Name: the comprehensive unit name.
Symbol: the unit symbol, displayed in most tables and drop down boxes.
Type: see Unit Types.
Reference Unit: the (other) unit used to compute value of the (current) unit. For example, if you have EADS shares, and want to see their value in euros, you should select €as reference unit in EADS unit.
Country
Internet Code: The yahoo Internet code for this unit. If given this code, & appname; is able to download the unit values from yahoo.
Values
This edition mode allows to download unit values from Internet, or to manually enter a unit value at a given date.
Unit Types
Even if & appname; considers just about anything as a unit, it makes a distinction depending on their type:
Primary Currency
This is the currency that will be used for displaying real operations amount.
Secondary Currency
If defined, the value in the secondary unit will be displayed upon hovering over an operation amount.
Currency
Any currency, with no specific role for display.
Share
This type of unit can be used for managing shares.
Index
A stock exchange index, such as the Dow Jones, Nasdaq, CAC40, SBF120...
Other
Any unit that does n't fit in the above types.
Search & Process
This plugin allows you building complex queries to find operations, and optionally apply them some transformations. Here is a use case:
John downloads some data from his bank. The data comes, obviously, without indication on the category. In fact everything is written in the comment field. John would like some automatic way to correctly set up the category and other attributes based on the content of the comment.
So how does this work? First, you will define a search criteria, that will give you a list of operations. Then, define the transformations to apply on these operations.
A real case study can be found in appendix, providing some hands on exercise for the hereabove use case.
Define search criteria
Here, you can define the query for finding operations, using a combination of parameters. On the above picture, you can find a table with operation attributes for header. By editing a line, you create a new clause in the query. Each column is combined with other columns using a logical "and":
(column1 and column2)
If you add a new line, you create another clause combine with the first line by a logical "or":
[line1] or [line2].
All in all, the combination of columns and lines can be read as:
(column1 and column3) or (column2 and column3)
Of course, you can have as many lines and columns as you need in a search query.
Once satisfied with a query definition, you can add it to the list of existing search criteria, or modify an existing one.
View search results
When selecting a search query in the queries view, the number of found operations is displayed below the table:
When double-clicking on a search query in the query view, all found operations are displayed in a new tab:
Define Processing
If you need to apply some processing on all operations found, select the concerned query, and activate the process definition panel:
In this panel, you can define the transformations to perform on operations. Note that it is intentionally impossible to set an operation's amount or date in this panel.
Define Alarm
A special kind of use of the Search & Process plugin is the ability to define alarms. An alarm is basically & appname; calling your attention on some kind of event, such as your monthly budget for a category has been reached.
To define an alarm, define first the search criteria giving the set of operations on which you need alert. For example, all operations in current month and in category "Clothes". Then, define the amount for which the alert shall be raised, for example 100 €, and define the Alarm message that & appname; will send you when the amount is reached.
Credits and License
appname;
Program copyright 2001-2009 Stéphane Mankowski stephane@miraks. com
Documentation copyright 2001-2009 Guillaume DE BURE gdebure@yahoo. com
CREDIT_FOR_TRANSLATORS
& underFDL; & underGPL;
Installation
How to obtain & appname;
The & appname; home page can be found at homepage;. Updates and news can be found there.
Requirements
In order to successfully use & appname;, you need & kde; 4, qt-sqlite3, libofx, and qca.
Installing & appname;
It is recommended that you install & appname; using your distribution packaging system. If for any reason you would like to compile and install & appname; by yourself, this chapter contains all necessary steps.
Prerequisites
& appname; uses several components you need to install in order to compile it:
sqlite3: a lightweight SQL database. & appname; files are sqlite databases.
libofx: a library to handle OFX file format. OFX is a standard & XML; format for financial exchanges.
qca: & Qt; Cryptographic Architecture. Used for password protection.
Compilation and Installation
In order to compile and install & appname; on your system, type the following in the base folder of the archive, where the third step must be done as root if you are installing in a system folder:
$cmake. -DCMAKE_INSTALL_PREFIX=`kde4-config --prefix ` $make $make install
Since & appname; uses cmake you should have no trouble compiling it. Should you run into problems please report them to the authors.
Real Case Study
OK, we have to admit that while being quite powerful, the Search & Process plugin is maybe a bit tricky to understand. Here is a small exercise that will give you a hold od it. Remember the use case for Search & Process?
John knows that his bank put the name of the payee in the comment field. And he wants all his payments to & kde; to be in category Donations & Open Source. We will look for all operations with the comment field containing & kde;:
Number
Mode
Comment
Status
Highlighted
Import Status
Account
Tracker
contains'kde; '
Add this search definition to the list of existing searches using the Add button.
Next we need to tell & appname; to set all operations found by this query in category Donations & gt; Open Source. With the previously defined search selected, activate the process edition panel, and define the process as follows:
= ''
='Donations & gt; Open Source '
Notice that we also removed the original comment by setting it to an empty string. This is for readability sake, but you may wish to keep it for historical reasons.
Add this process to the previously defined search using the Add button.
So far, so good. Now, let's apply the process on all imported operations not yet validated (click on the Apply button):
That's it! If you go back to the operations view, you will notice that all concerned operations have been updated. In case anything went wrong, do n't forget that Undo is your friend! Even if the process modified 2327 operations, this is still one undoable action for & appname;.
Deep analysis exercise: Holidays expenses
To illustrate the analysis capabilities of & appname;, we are going to examine this author's expenses during his holidays:).
Analysis Context
In order to understand the exercise, you need to know a few things about these holidays. They span over nearly a full month during summer 2009, and involved renting several rooms in several locations in France. There was also a fair amount of fuel, as these holidays also spanned over a rather large part of France.
Data Organisation
The author carefully entered his operations, by affecting them categories, but also by adding them to the "Holidays, summer 2009" tracker. Categories often have subcategories, such as "Transport > Car > Fuel", allowing for this detailed analysis.
Finding the holidays total cost
This is so easy, it's not even funny: open the Trackers view, read the "Amount" column for our tracker:
Let's move to more interesting stuff...
Expenses Distribution
So this is all very good, but where did all that money go? To find this out, let us build a report on the tracker. Right click on our tracker line and choose Open report....
This will open a report in a new tab, only for operations associated with the tracker. The default parameters for dates are "Current Month", so there is a possibility that the report is empty if all operations in the tracker were made before this. Let's change it to "All Dates":
This gives a first nice overview of the expenses per category. Let's display this in a pie chart, for a more natural presentation:
It is now quite clear that most of the holidays expenses were for transport and food. Any more indication? Sure, let's dig one level more in categories, using the plus icon.
Hmm, not much more information here, except that in the "Transport" category, the "Car" subcategory is the only one used. Let's build a graph on that subcategory, by selecting the pie slice, right-clicking on it, and select Open report:
This will open another tab with a report only with the "Transport > Car" category.
Hmm, not really interesting... But there is more subcategories. Let's expand it again:
Ah, now we know that we spent 362.27 €on fuel, and 131.90 €on road taxes (in France, you have to pay to drive on some highways). Ok, I know this was to be expected; -). I'm also interested in knowing how these two categories were used over time:
Note that we changed the graph type to "Line", and the columns to "Week".
Conclusion
Through this simple exercise, we have been able to use the advanced reporting capabilities of & appname; to perform a fine analysis of the expenses made during holidays, specifically in the "Transports" category. Of course, you may think of other use cases: & appname; is probably able to cope with them.
Unit
Create bookmark
Columns
Bank
Type
Address
Bank
Type
Details
Address
Comment
Unit
Number
Target Account
Trackers
Categories
Categories
Payees
Modes
Types
Status
Units
Trackers
Columns
Years
All Dates
Current Month
Previous Month
Current Year
Previous Year
Types
Units
Dashboard
Operations
Scheduled
Report
& tbw;
Export Files
Dashboard
Monthly Report
Search & Process
Import Status
Import/ Export
Mode
Payee
Using Skrooge
The property editor
The property editor
Category
Comment