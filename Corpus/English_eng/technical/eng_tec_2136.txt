# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/en_GB.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Add-in Functions, List of Analysis Functions Part Two
/text/scalc/01/04060116.xhp
imaginary numbers in analysis functions
complex numbers in analysis functions
Add-in Functions, List of Analysis Functions Part Two
Category Statistics
Analysis Functions Part One
Back to the Overview
IMABS function
IMABS
The result is the absolute value of a complex number.
Syntax:
IMABS( &quot; ComplexNumber &quot; )
ComplexNumber
is a complex number that is entered in the form &quot; x+yi &quot; or &quot; x+yj &quot; .
Example:
=IMABS( &quot; 5+12j &quot; )
returns 13.
IMAGINARY function
IMAGINARY
The result is the imaginary coefficient of a complex number.
Syntax:
IMAGINARY( &quot; ComplexNumber &quot; )
Example:
=IMAGINARY( &quot; 4+3j &quot; )
returns 3.
IMPOWER function
IMPOWER
The result is the integer power of a complex number.
Syntax:
IMPOWER( &quot; ComplexNumber &quot; ; Number)
Number
is the exponent.
Example:
=IMPOWER( &quot; 2+3i &quot; ; 2)
returns -5+12i.
IMARGUMENT function
IMARGUMENT
The result is the argument (the phi angle) of a complex number.
Syntax:
IMARGUMENT( &quot; ComplexNumber &quot; )
Example:
=IMARGUMENT( &quot; 3+4j &quot; )
returns 0.927295.
IMCOS function
IMCOS
The result is the cosine of a complex number.
Syntax:
IMCOS( &quot; ComplexNumber &quot; )
Example:
=IMCOS( &quot; 3+4j &quot; )
returns -27.03-3.85i (rounded).
IMDIV function
IMDIV
The result is the division of two complex numbers.
Syntax:
IMDIV( &quot; ComplexNumerator &quot; ; &quot; ComplexDenominator &quot; )
ComplexNumerator
,
ComplexDenominator
are complex numbers that are entered in the form &quot; x + yi &quot; or &quot; x + yj &quot;
Example:
=IMDIV( &quot; -238+240i &quot; ; &quot; 10+24i &quot; )
returns 5+12i.
IMEXP function
IMEXP
The result is e to the power of e the complex number.
The constant e has a value of approximately 2.71828182845904.
Syntax:
IMEXP( &quot; ComplexNumber &quot; )
Example:
=IMEXP( &quot; 1+j &quot; )
returns 1.47+2.29j (rounded).
IMCONJUGATE function
IMCONJUGATE
The result is the conjugated complex complement to a complex number.
Syntax:
IMCONJUGATE( &quot; ComplexNumber &quot; )
Example:
=IMCONJUGATE( &quot; 1+j &quot; )
returns 1-j.
IMLN function
IMLN
The result is the natural logarithm (base e) of a complex number.
The constant e has a value of approximately 2.71828182845904.
Syntax:
IMLN( &quot; ComplexNumber &quot; )
Example:
=IMLN( &quot; 1+j &quot; )
returns 0.35+0.79j (rounded).
IMLOG10 function
IMLOG10
The result is the common logarithm (base 10) of a complex number.
Syntax:
IMLOG10( &quot; ComplexNumber &quot; )
Example:
=IMLOG10( &quot; 1+j &quot; )
returns 0.15+0.34j (rounded).
IMLOG2 function
IMLOG2
The result is the binary logarithm of a complex number.
Syntax:
IMLOG2( &quot; ComplexNumber &quot; )
Example:
=IMLOG2( &quot; 1+j &quot; )
returns 0.50+1.13j (rounded).
IMPRODUCT function
IMPRODUCT
The result is the product of up to 29 complex numbers.
Syntax:
IMPRODUCT( &quot; ComplexNumber1 &quot; ; &quot; ComplexNumber2 &quot; ; ...)
Example:
=IMPRODUCT( &quot; 3+4j &quot; ; &quot; 5-3j &quot; )
returns 27+11j.
IMREAL function
IMREAL
The result is the real coefficient of a complex number.
Syntax:
IMREAL( &quot; ComplexNumber &quot; )
Example:
=IMREAL( &quot; 1+3j &quot; )
returns 1.
IMSIN function
IMSIN
The result is the sine of a complex number.
Syntax:
IMSIN( &quot; ComplexNumber &quot; )
Example:
=IMSIN( &quot; 3+4j &quot; )
returns 3.85+27.02j (rounded).
IMSUB function
IMSUB
The result is the subtraction of two complex numbers.
Syntax:
IMSUB( &quot; ComplexNumber1 &quot; ; &quot; ComplexNumber2 &quot; )
Example:
=IMSUB( &quot; 13+4j &quot; ; &quot; 5+3j &quot; )
returns 8+j.
IMSUM function
IMSUM
The result is the sum of up to 29 complex numbers.
Syntax:
IMSUM( &quot; ComplexNumber1 &quot; ; &quot; ComplexNumber2 &quot; ; ...)
Example:
=IMSUM( &quot; 13+4j &quot; ; &quot; 5+3j &quot; )
returns 18+7j.
IMSQRT function
IMSQRT
The result is the square root of a complex number.
Syntax:
IMSQRT( &quot; ComplexNumber &quot; )
Example:
=IMSQRT( &quot; 3+4i &quot; )
returns 2+1i.
COMPLEX function
COMPLEX
The result is a complex number which is returned from a real coefficient and an imaginary coefficient.
Syntax:
COMPLEX(RealNum; ImagNum; Suffix)
RealNum
is the real coefficient of the complex number.
ImagNum
is the imaginary coefficient of the complex number.
Suffix
is a list of options, &quot; i &quot; or &quot; j &quot; .
Example:
=COMPLEX(3; 4; &quot; j &quot; )
returns 3+4j.
OCT2BIN function
converting;octal numbers, into binary numbers
mw added one entry
OCT2BIN
The result is the binary number for the octal number entered.
Syntax:
OCT2BIN(Number; Places)
Number
is the octal number.
The number can have a maximum of 10 places.
The most significant bit is the sign bit, the following bits return the value.
Negative numbers are entered as two's complement.
Places
is the number of places to be output.
Example:
=OCT2BIN(3; 3)
returns the text string
011
.
OCT2DEC function
converting;octal numbers, into decimal numbers
mw added one entry
OCT2DEC
The result is the decimal number for the octal number entered.
Syntax:
OCT2DEC(Number)
Number
is the octal number.
The number can have a maximum of 10 places.
The most significant bit is the sign bit, the following bits return the value.
Negative numbers are entered as two's complement.
Example:
=OCT2DEC(144)
returns the text string
100
.
OCT2HEX function
converting;octal numbers, into hexadecimal numbers
mw added one entry
OCT2HEX
The result is the hexadecimal number for the octal number entered.
Syntax:
OCT2HEX(Number; Places)
Number
is the octal number.
The number can have a maximum of 10 places.
The most significant bit is the sign bit, the following bits return the value.
Negative numbers are entered as two's complement.
Places
is the number of places to be output.
Example:
=OCT2HEX(144; 4)
returns the text string
0064
.
CONVERT_ADD function
CONVERT_ADD
Converts a value from one unit of measure to the corresponding value in another unit of measure.
Enter the units of measures directly as text in quotation marks or as a reference.
If you enter the units of measure in cells, they must correspond exactly with the following list which is case-sensitive:
For example, in order to enter a lower case l (for litre) in a cell, enter the apostrophe ' immediately followed by l.
Property
Units
Weight
g, sg, lbm, u, ozm, stone, ton, grain, pweight, hweight, shweight
Length
m, mi, Nmi, in, ft, yd, ang, Pica, ell, parsec
Time
yr, day, hr, mn, sec
Pressure
Pa, atm, mmHg, Torr, psi
Force
N, dyn, pond
Energy
J, e, c, cal, eV, HPh, Wh, BTU
Power
W, HP, PS
Field strength
T, ga
Temperature
C, F, K, Reau, Rank
Volume
l, tsp, tbs, oz, cup, pt, qt, gal, m3, mi3, Nmi3, in3, ft3, yd3, ang3, Pica3, barrel, bushel, regton, Schooner, Middy, Glass
Area
m2, mi2, Nmi2, in2, ft2, yd2, ang2, Pica2, Morgen, ar, acre, ha
Speed
m/s, m/h, mph, kn, admkn
Each unit of measure must be preceded by a prefix character from the following list:
Permitted prefix characters
10^( < 0)
d, c, m, u, n, p, f, a, z, y
10^( > 0)
e, h, k, M, G, T, P, E, Z, Y
Information units &quot; bit &quot; and &quot; byte &quot; may also be prefixed by one of the following IEC 60027-2 / IEEE 1541 prefixes:
ki kibi 1024
Mi mebi 1048576
Gi gibi 1073741824
Ti tebi 1099511627776
Pi pebi 1125899906842620
Ei exbi 1152921504606850000
Zi zebi 1180591620717410000000
Yi yobi 1208925819614630000000000
Syntax:
CONVERT_ADD(Number; &quot; FromUnit &quot; ; &quot; ToUnit &quot; )
Number
is the number to be converted.
FromUnit
is the unit from which conversion is taking place.
ToUnit
is the unit to which conversion is taking place.
Examples:
=CONVERT_ADD(10; &quot; HP &quot; ; &quot; PS &quot; )
returns, rounded to two decimal places, 10.14.
10 HP equal 10.14 PS.
=CONVERT_ADD(10; &quot; km &quot; ; &quot; mi &quot; )
returns, rounded to two decimal places, 6.21.
10 kilometres equal 6.21 miles.
The k is the permitted prefix character for the factor 10^3.
FACTDOUBLE function
factorials;numbers with increments of two
mw added one entry
FACTDOUBLE
Returns the double factorial of a number.
Syntax:
FACTDOUBLE(Number)
Number
!!
, the double factorial of
Number
, where
Number
is an integer greater than or equal to zero.
For even numbers FACTDOUBLE(n) returns:
2 * 4 * 6 * 8 * ... * (n - 2) * n
For odd numbers FACTDOUBLE(n) returns:
1 * 3 * 5 * 7 * ... * (n - 2) * n
FACTDOUBLE(0) returns 1 by definition.
Examples:
=FACTDOUBLE(5)
returns 15.
=FACTDOUBLE(6)
returns 48.
=FACTDOUBLE(0)
returns 1.
see also FACT, MULTINOMIAL, PRODUCT