# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/en_GB.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Defining Conditions
/text/swriter/01/04090200.xhp
logical expressions
formulating conditions
conditions; in fields and sections
fields;defining conditions
sections;defining conditions
variables; in conditions
user data;in conditions
databases;in conditions
hiding; database fields
Defining Conditions
fields
and
sections
in your document.
Although the following examples apply to fields, they also apply to sections.
You can define conditions for the following field types:
Conditional text: displays text A if the condition is true, or text B if the condition is false.
Hidden text: hides the contents of the field if the condition is true.
Hidden paragraph: hides the paragraph if the condition is true.
Any record and next record: controls the access to database records.
Condition
box using the following values:
TRUE
The condition is always met.
You can also enter any value not equal to 0 as the conditional text.
FALSE
The condition is not met.
You can also enter the value 0.
Condition
box empty, the condition is interpreted as not being met.
elements
for defining a formula, namely comparative operators, mathematical and statistical functions, number formats, variables and constants.
You can use the following types of variables when you define a condition:
$[officename] variables
that use statistics on document properties
Custom variables, that are a created with the &quot; Set variable &quot; field
Variables based on user data
Variables based on the contents of database fields
You cannot use internal variables, such as page and chapter numbers, in condition expression.
Conditions and Variables
The following examples use a variable called &quot; x &quot; :
x == 1 or x EQ 1
The condition is true if &quot; x &quot; is equal to 1.
x != 1 or x NEQ 1
The condition is true if &quot; x &quot; does not equal 1.
sinx == 0
The condition is true if &quot; x &quot; is a multiple of pi.
To use comparative operators with strings, the operands must be bounded by double quotation marks:
x == &quot; ABC &quot; or x EQ &quot; ABC &quot;
Checks if variable &quot; x &quot; contains (true) the &quot; ABC &quot; string, or not (false).
x == &quot; &quot; or x EQ &quot; &quot;
or
!x or NOT x
Checks if the variable &quot; x &quot; contains an empty string.
The &quot; equal &quot; comparative operator must be represented by two equal signs (==) in a condition.
For example, if you define a variable &quot; x &quot; with the value of 1, you can enter the condition as x==1.
User Data
Tools - Options - $[officename] - User data
.
User data must be entered in the form of strings.
You can query the user data with &quot; == &quot; (EQ), &quot; != &quot; (NEQ), or &quot; ! &quot; (NOT).
The following table lists user data variables and their meanings:
Variable
Meaning
user_firstname
Forename
user_lastname
Surname
user_initials
Initials
user_company
Company
user_street
Street
user_country
Country
user_zipcode
Postcode
user_city
City
user_title
Title
user_position
Position
user_tel_work
Business telephone number
user_tel_home
Home telephone number
user_fax
Fax number
user_email
E-mail address
user_state
County (not in all $[officename] versions)
For example, to hide a paragraph, text, or a section from a user with a specific initial, such as &quot; LM &quot; , enter the condition: user_initials== &quot; LM &quot; .
Conditions and Database Fields
You can define conditions for accessing databases, or database fields.
For example, you can check the contents of a database field from a condition, or use database fields in logical expressions.
The following table lists a few more examples of using databases in conditions:
Example
Meaning
Database.Table.Company
Database.Table.Company NEQ &quot; &quot;
Database.Table.Company != &quot; &quot;
The condition is true if the COMPANY field is not empty.
(In the first example, no operator is required.)
!Database.Table.Company
NOT Database.Table.Company
Database.Table.Company EQ &quot; &quot;
Database.Table.Company == &quot; &quot;
Returns TRUE if the COMPANY field is empty.
(Exclamation sign represents a logical NOT.)
Database.Table.Company != &quot; Sun Microsystems &quot;
Database.Table.Company NEQ &quot; Sun Microsystems &quot;
Returns TRUE if the current entry in the COMPANY field is &quot; Sun Microsystems &quot; .
Database.Table.Forename AND Database.Table.Surname
Returns TRUE if the record contains the forename and the surname.
Note the difference between the boolean NOT &quot; ! &quot; and the comparative operator not equal &quot; != &quot; (NEQ).
When you refer to a database field in a condition, use the form Databasename.Tablename.Fieldname.
If one of the names contains a character that is an operator, such as a minus sign (-), enclose the name in square brackets, for example, Databasename.[Table-name].Fieldname.
Never use spaces inside field names.
Example:
Hiding an Empty Database Field
You may want to create a condition that hides an empty field, for example, if the COMPANY field is empty for some of the data records.
Hidden Paragraph
list entry, and type the following condition:
Addressbook.Addresses.Company EQ &quot; &quot;
or type the following
NOT Addressbook.Addresses.Company
If the COMPANY database field is empty, the condition is true and the paragraph is hidden.
Tools - Options - %PRODUCTNAME Writer - Formatting Aids
, and unmark the
Fields:
Hidden paragraphs
check box.
Examples of Conditions in Fields
The following examples use the Conditional text field, although they can be applied to any fields that can be linked to a condition.
The syntax used for conditions is also used for the Hidden text, Hidden paragraph, Any record or Next record fields.
To display conditional text based on the number of pages:
Insert - Fields - Other
, and then click the
Functions
tab.
Type
list, click &quot; Conditional text &quot; .
Condition
box, type &quot; page == 1 &quot; .
Then
box, type &quot; There is only one page &quot; .
Or
box, type &quot; There are several pages &quot; .
Insert
, and then click
Close
.
To display conditional text based on a user-defined Variable
Insert - Fields - Other
, and then click the
Variables
tab.
Type
list, click &quot; Set Variable &quot; .
Name
box, type &quot; Profit &quot; .
Value
box, type &quot; 5000 &quot; .
Insert
.
Functions
tab, and click &quot; Conditional text &quot; in the
Type
list.
Condition
box, type &quot; Profit < 5000 &quot; .
Then
box, type &quot; Target is not met &quot; .
Or
box, type &quot; Target is met &quot; .
Insert
.
To edit the contents of the &quot; Profit &quot; variable, double-click the variable field.
To display conditional text based on the contents of a database field:
The first part of this example inserts a space between the &quot; Forename &quot; and &quot; Surname &quot; fields in a document, and the second part inserts text based on the contents of a field.
This example requires that an address data source is registered with $[officename].
Insert - Fields - Other
, and then click the
Database
tab.
Type
list, click &quot; Mail merge fields &quot; .
Database selection
box, double-click an address book, click &quot; Forename &quot; , and then click
Insert
.
Repeat for &quot; Surname &quot; .
Fields
dialogue box:
Functions
tab, and then click &quot; Conditional text &quot; in the
Type
list.
Condition
box, type: &quot; Addressbook.addresses.firstname &quot; .
Then
box, type a space and leave the
Or
box blank.
You can now use a condition to insert text based on the contents of the Forename field.
Fields
dialogue box, click the
Functions
tab.
Type
box, click &quot; Conditional text &quot; .
Condition
box, type:
Addressbook.addresses.firstname == &quot; Michael &quot;
Then
box, type &quot; Dear &quot; .
Else
box, type &quot; Hello &quot; .
Insert
.