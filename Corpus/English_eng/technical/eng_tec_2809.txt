# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3, PHP 4)
Sends an error message to the web server 's error log, a TCP port or to a file.
The first parameter, message, is the error message that should be logged.
The second parameter, message_type says where the message should go:
Table 1. error_log() log types
0
message is sent to PHP' s system logger, using the Operating System's system logging mechanism or a file, depending on what the error_log configuration directive is set to.
1
message is sent by email to the address in the destination parameter.
This is the only message type where the fourth parameter, extra_headers is used.
This message type uses the same internal function as mail() does.
2
message is sent through the PHP debugging connection.
This option is only available if remote debugging has been enabled.
In this case, the destination parameter specifies the host name or IP address and optionally, port number, of the socket receiving the debug information.
3
message is appended to the file destination.
Warning
Remote debugging via TCP / IP is a PHP 3 feature that is not available in PHP 4.
Example 1. error_log() examples
/ / Send notification through the server log if we can not / / connect to the database. if (!Ora_Logon ($username, $password)) {error_log ("Oracle database not available !", 0);} / / Notify administrator by email if we run out of FOO if (!($foo = allocate_new_foo()) {error_log ("Big trouble, we're all out of FOOs !", 1, "operator@mydomain.com");} / / other ways of calling error_log(): error_log ("You messed up !", 2, "127.0.0.1:7000"); error_log ("You messed up !", 2, "loghost"); error_log ("You messed up !", 3, "/ var / tmp / my-errors.log");
Prev
Home
Next
debug_backtrace
Up
error_reporting