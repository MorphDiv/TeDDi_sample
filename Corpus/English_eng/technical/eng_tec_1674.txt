# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/en_GB.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

The Basic Editor
/text/sbasic/shared/01030200.xhp
saving;Basic code
loading;Basic code
Basic editor
navigating;in Basic projects
long lines;in Basic editor
lines of text;in Basic editor
continuation;long lines in editor
mw deleted &quot; Basic; &quot;
The Basic Editor
Edit
menu (Cut, Delete, Paste), the ability to select text with the Shift key, as well as cursor positioning functions (for example, moving from word to word with
Command
Ctrl
and the arrow keys).
Long lines can be split into several parts by inserting a space and an underline character _ as the last two characters of a line.
This connects the line with the following line to one logical line.
(If &quot; Option Compatible &quot; is used in the same Basic module, the line continuation feature is also valid for comment lines.)
Run BASIC
icon on the
Macro
bar, program execution starts at the first line of the Basic editor.
The program executes the first Sub or Function and then program execution stops.
The &quot; Sub Main &quot; does not take precedence on program execution.
Insert your Basic code between the Sub Main and End Sub lines that you will see when you first open the IDE.
Alternatively, delete all lines and then enter your own Basic code.
Navigating in a Project
The Library List
Library
list at the left of the toolbar to load the library in the editor.
The first module of the selected library will be displayed.
The Object Catalogue
Saving and Loading Basic Source Code
You can save Basic code in a text file for saving and importing in other programming systems.
You cannot save BASIC dialogue boxes to a text file.
Saving Source Code to a Text File
Select the module that you want to export as text from the object catalogue.
Save Source As
icon in the Macro toolbar.
OK
to save the file.
Loading Source Code From a Text File
Select the module from which you want to import the source code from the object catalogue.
Position the cursor where you want to insert the program code.
Insert Source Text
icon in the Macro toolbar.
OK
.
Basic IDE