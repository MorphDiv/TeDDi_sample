# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	GNOME
# source:	https://object.pouta.csc.fi/OPUS-GNOME/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/GNOME.php
# copyright_long:	http://opus.nlpl.eu/GNOME.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Nemiver is an on-going effort to write a standalone graphical debugger that integrates well in the GNOME desktop environment. It currently features a backend which uses the well known GNU Debugger gdb to debug C / C++ programs.
We believe that Nemiver is mature and robust enough to just let you debug your favorite C or C++ application in a pleasant way.
Nemiver
C/C++ Debugger
Nemiver C/C++ Debugger
Debug Applications
gdb;disassembler;debugger;c;c++;
Set the environment of the program to debug
Attach to a process
Load a core file
List the saved debugging sessions
Erase the saved debugging sessions
Debug the program that was of session number N
Execute the last session
Enable logging domains DOMAINS
Log the debugger output
Use this terminal as the debugee's terminal
Connect to remote target specified by HOST:PORT
Where to look for shared libraries loaded by the inferior. Use in conjunction with --remote
Set the path of the GDB binary to use to debug the inferior
Do not set a breakpoint in 'main' and do not run the inferior either
Show the version number of Nemiver
[<prog\-to\-debug> [prog-args]]
A C/C++ debugger for GNOME
Please provide a local copy of the binary you intend to debug remotely.
Like this:
Otherwise, find below the full set of Nemiver options.
Please provide the path to the binary that generated the core file too.
Like this:
ID
File Name
Line
Function
Address
Condition
Toggle countpoint
Type
Hits
Expression
Ignore count
breakpoint
watchpoint
countpoint
unknown
_Delete
Remove this breakpoint
_Go to Source
Find this breakpoint in the source editor
_Copy
Copy the call stack to the clipboard
Frame
Arguments
Location
Binary
Function Name
Context
Target Terminal
Breakpoints
Registers
Memory
Expression Monitor
Reached end of file
Could not find string %s
Change to Standard Breakpoint
Change to Countpoint
Remove _Breakpoint
Disable Breakpoint
Enable Breakpoint
Set _Breakpoint
Set Countpoint
%s (path="%s", pid=%i)
Connected to remote target!
Program exited
The underlying debugger engine process died.
Target received a signal: %s, %s
An error occurred: %s
File %s has been modified. Do you want to reload it?
_Detach From the Running Program
Disconnect the debugger from the running target without killing it
_Save Session to Disk
Save the current debugging session to disk
_Run or Restart
Run or Restart the target
Set Breakpoint with Dialog...
Set a breakpoint at the current line using a dialog
Set Breakpoint...
Set a breakpoint at a function or line number
Toggle _Breakpoint
Set/Unset a breakpoint at the current cursor location
Enable/Disable Breakpoint
Enable or disable the breakpoint that is set at the current cursor location
Toggle _Countpoint
Set/Unset a countpoint at the current cursor location
Set Watchpoint with Dialog...
Set a watchpoint using a dialog
_Next
Execute next line stepping over the next function, if any
_Step
Execute next line, stepping into the next function, if any
Step _Out
Finish the execution of the current function
Step Into asm
Step into the next assembly instruction
Step Over asm
Step over the next assembly instruction
_Continue
Continue program execution until the next breakpoint
Run to Cursor
Continue program execution until the currently selected line is reached
Jump to Cursor
Jump to the currently selected line
Jump and Stop to Cursor
Sets a breakpoint to the currently selected line and jump there
Jump to a Given Location
Select a given code location and jump there
Inspect an Expression
Inspect a global or local expression
Call a Function
Call a function in the program being debugged
Show Global Variables
Display all global variables
Refresh Locals
Refresh the list of variables local to the current function
Show Assembly
Show the assembly code of the source code being currently debugged, in another tab
Switch to Assembly
Show the assembly code of the source code being currently debugged
Switch to Source
Show the source code being currently debugged
Stop
Stop the debugger
_View
Switch to Target Terminal View
Switch to Context View
Switch to Breakpoints View
Switch to Registers View
Switch to Memory View
Switch to Variables Monitor View
_Debug
_Open Source File...
Open a source file for viewing
Load _Executable...
Execute a program
_Load Core File...
Load a core file from disk
_Attach to Running Program...
Debug a program that's already running
_Connect to Remote Target...
Connect to a debugging server to debug a remote target
Resume Sa_ved Session...
Open a previously saved debugging session
_Preferences
Edit the properties of the current session
_Copy selected text
Copy the text selected in the current source file
_Reload Source File
Reloads the source file
_Close Source File
Close the opened file
_Find
Find a text string in file
Close %s
Sorry, it's impossible to restart a remote inferior
Could not find file %s
Could not load program: %s
You cannot attach to Nemiver itself
You cannot attach to the underlying debugger engine
Failed to stop the debugger
Invalid line number: %i
There is a program being currently debugged. Do you really want to exit from the debugger?
Default Layout
Nemiver's default layout
Source Code
Dynamic Layout
A layout which can be modified
Two Status Pane
A layout with two status pane
Wide Layout
A layout for very large monitors
Expand _Selected
Expand _All
_Collapse
Loading files from target executable...
Variable type is: 
 %s
Local Variables
Function Arguments
_Copy Variable Name
Copy the variable path expression to the clipboard
_Copy Variable Value
Copy the variable value to the clipboard
Create Watchpoint
Create a watchpoint that triggers when the value of the expression changes
Byte
Word
Long Word
Address:
Show
Group By:
Choose a Directory
Source Directories
User Name
Proc Args
Name
Value
Session
Throw Exception
Catch Exception
Fork System Call
Vfork System Call
Exec System Call
Thread ID
Variable
In scope expressions
Out of scope expressions
Remove
Remove selected expressions from the monitor
New...
Add a new expression to the monitor
Call a function:
Set Breakpoint
Choose Overloaded Function
Multiple functions match the specified name. Please choose one from the list below.
Find Text
_Search:
Match Options:
Match c_ase
Match _entire word only
Cycling Options:
_Wrap around
Search _backwards
Global Variables
Choose a Core File to Debug
Select a Core File
Core File:
Select the executable that created the core file
Executable:
Open Source Files
Select from _Target Executable
Select from _File System
Choose Source Files to Open
Preferences
Use system monospace font
Custom Font:
Editor Font
Visual Style
Display line numbers
Line Numbers
Use launch terminal
Terminal
When a source file is changed:
Reload the file
Do not reload the file
Ask each time
File Monitoring
Enable syntax highlighting
Syntax Highlighting
Editor
Update at each stop
Local variables
Pure assembly
Mixed source and assembly
Assembly style
Assembly flavor
Choose a File
Path to the GDB binary used
GDB Binary
Number of instructions to disassemble by default
Instructions
Enable pretty printing (requires debugger restart)
GDB Pretty Printing
Follow parent
Follow child
GDB Follow Fork Mode
Debugger
Layout
Attach to a Running Program
Choose a Process to Debug
_Filter list:
Connect to Remote Target
Executable to Load
Shared Libraries Location
Remote Debugging Server
TCP/IP Connection
Port:
Serial Line Connection
Choose a Program to Execute
Choose an Executable
Program:
Arguments:
Choose a Working Directory
Working Directory:
_Add
_Remove
Environment Variables:
Saved Sessions
Choose a Session to Debug
Set a Breakpoint:
Condition:
_Event:
_Binary Location:
_Source Location:
F_unction Name:
File name:
Function:
Line:
Set as Countpoint
Set Location to Jump To
Jump to location:
Break at Destination
Add to monitor
_Variable Name:
_Inspect
Set a watchpoint:
Expression:
Inspect
Triggers on:
Read
Write
Select Location for %s
Cannot find file '%s'.
Please specify the location of this file:
Line: %i, Column: %i
Could not load file %s because its encoding is different from %s
Copy the selection
_Paste
Paste the clipboard
_Reset
Reset the terminal
Do not ask me again
Project Website
translator-credits
_File
_Quit
Quit the application
_Edit
_Help
_About
Display information about this application
_Contents
Display the user manual for this application
Select File Location
Locate File