# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
PHP is not limited to creating just HTML output.
It can also be used to create and manipulate image files in a variety of different image formats, including gif, png, jpg, wbmp, and xpm.
Even more convenient, PHP can output image streams directly to a browser.
You will need to compile PHP with the GD library of image functions for this to work.
GD and PHP may also require other libraries, depending on which image formats you want to work with.
You can use the image functions in PHP to get the size of JPEG, GIF, PNG, SWF, TIFF and JPEG2000 images.
Note:
Read requirements section about how to expand image capabilities to read, write and modify images and to read meta data of pictures taken by digital cameras.
If you have the GD library (available at http: / /www.boutell.com / gd /) you will also be able to create and manipulate images.
The format of images you are able to manipulate depend on the version of GD you install, and any other libraries GD might need to access those image formats.
Versions of GD older than gd-1.6 support GIF format images, and do not support PNG, where versions greater than gd-1.6 support PNG, not GIF.
Note:
Since PHP 4.3 there is a bundled version of the GD lib.
This bundled version has some additional features like alpha blending, and should be used in preference to the external library since it 's codebase is better maintained and more stable.
You may wish to enhance GD to handle more image formats.
Table 1.
Supported image formats
Image format
Library to download
Notes
gif
Only supported in GD versions older than gd-1.6.
Read-only GIF support is available with PHP 4.3.0 and the bundled GD-library.
jpeg-6b
ftp: / /ftp.uu.net / graphics / jpeg /
png
http: / /www.libpng.org / pub / png / libpng.html
Only supported in GD versions greater than gd-1.6.
xpm
ftp: / /metalab.unc.edu / pub / Linux / libs / X/!INDEX.html
It 's likely you have this library already available, if your system has an installed X-Environment.
You may wish to enhance GD to deal with different fonts.
The following font libraries are supported:
Table 2.
Supported font libraries
Font library
Download
Notes
FreeType 1.x
http: / /www.freetype.org /
FreeType 2
http: / /www.freetype.org /
T1lib
ftp: / /sunsite.unc.edu / pub / Linux / libs / graphics /)
Support for Type 1 fonts.
If you have PHP compiled with --enable-exif you are able to work with information stored in headers of JPEG and TIFF If you have PHP compiled with --enable-exif you are able to work with information stored in headers of JPEG and TIFF images.
This way you can read meta data generated by digital cameras as mentioned above.
These functions does not require the GD library.
Note:
PHP does not require any additional library for exif the module.
To enable GD-support configure PHP --with-gd[ =DIR], where DIR is the GD base install directory.
To use the recommended bundled version of the GD library configure --with-gd.
In Windows you 'll include php_gd2.dll as an extension in php.ini.
There is also php_gd.dll for GD1 but it 's not preferred.
Enhance the capabilities of GD to handle more image formats by specifying the --with-XXXX configure switch to your PHP configure line.
Table 3.
Supported image formats
Image Format
Configure Switch
jpeg-6b
To enable support for jpeg-6b add --with-jpeg-dir=DIR.
png
To enable support for png add --with-png-dir=DIR.
Note, libpng requires the zlib library, therefore add --with-zlib-dir[ =DIR] to your configure line.
xpm
To enable support for xpm add --with-xpm-dir=DIR.
If configure is not able to find the required libraries, you may add the path to your X11 libraries.
Enhance the capabilities of GD to deal with different fonts by specifying the --with-XXXX configure switch to your PHP configure line.
Table 4.
Supported font libraries
Font library
Configure Switch
FreeType 1.x
To enable support for FreeType 1.x add --with-ttf[ =DIR].
FreeType 2
To enable support for FreeType 2 add --with-freetype-dir=DIR.
T1lib
To enable support for T1lib (Type 1 fonts) add --with-t1lib[=DIR].
Native TrueType string function
To enable support for native TrueType string function add --enable-gd-native-ttf.
The behaviour of these functions is affected by settings in php.ini.
Exif supports automatically conversion for Unicode and JIS character encodings of user comments when module mbstring is available.
This is done by first decoding the comment using the specified characterset.
The result is then encoded with another characterset which should match your HTTP output.
Table 5.
Exif configuration options
Name
Default
Changeable
exif.encode_unicode
"ISO-8859-15"
PHP_INI_ALL
exif.decode_unicode_motorola
"UCS-2BE"
PHP_INI_ALL
exif.decode_unicode_intel
"UCS-2LE"
PHP_INI_ALL
exif.encode_jis
""
PHP_INI_ALL
exif.decode_jis_motorola
"JIS"
PHP_INI_ALL
exif.decode_jis_intel
"JIS"
PHP_INI_ALL
Here is a short explanation of the configuration directives.
exif.encode_unicode exif.encode_unicode defines the characterset UNICODE user comments are handled.
This defaults to ISO-8859-15 which should work for most non asian countries.
The setting can be empty or must be an encoding supported by mbstring.
If it is empty the current internal encoding of mbstring is used.
exif.decode_unicode_motorola defines the image internal characterset for Unicode encoded user comments if image is in motorola byte order (big-endian).
This setting cannot be empty but you can specify a list of encodings supported by mbstring.
The default is UCS-2BE.
exif.decode_unicode_intel defines the image internal characterset for Unicode encoded user comments if image is in intel byte order (little-endian).
This setting cannot be empty but you can specify a list of encodings supported by mbstring.
The default is UCS-2LE.
exif.encode_jis exif.encode_jis defines the characterset JIS user comments are handled.
This defaults to an empty value which forces the functions to use the current internal encoding of mbstring.
exif.decode_jis_motorola defines the image internal characterset for JIS encoded user comments if image is in motorola byte order (big-endian).
This setting cannot be empty but you can specify a list of encodings supported by mbstring.
The default is JIS.
exif.decode_jis_intel defines the image internal characterset for JIS encoded user comments if image is in intel byte order (little-endian).
This setting cannot be empty but you can specify a list of encodings supported by mbstring.
The default is JIS.
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Example 1.
PNG creation with PHP
?php header( "Content-type: image / png"); $string = $_GET['text']; $im = imagecreatefrompng("images / button1.png"); $orange = imagecolorallocate($im, 220, 210, 60); $px = (imagesx($im) - 7.5 * strlen($string)) / 2; imagestring($im, 3, $px, 9, $string, $orange); imagepng($im); imagedestroy($im);?
Prev
Home
Next
ob_iconv_handler
Up
exif_imagetype