# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Virtual file systems (VFS)
VFS
A basic OFM feature is VFS, this an abstracted layer over all kinds of archived information (ZIP files, FTP servers, TAR archives, NFS filesystems, SAMBA shares, ISO cd/ dvd images, RPM catalogs, etc.), which allows the user to access all the information in these divergent types of filesystems transparently - just like entering an ordinary sub-directory. & krusader; supports several virtual file systems:
Remote connections VFS: provides the capability of working with a remote connection session (FTP, NFS, Samba, FISH, SFTP) like with local filesystems. It is perfect for complex remote operations and almost as powerful as most standalone GUI remote clients.
Archive VFS: allows to browse archives in VFS as it was a directory (ace, arj, bzip2, deb, gzip, iso, lha, rar, rpm, tar, zip and 7-zip).
Search VFS: Feed to listbox places the search results in VFS.
Synchronizer VFS: places the synchronizer results in VFS.
Actions you perform on the files in VFS are performed on the'real 'files. You do not just delete files from the VFS - you delete them from your hard drive. Limitations: you cannot create directories inside a VFS.
It is possible to keep the directory structure when doing a copy from a virtual folder to a non virtual folder, by selecting the "Keep virtual directory structure" check box of the copy dialog. Imagine the following virtual folder: $file: / home/ myhome/ mydir1/ myfile1 $file: / home/ myhome/ mydir1/ myfile2 $file: / home/ myhome/ mydir2/ myfile3 Then do the following steps:
go to the virtual folder and select the files
select a destination folder (non virtual!)
press F5 -gt; copy dialog appears
Check Keep virtual directory structure
Select / home/ myhome/ for base & URL;
Start copy by pressing OK
The result will be:
$destinationdir/ mydir1/ myfile1
$destinationdir/ mydir1/ myfile2
$destinationdir/ mydir2/ myfile3