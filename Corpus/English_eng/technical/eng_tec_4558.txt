# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3 = 3.0.9, PHP 4)
preg_quote() takes str and puts a backslash in front of every character that is part of the regular expression syntax.
This is useful if you have a run-time string that you need to match in some text and the string may contain special regex characters.
If the optional delimiter is specified, it will also be escaped.
This is useful for escaping the delimiter that is required by the PCRE functions.
The / is the most commonly used delimiter.
The special regular expression characters are:
.\\ + *? [^] $() {} =! |:
Example 1.
$keywords = "$40 for a g3 / 400"; $keywords = preg_quote ($keywords," / "); echo $keywords; / / returns \$40 for a g3\ / 400
Example 2.
Italicizing a word within some text
/ / In this example, preg_quote( $word) is used to keep the / / asterisks from having special meaning to the regular / / expression. $textbody = "This book is *very* difficult to find ."; $word = "*very*"; $textbody = preg_replace (" / ".preg_quote($word) ." / "," i ".$word. "/ i", $textbody);
Prev
Home
Next
preg_match
Up
preg_replace_callback