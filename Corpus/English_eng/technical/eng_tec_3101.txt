# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3 = 3.0.8, PHP 4)
headers_sent() will return FALSE if no HTTP headers have already been sent or TRUE headers_sent() will return FALSE if no HTTP headers have already been sent or TRUE otherwise.
If the optional file and line parameters are set, headers_sent() will put the php source file name and line number where output started in the file and line variables.
You can' t add any more header lines using the header() You can't add any more header lines using the header() function once the header block has already been sent.
Using this function you can at least prevent getting HTTP header related error messages.
Another option is to use Output Buffering.
New parameters:
The optional file and line parameters where added in PHP 4.3.0.
Example 1.
Examples using headers_sent()
?php / / If no headers are sent, send one if (!headers_sent()) {header ('Location: http: / /www.example.com / '); exit;} / / An example using the optional file and line parameters, as of PHP 4.3.0 / / Note that $filename and $linenum are passed in for later use. / / Do not assign them values beforehand. if (!headers_sent($filename, $linenum)) {header ('Location: http: / /www.example.com / '); exit; / / You would most likely trigger an error here.} else {print "Headers already sent in $filename on line $linenum\n ". "Cannot redirect, for now please click this a". "href=\"http: / /www.example.com\ "link / a instead\n"; exit;}?
See also ob_start(), trigger_error(), and header() for a more detailed discussion of the matters involved.
Prev
Home
Next
header
Up
setcookie