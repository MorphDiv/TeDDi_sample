# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/en_GB.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

LSet Statement [Run-time]
/text/sbasic/shared/03120304.xhp
Sun Microsystems, Inc.
converted from old format - fpe
LSet statement
LSet Statement [Run-time]
Aligns a string to the left of a string variable, or copies a variable of a user-defined type to another variable of a different user-defined type.
Syntax:
LSet Var As String = Text or LSet Var1 = Var2
Parameters:
Var:
Any String variable that contains the string that you want align to the left.
Text:
String that you want to align to the left of the string variable.
Var1:
Name of the user-defined type variable that you want to copy to.
Var2:
Name of the user-defined type variable that you want to copy from.
LSet
left-aligns the string within the string variable.
Any remaining positions in the string variable are replaced by spaces.
If the string is longer than the string variable, only the leftmost characters up to the length of the string variable are copied.
With the
LSet
statement, you can also copy a user-defined type variable to another variable of the same type.
Example:
Sub ExampleRLSet
Dim sVar As String
Dim sExpr As String
sVar = String(40, &quot; * &quot; )
sExpr = &quot; SBX &quot;
REM Align &quot; SBX &quot; within the 40-character reference string
REM Replace asterisks with spaces
RSet sVar = sExpr
Print &quot; > &quot; ; sVar; &quot; < &quot;
sVar = String(5, &quot; * &quot; )
sExpr = &quot; 123457896 &quot;
RSet sVar = sExpr
Print &quot; > &quot; ; sVar; &quot; < &quot;
sVar = String(40, &quot; * &quot; )
sExpr = &quot; SBX &quot;
REM Left-align &quot; SBX &quot; within the 40-character reference string
LSet sVar = sExpr
Print &quot; > &quot; ; sVar; &quot; < &quot;
sVar = String(5, &quot; * &quot; )
sExpr = &quot; 123456789 &quot;
LSet sVar = sExpr
Print &quot; > &quot; ; sVar; &quot; < &quot;
End Sub