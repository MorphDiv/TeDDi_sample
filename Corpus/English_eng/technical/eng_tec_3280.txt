# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3 = 3.0.4, PHP 4)
Returns a integer result_id for use by ifx_do().
Sets affected_rows for retrieval by the ifx_affected_rows() function.
Prepares query on connection conn_id.
For "select-type" queries a cursor is declared and opened.
The optional cursor_type The optional cursor_type parameter allows you to make this a "scroll" and / or "hold "cursor.
It' s a bitmask and can be either IFX_SCROLL, IFX_HOLD, or both or'ed together.
For either query type the estimated number of affected rows is saved for retrieval by ifx_affected_rows().
If you have BLOB (BYTE or TEXT) columns in the query, you can add a blobidarray parameter containing the corresponding "blob ids", and you should replace those columns with a "?" in the query text.
If the contents of the TEXT (or BYTE) column allow it, you can also use "ifx_textasvarchar(1) "and "ifx_byteasvarchar(1)".
This allows you to treat TEXT (or BYTE) columns just as if they were ordinary (but long) VARCHAR columns for select queries, and you don't need to bother with blob id's.
With ifx_textasvarchar( 0) or ifx_byteasvarchar(0) (the default situation), select queries will return BLOB columns as blob id's (integer value).
You can get the value of the blob as a string or file with the blob functions (see below).
See also: ifx_do().
Prev
Home
Next
ifx_pconnect
Up
ifx_query