# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/en_GB.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Financial Functions Part Two
/text/scalc/01/04060119.xhp
Financial Functions Part Two
Back to Financial Functions Part One
Forwards to Financial Functions Part Three
PPMT function
PPMT
Returns for a given period the payment on the principal for an investment that is based on periodic and constant payments and a constant interest rate.
Syntax:
PPMT(Rate; Period; NumPeriods; PV; FV; Type)
Rate
is the periodic interest rate.
Period
is the amortisation period.
P = 1 for the first and P = NumPeriods for the last period.
NumPeriods
is the total number of periods during which the annuity is paid.
PV
is the present value in the sequence of payments.
FV
(optional) is the desired (future) value.
Type
(optional) defines the due date.
F = 1 for payment at the beginning of a period and F = 0 for payment at the end of a period.
Example:
How high is the periodic monthly payment at an annual interest rate of 8.75% over a period of 3 years?
The cash value is 5,000 currency units and is always paid at the beginning of a period.
The future value is 8,000 currency units.
=PPMT(8.75%/12; 1; 36; 5000; 8000; 1)
= -350.99 currency units.
calculating; total amortisation rates
total amortisation rates
amortisation instalment
repayment instalment
CUMPRINC function
mw added two entries
CUMPRINC
Returns the cumulative interest paid for an investment period with a constant interest rate.
Syntax:
CUMPRINC(Rate; NumPeriods; PV; S; E; Type)
Rate
is the periodic interest rate.
NumPeriods
is the payment period with the total number of periods.
NumPeriods can also be a non-integer value.
PV
is the current value in the sequence of payments.
S
is the first period.
E
is the last period.
Type
is the due date of the payment at the beginning or end of each period.
Example:
What are the instalment amounts if the yearly interest rate is 5.5% for 36 months?
The cash value is 15,000 currency units.
The instalment amount is calculated between the 10th and 18th period.
The due date is at the end of the period.
=CUMPRINC(5.5%/12; 36; 15000; 10; 18; 0)
= -3669.74 currency units.
The instalment amount between the 10th and 18th period is 3669.74 currency units.
CUMPRINC_ADD function
CUMPRINC_ADD
Calculates the cumulative redemption of a loan in a period.
Syntax:
CUMPRINC_ADD(Rate; NumPeriods; PV; StartPeriod; EndPeriod; Type)
Rate
is the interest rate for each period.
NumPeriods
is the total number of payment periods.
The rate and NumPeriods must refer to the same unit, and thus both be calculated annually or monthly.
PV
is the current value.
StartPeriod
is the first payment period for the calculation.
EndPeriod
is the last payment period for the calculation.
Type
is the maturity of a payment at the end of each period (Type = 0) or at the start of the period (Type = 1).
Example:
The following mortgage loan is taken out on a house:
Rate:
9.00 per cent per annum (9% / 12 = 0.0075), Duration:
30 years (payment periods = 30 * 12 = 360), NPV:
125000 currency units.
How much will you repay in the second year of the mortgage (i.e. from periods 13 to 24)?
=CUMPRINC_ADD(0.0075; 360; 125000; 13; 24; 0)
returns -934.1071
In the first month you will be repaying the following amount:
=CUMPRINC_ADD(0.0075; 360; 125000; 1; 1; 0)
returns -68.27827
calculating; accumulated interest
accumulated interest
CUMIPMT function
CUMIPMT
Calculates the cumulative interest payments, that is, the total interest, for an investment based on a constant interest rate.
Syntax:
CUMIPMT(Rate; NumPeriods; PV; S; E; Type)
Rate
is the periodic interest rate.
NumPeriods
is the payment period with the total number of periods.
NumPeriods can also be a non-integer value.
PV
is the current value in the sequence of payments.
S
is the first period.
E
is the last period.
Type
is the due date of the payment at the beginning or end of each period.
Example:
What are the interest payments at a yearly interest rate of 5.5 %, a monthly payment period for 2 years and a current cash value of 5,000 currency units?
The start period is the 4th and the end period is the 6th.
The payment is due at the beginning of each period.
=CUMIPMT(5.5%/12; 24; 5000; 4; 6; 1)
= -57.54 currency units.
The interest payments for the 4th to 6th periods are 57.54 currency units.
CUMIPMT_ADD function
CUMIPMT_ADD
Calculates the accumulated interest for a period.
Syntax:
CUMIPMT_ADD(Rate; NumPeriods; PV; StartPeriod; EndPeriod; Type)
Rate
is the interest rate for each period.
NumPeriods
is the total number of payment periods.
Rate and NumPeriods must refer to the same unit, and thus both be calculated annually or monthly.
PV
is the current value.
StartPeriod
is the first payment period for the calculation.
End period
is the last payment period for the calculation.
Type
is the maturity of a payment at the end of each period (Type = 0) or at the start of the period (Type = 1).
Examples:
The following mortgage loan is taken out on a house:
Rate:
9.00 per cent per annum (9% / 12 = 0.0075), Duration:
30 years (NumPeriods = 30 * 12 = 360), PV:
125000 currency units.
How much interest must you pay in the second year of the mortgage (i.e. from periods 13 to 24)?
=CUMIPMT_ADD(0.0075; 360; 125000; 13; 24; 0)
returns -11135.23.
How much interest must you pay in the first month?
=CUMIPMT_ADD(0.0075; 360; 125000; 1; 1; 0)
returns -937.50.
PRICE function
prices; fixed interest securities
sales values;fixed interest securities
mw added two entries
PRICE
Calculates the market value of a fixed interest security with a par value of 100 currency units as a function of the forecast yield.
Syntax:
PRICE(Settlement; Maturity; Rate; Yield; Redemption; Frequency; Basis)
Settlement
is the date of purchase of the security.
Maturity
is the date on which the security matures (expires).
Rate
is the annual nominal rate of interest (coupon interest rate)
Yield
is the annual yield of the security.
Redemption
is the redemption value per 100 currency units of par value.
Frequency
is the number of interest payments per year (1, 2 or 4).
Example:
A security is purchased on 15/02/1999; the maturity date is 15/11/2007.
The nominal rate of interest is 5.75%.
The yield is 6.5%.
The redemption value is 100 currency units.
Interest is paid half-yearly (frequency is 2).
With calculation on basis 0 the price is as follows:
=PRICE( &quot; 15/02/1999 &quot; ; &quot; 15/11/2007 &quot; ; 0.0575; 0.065; 100; 2; 0) returns 95.04287.
PRICEDISC function
prices;non-interest-bearing securities
sales values;non-interest-bearing securities
mw added two entries
PRICEDISC
Calculates the price per 100 currency units of par value of a non-interest- bearing security.
Syntax:
PRICEDISC(Settlement; Maturity; Discount; Redemption; Basis)
Settlement
is the date of purchase of the security.
Maturity
is the date on which the security matures (expires).
Discount
is the discount of a security as a percentage.
Redemption
is the redemption value per 100 currency units of par value.
Example:
A security is purchased on 15/02/1999; the maturity date is 01/03/1999.
Discount in per cent is 5.25%.
The redemption value is 100.
When calculating on basis 2 the price discount is as follows:
=PRICEDISC( &quot; 15/02/1999 &quot; ; &quot; 01/03/1999 &quot; ; 0.0525; 100; 2) returns 99.79583.
PRICEMAT function
prices;interest-bearing securities
mw added one entry
PRICEMAT
Calculates the price per 100 currency units of par value of a security, that pays interest on the maturity date.
Syntax:
PRICEMAT(Settlement; Maturity; Issue; Rate; Yield; Basis)
Settlement
is the date of purchase of the security.
Maturity
is the date on which the security matures (expires).
Issue
is the date of issue of the security.
Rate
is the interest rate of the security on the issue date.
Yield
is the annual yield of the security.
Example:
Settlement date:
15th February 1999, maturity date:
13th April 1999, issue date:
11th November 1998.
Interest rate:
6.1 per cent, yield:
6.1 per cent, basis:
30/360 = 0.
The price is calculated as follows:
=PRICEMAT( &quot; 15/02/1999 &quot; ; &quot; 13/04/1999 &quot; ; &quot; 11/11/1998 &quot; ; 0.061; 0.061; 0) returns 99.98449888.
calculating; durations
durations;calculating
DURATION function
DURATION
Calculates the number of periods required by an investment to attain the desired value.
Syntax:
DURATION(Rate; PV; FV)
Rate
is a constant.
The interest rate is to be calculated for the entire duration (duration period).
The interest rate per period is calculated by dividing the interest rate by the calculated duration.
The internal rate for an annuity is to be entered as Rate/12.
PV
is the present (current) value.
The cash value is the deposit of cash or the current cash value of an allowance in kind.
As a deposit value a positive value must be entered; the deposit must not be 0 or < 0.
FV
is the expected value.
The future value determines the desired (future) value of the deposit.
Example:
At an interest rate of 4.75%, a cash value of 25,000 currency units and a future value of 1,000,000 currency units, a duration of 79.49 payment periods is returned.
The periodic payment is the resulting quotient from the future value and the duration, in this case 1,000,000/79.49=12,850.20.
calculating;linear depreciations
depreciations;linear
linear depreciations
straight-line depreciations
SLN function
mw added one entry
SLN
Returns the straight-line depreciation of an asset for one period.
The amount of the depreciation is constant during the depreciation period.
Syntax:
SLN(Cost; Salvage; Life)
Cost
is the initial cost of an asset.
Salvage
is the value of an asset at the end of the depreciation.
Life
is the depreciation period determining the number of periods in the depreciation of the asset.
Example:
Office equipment with an initial cost of 50,000 currency units is to be depreciated over 7 years.
The value at the end of the depreciation is to be 3,500 currency units.
=SLN(50000; 3,500; 84)
= 553.57 currency units.
The periodic monthly depreciation of the office equipment is 553.57 currency units.
MDURATION function
Macauley duration
mw added one entry
MDURATION
Calculates the modified Macauley duration of a fixed interest security in years.
Syntax:
MDURATION(Settlement; Maturity; Coupon; Yield; Frequency; Basis)
Settlement
is the date of purchase of the security.
Maturity
is the date on which the security matures (expires).
Coupon
is the annual nominal rate of interest (coupon interest rate)
Yield
is the annual yield of the security.
Frequency
is the number of interest payments per year (1, 2 or 4).
Example:
A security is purchased on 01/01/2001; the maturity date is 01/01/2006.
The nominal rate of interest is 8%.
The yield is 9.0%.
Interest is paid half-yearly (frequency is 2).
Using daily balance interest calculation (basis 3) how long is the modified duration?
=MDURATION( &quot; 01/01/2001 &quot; ; &quot; 01/01/2006 &quot; ; 0.08; 0.09; 2; 3) returns 4.02 years.
calculating;net present values
net present values
NPV function
NPV
Returns the present value of an investment based on a series of periodic cash flows and a discount rate.
To obtain the net present value, subtract the cost of the project (the initial cash flow at time zero) from the returned value.
Syntax:
NPV(Rate; Value1; Value2; ...
Value30)
Rate
is the discount rate for a period.
Value1; Value2; ...
Value30
are 1 to 30 values, which represent deposits or withdrawals.
Example:
What is the net present value of periodic payments of 10, 20 and 30 currency units with a discount rate of 8.75%.
At time zero the costs were paid as 40 currency units.
=NPV(8.75%; 10; 20; 30)
= 49.43 currency units.
The net present value is the returned value minus the initial costs of 40 currency units, therefore 9.43 currency units.
calculating;nominal interest rates
nominal interest rates
NOMINAL function
mw made &quot; nominal interest rates;... &quot; a one level entry
NOMINAL
Calculates the yearly nominal interest rate, given the effective rate and the number of compounding periods per year.
Syntax:
NOMINAL(EffectiveRate; NumPerYear)
EffectiveRate
is the effective interest rate
NumPerYear
is the number of periodic interest payments per year.
Example:
What is the nominal interest per year for an effective interest rate of 13.5% if twelve payments are made per year.
=NOMINAL(13.5%; 12)
= 12.73%.
The nominal interest rate per year is 12.73%.
NOMINAL_ADD function
NOMINAL_ADD
Calculates the annual nominal rate of interest on the basis of the effective rate and the number of interest payments per annum.
Syntax:
NOMINAL_ADD(EffectiveRate; NumPerYear)
EffectiveRate
is the effective annual rate of interest.
NumPerYear
is the number of interest payments per year.
Example:
What is the nominal rate of interest for a 5.3543% effective rate of interest and quarterly payment.
=NOMINAL_ADD(5.3543%; 4)
returns 0.0525 or 5.25%.
DOLLARFR function
converting;decimal fractions, into mixed decimal fractions
mw added one entry
DOLLARFR
Converts a quotation that has been given as a decimal number into a mixed decimal fraction.
Syntax:
DOLLARFR(DecimalDollar; Fraction)
DecimalDollar
is a decimal number.
Fraction
is a whole number that is used as the denominator of the decimal fraction.
Examples:
=DOLLARFR(1.125; 16)
converts into sixteenths.
The result is 1.02 for 1 plus 2/16.
=DOLLARFR(1.125; 8)
converts into eighths.
The result is 1.1 for 1 plus 1/8.
fractions; converting
converting;decimal fractions, into decimal numbers
DOLLARDE function
mw added one entry
DOLLARDE
Converts a quotation that has been given as a decimal fraction into a decimal number.
Syntax:
DOLLARDE(FractionalDollar; Fraction)
FractionalDollar
is a number given as a decimal fraction.
Fraction
is a whole number that is used as the denominator of the decimal fraction.
Example:
=DOLLARDE(1.02; 16)
stands for 1 and 2/16.
This returns 1.125.
=DOLLARDE(1.1; 8)
stands for 1 and 1/8.
This returns 1.125.
calculating;modified internal rates of return
modified internal rates of return
MIRR function
internal rates of return;modified
mw added &quot; internal rates of return;... &quot;
MIRR
Calculates the modified internal rate of return of a series of investments.
Syntax:
MIRR(Values; Investment; ReinvestRate)
Values
corresponds to the array or the cell reference for cells whose content corresponds to the payments.
Investment
is the rate of interest of the investments (the negative values of the array)
ReinvestRate
is the rate of interest of the reinvestment (the positive values of the array)
Example:
-5
, A2 =
10
, A3 =
15
, and A4 =
8
, and an investment value of 0.5 and a reinvestment value of 0.1, the result is 94.16%.
YIELD function
rates of return;securities
yields, see also rates of return
mw added two entries
YIELD
Calculates the yield of a security.
Syntax:
YIELD(Settlement; Maturity; Rate; Price; Redemption; Frequency; Basis)
Settlement
is the date of purchase of the security.
Maturity
is the date on which the security matures (expires).
Rate
is the annual rate of interest.
Price
is the price (purchase price) of the security per 100 currency units of par value.
Redemption
is the redemption value per 100 currency units of par value.
Frequency
is the number of interest payments per year (1, 2 or 4).
Example:
A security is purchased on 15/02/1999.
It matures on 15/11/2007.
The rate of interest is 5.75%.
The price is 95.04287 currency units per 100 units of par value, the redemption value is 100 units.
Interest is paid half-yearly (frequency = 2) and the basis is 0.
How high is the yield?
=YIELD( &quot; 15/02/1999 &quot; ; &quot; 15/11/2007 &quot; ; 0.0575; 95.04287; 100; 2; 0) returns 0.065 or 6.5 per cent.
YIELDDISC function
rates of return;non-interest-bearing securities
mw added one entry
YIELDDISC
Calculates the annual yield of a non-interest-bearing security.
Syntax:
YIELDDISC(Settlement; Maturity; Price; Redemption; Basis)
Settlement
is the date of purchase of the security.
Maturity
is the date on which the security matures (expires).
Price
is the price (purchase price) of the security per 100 currency units of par value.
Redemption
is the redemption value per 100 currency units of par value.
Example:
A non-interest-bearing security is purchased on 15/02/1999.
It matures on 01/03/1999.
The price is 99.795 currency units per 100 units of par value, the redemption value is 100 units.
The basis is 2.
How high is the yield?
=YIELDDISC( &quot; 15/02/1999 &quot; ; &quot; 01/03/1999 &quot; ; 99.795; 100; 2) returns 0.052823 or 5.2823 per cent.
YIELDMAT function
rates of return;securities with interest paid on maturity
mw added one entry
YIELDMAT
Calculates the annual yield of a security, the interest of which is paid on the date of maturity.
Syntax:
YIELDMAT(Settlement; Maturity; Issue; Rate; Price; Basis)
Settlement
is the date of purchase of the security.
Maturity
is the date on which the security matures (expires).
Issue
is the date of issue of the security.
Rate
is the interest rate of the security on the issue date.
Price
is the price (purchase price) of the security per 100 currency units of par value.
Example:
A security is purchased on 15/03/1999.
It matures on 03/11/1999.
The issue date was 08/11/1998.
The rate of interest is 6.25%, the price is 100.0123 units.
The basis is 0.
How high is the yield?
=YIELDMAT( &quot; 15/03/1999 &quot; ; &quot; 03/11/1999 &quot; ; &quot; 08/11/1998 &quot; ; 0.0625; 100.0123; 0) returns 0.060954 or 6.0954 per cent.
calculating;annuities
annuities
PMT function
PMT
Returns the periodic payment for an annuity with constant interest rates.
Syntax:
PMT(Rate; NumPeriods; PV; FV; Type)
Rate
is the periodic interest rate.
NumPeriods
is the number of periods in which the annuity is paid.
PV
is the present value (cash value) in a sequence of payments.
FV
(optional) is the desired value (future value) to be reached at the end of the periodic payments.
Type
(optional) is the due date for the periodic payments.
Type = 1 is payment at the beginning and Type = 0 is payment at the end of each period.
Example:
What are the periodic payments at a yearly interest rate of 1.99% if the payment time is 3 years and the cash value is 25,000 currency units.
There are 36 months as 36 payment periods, and the interest rate per payment period is 1.99%/12.
=PMT(1.99%/12; 36; 25000)
= -715.96 currency units.
The periodic monthly payment is therefore 715.96 currency units.
TBILLEQ function
treasury bills;annual return
annual return on treasury bills
mw changed &quot; treasury bills;... &quot; and aded one entry
TBILLEQ
Calculates the annual return on a treasury bill ().
A treasury bill is purchased on the settlement date and sold at the full par value on the maturity date, that must fall within the same year.
A discount is deducted from the purchase price.
Syntax:
TBILLEQ(Settlement; Maturity; Discount)
Settlement
is the date of purchase of the security.
Maturity
is the date on which the security matures (expires).
Discount
is the percentage discount on acquisition of the security.
Example:
Settlement date:
31st March 1999, maturity date:
1st June 1999, discount:
9.14 per cent.
The return on the treasury bill corresponding to a security is worked out as follows:
=TBILLEQ( &quot; 31/03/1999 &quot; ; &quot; 01/06/1999 &quot; ; 0.0914) returns 0.094151 or 9.4151 per cent.
TBILLPRICE function
treasury bills;prices
prices;treasury bills
mw added two entries
TBILLPRICE
Calculates the price of a treasury bill per 100 currency units.
Syntax:
TBILLPRICE(Settlement; Maturity; Discount)
Settlement
is the date of purchase of the security.
Maturity
is the date on which the security matures (expires).
Discount
is the percentage discount upon acquisition of the security.
Example:
Settlement date:
31st March 1999, maturity date:
1st June 1999, discount:
9 per cent.
The price of the treasury bill is worked out as follows:
=TBILLPRICE( &quot; 31/03/1999 &quot; ; &quot; 01/06/1999 &quot; ; 0.09) returns 98.45.
TBILLYIELD function
treasury bills;rates of return
rates of return of treasury bills
mw added two entries
TBILLYIELD
Calculates the yield of a treasury bill.
Syntax:
TBILLYIELD(Settlement; Maturity; Price)
Settlement
is the date of purchase of the security.
Maturity
is the date on which the security matures (expires).
Price
is the price (purchase price) of the treasury bill per 100 currency units of par value.
Example:
Settlement date:
31st March 1999, maturity date:
1st June 1999, price:
98.45 currency units.
The yield of the treasury bill is worked out as follows:
=TBILLYIELD( &quot; 31/03/1999 &quot; ; &quot; 01/06/1999 &quot; ; 98.45) returns 0.091417 or 9.1417 per cent.
Back to Financial Functions Part One
Forwards to Financial Functions Part Three