# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 4)
This function returns an associative array of defined object properties for the specified object obj.
Note:
In versions prior to PHP 4.2.0, if the variables declared in the class of which the obj is an instance, have not been assigned a value, those will not be returned in the array.
In versions after PHP 4.2.0, the key will be assigned with a NULL value.
Example 1.
Use of get_object_vars()
?php class Point2D {var $x, $y; var $label; function Point2D($x, $y) {$this - x = $x; $this - y = $y;} function setLabel($label) {$this - label = $label;} function getPoint() {return array("x "= $this - x, "y" = $this - y, "label "= $this - label);}} / / "$label" is declared but not defined $p1 = new Point2D(1.233, 3.445); print_r(get_object_vars($p1)); $p1 - setLabel("point #1"); print_r(get_object_vars($p1));?
Array ([x] = 1.233 [y] = 3.445 [label] =) Array ([x] = 1.233 [y] = 3.445 [label] = point #1)
See also get_class_methods() and get_class_vars()!
Prev
Home
Next
get_declared_classes
Up
get_parent_class