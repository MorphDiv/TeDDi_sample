# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	GNOME
# source:	https://object.pouta.csc.fi/OPUS-GNOME/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/GNOME.php
# copyright_long:	http://opus.nlpl.eu/GNOME.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

translator-credits
Build Tools
The purpose of the build tools is to generate a document in the PDF, DVI or PS format.
Introduction
Several different tools can be used for a document compilation. There are some low-level commands, and one higher-level tool: Latexmk.
Low-level commands
Label
Command
Bibliography
Index
Compiling a LaTeX document can involve to execute several low-level commands, in a certain order and a certain number of times. Here is an example:
Using a higher-level tool such as Latexmk simplify a lot all this process, since only one command is required. Indeed, Latexmk can detect how many times the
Execute a Build Tool
There are several means to execute a build tool:
Open the
Use the buttons in the main toolbar.
Use the shortcut:
The build tool is executed on the currently opened file. If the file belongs to a
Hidden Build Tools
By default, a lot of build tools are hidden, so they can't be executed. To view the full list of build tools, activate or configure them, read the
General Configuration
To configure the build tools, go to:
You will see the list of all the default build tools, and a second list with your personal build tools. There are check buttons to enable or disable them. When a build tool is disabled, it's not possible to execute it. You can perform some actions, like moving a tool up or down, open its properties, delete or copy it, create a new one, etc.
Double-click on a build tool will open its properties.
Jobs of a Build Tool
In the properties of a build tool, the tricky part is to configure the jobs. A build tool can execute several jobs. Each job contains two pieces of information:
The command, which can use placeholders.
The post processor (see
When an error occurs during a job's execution, the execution of the build tool is aborted, so the next jobs are not launched.
Post Processors
The purpose of a post processor is to filter the command output and extract the useful information. Four post processors are available:
The output is simply not displayed.
All the output is displayed, without filter.
Filter the output of the
Used for the
Completion of LaTeX commands
The purpose is to facilitate the writing of LaTeX commands, by showing proposals.
Interactive completion
By default, when a LaTeX command is typed, proposals will be shown after two characters. This can be configured in the preferences dialog:
Manual completion
At any time, press
LaTeXila Help
Projects
When a LaTeX document is split into several *.tex files, creating a project is useful.
Manage projects
All actions related to projects are located in the
The directory where the project is located.
The main *.tex file.
As a consequence, a directory can contain only one project, which is quite logical.
Usefulness of projects
A
The
Spell Checking
The purpose is to correct spelling mistakes easily.
Use the spell checking
The spell checking can be activated or disabled via the menu:
Once the spell checking is activated, the misspelled words will be underlined in red. A right click on a misspelled word will show proposals.
To change the language, do a right click on the document.
Dictionaries

If your language is not listed when doing a right click, install a dictionary for one of the supported backends.
Document's Structure
The list of chapters, sections, sub-sections and other things like tables, figures, â€¦ of a document, to easily navigate in it.
Display the structure
The structure can be displayed in the side panel. If the side panel is hidden, go to
The structure's content is not automatically updated. That's why there is a refresh button. If text is inserted in the document, the position of an item (e.g. a section) remains correct, as far as the item is still there, and is not modified.
Actions
Some actions such as "cut", "copy" or "comment" can be performed on a structure's item. Either by a right click, or via the
TODOs and FIXMEs
It can be useful to add TODOs and FIXMEs comments in the document. They will be displayed in the structure. Example:
%TODO a remaining task
%FIXME something is broken
Forward and Backward Search
Synchronization between the document's *.tex files and the resulting PDF output, opened with the
For more information, read the
Forward Search: from .tex to PDF
From a certain position in the .tex source file, jump to the corresponding position in the PDF file.
There are different ways to do a forward search:
In the menu:
By pressing
If a document is split into several .tex files, create a
Backward Search
In

Differences Between Latexmk and Rubber

The output of Latexmk contains more information: which commands are executed, how many times, their output, and the reasons why Latexmk executes (or doesn't execute) these commands. The output of Rubber, on the other hand, doesn't contain a lot of information. When an error occurs, it can be more difficult to diagnose.
Also, Rubber filter the output of the
Latexmk is more flexible. Each low-level command can be customized, for example for adding a parameter, or use a completely other tool. This can be done both from the command line and in configuration files (see the
Last, but not least: Rubber seems to have more bugs and is less actively maintained than Latexmk.
This is the post-processor used for the
So if there is no dictionary for your language, try to know which backend is used by Enchant on your system, and install the dictionary for this backend. There are most probably packages available for your Linux distribution.
For an explanation of the option about the Latexmk post processor, see
In the
Whether the job must succeed. If this option is enabled, when an error occurs during the job execution, the next job is not executed.