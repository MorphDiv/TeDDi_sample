# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 4 = 4.0.6)
mysql_unbuffered_query() sends a SQL query query to MySQL, without fetching and buffering the result rows automatically, as mysql_query() does.
On the one hand, this saves a considerable amount of memory with SQL queries that produce large result sets.
On the other hand, you can start working on the result set immediately after the first row has been retrieved: you don 't have to wait until the complete SQL query has been performed.
When using multiple DB-connects, you have to specify the optional parameter link_identifier.
The optional result_mode parameter can be MYSQL_USE_RESULT and MYSQL_STORE_RESULT.
It defaults to MYSQL_USE_RESULT, so the result is not buffered.
See also mysql_query() for the counterpart of this behaviour.
Note:
The benefits of mysql_unbuffered_query() come at a cost:
You cannot use mysql_num_rows() on a result set returned from mysql_unbuffered_query().
You also have to fetch all result rows from an unbuffered SQL query, before you can send a new SQL query to MySQL.
See also: mysql_query().
Prev
Home
Next
mysql_thread_id
Up
Mohawk Software session handler functions