# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3, PHP 4)
This function is identical to htmlspecialchars() in all ways, except with htmlentities(), all characters which have HTML character entity equivalents are translated into these entities.
Like htmlspecialchars(), the optional second quote_style parameter lets you define what will be done with'single 'and "double "quotes.
It takes on one of three constants with the default being ENT_COMPAT:
Table 1.
Available quote_style constants
Constant Name
Description
ENT_COMPAT
Will convert double-quotes and leave single-quotes alone.
ENT_QUOTES
Will convert both double and single quotes.
ENT_NOQUOTES
Will leave both double and single quotes unconverted.
Support for the optional quote parameter was added in PHP 4.0.3.
Like htmlspecialchars(), it takes an optional third argument which defines character set used in conversion.
Support for this argument was added in PHP 4.1.0.
Presently, the ISO-8859-1 character set is used as the default.
If you' re wanting to decode instead (the reverse) you can use html_entity_decode().
See also html_entity_decode(), get_html_translation_table(), htmlspecialchars(), nl2br(), and urlencode().
Prev
Home
Next
html_entity_decode
Up
htmlspecialchars