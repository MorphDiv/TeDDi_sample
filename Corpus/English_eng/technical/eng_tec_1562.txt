# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/en_GB.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

TimeValue Function [Run-time]
/text/sbasic/shared/03030206.xhp
Sun Microsystems, Inc.
converted from old format - fpe
TimeValue function
TimeValue Function [Run-time]
Calculates a serial time value from the specified hour, minute and second (parameters passed as strings) that represents the time in a single numerical value.
This value can be used to calculate the difference between times.
Syntax:
TimeValue (Text As String)
Return value:
Date
Parameters:
Text:
Any string expression that contains the time that you want to calculate in the format &quot; HH:MM:SS &quot; .
Use the TimeValue function to convert any time into a single value, so that you can calculate time differences.
This TimeValue function returns the type Variant with VarType 7 (Date) and stores this value internally as a double-precision number in the range 0 to 0.9999999999.
As opposed to the DateSerial or the DateValue function, where serial date values result in days relative to a fixed date, you can calculate with the values that are returned by the TimeValue function, but you cannot evaluate them.
In the TimeSerial function, you can pass individual parameters (hour, minute, second) as separate numerical expressions.
For the TimeValue function, however, you can pass a string as a parameter containing the time.
Example:
Sub ExampleTimerValue
Dim daDT as Date
Dim a1, b1, c1, a2, b2, c2 as String
a1 = &quot; start time &quot;
b1 = &quot; end time &quot;
c1 = &quot; total time &quot;
a2 = &quot; 8:34 &quot;
b2 = &quot; 18:12 &quot;
daDT = TimeValue(b2) - TimeValue(a2)
c2 = a1 & &quot; : &quot; & a2 & chr(13)
c2 = c2 & b1 & &quot; : &quot; & b2 & chr(13)
c2 = c2 & c1 & &quot; : &quot; & trim(Str(Hour(daDT))) & &quot; : &quot; & trim(Str(Minute(daDT))) & &quot; : &quot; & trim(Str(Second(daDT)))
Msgbox c2
end sub