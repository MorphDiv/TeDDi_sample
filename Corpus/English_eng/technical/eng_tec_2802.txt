# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3, PHP 4)
Outputs all parameters.
echo() is not actually a function (it is a language construct) so you are not required to use parentheses with it.
In fact, if you want to pass more than one parameter to echo, you must not enclose the parameters within parentheses.
It is not possible to use echo() in a variable function context.
Example 1. echo() examples
?php echo "Hello World"; echo "This spans multiple lines.
The newlines will be output as well"; echo "This spans\nmultiple lines.
The newlines will be\noutput as well ."; echo "Escaping characters is done \"Like this\" ."; / /You can use variables inside of an echo statement $foo = "foobar"; $bar = "barbaz"; echo "foo is $foo"; / / foo is foobar / / Using single quotes will print the variable name, not the value echo'foo is $foo'; / / foo is $foo / / If you are not using any other characters, you can just echo variables echo $foo; / / foobar echo $foo,$bar; / / foobarbarbaz echo END This uses the "here document "syntax to output multiple lines with $variable interpolation.
Note that the here document terminator must appear on a line with just a semicolon no extra whitespace!
END; / / Because echo is not a function, following code is invalid. ($some_var)? echo('true'): echo('false'); / / However, the following examples will work: ($some_var)? print('true'): print('false'); / / print is a function echo $some_var? 'true': 'false'; / / changing the statement around?
echo() also has a shortcut syntax, where you can immediately follow the opening tag with an equals sign.
I have ?=$foo? foo.
Note:
This short syntax only works with the short_open_tag configuration setting enabled.
See also print(), printf(), and flush().
Prev
Home
Next
crypt
Up
explode