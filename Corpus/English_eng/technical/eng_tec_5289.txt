# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Appendix C.
Migrating from PHP / FI 2 to PHP 3
Next
The PHP 3.0 Apache module no longer supports Apache versions prior to 1.2.
Apache 1.2 or later is required.
echo() no longer supports a format string.
Use the printf() function instead.
In PHP / FI 2.0, an implementation side-effect caused $foo[ 0] to have the same effect as $foo.
This is not true for PHP 3.0.
Reading arrays with $array[] is no longer supported
That is, you cannot traverse an array by having a loop that does $data = $array[].
Use current() and next() instead.
Also, $array1[] = $array2 does not append the values of $array2 to $array1, but appends $array2 as the last entry of $array1.
See also multidimensional array support.
"+" is no longer overloaded as a concatenation operator for strings, instead it converts it's arguments to numbers and performs numeric addition.
Use "." instead.
Example C-11.
Migration from 2.0: concatenation for strings
echo "1" + "1";
In PHP 2.0 this would echo 11, in PHP 3.0 it would echo 2.
Instead use:
echo "1" ."1";
$a = 1; $b = 1; echo $a + $b;
This would echo 2 in both PHP 2.0 and 3.0.
$a = 1; $b = 1; echo $a.$b;
Prev
Home
Next
Function TRUE / FALSE return values
Up
Debugging PHP