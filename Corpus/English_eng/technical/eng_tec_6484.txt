# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

The & kguitar; Handbook
Mikhail Yakshin
greycat@users. sourceforge. net
ROLES_OF_TRANSLATORS
Mikhail Yakshin
& kguitar; is KDE guitarist tabulature environment.
KDE
kguitar
guitar
tabulature
tab
chord
editor
MIDI
MusicXML
Introduction
& kguitar; is basically a guitar tabulature editor for K Desktop Environment. It's much more than just a tab editor. It's features are:
Free GPLed program;
K Desktop Environment GUI;
Powerful and convenient tabulature editing, including many effects and classical note score editing for classic instrument players;
Full and very customizable MIDI to tabulature import and export;
Support of extra data formats, such as ASCII tabulatures, MusicXML or popular programs' format, such as Guitar Pro's or TablEdit;
Chord fingering construction tools - chord finder & chord analyzer;
Many additional facilities to ease tabbing work, including rhythm and lead construction tools;
Highly customizable to suit a lot of possible instruments (not only 6-stringed guitars, and even not only guitars), including drum tracks, lyrics and other MIDI events.
You may always report bugs to & kguitar; developers, using either SourceForge. net bug tracking services, complaining in one of & kguitar; maillists on SourceForge, or just directly mailing one of the developers.
Using & kguitar;
& kguitar; is a pretty complex software, but if you'll ever used any musical notation editors, it wo n't be hard for you to learn & kguitar;.
What is a tabulature?
If you're a professional guitarist who uses tabulatures in everyday's work, then you may skip this section and head straight to tabulature editing. However, if you've never used tabulatures before, you should read this section.
Tabulatures are pretty ancient form of writing down musical patterns. The name & quot; tabulaturequot; originates from ancient latin & quot; tabulaquot;, a word that means & quot; a board for writing down thingsquot; (that's why the right form of this word is tabulature, not tablature, as most of modern sources think).
Basically, tabulature is a form of music notation for a specific instrument which tells the performer not what to play generally, but how to play it just right. That's the biggest difference between standard note scores and tabulatures. In all other aspects, they're more or less compatible and comparable.
In particular, when tabulature is written down for guitar or similar fretted instruments (we'll refer to all them as & quot; guitarquot; and we'll refer to a human being that plays these instruments as & quot; guitaristsquot; below), tabulature contains data on what fret should be touched with one hand and what strings should be picked with the other.
Basic tabulature editing
Tabulature editor is a central part of & kguitar; application and everything else seems to revolve around it.
A screenshot of song view
Screenshot
Song view consists of several parts: top part with the tabulature editor itself, and the bottom part with a track manager and editor. Track manager allows you to create multi-track songs and its track editing functions would be explained in detail later and this section will concentrate on features of tabulature editor.
In & kguitar; tabulature editor, the most basic unit of a song is a single column. Column is a group of notes (or rests) that begin at the same time (well, almost, there's an exception to this rule if tabulature effects are used) and have same duration (there're also some exceptions). Such notes (and corresponding fret numbers for them) are vertically aligned and form a single column of tabulature.
Your cursor is shown as an inverted square in tabulature editor. You can move it inside tabulature column (using Up Arrow and Down Arrow keys) and put fret number in the column with digit keys 0 - 9. To put a two-digit fret number (for example, 12), just press 1 and then press 2 - & kguitar; will detect this and you'll get that 12 eventually. Use Delete to delete entered fret numbers and make rest instead of it in this place on selected string.
One of the very convenient features of & kguitar; is easy transposing. For example, if you think that playing a note on 2nd string is not convenient and 3rd string will be a better choice, just use this function to automatically & quot; pullquot; fret number from 2nd string to the 3rd and it will get updated accordingly to maintain the original note pitch. Use key combos Ctrl; Up Arrow and Ctrl; Down Arrow to shift fret numbers like that while moving cursor up or down a string.
Note durations
When transcribing a piece of music, it's essential to be able to specify durations of notes, i. e. intervals of time they sound.
In & kguitar; every column has a duration (that's one of the major advantages of & kguitar; over ASCII tabulatures, which provide no rhythmic information), which are notated in normal musical form relative to current tempo, i. e. 1/ 1, 1/ 2, 1/ 4, etc. You can see current column's duration as a shape of downward stem and change either using toolbar's duration buttons or with keys - and = (+) to halve or double current duration accordingly.
You can also use so-called & quot; dottedquot; note durations (when note durations have extra one half of original duration added, thus, for example, for 1/ 2, making 1/ 2+1/ 4=3/ 4) and triplets (when note durations are 2/ 3 from original, thus it's possible to fit three triplet columns where there were only two original ones). Use key. to toggle dot status of a note and use t to toggle triplet status. Triplets would be automatically shown in groups of 3 when you'll enter sufficient number of them.
Though such column-oriented approach was critiqued a lot because of it's mythical inflexibility, we advocate for such approache because of it's natural simplicity in most of frequent situations. Later in this documentation, we'll demonstrate how it can be used to transcribe even the most complex musical figures.
Bars, beats and time signature
Most often, music fits some sort of rhythmic mode. Thus, for convenience, similar musical phrases that are marked by beats are separated with bars in musical score. Bars are supported in & kguitar; automatically. Just fit enough note durations to fill one bar and & kguitar; will automatically goes to the next. If your automatic barring will screw (if you'll delete some column in the middle of the song, for example), use rearrange bars function, available via Shift; A Track
Quantity of beats per bar and value of one beat is called a time signature. & kguitar; lets you set time signature using Shift; t Track. In the dialog, you'll be presented with an option either to set time signature for current bar only or to set it from current bar to the end of song. If you want to reset the time signature for the whole song, remember to go to the very first bar and use this command with & quot; to the endquot; checkbox enabled.
Tabulature Effects
Tabulature can contain various guitar-specific (and not only guitar) effects. All these things have special symbols assigned to them. You can add effects via either pressing a hotkey or clicking on a toolbar item.
Supported effects so far:
h - Natural harmonic
r - Artificial Harmonic
p - Legato (hammer on/ pull off)
Using Clipboard
You can use all familiar clipboard operations in & kguitar; -edited tabulature.
Chord Constructor
TODO
Rhythm Constructor
Melody Editor
Melody editor is a tool that helps entering tabulature with mouse. It somewhat loosely resembles Cakewalk's tab staff fretboard or TablEdit's fretboard, but much more useful and flexible. Melody editor lets you easily and quickly enter harmonized solos, fills and etc, by just clicking every note on the fretboard in order of playing.
Basic usage
Editor looks like fretboard photo from the same point of view as you read tabulature from. By default, you can click any place on that fretboard and some sort of action will be executes, depending on what button you have pressed:
Left mouse button - set note on clicked fret and string.
Middle mouse button - set 022-type power chord on clicked fret and string.
Right mouse button - set note on clicked fret and string, and on release of mouse button, track cursor advances to the next column - ideal for entering mono-voiced soloes.
Setting actions
Customizing Melody Editor
Fully customizable, now supports several inlay types. Work in progress, so more to come. TODO
Advanced Transcribing
Column-based approach to tabulature transcribing may seem inflexible for most complex pieces of music, but it's not true. Let's demonstrate a few examples of some intonational complexity based of note durations.
The main principle one should stick to while using column-based approach is simple: the tabulature is about how music should be played, not what generally should sound. This rigidly fixes tabulature on particular instrument, but, nowadays, converting from one type of tabulature to another is automated task you can delegate to your computer, rather that comprehending it yourself.
Example 1: Mixed duration notes
We need to transcribe two notes that start at the same time, but first one sounds for 1/ 4 or a beat and second one lasts for 1/ 2. This is how it looks in classic note staff (screenshot of a Rosegarden sequencer's note editor):
Mixed duration notes on a classic note staff
It seems to be impossible to do that it in column-based tabulature, as all notes stacked in a column seem to have same duration.
Remembering the main principle mentioned above, let's think about how such a figure would be played, for example, on a guitar. Naturally, strings are all the same and we can assume here that they sound infinitely long if not interrupted. How can a guitarist interrupt string sound? There are three possibilities:
He can fret some sort of other note on the same string, thus ending the tone of previous one;
He can mute the string with his finger or palm with audible muting click (so called & quot; dead notequot;);
He can just mute the string with his finger or palm silently;
You can implement it all three ways in KGuitar tabulatures. Let's see how to do that. In all cases, we'll use note & quot; let ringquot; tool to transcribe long notes. Let ring is a property of every single fret number in a tab. Use the & quot; let ringquot; tool to toggle that property: either the fret will let ring or not.
Ending sound with some other note
Ending sound with some other note
This is how it will look like. Fifth string "2" fret number has a let ring option, so it will ring for as long as bar lasts or anything will interrupt it. Note that horizontal line that normally represent a string became an arrow that represents how long the note sounds - note starts on the digit and ends on the arrowhead, i. e. 1/ 4 (full length of bar). Fourth string "2" sounds only 1/ 8 as it's superseeded by "5", picked on a same string.
In complex cases, "2" on fourth string can have let ring options turned on too to achieve even more sophisticated timings.
Ending sound with audible muting (dead note)
Ending sound with audible muting (dead note)
This one is just like the first one, but with real note ("5") replaced to dead note ("X"). Dead note means that guitarist will mute the string in some sort of way (for example, with a direct pick strike) that it will produce a loud audible click and stop sounding. Transcribing technique used is just the same.
Muting string silently
It was mentioned above that "let ring" options is toggleable for every fret number in the track. That's more than it. You can turn "let ring" on for empty space (i. e. nothing played) to produce some sort of anti-"let ring ". Such empty space with anti-"let ring" will stop previously ringing string.
Muting string silently
This technique is demonstrated on this tabulature. Both 2 notes from the beginning have a "let ring" on them. However, in second column on the fourth string there is empty space with anti-"let ring "that signals guitarist to mute the string without making any more noises. Fifth string continues to ring to the end of bar. Arrows show for how long each note will sound.
Track Editing
The Squiggle Tool Squiggle is used to draw squiggly lines all over the & kguitar; main window. It's not a bug, it's a feature!
Supported Formats
& kguitar; supports multiple tabulature storage formats and various options for importing/ exporting. Do n't seek a separate import/ export menu items, all such operations are done from normal File Open and File Save menus - just select the file format you want. If conversion requires special options, you'll be presented with a separate conversion dialog. This is exactly the same dialog as the one that appears in & kguitar; settings menu (Settings Configure KGuitar). If you do n't want this dialog to appear every time and just want to accept default values (which are saved, by the way), you can uncheck the Show this dialog in conversion process. Then, if you'll ever need to change it, it will be accessible in Settings Configure KGuitar dialog.
KG format
KG is a native & kguitar; format that saves absolutely anything you can have in the song. Nothing much to tell about. It's a best format if you just want to use & kguitar; and nothing else.
MID format
MID (MIDI file) format is currently supported for export only. MIDI file is a file that basically contains MIDI events, i. e. directions for a synthesizer on which notes to play, how long they should sound, what effects and instruments should be used, etc.
Exporting to MIDI is an excellent opportunity if you want to show the tabulature you've created in its sounding form to anyone. Also every computer now with a sound card has a MIDI synthesizer (or at least there's a couple of software MIDI synths available), so good chances are that most of the people would be able to listen to your transcribed song. However, keep in mind that MIDI does n't contain tabulature information at all, i. e. no instrument tuning information are stored, no fret numbers, nothing like that. Effects and various guitar techniques are only approximated via special controllers to sound similar to natural performance.
& kguitar; is able only to export MIDI files for now, but MIDI import with automatic tabulature generation is planned to be added.
MusicXML format
This is a relatively new format, specified by Recordare and encouraged to be used in all music-related programs. This format is based on widely acclaimed XML and seems to be a new standard for music scores interchange.
MusicXML is recommended if you want to share your tabulature with the rest of the world. Most of the guitar-specific tabulature information is preserved in MusicXML. & kguitar; is able to both import and export MusicXML.
ASCII TAB format
ASCII TAB is the most widely used tabulature format in the Internet, there are numerous archives that host tabulatures in this format. It consists of a plain text file in which the tabulature is depicted using staves (with minus characters), numbers (digit characters) and effects (with various letters). Among them there could be occasional texts, playing directions, etc. There's no single standard for ASCII tabs, so sometimes it may be a hell amount of work to comprehend a screwed tabulature. Lots of information is often missing from ASCII tabs, most often - the rhythm and note durations information, that makes plainly impossible to play that tabulature if you've never heard the song before (and even if you did, it is n't always very clear how to do it).
& kguitar; now supports only exporting of ASCII tabs. However, if you're going to distribute your created tabulature, we recommend you not to do it in ASCII TAB legacy format. Due to lots of unsaved information, a load of your hard work will be just lost without any traces. Use MusicXML for tabulature distribution, if at all possible.
Command Reference
The main & kguitar; window
The File Menu
Ctrl; n File New
Creates a new document
Ctrl; s File Save
Saves the document
Ctrl; q File Quit
Quits & kguitar;
Credits and License
KGuitar team includes developers:
Mikhail Yakshin AKA GreyCat greycat@users. sourceforge. net
Alexander Brand AKA alinx alinx@users. sourceforge. net
Leon Vinken lvinken@users. sourceforge. net
Matt Malone Marlboro@users. sourceforge. net
Documentation copyright 2002 Mikhail Yakshin greycat@users. sourceforge. net
Translation is done by:
Wilane Ousmane wilane@users. sourceforge. net
Harri Haataja realblades@users. sourceforge. net
Stephan Borchert sborchert@users. sourceforge. net
Richard G. Roberto robertor@users. sourceforge. net
Riccardo & quot; FeACquot; Vitelli feac@users. sourceforge. net
& underFDL; & underGPL;
Installation
How to obtain & kguitar;
Latest version of & kguitar;, as well as the latest development news and information can always be obtained from kguitar; 's homepage. Or look for kguitar or similar package in your favorite distribution.
Requirements
In order to successfully use & kguitar;, you need KDE 3. x. TSE3 (Trax Sequencer Engine 3) library is very recommended for all MIDI-related capabilities of & kguitar;. There are no special hardware requirements, though having MIDI synthesizer (either full-blown external keyboard or an internal one, integrated on your sound-card) is a big plus that will let you use all MIDI features.
TSE3 library can be found at TSE3 home page.
Compilation and Installation
In order to compile and install & kguitar; on your system, type the following in the base directory of the & kguitar; distribution:
%. / configure% make% make install
Since & kguitar; uses autoconf and automake you should have not trouble compiling it. Should you run into problems please report them to & kguitar; team.
Questions and Answers
& reporting. bugs; & updating. documentation;
Configuration