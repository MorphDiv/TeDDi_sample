# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
PHP supports eight primitive types.
Four scalar types:
boolean
integer
floating-point number (float)
string
array
object
resource
NULL
mixed
number
callback
The type of a variable is usually not set by the programmer; rather, it is decided at runtime by PHP depending on the context in which that variable is used.
Note:
If you want to check out the type and value of a certain expression, use var_dump().
Note:
If you simply want a human-readable representation of the type for debugging, use gettype().
To check for a certain type, do not use gettype(), but use the is_ type functions.
Some examples:
?php $bool = TRUE; / / a boolean $str = "foo"; / / a string $int = 12; / / an integer echo gettype($bool); / / prints out "boolean "echo gettype($str); / / prints out "string" / / If this is an integer, increment it by four if (is_int($int)) {$int += 4;} / / If $bool is a string, print it out / / (does not print out anything) if (is_string($bool)) {echo "String: $bool";}?
If you would like to force a variable to be converted to a certain type, you may either cast the variable or use the settype() function on it.
Note that a variable may be evaluated with different values in certain situations, depending on what type it is at the time.
For more information, see the section on Type Juggling.
Prev
Home
Next
Comments
Up
Booleans