# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3, PHP 4)
Returns the error text from the last MySQL function, or '' (the empty string) if no error occurred.
Errors coming back from the MySQL database backend no longer issue warnings.
Instead, use mysql_error() to retrieve the error text.
Note that this function only returns the error text from the most recently executed MySQL function (not including mysql_error() and mysql_errno()), so if you want to use it, make sure you check the value before calling another MySQL function.
Example 1. mysql_error Example
?php mysql_connect( "localhost", "mysql_user", "mysql_password"); mysql_select_db("nonexistentdb"); echo mysql_errno(). ":". mysql_error(). "\n"; mysql_select_db("kossu"); mysql_query("SELECT * FROM nonexistenttable"); echo mysql_errno(). ":". mysql_error(). "\n";?
The above example would produce the following output:
1049:
Unknown database 'nonexistentdb' 1146:
Table 'kossu.nonexistenttable' doesn't exist
Note:
If the optional argument is specified the given link is used to retrieve the error message.
If not, the last opened link is used.
See also: mysql_errno()
Prev
Home
Next
mysql_errno
Up
mysql_escape_string