# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 4 = 4.0.3)
pg_put_line() sends a NULL-terminated string to the PostgreSQL backend server.
This is useful for example for very high-speed inserting of data into a table, initiated by starting a PostgreSQL copy-operation.
That final NULL-character is added automatically.
Returns TRUE on success or FALSE on failure.
Note:
The application must explicitly send the two characters "\." on the last line to indicate to the backend that it has finished sending its data.
See also pg_end_copy().
Example 1.
High-speed insertion of data into a table
?php $conn = pg_pconnect ("dbname=foo"); pg_query($conn, "create table bar (a int4, b char(16), d float8)"); pg_query($conn, "copy bar from stdin"); pg_put_line($conn, "3 hello world 4.5\n"); pg_put_line($conn, "4 goodbye world 7.11\n"); pg_put_line($conn, "\\.\n"); pg_end_copy($conn);?
Prev
Home
Next
pg_port
Up
pg_query