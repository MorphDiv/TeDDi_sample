# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	GNOME
# source:	https://object.pouta.csc.fi/OPUS-GNOME/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/GNOME.php
# copyright_long:	http://opus.nlpl.eu/GNOME.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Shaun McCance
shaunm@gnome.org
2008-2009
Create a multiple-page document in only ten minutes.
Ten Minute Tour
shaunm
This is draft material. I'm not happy with the tone yet.
In this page, we will present how to create a simple multiple-page Mallard document. We will create a document for the fictitious
A Mallard document is composed of multiple independent pages.
We can begin making a Mallard document by writing a front page for our document. Generally, the front page of any document will be a guide page, as its purpose is to help users navigate to other content. In Mallard, the front page of any document is named
index.page
This simple example is a valid Mallard guide page. Taken alone, it is also a valid Mallard document, although it's rather useless. We can add another page to the document by creating a new page file.
planting.page
Notice that we have set the
Explain the linking and introduce the next example.
Fill in more content.
2009
Complete specification of the Mallard XML vocabulary.
Language Specification
Add some intro text
The guiding principles behind the design of Mallard.
Design Principles
Add intro content
Add principles: pluggability, implementation speed, l10n, digestible info
Principles for the Reader
For the Reader
Readers are the ultimate arbiters of the quality of a documentation system. The best efforts of the writers and hackers are wasted if the documention doesn't help the reader to find the information she needs quickly. The needs of the reader trump all other requirements.
Principles for the Writer
For the Writer
Add
Principles for the Hacker
For the Hacker
Avoid forcing writers to write the same thing twice
Reduce Redundancy
Provide just enough markup to mark up what's important
Just Enough Markup
Ensure the reader doesn't get lost in a link swarm
Guide the Reader
TODO
Rows and Row Groups
mal_table_tr = element tr {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
Table Cells
mal_table_td = element td {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
 attribute rowspan { text } ?,
 attribute colspan { text } ?,
Tables
mal_table = element table {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
 attribute frame {
 "all" | "none" |
 list { ("top" | "bottom" | "left" | "right") * }
 } ?,
 attribute rules {
 "all" | "groups" | "none" |
 list { ("rows" | "rowgroups" | "cols" | "colgroups") * }
 } ?,
 attribute shade {
 "all" | "groups" | "none" |
 list { ("rows" | "rowgroups" | "cols" | "colgroups") * }
 } ?,
Content
Attributes
Examples
The
Place rules between each row:
Mallard
Anas platyrhynchos
56-65 cm
900-1200 g
Eurasian Wigeon
Anas penelope
45-50 cm
680 g
Common Teal
Anas crecca
34-43 cm
360 g
Northern Pintail
Anas acuta
59-76 cm
450-1360 g
Place rules between each colum:
Place rules between each row group:
Place rules between each column group:
The
Shade alternating rows:
Shade alternating columns:
Shade alternating row groups:
Shade alternating column groups:
Design Notes
Comparison to HTML
Comparison to DocBook
Columns and Column Groups
mal_table_col = element col {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *
}
mal_table_colgroup = element colgroup {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,

 mal_table_col *
}
Break up pages into logical chunks to help readers find information quickly.
Sections
mal_section = element section {
 attribute id { xsd:ID },
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
A section is a prominent logical part of a page or another section. Breaking up material into sections can help readers find information more quickly. In Mallard, sections can take part in
Notes
The
The
The
The
The
Processing Expectations
Each section is displayed as a block. The title of a section is displayed prominently, followed by any child block content, and finally by each child section. Note that automatic links, style hints, or other special features may insert material or change the way pages are displayed. Sections should be clearly separated from their surrounding content to make the beginning and ending of each section obvious. The depth of each section should be clear, although this may not be feasible for deeply nested sections.
Sections may have links associated with them. All sections should have guide links and see also links displayed when applicable. See
Individual tutorials, overviews, references, and navigational guides.
Pages
namespace local = ""
default namespace mal = "http://projectmallard.org/1.0/"
start = mal_page
mal_page = element page {
 attribute id { xsd:ID },
 attribute type { "guide" | "topic"} ?,
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
The
The
The
The
The
The
Guide Pages
Guide pages have the
Guide pages have links automatically inserted into their content based on topic links within their own
Guides also have see also links generated automatically. See
Generally, guide pages will contain some introductory content to help readers understand the topics being presented. Introductory content should be short and concise.
Topic Pages
Topic pages have the
Topic pages have links automatically inserted to all guides which link to them. Topic pages can contain sections to help organize material and present finer-grained chunks of information to the reader. Each section in a topic page has automatic guide links inserted as well. See
Topics also have see also links generated automatically. See
In on-screen media, a
The
The title of a page is displayed prominently at the top, followed by any child block content, and finally by each child section. Note that automatic links, style hints, or other special features may insert material or change the way pages are displayed.
2007-2009
Mark up placeholder text that should be replaced by the user.
Variable Text
mal_inline_var = element var {
Use the
The
The
The
The
See
Variable text is typically displayed in an italic or oblique font. When used inside a fixed-width element such as
Comparison to Other Formats
The
Mark up general identifiers found on computer systems.
System Items
mal_inline_sys = element sys {
Use the
The
The
The
The
Use
The Linux kernel is hosted on
System items are displayed in a fixed-width font. Fixed-width fonts tend to have more distinction between visually similar characters. This is particularly important in system items, since letters often appear without the context of a known word that helps make them discernable in normal prose.
The
A generic inline element that can be used for semantic, localization, and styling purpose.
Spans
mal_inline_span = element span {
Use the
The
The
The
The
Use
This
No particular special rendering is required for
The
Rich semantic elements for marking up inline content.
Inline Elements
mal_inline = {
Mallard provides a small but rich set of semantic inline elements. The elements provided are culled from first-hand experience with software documentation and other document formats. The inline elements defined in this specification will serve most software documentation writers' needs well.
Authors, editors, or other content producers sometimes need to supply richer information in their documents. While this information may not be conveyed by display tools, it may be used for various internal tracking purposes. Mallard allows elements to be extended with attributes from external namespaces. See
Furthermore, Mallard allows elements from external namespaces to be used in any inline context. See
Elements
Inline Processing Instructions
Inline elements occur within block elements or other inline elements. Mallard never allows block elements within inline elements. Inline elements should never introduce a line break in the rendered output.
Different inline elements may introduce different styling effects, such as font variations, text and background colors, and backgrounds. Generally, if a styling effect is set for a particular element, it is in effect for all descendant elements, unless explicitly overridden.
Mallard allows elements from external namespaces to be used in any inline context. Processing tools may have special behavior for particular elements they understand. Otherwise, an unknown inline element should be processed as if it were replaced by its child content.
Mark up the output from a computer program.
Computer Output
mal_inline_output = element output {
Use the
You can use the
The
The
The
Typical values for the
output
Standard output from a running program
error
Standard error from a running program
prompt
The command prompt for an interactive shell
The
The
Use
The output of
Use
$
ls mal_inline_output.xml
mal_inline_output.xml
Use
ls mal_inline_computeroutput.xml
ls: mal_inline_computerouput.xml: No such file or directory
Computer output is displayed in a fixed-width or wide font. Fixed-width fonts tend to have more distinction between visually similar characters. A border or background color may be used to make the beginning and end of the output clear.
The
@@image: 'figures/mallard.png'; md5=cad876c6dcbc63f3d050754f7e5ee7b1
Insert an image, video, or other multimedia object.
Inline Multimedia Objects
mal_inline_media = element media {
Use the
The
The
The
The
The
The
Use
Drake, the Mallard mascot
When a
The
Some display tools will not be able to display all types of objects. For example, a printed document will not be able to display video or play back audio. Even when a display tool can display the type of object, it may not be able to work with the given MIME type for technical or other reasons.
When a display tool cannot display a
In some display media, multimedia objects can have alternate text. This may be displayed when a user hovers over the object, or it may be provided to assistive technologies. When displaying in such a medium, display tools should extract the text value of a
The
Link to other pages, sections, or web pages.
Hyperlinks
mal_inline_link = element link {
 ( attribute xref { text } |
 attribute href { text } |
 ( attribute xref { text }, attribute href { text } )
 ),
 attribute role { text } ?,
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
Use the
The
For links within the same document, content can be automatically generated.
The
The
The
The
The
Link to another page in the same document:
See
Link to a section in the same page:
See
Link to a section in another page:
See
Link to an external resource:
See the
A
The target of
If the
If the
If the
Otherwise, if that page or section has an
Otherwise, the contents of the primary title of that page page or section are used.
Otherwise, if the
Otherwise, the link target is used as text content.
The
DocBook provides the
&gt;2008-2009
Mark up a key combination or sequence.
Key Sequences
mal_inline_keyseq = element keyseq {
 attribute style { xsd:NMTOKENS } ?,
 attribute type { "combo" | "sequence" } ?,
 attribute * - (mal:* | local:*) { text } *,

 mixed {
 (
Use the
The
The
The
The
Use
Press
Use
Press
Use

Use nested
Press
Since classes of keys and mouse actions are written without surrounding markup, you can't have two consecutive key classes or mouse actions. You can overcome this limitation by using nested singleton
There are various ways to modify drag behavior by using
Each of the child
Child
The
Mark up a key to be pressed on the user's keyboard.
Key Strokes
mal_inline_key = element key {
Use the
Do not use
Do not use
The
The
The
The
The
Use
Press
Use
Press
Use
Press the
No particular special rendering is required for
The
Mark up text the user should input into a computer program.
User Input
mal_inline_input = element input {
Use the
The
The
The
The
The
Use
Type
Use
User input is displayed in a fixed-width or wide font. Fixed-width fonts tend to have more distinction between visually similar characters. A border or background color may be used to make the beginning and end of the intput clear.
The
Mark up a sequence of interface controls to navigate.
GUI Sequences
mal_inline_guiseq = element guiseq {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,

 mixed {
Use the
The
The
The
Use
Select
Each of the child
Child
The
Mark up control labels from a graphical user interface.
GUI Labels
mal_inline_gui = element gui {
Use the
The
The
The
The
Typical style hints include:
button
The text of a button
checkbox
The label for a check box
group
The label for a group of controls
input
The label for any text entry control
menu
The name of a menu
menuitem
The name of an item in a menu
radiobutton
The label for a radio button
tab
The label on a tab
The
Use
Click the
Use
The
No particular special rendering is required for
In certain environments, interface labels may be decorated with an icon or other effect based on the
The
Mark up the name of a file or directory.
Filenames
mal_inline_file = element file {
Use the
The
The
The
The
Filenames should be displayed in a fixed-width or wide font. Fixed-width fonts tend to have more distinction between visually similar characters. This is particularly important in filenames, since letters often appear without the context of a known word that helps make them discernable in normal prose.
The
Emphasize important text.
Emphasis
mal_inline_em = element em {
Use the
The
The
The
The
Use
You should
Use
Note that
Emphasized text is traditionally presented in an italic or oblique font. Italic and oblique fonts stress a portion of text without making it stand out. By contrast, bold text tends to draw the eye, which can be distracting when reading long passages of text. In scripts without a distinction between roman and italic type styles, it may still be possible to use an oblique font or some other font variation. Bold text may be used if necessary.
Underlining should be avoided completely, since it hurts the legibility of the text. This problem is especially pronounced in scripts which place diacritical marks below the text. In these scripts, underlining can render the text completely illegible.
The
Mark up code from a programming, markup, or other machine-readable format.
Code Snippets
mal_inline_code = element code {
Use the
You can use the
Use the
The
The
The
The
The
The
Use
Use
Use
To create a new button with a label, use
Link to a web page directly with a
Use
Code snippets are displayed in a fixed-width font. This mimics the look of a typical environment where code is typed. More importantly, fixed-width fonts tend to have more distinction between visually similar characters. This is particularly important in code, since letters often appear without the context of a known word that helps make them discernable in normal prose.
For particularly long code snippets, display tools may use a background color or border to make the beginning and end clear, although authors should prefer
The
Mark up a command to be entered at an interactive shell.
Commands
mal_inline_cmd = element cmd {
Use the
You may use the
Use the
The
The
The
Typical values for the
application/x-sh
Command to execute with the Bourne shell
application/x-csh
Command to execute with the C shell
The
Use
To start
Use
To view a file in
Use
The
Commands are displayed in a fixed-width font. This mimics the look of a typical environment where commands are executed. More importantly, fixed-width fonts tend to have more distinction between visually similar characters. This is particularly important in commands, since letters often appear without the context of a known word that helps make them discernable in normal prose.
Commands in documentation are often provided with options to illustrate how to use them to a particular effect. This can make it difficult to find the end of the command quickly. Surrounding text content, especially punctuation, can sometimes be confused for part of the command. For this reason, it is recommended that commands be displayed with a border or background color.
The
In DocBook, the
See
Mark up the human-readable name of an application or window.
Application Names
mal_inline_app = element app {
Use the
The
The
The
The
Use
Use
Use the
Application names are usually nouns, and are often common words or phrases that are indicative of their functionality. Frequently, they are simply the name of what the application is. In English and many other languages, the use of an application name in a sentence may sound like the author has simply mistakenly omitted an article, if the application name is not understood to be a title.
For example, the calculator application that comes with Gnome is called
For this reason, it is recommended that application names marked with the
The
FIXME
Copyright Years
mal_info_years = element years {
 attribute * - (mal:* | local:*) { text } *,
Use the
The
The
The
See the processing expectations for the
The
Provide alternate titles for automatic link text and sorting.
Informational Tiltes
mal_info_title = element title {
 attribute type { xsd:NMTOKEN },
 attribute role { xsd:NMTOKEN } ?,
 attribute * - (mal:* | local:*) { text } *,
Use the
The
The
The
"link"
specifies alternate link text; see
"sort"
specifies a sort key; see
The
The
Primary Titles
The
Link Titles
Pages and sections can have multiple link titles. These are used as alternate content for automatic link text. When automatic text must be generated for a
You can use the
Sort Titles
Sort titles allow you to specify alternate text to be used when sorting the page or section. Certain automatic link sections will sort the nodes they link to. When this happens, providing a sort title allows you to control how the node is collated. This is useful for excluding leading articles such as “an” and “the”.
Informational titles are not displayed directly, although they will affect the output of any material which links to the given page or section.
The content model of the
Record revision numbers, dates, and statuses.
Version Information
mal_info_revision = element revision {
 attribute version { text } ?,
 attribute docversion { text } ?,
 attribute pkgversion { text } ?,
 attribute date { xsd:date } ?,
 attribute status {
 "stub" | "incomplete" | "draft" | "outdated" |
 "review" | "candidate" | "final" } ?,
 attribute * - (mal:* | local:*) { text } *,
Use the
You can use the
The
The
The
The
The
The
The
"stub"
contains little to no real content
"incomplete"
outline of all information, but lacking content
"draft"
all content available, but unpolished
"outdated"
was once complete or nearly complete, but needs to be revised to reflect changes
"review"
ready to be reviewed by editors
"candidate"
reviewed and awaiting a final approval
"final"
approved and ready for publication or distribution
The
As an informational element, the
When a
The
Informational Elements
mal_info = element info {
 attribute * - (mal:* | local:*) { text } *,

 (
Additional Informational Elements
Additional Elements
Names
mal_info_name = element name {
 attribute * - (mal:* | local:*) { text } *,
Use the
The
The
The
The
mal_info_link = element link {
 attribute type { "guide" | "topic" | "seealso" },
 attribute xref { text },
 attribute weight { text } ?
}
Provide information about the licensing terms of the material.
License Information
mal_info_license = element license {
 attribute href { text } ?,
 attribute * - (mal:* | local:*) { text } *,
The
The
The
The
The
The
There is no requirement that the URI
DocBook contains the more general-purpose
Email Addresses
mal_info_email = element email {
 attribute * - (mal:* | local:*) { text } *,
Use the
The
The
The
The
Provide a short description of a page or section.
Page Descriptions
mal_info_desc = element desc {
 attribute * - (mal:* | local:*) { text } *,
The
The
The
The
The
The
2008
Give credit where credit is due.
Credits
mal_info_credit = element credit {
 attribute type { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,

 (
Use the
The
The
The optional
"author"
somebody responsible for writing content
"editor"
somebody who has provided reviews or editorial corrections
"copyright"
a person or entity which holds copyright on the work
"maintainer"
the person or entity currently responsible for the work
"collaborator"
somebody who has provided extensive rough information
"translator"
somebody who has translated the work into another language
"publisher"
a person or entity who distributes formatted copies
The
There are no specific processing expectations for the
When processing the children of a
The
In DocBook, certain credit elements have highly structured content, whereas others allow simple inline text. In Mallard, all credits use simple structured content. While Mallard does not provide child elements for everything that can be recorded in DocBook, elements from external namespaces may be used for any additional information that is needed.
The
Use elements and attributes from other namespaces in Mallard documents.
External Namespaces
Add content
mal_external = element * - (mal:* | local:*) {
 attribute * { text } *,
 mal_anything *
}
mal_anything = element * {
 attribute * { text } *,
 mal_anything *
}
External Namespace Attributes
All elements in Mallard can have attributes from external namespaces. This can be used to clarify the meaning of an element in a particular context, to provide additional information to processing tools, or to embed richer semantic data in a document.
For example, a translation tool might copy
Processing tools should ignore any attributes from external namespaces they do not understand.
External Namespace Elements
Create simple trees to show heirarchical structures.
Tree Lists
mal_block_tree = element tree {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
Use the
The
The
The following style hints are recommended:
lines
draw lines to show the hierarchy
The
Use a tree to outline a class heirarchy inside a
GtkBin
GtkButton
GtkToggleButton
GtkColorButton
GtkFontButton
GtkLinkButton
GtkOptionMenu
GtkScaleButton
Use the
Baikal Teal
Wigeons
Anas
Lophonetta
Speculanas
Anatinae (dabbling ducks)
Aythya
Netta
Anthyinae (diving ducks)
Dendrocygninae (whistling ducks)
Tree lists are display as block elements. Each child
Titles
mal_block_title = element title {
Create a list of terms and associated descriptions.
Definition Lists
mal_block_terms = element terms {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
The
The
The
The
Create a simple definition list with a title:
Selected Basic Block Elements
code
Mark up a block of code or the contents of a file.
example
Mark up a group of block elements as being part of a single example.
screen
Mark up a textual user interface or an interactive shell session.
Create a definition list with multiple terms per entry:
comment
quote
Formal elements which allow a
figure
listing
synopsis
Formal elements which allow a
note
Formal elements which only allow a
Definition lists are displayed as block elements, with each child
The
Create an overview of concepts.
Synopses
mal_block_synopsis = element synopsis {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
The
Add explanation, examples
The
The
The
Use
Beanstalk Functions
Use these methods on a
void add_bean (Bean bean);
int count_beans ();
A
When present, the title and description should be displayed in a way that makes their respective roles clear.
The
Subtitles
mal_block_subtitle = element subtitle {
Create a list of steps the reader should perform to accomplish a task.
Procedures
mal_block_steps = element steps {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
Use the
The
The
The
Create a simple procedure of steps for the reader to follow:
Planting Magic Beans
Dig a hole 10cm deep.
Place magic beans in the hole.
Fill hole with fertilized soil.
Water frequently.
Create a procedure with a nested list and a nested procedure:
Perform one of the following:
Dig a whole 10cm deep.
Find a whole 10cm deep.
Water frequently with the following steps:
Fill watering can with water.
Pour water onto spot where beans were planted.
Procedures are displayed as block elements, with each child
Procedures should have a background color, border, or other styling effect to clearly differentiate them from basic numbered lists. Special styling allows readers to skim pages more easily.
The
Instead of a separate
DocBook provides an explicit
Mallard provides no equivalent to the
DocBook allows leading block-level content in the
Screens
mal_block_screen = element screen {
 attribute style { xsd:NMTOKENS } ?,
 attribute mime { text } ?,
 attribute * - (mal:* | local:*) { text } *,
Use the
The
Use the
The
The
The
The
Use
+==== Beanstalk =====================================+
| Type the letter of the command you want: |
| O - Order beans |
| P - Plant beans |
| T - Track bean inventory |
+====================================================+
Use
xsltproc -o mal_block_screen.html \\
 --stringparam mal.cache.file `pwd`/mallard.cache \\
 `pkg-config --variable mal2html gnome-doc-utils` mal_block_screen.html
Use
[rupert@gnome]
ls foo bar
foo: cannot access file: No such file or directory
bar
Screens should be displayed verbatim, with all whitespace and line breaks reproduced in the rendered output. The only exception is a single leading line break, which should be stripped by display tools if present. Display tools should only strip a leading line break in an initial text node. They are not expected to strip line breaks from child elements.
Screens should be displayed in a fixed-width font. Inline markup may cause style variations, but they should not cause a change to a variable-width font.
The
The
Create a block-level quotation with an attribution.
Block Quotes
mal_block_quote = element quote {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
The
The
The
epigraph
an introductory or closing quote that is not part of the running prose, generally formatted flush right
The
Include a simple block quote in your document:
Henry David Thoreau
Our life is frittered away by detail.... Simplify, simplify.
Add a title to the quote:
Simplify
Add a date to the attribution:
Block quotes are displayed as block elements, with each of their child elements being interpreted as block elements. When present, the title and attribution should be displayed in a way that makes their respective roles clear. Block quotes are frequently adorned with a watermark of quotation marks. Processing tools should ensure any quotation marks used in the formatting of quotes, including watermark images, are appropriate for the document's language.
The
Create a simple paragraph of text.
Paragraphs
mal_block_p = element p {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
The most basic block-level element in Mallard is the
The
The
The
Create a simple paragraph:
Paragraphs are displayed as block elements, with their child elements interpreted as inline elements. In on-screen media, paragraphs generally have padding above and below them to separate them from the surrounding block content. In print media, the first line of each paragraph has traditionally been indented.
The
Paragraphs, lists, tables, and various semantic elements for building simple yet stunning pages.
Block Elements
mal_block = (
Block elements are the building blocks of pages. Mallard provides block elements for most common needs in software documentation, from simple paragraphs to example blocks to powerful tables. Pages and sections in Mallard are built up of block elements, which in turn contain either further block elements or inline content.
Basic Block Elements
Basic Elements
mal_block_basic = (
Basic block elements are elements that do not contain a title and which have either general block content or
Formal Block Elements
Formal Elements
mal_block_formal = (
Formal block elements contain a
List Elements
mal_block_lists = (
Mallard provides list elements for most common needs, including the common definition, ordered, and unordered lists. Mallard also provides simple trees, which are useful for representing heirarchies such as class inheritance or directory layouts. Each of the list elements uses the
Mallard provides a simple table model based on HTML tables. While not allowing the level of styling flexibility as HTML and CSS, Mallard tables provides simple solutions to common styling needs, such as alternate-row shading.
Other Block-like Elements
Mallard contains various block-like elements which are only used in specific contexts, and are not allowed in general block content. These elements allow for richer content models for the elements they appear in.
Block elements all begin on a new line in rendered output. Pages can be visualized as a sequence of vertically-stacked block elements. Some block elements contain other block elements. In these cases, the containing element may introduce certain styling effects, and each of the child elements is rendered as normal.
Each block element should be clearly distinguishable from its surrounding block elements. Typically, vertical padding is placed between block elements to set them apart. Certain block elements, especially those that have block content, may use a border, background color, or other styling effects. See each block element's specification for more details.
Include notes, tips, warnings, and other parenthetical information.
mal_block_note = element note {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
The
The
The
advanced
information that advanced users may find useful
bug
a note about a known bug in the software
important
important information highlighted in a note
tip
a general tip that may help the reader perform an operation better
warning
a warning to the reader about a potentially dangerous operation
The
Insert a basic note into your document:
Information in this section is non-normative.
Include a note with extra information for advanced readers:
The Mallard schema is maintained in RELAX-NG Compact Syntax in code blocks embedded within the specification.
Mention a known bug the reader is likely to encounter:
Cannot Save Files
Due to
Highlight a vital piece of information to ensure readers see it even when skimming a document:
Supply Your Name and Email Address
Before making any commits to a git repository, make sure to supply your name and email address so that your commits are correctly attributed.
git config --global user.name
Provide a helpful but non-essential tip:
Press
Warn the reader about dangerous operations:
There is no way to recover files deleted with the
Notes are displayed as block elements, with each of their child elements being interpreted as block elements. When present, the title should be displayed in a way that makes it clear that it is the title of the block. Notes should have a border, background color, or other styling effect to distinguish them from the surrounding block content. Notes often use an icon to identify what type of note is being displayed.
The
Multimedia Objects
mal_block_media = element media {
 attribute type { "image" | "video" | "audio" | "application" } ?,
 attribute mime { text } ?,
 attribute src { text },
 attribute height { text } ?,
 attribute width { text } ?,
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
The
The
The
When a
When a display tool cannot display a
Frequently, the children of a
The
Create a basic bulleted or numbered list.
Basic Lists
mal_block_list = element list {
 attribute type { xsd:NMTOKEN } ?,
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
Use the
The
The
The
If no
The
Create a basic unordered list:
GTK_MESSAGE_INFO
GTK_MESSAGE_WARNING
GTK_MESSAGE_QUESTION
GTK_MESSAGE_ERROR
GTK_MESSAGE_OTHER
Create an unordered list with a title:
Message Types
Create a simple numbered list:
First
Second
Third
Create a numbered list with Roman numerals:
Lists are displayed as block elements, with each child
Item markers are taken from the
The
Provide a name and description for a code block or other content.
Listings
mal_block_listing = element listing {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
Use the
The
The
The
Use
<![CDATA[
A first Mallard page
Listings are displayed as block elements, with each of their child elements being interpreted as block elements. When present, the title and description should be displayed in a way that makes their respective roles clear.
Provide a title or caption for a multimedia object.
Figures
mal_block_figure = element figure {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
Use the
The
The
The
Use
Drake
Drake is the Mallard mascot.
Figures are displayed as block elements, with each of their child elements being interpreted as block elements. When present, the title and description should be displayed in a way that makes their respective roles clear.
The
Mark a group of block elements as being part of a single example.
mal_block_example = element example {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
Use the
The
The
The
Use
<![CDATA[
xsltproc -o mal_block_screen.html \\
 --stringparam mal.cache.file `pwd`/mallard.cache \\
 `pkg-config --variable mal2html gnome-doc-utils` \\
 mal_block_screen.html
The contents of an
The
Provide a caption for a formal block element.
Block Descriptions
mal_block_desc = element desc {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
The
The
The
Use
Use
<![CDATA[
More exaples can be found on the pages
The exact display of a description will depend on how the enclosing formal element is displayed. A description is a block of text that is displayed directly above or below the normal contents of the enclosing element.
A description should be displayed in a way that makes its role clearn and which clearly distinguishes it from the normal block content of the enclosing element.
Include an editorial comment that's hidden from normal readers.
Editorial Comments
mal_block_comment = element comment {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
The
A
The
The
The
The
Provide a comment:
Mallards Are Dabbling Ducks
The information in this section is wrong. Mallards are dabbling ducks, not diving ducks.
Use
Rupert
But I saw a mallard dive just the other day.
Rupert, please see the
In normal processing,
When shown, a
If a
The
Code Blocks
mal_block_code = element code {
 attribute style { xsd:NMTOKENS } ?,
 attribute mime { text } ?,
 attribute * - (mal:* | local:*) { text } *,
Use the
The
The
The
Use the
Use
class BeanStalk {
public:
 void add_bean(Bean bean);
 int count_beans();
}
Code blocks should be displayed verbatim, with all whitespace and line breaks reproduced in the rendered output. The only exception is a single leading line break, which should be stripped by display tools if present. Display tools should only strip a leading line break in an initial text node. They are not expected to strip line breaks from child elements.
Code blocks should be displayed in a fixed-width font. Inline markup may cause style variations, but they should not cause a change to a variable-width font.
The
The
Citations
mal_block_cite = element cite {
 attribute style { xsd:NMTOKENS } ?,
 attribute * - (mal:* | local:*) { text } *,
 attribute date { text } ?,
 attribute href { text } ?,
Possibly add source for block quote citations.
The
Add examples, processing expectations.
The
The
Link to other pages or documents directly from most inline elements.
Ubiquitous Linking
mal_attr_link =
 ( attribute xref { text } ?
 | { attribute dref { text } ?, attribute href { text } ? }
 )
The content model is perhaps not as clearly expressed as it could be. The
Automatic Links
Topic Links
Guide Links
See Also Links
Translation Notes
Conformance to the W3C Internationalization and Localization Markup Requirements.
ITS Conformance
This page discusses Mallard's conformance to the requirements in the
As of the time of this writing, there are 26 requirements, though not all of them are complete. This page discusses a selection of the requirements. Future versions may discuss more requirements.
R002: Span-Like Element
W3C Internationalization and Localization Markup Requirements
[R002] span-like element is required to allow authors to mark sections text that may have special properties, from a localization and internationalization point of view.
Mallard provides the
R004: Unique Identifier
[R004] It should be possible to attach a unique identifier to any localizable item. This identifier should be unique within a document set, but should be identical across all translations of the same item.
While the
R006: Identifying Language/Locale
[R006] Any document at its beginning should declare a language/locale that is applied to both main content and external content stored separately. While the language/locale may be declared for the whole document, when an element or a text span is in a different language/locale from the document-level language, it should be labeled appropriately. Therefore, DTD/Schema should allow any elements to have a language/locale specifying attribute. The language/locale declaration should use industry standard approaches.
Mallard allows the standard
Note that there are two different methods of identifying language and locale information that are likely to be encountered by those working with Mallard. Since Mallard is an XML format, language identifiers are expected to conform to
R007: Identifying Terms
[R007] It should be possible to identify terms inside an element or a span and to provide data for terminology management and index generation. Terms should be either associated with attributes for related term information or linked to external terminology data.
Mallard does not currently provide a means of marking up terms and definitions. When necessary for translation purposes, the
R008: Purpose Specification/Mapping
[R008] Currently, it does not appear to be realistic that all XML vocabularies tag localization-relevant information identical (e.g. all use the "term" tag for terms). One way to take care of diverse localization-relevant markup in localization environments is a mapping mechanism which maps localization-relevant markup onto a canonical representation (such as the Internationalization Tag Set).
Any purpose mapping that can be encoded using the
R011: Bidirectional Text Support
[R011] Markup should be available to support the needs of bidirectional scripts.
Mallard allows attributes from external namespaces to be used on all elements. Consequently, the
R012: Indicator of Translatability
[R012] Methods must exist to allow to specify the parts of a document that are to be translated or not.
Mallard allows attributes from external namespaces to be used on all elements. Consequently, the
Additionally, the
R014: Limited Impact
[R014] All solutions proposed should be designed to have as less impact as possible on the tree structure of the original document and on the content models in the original schema.
Mallard allows tool-specific extensibility using attributes and elements from external namespaces. Mallard has
While it is impossible to predict all issues one might encounter, Mallard was developed after years of developing translation tools for other formats. Internationalization and localization were primary concerns in the design of Mallard.
R015: Attributes and Translatable Text
[R015] Provisions must be taken to ensure that attributes with translatable values do not impair the localization process.
Mallard never places translatable text in attribute values.
R017: Localization Notes
[R017] A method must exist for authors to communicate information to localizers about a particular item of content.
Mallard allows attributes from external namespaces to be used on all elements. Consequently, the
If more extensive localization notes are needed, the
R020: Annotation Markup
[R020] There must be a way to support markup up of text annotations of the 'ruby' type.
All translatable content in Mallard is placed in element content, which allows annotation markup to be used. Mallard never places translatable content in attribute values. Note, however, that Mallard documents will often be displayed by converting them to a format such as HTML. If the display format places textual content in attribute values (such as the
Elements from external namespaces may be used in all
R022: Nested Elements
[R022] Great care must be taken when defining or using nested translatable elements.
Mallard explicitly disallows mixing block and inline content, except in well-defined cases which can easily be detected and handled. In Mallard, any block element which can contain text directly is considered to be a translation unit. Since these elements do not allow general block content to be mixed into the inline content, translation units can always be presented to translators without the need for placeholders.
Note that this may not be the case if a translation tool chooses to treat certain container elements as translation units. For example, under some circumstances a translation tool might choose to present
R025: Elements and Segmentation
[R025] Methods, independent of the semantic, of the elements must exist to provide hints on how to break down document content into meaningful runs of text.
Making meaningful distinctions is ultimately the job of a processing tool, although the design of an XML vocabulary can have a significant impact on implementation difficulty. The following notes will be relevant to most tool implementors.
In Mallard, the content of any element, taken in context, is unambiguously
Note that, since some element names are used in both block and inline contexts, such ambiguous content models would be particularly problematic for Mallard. Ambiguous content models could lead to situations where it is not possible to determine the function of an element such as
In Mallard, elements generally contain either block content or inline content. Thus, for example, you cannot place a paragraph inside a paragraph. This is simpler for translators, as well as for translation tool implementors, because it reduces the need to use placeholders for separate translation units.
One notable exception to the above is the
It is noteworthy that Mallard reuses some element names in both block and inline contexts. The
2007
Internationalization Notes
Explore more of what Mallard has to offer.
Explore Mallard
DocBook Element Reference
The following table lists all of the elements in DocBook and provides recommendations for equivalent or similar functionality in Mallard, when available.
abbrev
No equivalent in Mallard. Use plain text instead.
abstract
No equivalent in Mallard. The
accel
No equivalent in Mallard, as marking the accelerator in the help text is not considered important.
ackno
No equivalent in Mallard. Simply put acknowledgements in a regular
acronym
action
address
No equivalent in Mallard.
affiliation
alt
No equivalent in Mallard, as Mallard does not currently support equations.
anchor
Currently no equivalent in Mallard. Future versions may address this.
answer
Mallard does not currently have a structured environment for question and answer sessions.
appendix
No direct equivalent in Mallard. Use the
appendixinfo
application
Similar to the
area
Mallard does not support callouts.
areaset
areaspec
arg
Mallard does not have a structured environment for command synopses.
article
articleinfo
artpagenums
No equivalent in Mallard.
attribution
Similar to the
audiodata
See the
audioobject
author
Use the common
authorblurb
No equivalent in Mallard.
authorgroup
No equivalent in Mallard.
authorinitials
beginpage
bibliocoverage
Mallard does not currently have a structured environment for bibliographies.
bibliodiv
biblioentry
bibliography
bibliographyinfo
biblioid
bibliolist
bibliomisc
bibliomixed
bibliomset
biblioref
bibliorelation
biblioset
bibliosource
blockinfo
No equivalent in Mallard. Future versions may add metadata holders for block elements to record credits and licensing information for external resources.
blockquote
Similar to the block
book
bookinfo
bridgehead
callout
calloutlist
caption
No direct equivalent in Mallard. Use the
caution
Use the common
chapter
chapterinfo
citation
citebiblioid
citerefentry
Mallard does not currently have a structured environment for reference pages.
citetitle
city
classname
No specific element in Mallard. Use the inline
classsynopsis
No direct equivalent in Mallard. Use the block
classsynopsisinfo
cmdsynopsis
co
Similar to the
col
Similar to the
colgroup
Similar to the
collab
collabname
Varies with use. The
colophon
colspec
Mallard does not use the CALS table model.
command
Similar to the
computeroutput
Similar to the
confdates
confgroup
confnum
confsponsor
conftitle
constant
No specific element in Mallard. Use an inline
constraint
Mallard does not have structured EBNF productions.
constraintdef
constructorsynopsis
No specific element in Mallard. Use the block
contractnum
contractsponsor
contrib
No equivalent in Mallard.
copyright
Use the
coref
corpauthor
corpcredit
corpname
country
database
No specific element in Mallard. Use the inline
date
Varies with use. For
dedication
destructorsynopsis
edition
editor
email
Varies with use. Use the
emphasis
Similar to the
entry
entrytbl
envar
epigrah
No direct equivalent in Mallard. Some processing tools may support the
equation
errorcode
No specific elements in Mallard. Use the inline
errorname
errortext
errortype
Similar to the
exceptionname
fax
fieldsynopsis
Similar to the
filename
Similar to the
firstname
firstterm
No specific element in Mallard. Use the
footnote
Mallard does not currently have support for footnotes. Future versions may add annotations.
footnoteref
foreignphrase
No specific element in Mallard. If necessary, use the
formalpara
funcdef
funcparams
funcprototype
funcsynopsis
funcsynopsisinfo
function
glossary
No direct equivalent in Mallard. Use the
glossaryinfo
glossdef
Mallard does not currently have a structured environment for glossaries. Use the
glossdiv
glossentry
glosslist
glosssee
glossseealso
glossterm
graphic
graphicco
guibutton
Use the common
guiicon
guilabel
guimenu
guimenuitem
guisubmenu
hardware
highlights
Currently no equivalent in Mallard. Future versions may support marking the introductory text of a topic.
holder
Use the
honorific
html:form
Mallard does not support forms.
imagedata
imageobject
imageobjectco
index
Mallard does not currently have a structured environment for indexes.
indexdiv
indexentry
indexinfo
indexterm
informalequation
informalexample
Similar to the
informalfigure
informaltable
Similar to the
initializer
Mallard does not have a structured environment for field synopses.
inlineequation
inlinegraphic
See the inline
inlinemediaobject
interface
interfacename
invpartnumber
isbn
issn
issuenum
itemizedlist
See the
itermset
jobtitle
keycap
Similar to the
keycode
keycombo
Similar to the
keysym
keyword
keywordset
label
legalnotice
No general-purpose legal notice in Mallard.
lhs
lineage
lineannotation
Currently no equivalent in Mallard. You may use
link
See the
listitem
See the
literal
literallayout
Currently no general-purpose literal layout in Mallard. Future versions may address this.
lot
lotentry
manvolnum
markup
mathprase
medialabel
mediaobject
mediaobjectco
member
No equivalent in Mallard to DocBook's
menuchoice
Similar to the
methodname
methodparam
Mallard does not have a structured environment for method synopses.
methodsynopsis
mml:math
modespec
modifier
Mallard does not have a structured environment for code synopses.
mousebutton
msg
Mallard does not have a structured environment for messages.
msgaud
msgentry
msgexplan
msginfo
msglevel
msgmain
msgorig
msgrel
msgset
msgsub
msgtext
nonterminal
objectinfo
olink
ooclass
ooexception
oointerface
option
No specific element in Mallard. Use the
optional
orderedlist
See the
orgdiv
orgname
otheraddr
othercredit
othername
package
pagenums
para
Similar to the
paramdef
Mallard does not have a structured environment for function prototypes.
parameter
part
partinfo
partintro
No direct equivalent in Mallard. The
personblurb
personname
phone
Similar to the
pob
postcode
preface
prefaceinfo
primary
primaryie
printhistory
procedure
See the
production
productionrecap
productionset
productname
No equivalent in Mallard. Inline, use plain text.
productnumber
programlisting
Similar to the block
programlistingco
No specific element in Mallard. Use the inline
property
pubdate
publisher
publishername
pubsnumber
qandadiv
qandaentry
qandaset
question
refclass
refdescriptor
refentry
refentryinfo
refentrytitle
reference
referenceinfo
refmeta
refmiscinfo
refname
refnamediv
refpurpose
refsect1
refsect1info
refsect2
refsect2info
refsect3
refsect3info
refsection
refsectioninfo
refsynopsisdiv
refsynopsisdivinfo
releaseinfo
This is a long list. Bear with me as I complete it.
How to process and work with Mallard documents.
Processing Details
Internationalization and Localization
Additional Reference Material
translator-credits