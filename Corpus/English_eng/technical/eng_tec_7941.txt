# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	Ubuntu
# source:	https://object.pouta.csc.fi/OPUS-Ubuntu/v14.10/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/Ubuntu.php
# copyright_long:	http://opus.nlpl.eu/Ubuntu.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Unable to load configuration
Loading configuration from %s
Handling deletion of %s
Unable to watch configuration file
Unable to watch configuration directory
Error while loading configuration file
Configuration directory deleted
Connection from private client
Disconnected from notified D-Bus bus
Disconnected from D-Bus %s bus
You do not have permission to reload configuration
Reloading configuration
Name may not be empty string
Unknown job: %s
You do not have permission to emit an event
Env must be KEY=VALUE pairs
You do not have permission to set log priority
The log priority given was not recognised
You do not have permission to notify disk is writeable
Not permissible to notify D-Bus address for PID 1
You do not have permission to notify D-Bus address
Out of Memory
You do not have permission to notify cgroup manager address
You do not have permission to request state
Ignoring state query from chroot session
You do not have permission to request restart
Ignoring restart request from chroot session
Restarting
You do not have permission to modify job environment
Not permissible to modify PID 1 job environment
Job may not be empty string
Ignoring set env request from chroot session
Variable may not be empty string
Ignoring unset env request from chroot session
No such variable
You do not have permission to query job environment
Ignoring get env request from chroot session
Ignoring reset env request from chroot session
unable to create session file
unable to write session file
You do not have permission to end session
Ignoring session end request from chroot session
Illegal parameter
Unknown parameter
Expected operator
Mismatched braces
Invalid setuid user name does not exist
Invalid setgid group name does not exist
Failed to set security context
Illegal interval, expected number of seconds
Illegal exit status, expected integer
Illegal signal status, expected integer
Illegal file creation mask, expected octal integer
Illegal nice value, expected -20 to 19
Illegal oom adjustment, expected -16 to 15 or 'never'
Illegal oom score adjustment, expected -999 to 1000 or 'never'
Illegal limit, expected 'unlimited' or integer
Expected event
Expected variable name before value
Mismatched parentheses
Name already taken
Handling %s event
Event failed
%s goal changed from %s to %s
%s state changed from %s to %s
Job failed to start
Job failed while stopping
Job failed to restart
stop
start
respawn
waiting
starting
security-spawning
security
pre-starting
pre-start
spawning
spawned
post-starting
post-start
running
pre-stopping
pre-stop
stopping
killed
post-stopping
post-stop
You do not have permission to modify job: %s
Job is already running: %s
Job cannot be started as cgroup manager not available: %s
Job has already been stopped: %s
Job is not running: %s
BUG
instance 'stop on' parse error
Usage
Unknown instance: %s
'start on' parse error
'stop on' parse error
unable to clear CLOEXEC bit on log fd
Failed to obtain %s instance: %s
Temporary process spawn error
%s %s process (%d)
cgroup support not available
cgroup manager not available
Failed to create pty - disabling logging for job
Pausing %s (%d) [pre-exec] for debug
Failed to open system console: %s
unable to move script fd: %s
unable to open console: %s
unable to set "%s" resource limit: %s
unable to set priority: %s
unable to set oom adjustment: %s
unable to change root directory: %s
unable to change working directory: %s
unable to set trace: %s
unable to execute: %s
unable to getpwnam: %s
unable to getgrnam: %s
unable to getpwuid: %s
unable to getgrgid: %s
unable to find setuid user
unable to find setgid group
unable to setuid: %s
unable to setgid: %s
unable to chown: %s
unable to unlockpt: %s
unable to granpt: %s
unable to get ptsname: %s
unable to open pty slave: %s
unable to modify signal handler: %s
unable to allocate memory: %s
unable to initgroups: %s
unable to switch security profile: %s
unable to connect to CGManager: %s
unable to setup cgroup: %s
unable to enter cgroup: %s
Sending %s signal to %s %s process (%d)
Failed to send %s signal to %s %s process (%d): %s
%s %s process (%d) terminated with status %d
%s %s process (%d) exited normally
%s %s process (%d) killed by %s signal
%s %s process (%d) killed by signal %d
%s %s process (%d) stopped by %s signal
%s %s process (%d) stopped by signal %d
%s %s process (%d) continued by %s signal
%s %s process (%d) continued by signal %d
%s respawning too fast, stopped
%s %s process ended, respawning
Failed to add log to unflushed queue
Failed to set ptrace options for %s %s process (%d): %s
Failed to continue traced %s %s process (%d): %s
Failed to detach traced %s %s process (%d): %s
Failed to deliver signal to traced %s %s process (%d): %s
Failed to obtain child process id for %s %s process (%d): %s
%s %s process (%d) became new process (%d)
%s %s process (%d) executable changed
Failed to spawn %s %s process: %s
Failed to write to log file
specify additional directory to load configuration files from
enable chroot sessions
specify alternative directory to load configuration files from
default value for console stanza
specify alternative directory to store job output logs in
do not support cgroups
do not connect to a D-Bus bus
jobs will not inherit environment of init
disable job logging
do not emit any startup event (for testing)
specify additional initial directory to load configuration files from
flag a re-exec has occurred
specify file descriptor to read serialisation data from
use D-Bus session bus rather than system bus (for testing)
specify an alternative initial event (for testing)
start in user mode (as used for user sessions)
attempt to write state file on every re-exec
Process management daemon.
This daemon is normally executed by the kernel and given process id 1 to denote its special status. When executed by a user process, it will actually run /sbin/telinit.
Need to be root
Not being executed as init
Unable to mount /dev filesystem
Cannot create directory
Unable to mount /dev/pts filesystem
Unable to initialize console, will try /dev/null
Unable to initialize console as /dev/null
Unable to set root directory
Unable to mount /proc filesystem
Unable to mount /sys filesystem
Unable to set default oom score
Stateful re-exec supported but stateless re-exec requested
Failed to read serialisation data
reverting to stateless re-exec
Both stateful and stateless re-execs failed
Unable to listen for private connections
Not connecting to %s bus
Unable to setup standard file descriptors
Unable to register as subreaper
Caught %s, core dumped
Caught %s, unable to dump core
Re-executing %s
Reconnecting to D-Bus %s bus
Unable to connect to the D-Bus %s bus: %s
invalid console type specified
main
logout
shutdown
Quiescing due to %s request
Quiesce %s sequence took %s%d second%s
Failed to serialise
control bus address
cgroup manager address
Detected invalid serialisation data
Failed to deserialise
No control details present in state data
No ConfSources present in state data
No global job environment data present in state data
Failed to resolve deserialisation dependencies
failed to demarshal D-Bus message
Failed to re-execute %s: %s
Failed to generate serialisation data
Performing stateful re-exec
Passing state from PID %d to parent
Failed to release D-Bus name: %s
Failed to write serialisation data
Unable to create device
Unable to connect to system bus
Unable to connect to session bus
%s: --dest given without --system
Unable to connect to Upstart
%s: missing job name
Not running
%s: missing variable name
%s: missing variable value
%s: missing event name
Invalid job class
%s: missing D-Bus address
%s: missing address
Unable to query session directory
Ignoring stale session file
unknown event
unknown job
use existing D-Bus session bus to connect to init daemon (for testing)
use D-Bus system bus to connect to init daemon
destination well-known name on D-Bus bus
run in user mode (as used for user sessions)
do not wait for job to start before exiting
do not wait for job to stop before exiting
do not wait for job to restart before exiting
do not wait for event to finish before exiting
enumerate list of events and jobs causing job created from job config to start/stop
ignore specified list of events (comma-separated)
Generate warning for any unreachable events/jobs
apply to global job environment table
do not replace the value of the variable if already set
Job
Event
Environment
JOB [KEY=VALUE]...
Start job.
JOB is the name of the job that is to be started, this may be followed by zero or more environment variables to be defined in the new job.

The environment may also serve to distinguish between job instances, and thus decide whether a new instance will be started or an error returned if an existing instance is already running.
Stop job.
JOB is the name of the job that is to be stopped, this may be followed by zero or more environment variables to be passed to the job's pre-stop and post-stop processes.

The environment also serves to distinguish between job instances, and thus decide which of multiple instances will be stopped.
Restart job.
JOB is the name of the job that is to be restarted, this may be followed by zero or more environment variables to be defined in the job after restarting.

The environment also serves to distinguish between job instances, and thus decide which of multiple instances will be restarted.
Send HUP signal to job.
JOB is the name of the job that is to be sent the signal, this may be followed by zero or more environment variables to distinguish between job instances.
Query status of job.
JOB is the name of the job that is to be queried, this may be followed by zero or more environment variables to distguish between job instances.
List known jobs.
The known jobs and their current status will be output.
EVENT [KEY=VALUE]...
Emit an event.
EVENT is the name of an event the init daemon should emit, this may be followed by zero or more environment variables to be included in the event.
Reload the configuration of the init daemon.
Request the version of the init daemon.
[PRIORITY]
Change the minimum priority of log messages from the init daemon.
PRIORITY may be one of:
 `debug' (messages useful for debugging upstart are logged, equivalent to --debug on kernel command-line);
 `info' (messages about job goal and state changes, as well as event emissions are logged, equivalent to --verbose on the kernel command-line);
 `message' (informational and debugging messages are suppressed, the default); `warn' (ordinary messages are suppressed whilst still logging warnings and errors);
 `error' (only errors are logged, equivalent to --quiet on the kernel command-line) or
 `fatal' (only fatal errors are logged).

Without arguments, this outputs the current log priority.
[CONF]
Show emits, start on and stop on details for job configurations.
If CONF specified, show configuration details for single job configuration, else show details for all jobs configurations.
Check for unreachable jobs/event conditions.
List all jobs and events which cannot be satisfied by currently available job configuration files.
VARIABLE
Retrieve value of a job environment variable.
Display the value of a variable from the job environment table.
Show all job environment variables.
Displays sorted list of variables and their values from the job environment table.
Revert all job environment variable changes.
Discards all changes make to the job environment table, setting it back to its default value.
VARIABLE[=VALUE]
Set one or more job environment variables.
Adds or updates variables in the job environment table.
Remove one or more job environment variables.
Discards variables from the job environment table.
JOB
Show job usage message if available.
JOB is the name of the job which usage is to be shown.
Inform Upstart of D-Bus address cgroup manager is available on.
Run to allow Upstart to provide cgroup stanza support.
Inform Upstart of D-Bus address to connect to.
Run to allow Upstart to provide services over D-Bus.
Inform Upstart that disk is now writeable.
Run to ensure output from jobs ending before disk is writeable are flushed to disk.
List all sessions.
Displays list of running Session Init sessions
don't sync before reboot or halt
force reboot or halt, don't call shutdown(8)
switch off the power when called as halt
don't actually reboot or halt, just write wtmp record
Halt the system.
Power off the system.
Reboot the system.
This command is intended to instruct the kernel to reboot or halt the system; when run without the -f option, or when in a system runlevel other than 0 or 6, it will actually execute /sbin/shutdown.
Couldn't set uid.
Calling shutdown
Unable to execute shutdown: %s
Rebooting
Halting
Powering off
Rebooting with %s
[UTMP]
Output previous and current runlevel.
The system /var/run/utmp file is used unless the alternate file UTMP is given.
reboot after shutdown
halt or power off after shutdown
halt after shutdown (implies -h)
power off after shutdown (implies -h)
cancel a running shutdown
only send warnings, don't shutdown
TIME [MESSAGE]
Bring the system down.
TIME may have different formats, the most common is simply the word 'now' which will bring the system down immediately. Other valid formats are +m, where m is the number of minutes to wait until shutting down and hh:mm which specifies the time on the 24hr clock.

Logged in users are warned by a message sent to their terminal, you may include an optional MESSAGE included with this. Messages can be sent without actually bringing the system down by using the -k option.

If TIME is given, the command will remain in the foreground until the shutdown occurs. It can be cancelled by Control-C, or by another user using the -c option.

The system is brought down into maintenance (single-user) mode by default, you can change this with either the -r or -h option which specify a reboot or system halt respectively. The -h option can be further modified with -H or -P to specify whether to halt the system, or to power it off afterwards. The default is left up to the shutdown scripts.
%s: time expected
%s: illegal hour value
%s: illegal minute value
%s: illegal time value
Shutdown is not running
Another shutdown is already running
Cannot find pid of running shutdown
Unable to change directory
Unable to write pid file
Shutdown cancelled
The system is going down for power off NOW!
The system is going down for halt NOW!
The system is going down for maintenance NOW!
The system is going down for reboot NOW!
Unable to fork child-process to warn users: %s
Broadcast message from %s@%s
(%s) at %d:%02d ...
set environment variable in the runlevel event
Change runlevel.
RUNLEVEL should be one of 0123456sS, where s and S are considered identical.

RUNLEVEL may also be Q or q to instruct the init daemon to reload its configuration, this is rarely necessary since the daemon watches its configuration for changes.

RUNLEVEL may be U or u to instruct the init daemon to re-execute itself, this is not recommended since Upstart does not currently preserve its state.
%s: missing runlevel
%s: illegal runlevel: %s
Detach and run in the background
Do not strip non-printable bytes from udev message data
Bridge udev events into upstart
By default, upstart-udev-bridge does not detach from the console and remains in the foreground. Use the --daemon option to have it detach.
Could not connect to Upstart
Could not create Upstart proxy
Unable to become daemon
Disconnected from Upstart
Bridge socket events into upstart
By default, upstart-socket-bridge does not detach from the console and remains in the foreground. Use the --daemon option to have it detach.
Could not create epoll descriptor
Could not create JobAdded signal connection
Could not create JobRemoved signal connection
Could not obtain job list
Error from epoll
Could not send socket event
Error emitting socket event
WARNING
GUI modules not available - falling back to CLI
Version
Error saving file
No events to save
Save File
Clear events
Save events to default file
Save events to specified file
Exit application
Application details
Copy
Index
Time
Event and environment
Connected to
Upstart Event Monitor
run in command-line mode
field separator to use for command-line output
connect to Upstart via specified D-Bus route
console mode
Columns: time, event and environment