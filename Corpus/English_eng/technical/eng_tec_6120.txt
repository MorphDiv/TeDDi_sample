# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Plugins
& kphotoalbum; shares a plugin system with a number of other image applications, among these digiKam and Gwenview. The plugin system is named Kipi, which is short for & kde; Image Plugin Interface. See Kipi Homepage
The plugins are available from the menu bar, under the item Plugins. The plugins will and can not be described in this manual, as the plugins are not part of & kphotoalbum;, but shipped separately. Most plugins do, however have a help page available from the plugin itself.
As the plugins are shared between a number of applications, certain plugins might be very little tested with & kphotoalbum;, you should therefore always try out new plugins with the demo database before you try them on your own images You start & kphotoalbum; with the demo setup either from the shell by executing kphotoalbum -demo, or from the Help menu. (Do n't say I did n't warn you!).
The applications using KIPI are very different from each other, this means that some plugins are not always working the & kphotoalbum; way, but after all, this is the price for sharing the functionality between the applications.
The most important difference between & kphotoalbum; and the other applications using KIPI, is that the other applications order the images in albums, where an album simply is a directory. & kphotoalbum; do not have this concept; nevertheless, for certain plugins to function, & kphotoalbum; behaves towards the plugin system as if it did.
& kphotoalbum; does this by defining the current album to be the current view - that is, all the images the browser currently offers to display.
In addition to the current album, & kphotoalbum; must also be able to give a list of all albums; & kphotoalbum; defines this list in the following way:
When & kphotoalbum; 's browser displays the content of a category, say people, then each item in this category will look like an album to the plugin.
Otherwise, the category you specify for Category for virtual albums in the options dialog, will be used; e. g. if you specify People with this option, then & kphotoalbum; will act as if you had just chosen to display people and then invoke the plugin which needs to know about all albums.
Some plugins might be redundant to features implemented in & kphotoalbum;, and in that case you may not want to see them at all in the Plugin menu. For that, you may go to the options dialog, and specify which plugins should be shown at all.