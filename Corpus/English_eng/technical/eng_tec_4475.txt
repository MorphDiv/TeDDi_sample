# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 4 = 4.3.0)
pg_get_pid() gets backend (database server process) PID.
PID is useful to check if NOTIFY message is sent from other process or not.
See also pg_get_notify()
Example 1.
PostgreSQL backend PID
?php $conn = pg_pconnect ("dbname=publisher"); if (!$conn) {echo "An error occured.\n"; exit;} / / Backend process PID.
Use PID with pg_get_notify() $pid = pg_get_pid($conn);?
Prev
Home
Next
pg_get_notify
Up
pg_get_result