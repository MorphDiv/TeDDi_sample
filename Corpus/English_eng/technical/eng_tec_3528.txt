# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3, PHP 4)
Returns TRUE if var exists; FALSE otherwise.
If a variable has been unset with unset(), it will no longer be isset(). isset() will return FALSE if testing a variable that has been set to NULL.
Also note that a NULL byte ("\0 ") is not equivalent to the PHP NULL constant.
For checking if constants are set use the defined() function.
?php $var = ''; / / This will evaluate to true; so the text will be printed. if (isset($var)) {print "This var is set set so I will print .";} / / In the next examples we'll use var_dump to output / / the return value of isset(). $a = "test"; $b = "anothertest"; var_dump (isset($a)); / / TRUE var_dump (isset ($a, $b)); / / TRUE unset ($a); var_dump (isset ($a)); / / FALSE var_dump (isset ($a, $b)); / / FALSE $foo = NULL; var_dump (isset ($foo)); / / FALSE?
This also work for elements in arrays:
?php $a = array ('test '= 1, 'hello' = NULL); var_dump (isset ($a['test'])); / / TRUE var_dump (isset ($a['foo'])); / / FALSE var_dump (isset ($a['hello'])); / / FALSE / / The key'hello 'equals NULL so is considered unset / / If you want to check for NULL key values then try: var_dump (array_key_exists('hello', $a)); / / TRUE?
See also empty(), unset(), defined(), array_key_exists() and the error control @ operator.
Prev
Home
Next
is_string
Up
print_r