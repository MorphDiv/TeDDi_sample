# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Chapter 22.
Safe Mode
Next
This is a still probably incomplete and possibly incorrect listing of the functions limited by safe mode.
Table 22-2.
Safe mode limited functions
Function
Limitations
dbmopen()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
dbase_open()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
filepro()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
filepro_rowcount()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
filepro_retrieve()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
ifx_*()
sql_safe_mode restrictions, (!= safe mode)
ingres_*()
sql_safe_mode restrictions, (!= safe mode)
mysql_*()
sql_safe_mode restrictions, (!= safe mode)
pg_loimport()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
posix_mkfifo()
Checks whether the directory in which you are about to operate has the same UID (owner) as the script that is being executed.
putenv()
Obeys the safe_mode_protected_env_vars and safe_mode_allowed_env_vars ini-directives.
See also the documentation on putenv()
move_uploaded_file()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
chdir()
Checks whether the directory in which you are about to operate has the same UID (owner) as the script that is being executed.
dl()
This function is disabled in safe mode.
backtick operator
This function is disabled in safe mode.
shell_exec() (functional equivalent of backticks)
This function is disabled in safe mode.
exec()
You can only execute executables within the safe_mode_exec_dir.
For practical reasons it 's currently not allowed to have.. components in the path to the executable.
system()
You can only execute executables within the safe_mode_exec_dir.
For practical reasons it 's currently not allowed to have.. components in the path to the executable.
passthru()
You can only execute executables within the safe_mode_exec_dir.
For practical reasons it 's currently not allowed to have.. components in the path to the executable.
popen()
You can only execute executables within the safe_mode_exec_dir.
For practical reasons it 's currently not allowed to have.. components in the path to the executable.
mkdir()
Checks whether the directory in which you are about to operate has the same UID (owner) as the script that is being executed.
rmdir()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
rename()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
Checks whether the directory in which you are about to operate has the same UID (owner) as the script that is being executed.
unlink()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
Checks whether the directory in which you are about to operate has the same UID (owner) as the script that is being executed.
copy()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
Checks whether the directory in which you are about to operate has the same UID (owner) as the script that is being executed. (on source and target)
chgrp()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
chown()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
chmod()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
In addition, you cannot set the SUID, SGID and sticky bits
touch()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
Checks whether the directory in which you are about to operate has the same UID (owner) as the script that is being executed.
symlink()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
Checks whether the directory in which you are about to operate has the same UID (owner) as the script that is being executed. (note: only the target is checked)
link()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
Checks whether the directory in which you are about to operate has the same UID (owner) as the script that is being executed. (note: only the target is checked)
getallheaders()
In safe mode, headers beginning with 'authorization' (case-insensitive) will not be returned.
Warning: this is broken with the aol-server implementation of getallheaders()!
header()
In safe mode, the uid of the script is added to the realm part of the WWW-Authenticate header if you set this header (used for HTTP Authentication).
PHP_AUTH variables
In safe mode, the variables PHP_AUTH_USER, PHP_AUTH_PW, and PHP_AUTH_TYPE are not available in $_SERVER.
Regardless, you can still use REMOTE_USER for the USER. (note: only affected since PHP 4.3.0)
highlight_file(), show_source()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
Checks whether the directory in which you are about to operate has the same UID (owner) as the script that is being executed. (note: only affected since PHP 4.2.1)
parse_ini_file()
Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
Checks whether the directory in which you are about to operate has the same UID (owner) as the script that is being executed. (note: only affected since PHP 4.2.1)
Any function that uses php4 / main / fopen_wrappers.c
??
Prev
Home
Next
Safe Mode
Up
Using PHP from the command line