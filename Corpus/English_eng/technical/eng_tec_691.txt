# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/en_GB.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Data
/text/shared/02/01170203.xhp
forms; data
data; forms and sub-forms
forms; sub-forms
sub-forms; description
Data
Data
tab page defines the form properties that refer to the database that is linked to the form.
sub-form
.
Data source
Defines the data source to which the form should refer.
If you click the
...
button, you open the
Open
dialogue box, in which you can choose a data source.
Content
Content type
.
Content type
, the box lists all the tables and queries set up in the selected database.
Content type
Defines whether the data source is to be an existing database table or query, or if the form is to be generated based on an SQL statement.
Content
.
If you want to create a new query or a
sub-form
, then you have to choose the &quot; SQL &quot; option.
You can then enter the statement for the SQL query or the sub-form directly in the
List content
box on the Control properties Data tab page.
Analyse SQL command
Specifies whether the SQL statement is to be analysed by %PRODUCTNAME.
If set to Yes, you can click the
...
button next to the
Content
list box.
This will open a window in which you can graphically create a database query.
When you close that window, the SQL statement for the created query will be inserted in the
Content
list box.
Filter
Enter the required conditions for filtering the data in the form.
The filter specifications follow SQL rules without using the WHERE clause.
For example, if you want to display all records with the &quot; Mike &quot; forename, type into the data field:
Forename = 'Mike'.
You can also combine conditions:
Forename = 'Mike' OR Forename = 'Peter'.
All records matching these two conditions will be displayed.
AutoFilter
and
Default Filter
icons on the
Form Navigation
Bar
.
Sort
Specifies the conditions to sort the data in the form.
The specification of the sorting conditions follows SQL rules without the use of the ORDER BY clause.
For example, if you want all records of a database to be sorted in one field in an ascending order and in another field in a descending order, enter Forename ASC, Name DESC (presuming Forename and Name are the names of the data fields).
Form Navigation
Bar
can be used in User mode to sort:
Sort Ascending
,
Sort Descending
,
Sort
.
Add data only
Determines if the form only allows the addition of new data (Yes) or if it allows other properties as well (No).
Add data only
is set to &quot; Yes &quot; , changing or deleting data is not possible.
Navigation bar
Specifies whether the navigation functions in the lower form bar can be used.
The &quot; Parent Form &quot; option is used for sub-forms.
If you choose this option for a sub-form you can navigate using the records of the main form if the cursor is placed in the sub-form.
A sub-form is linked to the parent form by a 1:1 relationship, so navigation is always performed in the parent form.
Cycle
Determines how the navigation should be done using the tab key.
Using the tab key, you can move forwards in the form.
If you simultaneously press the Shift key, the navigation will follow the opposite direction.
If you reach the last (or the first) field and press the tab key again, it can have various effects.
Define the key control with the following options:
Option
Meaning
Default
This setting automatically defines a cycle which follows an existing database link:
If the form contains a database link, the Tab key will, by default, initiate a change to the next or previous record on exit from the last field (see All Records).
If there is no database link the next/previous form is shown (see Current Page).
All records
This option applies to database forms only and is used to navigate through all records.
If you use the Tab key to exit from the last field of a form, the current record is changed.
Active record
This option applies to database forms only, and is used to navigate within the current record.
If you use the Tab key to exit from the last field of a form, the current record is changed.
Current page
On exit from the last field of a form, the cursor skips to the first field in the next form.
This is standard for HTML forms; therefore, this option is especially relevant for HTML forms.
Allow additions
Determines if data can be added.
Allow modifications
Determines if the data can be modified.
Allow deletions
Determines if the data can be deleted.
Link master fields
sub-form
, enter the data field of the parent form responsible for the synchronisation between parent and sub-form.
To enter multiple values, press Shift + Enter after each input line.
SQL
query; more specifically, on a
Parameter Query
.
If a field name is entered in the
Link master fields
box, the data contained in that field in the main form is read to a variable that you must enter in
Link slave fields
.
In an appropriate SQL statement, this variable is compared to the table data that the sub-form refers to.
Alternatively, you can enter the column name in the
Link master fields
box.
Consider the following example:
Link master fields
enter the data field from the customer database which clearly identifies the customer, that is, Cust_ID.
Under
Link slave fields
enter the name of a variable which is to accept the data of the field Cust_ID, for example, x.
The sub-form should show the appropriate data from the orders table ( &quot; Orders &quot; ) for each customer ID (Customer_ID - > x).
This is only possible if each order is uniquely assigned to one customer in the orders table.
Alternatively, you can use another field called Customer_ID; however, to make sure that this field is not confused with the same field from the main form, the field is called Customer_Number.
Now compare the Customer_Number in the &quot; Orders &quot; table with the Customer_ID from the &quot; Customers &quot; table, which can be done, for example, using the x variable with the following SQL statement:
SELECT * FROM Orders WHERE Customer_Number =: x (if you want the sub-form to show all data from the orders table)
or:
SELECT Item FROM Orders WHERE Customer_Number =: x (if you want the sub-form from the orders table to show only the data contained in the &quot; Item &quot; field)
Data source
field, or you can create an appropriate parameter query, which can be used to create the sub-form.
Link slave fields
If you create a sub-form, enter the variable where possible values from the parent form field can be stored.
If a sub-form is based on a query, enter the variable that you defined in the query.
If you create a form using an SQL statement entered in the
Data source
field, enter the variable you used in the statement.
You can choose any variable name.
If you want to enter multiple values, press Shift + Enter.
Link master fields
, then you can define under
Link slave fields
the name of the variable in which the values of the Customer_ID database field are to be stored.
If you now specify an SQL statement in the
Data source
box using this variable, the relevant values are displayed in the sub-form.
What is a sub-form?
Forms are created based on a database table or database query.
They display the data in a visually pleasant fashion and can be used to enter data or edit data.
If you require a form that can refer to the data in a table or query and can additionally display data from another table, you should create a sub-form.
For example, this sub-form can be a text box that displays the data of another database table.
A sub-form is an additional component of the main form.
The main form can be called the &quot; parent form &quot; or &quot; master &quot; .
Sub-forms are needed as soon as you want to access more than one table from a form.
Each additional table requires its own sub-form.
After creating a form, it can be changed into a sub-form.
To do this, enter Design Mode, and open the Form Navigator.
In the Form Navigator, drag a form (that will become a sub-form) onto any other form (that will become a master).
The user of your document will not see that a form has sub-forms.
The user only sees a document in which data is entered or where existing data is displayed.
Specify the Link master field from the data fields in the master form.
In the sub-form, the Link slave field can be set as a field which will be matched to the contents of the Link master field.
When the user navigates through the data, the form always displays the current data record.
If there are sub-forms defined, the content of the sub-forms will be displayed after a short delay of approximate 200 ms.
This delay enables you to quickly browse through the data records of the master form.
If you navigate to the next master data record within the delay limit, the sub-form data need not be retrieved and displayed.