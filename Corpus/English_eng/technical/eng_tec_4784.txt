# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3 = 3.0.6, PHP 4)
This function returns a string or an array with all occurences of search in subject replaced with the given replace value.
If you don' t need fancy replacing rules, you should always use this function instead of ereg_replace() or preg_replace().
In PHP 4.0.5 and later, every parameter to str_replace() can be an array.
If subject is an array, then the search and replace is performed with every entry of subject, and the return value is an array as well.
If search and replace are arrays, then str_replace() takes a value from each array and uses them to do search and replace on subject.
If replace has fewer values than search, then an empty string is used for the rest of replacement values.
If search is an array and replace is a string; then this replacement string is used for every value of search.
Example 1. str_replace() example
$bodytag = str_replace( "%body%", "black", "body text=%body% ");
This function is binary safe.
See also ereg_replace(), preg_replace(), and strtr().
Prev
Home
Next
str_repeat
Up
str_rot13