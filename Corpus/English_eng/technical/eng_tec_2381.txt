# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(PHP 3, PHP 4)
Returns an array of the parameters.
The parameters can be given an index with the = operator.
Syntax "index = values", separated by commas, define index and values. index may be of type string or numeric.
When index is omitted, a integer index is automatically generated, starting at 0.
If index is an integer, next generated index will be the biggest integer index + 1.
Note that when two identical index are defined, the last overwrite the first.
The following example demonstrates how to create a two-dimensional array, how to specify keys for associative arrays, and how to skip-and-continue numeric indices in normal arrays.
Example 1. array() example
$fruits = array ("fruits "= array ("a"= "orange", "b"= "banana", "c"= "apple"), "numbers" = array (1, 2, 3, 4, 5, 6), "holes "= array ("first", 5 = "second", "third"));
Example 2.
Automatic index with array()
$array = array( 1, 1, 1, 1, 1, 8= 1, 4= 1, 19, 3= 13); print_r($array);
will display:
Array ([0] = 1 [1] = 1 [2] = 1 [3] = 13 [4] = 1 [8] = 1 [9] = 19)
This example creates a 1-based array.
Example 3.
1-based index with array()
$firstquarter = array( 1 = 'January', 'February', 'March'); print_r($firstquarter);
will display:
Array ([1] = 'January '[2] = 'February' [3] = 'March ')
See also array_pad(), list(), and range().
Prev
Home
Next
array_walk
Up
arsort