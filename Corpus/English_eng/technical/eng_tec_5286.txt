# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Appendix C.
Migrating from PHP / FI 2 to PHP 3
Next
PHP / FI 2.0 used the left side of expressions to determine what type the result should be.
PHP 3.0 takes both sides into account when determining result types, and this may cause 2.0 scripts to behave unexpectedly in 3.0.
Consider this example:
$a[ 0]=5; $a[1]=7; $key = key($a); while (" "!= $key) {echo "$keyn"; next($a);}
The fix for this is simple.
Replace the while statement with:
while ((string)$key != "") {
Prev
Home
Next
while syntax
Up
Error messages have changed