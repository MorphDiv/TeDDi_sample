# language_name_wals:	English
# language_name_glotto:	English
# ISO_6393:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Chapter 3.
Installation
Next
This section contains notes and hints specific to Apache 2.0 installs of PHP, both for Unix and Windows versions.
Warning
Do not use Apache 2.0 and PHP in a production environment neither on Unix nor on Windows.
You are highly encouraged to take a look at the Apache Documentation to get a basic understanding of the Apache 2.0 Server.
The following versions of PHP are known to work with the most recent version of Apache 2.0:
Note:
Apache 2.0 SAPI -support started with PHP 4.2.0.
PHP 4.2.3 its known to work in conjunction with Apache 2.0.39.
Don' t try to use this version of PHP Don't try to use this version of PHP with any other version of Apache.
We do not recommend to use PHP 4.2.3 along with Apache 2.0.39.
All mentioned versions of PHP will work still with Apache 1.3.x.
Download the most recent version of Apache 2.0 and a fitting PHP version from the above mentioned places.
This quick guide covers only the basics to get started with Apache 2.0 and PHP.
For more information read the Apache Documentation.
The version numbers have been omitted here, to ensure the instructions are not incorrect.
You will need to replace the 'NN' here with the correct values from your files.
Example 3-6.
Installation Instructions (Apache 2 Shared Module Version)
1. gzip -d httpd-2_0_NN.tar.gz 2. tar xvf httpd-2_0_NN.tar 3. gunzip php-NN.tar.gz 4. tar -xvf php-NN.tar 5. cd httpd-2_0_NN 6.. / configure --enable-so 7. make 8. make install Now you have Apache 2.0.NN available under / usr / local / apache2, configured with loadable module support and the standard MPM prefork.
To test the installation use your normal procedure for starting the Apache server, e.g.: / usr / local / apache2 / bin / apachectl start and stop the server to go on with the configuration for PHP: / usr / local / apache2 / bin / apachectl stop.
9. cd.. / php4-NN 10.. / configure --with-apxs2= / usr / local / apache2 / bin / apxs 11. make 12. make install 13. cp php.ini-dist / usr / local / lib / php.ini Edit your php.ini file to set PHP options.
If you prefer this file in another location, use --with-config-file-path= / path in step 10.
14.
Edit your httpd.conf file and check that these lines are present:
LoadModule php4_module modules / libphp4.so AddType application / x-httpd-php .php You can choose any extension you wish here. .php is simply the one we suggest.
The path on the right hand side of the LoadModule statement must point to the path of the PHP module on your system.
The above statement is correct for the steps shown above.
15.
Use your normal procedure for starting the Apache server, e.g.: / usr / local / apache2 / bin / apachectl start
Following the steps above you will have a running Apache 2.0 with support for PHP as SAPI module.
Of course there are many more configuration options available for both, Apache and PHP.
For more information use. / configure --help in the corresponding source tree.
In case you wish to build a multithreaded version of Apache 2.0 you must overwrite the standard MPM-Module prefork either with worker or perchild.
To do so append to your configure line in step 6 above either the option --with-mpm=worker or --with-mpm=perchild.
Take care about the consequences and understand what you are doing.
For more information read the Apache documentation about the MPM-Modules.
Note:
To build a multithreaded version of Apache your system must support threads.
This also implies to build PHP with experimental Zend Thread Safety (ZTS).
Therefore not all extensions might be available.
The recommended setup is to build Apache with the standard prefork MPM-Module.
Consider to read the Windows specific notes for Apache 2.0.
Warning
Apache 2.0 is designed to run on Windows NT 4.0, Windows 2000 or Windows XP.
At this time, support for Windows 9x is incomplete.
Apache 2.0 is not expected to work on those platforms at this time.
Download the most recent version of Apache 2.0 and a fitting PHP version from the above mentioned places.
Follow the Manual Installation Steps and come back to go on with the integration of PHP and Apache.
There are two ways to set up PHP to work with Apache 2.0 on Windows.
One is to use the CGI binary the other is to use the Apache module DLL.
In either case you need to stop the Apache server, and edit your httpd.conf to configure Apache to work with PHP.
You need to insert these three lines to your Apache httpd.conf configuration file to set up the CGI binary:
Example 3-7.
PHP and Apache 2.0 as CGI
ScriptAlias / php / "c: / php /" AddType application / x-httpd-php .php Action application / x-httpd-php "/ php / php.exe"
If you would like to use PHP as a module in Apache 2.0, be sure to move php4ts.dll to winnt / system32 (for Windows NT / 2000) or windows / system32 (for Windows XP), overwriting any older file.
You need to insert these two lines to your Apache httpd.conf configuration file to set up the PHP-Module for Apache 2.0:
Example 3-8.
PHP and Apache 2.0 as Module
LoadModule php4_module c: / php / sapi / php4apache2.dll AddType application / x-httpd-php .php
Note:
Remember to substitute the c: / php / for your actual path to PHP in the above examples.
Warning
Don 't mix up your installation with dll files from different PHP versions.
You have the only choice to use the dll 's and extensions that ship with your downloaded PHP version.
Prev
Home
Next
Servers-Apache
Up
Servers-Caudium