# language_name_wals:	English
# language_name_glotto:	English
# iso639_3:	eng
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/en.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Manual
Prev
Next
(no version information, might be only in CVS)
This function retrieves the attribute information of an object of any version.
It will not return the document content.
The parameter array contains the required elements' objectIdentifier 'and the optional elements'attributeSelector' and'version '.
The returned object is an instance of class HW_API_Object on success or HW_API_Error if an error occured.
This simple example retrieves an object and checks for errors.
Example 1.
Retrieve an object
?php function handle_error( $error) {$reason = $error - reason(0); echo "Type:
B "; switch($reason - type()) {case 0: echo "Error"; break; case 1: echo "Warning"; break; case 2: echo "Message"; break;} echo" / B BR \n"; echo "Description: ".$reason - description("en"). "BR \n";} function list_attr($obj) {echo" TABLE \n"; $count = $obj - count(); for($i=0; $i $count; $i++) {$attr = $obj - attribute($i); printf( "TR TD ALIGN=right bgcolor=#c0c0c0 B %s / B / TD TD bgcolor=#F0F0F0 %s / TD \n", $attr - key(), $attr - value());} echo" / TABLE \n";} $hwapi = hwapi_hgcsp($g_config[HOSTNAME]); $parms = array("objectIdentifier"= "rootcollection, "attributeSelector"= array("Title", "Name", "DocumentType")); $root = $hwapi - object($parms); if(get_class($root) == "HW_API_Error") {handle_error($root); exit;} list_attr($root);?
See also hwapi_content().
Prev
Home
Next
hw_api_object - value
Up
hw_api - objectbyanchor