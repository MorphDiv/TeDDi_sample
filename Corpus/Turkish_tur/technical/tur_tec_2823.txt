# language_name_wals:	Turkish
# language_name_glotto:	Turkish
# iso639_3:	tur
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/tr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Kullanım Kılavuzu
Önceki
Sonraki
XCIV.
Socket functions
Uyarý
Bu modül DENEYSELDıR.
Bunun anlamı, burada listenen fonksiyonlar, fonksiyon isimleri, kısaca burada yazılan HER şEY PHP "nin ilerki sürümlerinde UYARI YAPILMAKSIZIN DEğışTıRıLEBıLıR.
Dikkatli olun, ve bu modülü aldığınız riski bilerek kullanın.
The socket extension implements a low-level interface to the socket communication functions, providing the possibility to act as a socket server as well as a client.




That said, those unfamiliar with socket programming can still find a lot of useful material in the appropriate Unix man pages, and there is a great deal of tutorial information on socket programming in C on the web, much of which can be applied, with slight modifications, to socket programming in PHP.
Örnek 1.



Change the address and port variables to suit your setup and execute.






Örnek 2.




?php error_reporting (E_ALL); echo "h2 TCP / IP Connection / h2 \n"; / * Get the port for the WWW service. * / $service_port = getservbyname ('www', 'tcp'); / * Get the IP address for the target host. * / $address = gethostbyname ('www.php.net'); / * Create a TCP / IP socket. * / $socket = socket_create (AF_INET, SOCK_STREAM, 0); if ($socket 0) {echo "socket_create() failed: reason:". socket_strerror ($socket). "\n";} else {echo "OK.\n";} echo "Attempting to connect to '$address 'on port '$service_port'.. ."; $result = socket_connect ($socket, $address, $service_port); if ($result 0) {echo "socket_connect() failed.\nReason: ($result) ". socket_strerror($result). "\n";} else {echo "OK.\n";} $in = "HEAD / HTTP / 1.0\r\n\r\n"; $out = ''; echo "Sending HTTP HEAD request.. ."; socket_write ($socket, $in, strlen ($in)); echo "OK.\n"; echo "Reading response:\n\n"; while ($out = socket_read ($socket, 2048)) {echo $out;} echo "Closing socket.. ."; socket_close ($socket); echo "OK.\n\n";?
Önceki
Baþlangýç
Sonraki
snmprealwalk
Yukarý
