# language_name_wals:	Turkish
# language_name_glotto:	Turkish
# iso639_3:	tur
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/tr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Kullanım Kılavuzu
Önceki
Sonraki
Ek F.
Extending PHP 3
Adding functions to PHP 3
Function Prototype


Function Arguments



Örnek F-1.





Variable Function Arguments


Örnek F-2.


Using the Function Arguments


Tablo F-1.



























Memory Management in Functions











If you compile with "-DDEBUG", PHP 3 will print out a list of all memory that was allocated using emalloc() and estrdup() but never freed with efree() when it is done running the specified script.
Setting Variables in the Symbol Table




Uyarý



Symbol tables in PHP 3.0 are implemented as hash tables.




Örnek F-3.


Örnek F-4.





Örnek F-5.



Örnek F-6.











Returning simple values


















Returning complex values
































Using the resource list
PHP 3.0 has a standard way of dealing with various types of resources.






Örnek F-7.


Örnek F-8.


Örnek F-9.


Using the persistent resource table
PHP 3.0 has a standard way of storing persistent resources (i.e., resources that are kept in between hits).































Adding runtime configuration directives
Many of the features of PHP 3 can be configured at runtime.















Önceki
Baþlangýç
Sonraki

Yukarý
