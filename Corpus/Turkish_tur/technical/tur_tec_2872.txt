# language_name_wals:	Turkish
# language_name_glotto:	Turkish
# ISO_6393:	tur
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/tr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Kullanım Kılavuzu
Önceki
Bölüm 4.
Güvenlik
Sonraki
Apache Modülü olarak Kurulum
PHP Apache modülü olarak kullanıldığında, Apache' in kullanıcı izinlerini alır (genel olarak "nobody "kullanıcısının").
Bunun güvenlik ve doğrulama işlemlerine birkaç etkisi vardır.
Örneğin, PHP ile veritabanına erişiyorsanız, veritabanı önyüklü bir erişim kontrolüne sahip olmadığı sürece, veritabanını "nobody" kullanıcısı tarafından erişilebilir halde tutmanız gerekir.
Bunun anlamı kötü niyetli bir uygulama kullanıcı ve parola dahi kullanmadan veritabanına erişip üzerinde değişiklik yapabilir demektir.
Bir web örümceğinin veritabanındaki bütün yönetici web sayfalarını alması ve veritabanınızı komple yok etmesi mümkündür.
Bundan Apache doğrulama sistemini kullanarak korunabilirsiniz, ya da örneğin LDAP kullanarak kendi erişim modelinizi oluşturabilir, .htaccess kullanabilir vb. ve bu kodu kendi PHP uygulamalarınıza ekleyebilirsiniz.
Sıklıkla, bir defa PHP kullanıcısı (bu durumda, apache kullanıcısı) çok az riskle çalışır hale getirildiğinde, PHP kullanıcı klasörlerine yazamaz hale gelir.
Ya da belki veritabanlarına erişim ya da işlem yapma hakkını kaybetmiştir.
PHP iyi ve kötü dosyalara, iyi ve kötü veritabanı işlemlerine eşit derecede güvenlik uygular.
Bu noktada sıklıkla yapılan bir güvenlik hatası, apache' a root kullanıcı izni vermek, ya da Apache 'in sınırlarını farklı bir yolla genişletmektir.
Apache kullanıcısının izinlerini root seviyesine çıkartmak oldukça tehlikelidir ve bütün sistemi etkileyebilir.
Bu nedenle sudo, chroot, ve diğer root olarak çalıştırma işlemleri, güvenlik uzmanları tarafından tercih edilmemesi gereken yöntemlerdir.
Daha basit bazı çözümler mevcuttur. open_basedir Daha basit bazı çözümler mevcuttur. open_basedir kullanarak PHP tarafından kullanılabilecek klasörleri kontrol edebilir ve kısıtlayabilirsiniz.
Aynı şekilde yalnızca Apache tarafından erişilebilecek alanları ayarlayabilir, böylece bütün web tabanlı aktiviteyi kontrol altına alabilirsiniz.
Önceki
Baþlangýç
Sonraki
CGI Kurulum
Yukarý
Dosya Sistemi Güvenliği