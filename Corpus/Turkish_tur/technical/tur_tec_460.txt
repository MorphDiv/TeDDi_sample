# language_name_wals:	Turkish
# language_name_glotto:	Turkish
# iso639_3:	tur
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/tr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Kullanım Kılavuzu
Önceki
Sonraki
echo
(unknown)
Description



It is not possible to use echo() in a variable function context, but you can use print() instead.
Örnek 1. echo() examples


The newlines will be\noutput as well ."; echo "escaping characters is done \"Like this\". "/ /You can use variables inside of an echo statement $foo = "foobar"; $bar = "barbaz"; echo "foo is $foo"; / / foo is foobar / / Using single quotes will print the variable name, not the value echo 'foo is $foo'; / / foo is $foo / / If you are not using any other characters, you can just echo variables echo $foo; / / foobar echo $foo,$bar; / / foobarbarbaz echo END This uses the "here document" syntax to output multiple lines with $variable interpolation.

END; / / because echo is not a function, following code is invalid. ($some_var)? echo('true'): echo('false'); / / However, the following examples will work: ($some_var)? print('true'): print('false'); / / print is a function echo $some_var? 'true': 'false'; / / changing the statement around?


See also: print(), printf(), and flush().
Önceki
Baþlangýç
Sonraki

Yukarý
