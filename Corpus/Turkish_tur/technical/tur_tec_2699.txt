# language_name_wals:	Turkish
# language_name_glotto:	Turkish
# iso639_3:	tur
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/tr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Kullanım Kılavuzu
Önceki
Bölüm 7.

Sonraki
Variables from outside PHP
HTML Forms (GET and POST)
When a form is submitted to a PHP script, any variables from that form will be automatically made available to the script by PHP.
If the track_vars configuration option is turned on, then these variables will be located in the associative arrays $HTTP_POST_VARS, $HTTP_GET_VARS, and / or $HTTP_POST_FILES, according to the source of the variable in question.
For more information on these variables, please read Predefined variables.
Örnek 7-1.
Simple form variable
form action=" foo.php "method="post" Name: input type="text "name="username" br input type="submit "/ form
When the above form is submitted, the value from the text input will be available in $HTTP_POST_VARS[ 'username'].
If the register_globals configuration directive is turned on, then the variable will also be available as $username in the global scope.
Not:



Also see addslashes(), stripslashes() and magic_quotes_sybase.

You may, for example, group related variables together, or use this feature to retrieve values from a multiple select input:
Örnek 7-2.

form action=" array.php "method="post" Name: input type="text "name="personal[name]" br Email: input type="text "name="personal[email]" br Beer: br select multiple name="beer[] "option value="warthog" Warthog option value="guinness "Guinness option value="stuttgarter" Stuttgarter Schwabenbr auml;u / select input type="submit "/ form


IMAGE SUBMIT variable names





HTTP Cookies





Any cookies sent to you from the client will automatically be turned into a PHP variable just like GET and POST method data.
If you wish to assign multiple values to a single cookie, just add [] to the cookie name.

setcookie( "MyCookie[]", "Testing", time()+3600);


Örnek 7-3.
SetCookie Example
$Count++; setcookie("Count", $Count, time()+3600); setcookie("Cart[$Count]", $item, time()+3600);
Environment variables
PHP automatically makes environment variables available as normal PHP variables.
echo $HOME; / * Shows the HOME environment variable, if set. * /
Since information coming in via GET, POST and Cookie mechanisms also automatically create PHP variables, it is sometimes best to explicitly read a variable from the environment in order to make sure that you are getting the right version.
The getenv() function can be used for this.
You can also set an environment variable with the putenv() function.
Dots in incoming variable names



$varname.ext; / * invalid variable name * /

Determining variable types

PHP includes several functions which find out what type a variable is.
They are gettype(), is_long(), is_double(), is_string(), is_array(), and is_object().
Önceki
Baþlangýç
Sonraki

Yukarý
