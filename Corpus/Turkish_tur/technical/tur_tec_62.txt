# language_name_wals:	Turkish
# language_name_glotto:	Turkish
# ISO_6393:	tur
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/tr.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Kullanım Kılavuzu
Önceki
Sonraki
Bölüm 50.
PHP and HTML

PHP generate HTML, and HTML has informations that will be sent to PHP.

What encodings / decodings do I need when I pass a value on via a form?
And via an URL?



In order to specify a random string, you must include it in double quotes, and htmlspecialchars the the whole value.



Örnek 50-1.


Not:
It is wrong to urlencode() $data, because it's the browsers reposability to urlencode() the data.



Örnek 50-2.


Not:
The data is shown in the browser as intended, because the browser will interpret the html escaped symbols.

So in the end, you don 't need to do any urlencoding / urldecoding yourself, everything is handeled automagically.
Örnek 50-3.

?php echo "a href=\"". htmlspecialchars(" / nexpage.php?stage=23 data= ". urlencode($data)). "\" \n";?
Not:

Not:


PHP will understand the URL correcly, because you urlencoded() the data.




I' m trying to use an input type="image "tag, but the $foo.x and $foo.y variables aren 't available.



Because $foo.x and $foo.y are invalid variable names in PHP, they are automagically converted to $foo_x and $foo_y.







Not:













Use it 's numerical form element id instead, or enclose the variable name in single quotes and use that as the index to the elements array, for example:

Önceki
Baþlangýç
Sonraki

Yukarý
