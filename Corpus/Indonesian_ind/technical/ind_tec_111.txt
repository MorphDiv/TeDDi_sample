# language_name_wals:	Indonesian
# language_name_glotto:	Indonesian
# iso639_3:	ind
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/id.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Memonitor I/ O untuk% 1 (% 2)
Program '% 1' (PID:% 2) dimonitor untuk masukan dan keluaran melalui deskriptor berkas apapun (stdin, stdout, stderr, berkas terbuka, koneksi, dll). Data yang ditulis oleh proses ditampilkan dalam warna merah dan data yang dibaca oleh proses ditampilkan dalam warna biru.
& Lampirkan
& Jeda
Lanjutkan
Lepas
Gagal melampirkan ke proses% 1.
Lompat ke Proses Induk
Lompat ke Proses Yang Mengawakutu Ini
Tampilkan Jendela Aplikasi
Monitor Masukan & & Keluaran
Lanjutkan Proses Yang Berhenti
Suspensi (STOP)
Lanjutkan (CONT)
Putus (HUP)
Interupsi (INT)
Selesai (TERM)
Matikan (KILL)
Pengguna 1 (USR1)
Pengguna 2 (USR2)
Fokus di Pencarian Cepat
Kirim Sinyal
Lompat ke Proses Induk (% 1)
Sembunyikan Kolom '% 1'
Tampilkan Kolom '% 1'
Tampilkan Unit
Kilobita per detik
Kilobita
Megabita per detik
Megabita
Gigabita per detik
Gigabita
Persentase
Tampilkan opsi baris perintah
Bagi penggunaan CPU dengan jumlah CPU
Informasi Ditampilkan
Karakter dibaca/ ditulis
Jumlah operasi Baca/ Tulis
Bita yang sebenarnya dibaca/ ditulis
Tampilkan rasio I/ O
Tampilkan Tip Alat
Anda tak memiliki hak akses untuk renice proses dan ada masalah ketika coba menjalankan sebagai root. Galat% 1% 2
Anda harus memilih sebuah proses terlebih dahulu.
Anda tak memiliki hak akses yang cukup untuk mengubah penjadwal CPU. Membatalkan.
Anda tak memiliki hak akses yang cukup untuk mengubah prioritas CPU. Membatalkan.
Anda tak memiliki hak akses yang cukup untuk mengubah penjadwal dan prioritas IO. Membatalkan.
Anda tak memiliki hak akses untuk mengubah prioritas I/ O proses dan ada masalah ketika coba menjalankan sebagai root. Galat% 1% 2
Anda tak memiliki hak akses untuk mengubah penjadwal CPU untuk proses dan ada masalah ketika coba menjalankan sebagai root. Galat% 1% 2
Anda tak memiliki hak akses untuk mematikan proses dan ada masalah ketika coba menjalankan sebagai root. Galat% 1% 2
Matikan
Terjemahkan keluaran sebagai perintah berisi VT100. Untuk program berbasis- konsol.
Jika ini dicentang maka sekuensi keluar ANSI akan diterjemahkan dan tidak ditampilkan. Berguna ketika memonitor bash.
Terjemahkan sekuensi keluar ANSI
Tampilkan keluaran dari proses yang dijalankan oleh proses ini.
Ikuti perintah anak dan klon untuk memonitor proses anak
Monitor proses anak
Jeda proses dan keluarannya
Stop baca keluaran dari proses. Ini akan menyebabkan proses diblok, secara efektif menjedakannya. Proses dapat diteruskan dengan melanjutkan, melepaskan, atau menutup dialog.
Stop memonitor proses
Stop memonitor proses dan izinkan proses untuk melanjutkan berjalan.
Kirim sinyal SIGTERM untuk proses terpilih. Lihat Apakah Ini untuk informasi lebih lanjut. Klik kanan pada proses untuk mengirim sinyal lainnya.
<! DOCTYPE HTML PUBLIC "- // W3C // DTD HTML 4. 0 // EN" "http: // www. w3. org/ TR/ REC- html40/ strict. dtd" > p, li {white- space: pre- wrap;} Percobaan untuk mematikan proses yang terpilih saat ini dengan mengirimkannya sinyal SIGTERM. Informasi teknis: Sinyal SIGTERM dikirimkan ke proses yang diberikan. Jika terdapat hak akses yang tidak mencukupi, maka standarnya sebuah sandi akan diminta. Dengan menjalankan program polkit- kde- authorization anda dapat memberikan pengguna tertentu (atau semua) hak akses untuk mematikan proses apapun, tanpa memerlukan sandi.
& Matikan Proses...
Filter proses mana yang ditampilkan oleh teks yang diberikan disini. Teks dapat berupa kecocokan sebagian tali dari Nama, Perintah atau Judul Jendela dari proses. Teks dapat juga berupa Nama Pengguna atau nomor ID Proses. Misalnya: ksysTampilkan proses yang berisi "ksys" dalam namanya, misalnya proses "ksysguard" dan "ksysguardd". rootTampilkan proses yang dimiliki oleh root. Misalnya init 1234Tampilkan proses dengan PID atau PID induk 1234.
Pencarian cepat
Ubah proses mana yang ditampilkan, dan bagaimana mereka ditampilkan. Proses dapat lebih lanjut difilter dengan menggunakan filter teks Pencarian cepat. Semua ProsesTampilkan semua proses di sistem. Semua Proses, pohonTampilkan semua proses di sistem, dalam bentuk hirarki menggunakan informasi PID induk. Proses SistemTampilkan proses yang berjalan sebagai root dan pengguna yang tidak dapat masuk. Proses PenggunaTampilkan proses yang berjalan sebagai pengguna non- root yang dapat masuk. Proses SendiriTampilkan proses yang dimiliki oleh pengguna yang sama yang juga memiliki proses ini. Hanya ProgramTampilkan proses yang berjalan sebagai pengguna yang dapat masuk serta terlampir ke TTY atau memiliki setidaknya satu Jendela X11. Informasi Teknis: Proses dengan banyak benang yang hanya ditampilkan sebagai proses tunggal, dan tidak diperlakukan secara beda. Benang kernel ditampilkan sebagai proses normal, tapi sebenarnya berjalan di dalam kernel dan bukan proses sebenarnya. Sehingga, banyak ruang (seperti misalnya Nama Pengguna) tidak berlaku.
Semua Proses
Semua Proses, Pohon
Proses Sistem
Proses Pengguna
Proses Sendiri
Hanya Program
Ubah prioritas penjadwal untuk:
Penjadwal CPU
p, li {white- space: pre- wrap;} Penjadwal berbagi- waktu standar untuk proses tanpa persyaratan khusus.
p, li {white- space: pre- wrap;} Penjadwalan Normal: Berbagi- waktu Linux standar (Lainnya) Normal adalah penjadwal berbagi- waktu standar Linux yang ditujukan untuk semua proses yang tidak memerlukan mekanisme langsung prioritas statis khusus. Proses yang berjalan dipilih dari senarai Normal lainnya atau proses Batch yang berbasis pada prioritas dinamis yang hanya ditentukan di dalam senarai ini. Prioritas dinamis berbasis pada level prioritas yang diberikan dan ditingkatkan untuk tiap kuantum- waktu yang proses siap jalankan, tapi ditolak untuk dijalankan oleh penjadwal. Ini menjamin kemajuan adil diantara semua proses Normal.
Normal
p, li {white- space: pre- wrap;} Untuk proses intensif- CPU non- interaktif. Proses kurang disukai dalam keputusan penjadwalan.
p, li {white- space: pre- wrap;} Penjadwalan Batch (Sejak Linux 2. 6. 16.) Kebijakan ini mirip Normal, kecuali bahwa kebijakan ini akan menyebabkan penjadwal untuk selalu menganggap bahwa proses adalah intensif- CPU. Konsekuensinya, penjadwal akan menerapkan penalti penjadwalan kecil sehingga proses ini kurang disukai dalam keputusan penjadwalan. Kebijakan ini berguna untuk beban kerja yang non- interaktif, tapi tidak ingin mengurangi nilai baiknya, dan untuk beban kerja yang menginginkan kebijakan penjadwalan yang menentukan tanpa secara interaktif menyebabkan preventif ekstra (di antara tugas beban kerja).
Batch
p, li {white- space: pre- wrap;} Proses akan berjalan kapanpun dapat dijalankan. Prioritas lebih tinggi dibanding Normal atau Batch. Mempunyai pembagian waktu.
p, li {white- space: pre- wrap;} Penjadwalan Round Robin Round Robin adalah peningkatan sederhana dari FIFO. Semua yang dijelaskan di bawah untuk FIFO juga berlaku untuk Round Robin, kecuali untuk tiap proses hanya diizinkan untuk berjalan untuk kuantum waktu maksimum.
Round robin
p, li {white- space: pre- wrap;} Proses akan berjalan kapanpun dapat dijalankan. Prioritas lebih tinggi dari Normal atau Batch. Tak ada pembagian waktu.
p, li {white- space: pre- wrap;} Penjadwalan First In- First Out Ketika proses FIFO dapat dijalankan, proses akan selalu mendahului proses apapun yang saat ini berjalan Normal atau Batch.
FIFO
Penjadwal I/ O
p, li {white- space: pre- wrap;} Prioritas proses berdasarkan prioritas CPU.
p, li {white- space: pre- wrap;} Penjadwalan Normal Hal ini sama dengan penjadwalan Usaha Terbaik, kecuali bahwa prioritas dikalkulasi secara otomatis berdasarkan prioritas CPU. Proses dengan prioritas lebih tinggi akan mendapatkan prioritas untuk mengkases hard disk. Program yang berjalan saat prioritas Usaha Terbaik/ Normal yang disajikan dalam bentuk Round Robin.
p, li {white- space: pre- wrap;} Proses dapat hanya menggunakan hard disk jika tidak ada proses lainnya yang baru- baru ini menggunakannya.
p, li {white- space: pre- wrap;} Penjadwalan Diam Program yang berjalan dengan prioritas I/ O Diam hanya akan mendapatkan waktu cakram ketika tidak ada program lain yang meminta I/ O cakram untuk waktu tenggang yang ditentukan. Dampak dari proses I/ O Diam pada aktivitas sistem normal harus nol. Prioritas tidak dapat diterapkan untuk kelas penjadwal ini.
Diam
p, li {white- space: pre- wrap;} Proses diberikan prioritas lebih tinggi untuk mengakses hard disk ketimbang Normal.
p, li {white- space: pre- wrap;} Penjadwalan Usaha Terbaik Proses dengan prioritas lebih tinggi akan mendapatkan prioritas untuk mengakses hard disk. Program yang berjalan pada saat prioritas Usaha Terbaik/ Normal dilayani dalam bentuk Round Robin.
Usaha terbaik
p, li {white- space: pre- wrap;} Proses mendapatkan akses segera ke hard disk kapanpun diperlukan, tidak peduli apapun yang terjadi.
p, li {white- space: pre- wrap;} Penjadwal Langsung Kelas penjadwal Langsung memberikan akses pertama ke cakram, apapun yang terjadi di dalam sistem. Sehingga kelas Langsung perlu digunakan dengan perlakuan khusus, karena dapat memakan proses lainnya. Sedangkan kelas Usaha Terbaik, 8 level prioritas yang ditentukan menandakan seberapa besar potongan waktu proses yang diberikan akan terima di tiap jendela penjadwal.
Langsung
Prioritas Rendah
Prioritas Tinggi
Galat skrip: Argumen untuk setHtml () bukan tali
Galat skrip: Argumen untuk fileExists () bukan tali
Galat skrip: Argumen untuk readFile () bukan tali
Tak dapat membaca skrip '% 1'. Galat% 2
- Proses sedang melakukan beberapa pekerjaan.
- Proses sedang menunggu untuk terjadinya sesuatu.
- Proses telah berhenti. Proses tidak akan merespon terhadap masukan pengguna saat ini.
- Proses telah selesai dan saat ini mati, tapi proses induk belum dibersihkan.
Nama proses.
Pengguna yang memiliki proses ini.
Terminal pengontrol tempat proses ini berjalan.
Prioritas tempat proses ini dijalankan. Berkisar antara 19 (sangat bagus, prioritas paling rendah) ke - 19 (prioritas tinggi).
Penggunaan proses CPU saat ini.
Penggunaan proses CPU total saat ini.
Ini adalah jumlah ruang memori virtual yang proses gunakan, termasuk pustaka bersama, memori grafis, berkas di cakram, dan sebagainya. Angka ini hampir tidak berarti.
Ini adalah jumlah memori fisik nyata yang proses ini gunakan sendiri. Jumlah tidak termasuk memori yang di- swap, tidak juga ukuran kode pustaka bersamanya. Hal ini seringkali figur yang paling berguna untuk menentukan penggunaan memori dari sebuah program.
Ini adalah jumlah memori fisik nyata yang pustaka bersama proses ini gunakan. Memori ini dibagi ke semua proses yang menggunakan pustaka ini.
Perintah tempat proses ini dijalankan.
Judul jendela apapun yang proses ini tampilkan.
ID Proses unik yang mengidentifikasi proses ini.
Jumlah bita yang dibaca. Lihat Apakah Ini untuk informasi lebih lanjut.
Jumlah bita yang ditulis. Lihat Apakah Ini untuk informasi lebih lanjut.
Informasi Teknis: Nama proses kernel maksimum panjangnya 8 karakter, sehingga perintah penuh diperiksa. Jika kata pertama di baris perintah penuh dimulai dengan nama proses, kata pertama di baris perintah ditampilkan, atau nama proses yang akan digunakan.
Pengguna yang memiliki proses ini. Jika pengguna setuid dll pengguna yang efektif berbeda, pengguna yang memiliki proses akan ditampilkan, diikuti dengan pengguna yang efektif. Tip Alat berisi informasi penuh. Nama/ Grup MasukNama pengguna dari Pengguna Asli/ Grup yang membuat proses iniPengguna/ Grup EfektifProses berjalan dengan hak akses Pengguna/ Grup Efektif. Hal ini ditampilkan jika berbeda dari pengguna asli. Setuid Pengguna/ GrupNama pengguna biner yang disimpan. Proses dapat meningkatkan Pengguna/ Grup Efektifnya ke Setuid Pengguna/ Grup. Sistem Berkas Pengguna/ GrupAkses ke sistem berkas diperiksa dengan Sistem Berkas Pengguna/ Grup. Ini adalah panggilan spesifik Linux. Lihat setfsuid( 2) untuk informasi lebih lanjut.
Ini adalah ukuran ruang alamat yang dialokasi - bukan memori, tapi ruang alamat. Nilai ini dalam praktiknya hampir tidak ada artinya. Ketika sebuah proses meminta blok memori besar dari sistem tapi hanya menggunakan sedikit bagian darinya, penggunaan nyata akan rendah, VIRT akan tinggi. Informasi teknis: Ini adalah VmSize di proc / * / status dan VIRT di atas.
Informasi teknis: Ini adalah URSS - Unique Resident Set Size, dikalkulasi sebagai VmRSS - Dibagi, dari / proc / * / statm. Ini cenderung meremehkan penggunaan memori 'sebenarnya' dari proses (dengan tidak menyertakan halaman memori didukung i/ o), tapi estimasi terbaik yaitu cepat untuk menentukan.
Penggunaan CPU dari proses dan semua benangnya.
Informasi teknis: Ini adalah memori Bersama, bernama SHR di atas. Ini adalah nomor halaman yang didukung oleh berkas (lihat Documentation/ filesystems/ proc. txt kernel.)
Informasi teknis: Ini berasal dari / proc / * / cmdline
Informasi teknis: Untuk tiap jendela X11, properti X11 _ NET_ WM_ PID digunakan untuk memetakan jendela ke PID. Jika jendela proses tidak ditampilkan, maka aplikasi tersebut tidak benar mengatur _ NET_ WM_ PID.
Informasi teknis: Ini adalah ID proses. Aplikasi multi- benang diperlakukan sebagai proses tunggal, dengan semua benang berbagi PID yang sama. Penggunaan CPU dll akan merupakan penggunaan CPU total, diakumulasi, untuk semua benang.
Kolom ini menampilkan statistik IO untuk tiap proses. Tip alat menyediakan informasi berikut: Karakter DibacaJumlah bita yang tugas ini telah sebabkan untuk dibaca dari penyimpanan. Ini adalah jumlah bita yang proses ini teruskan ke read () dan pread (). Statistik meliputi hal- hal seperti IO tty dan tidak terpengaruh oleh ada atau tidaknya IO cakram fisik yang diperlukan (pembacaan cukup dari tembolok halaman). Karakter DitulisJumlah bita yang tigas ini telah sebabkan, atau akan sebabkan untuk ditulis ke cakram. Peringatan yang sama berlaku di sini dengan Karakter Dibaca. Baca Panggilan SistemJumlah operasi I/ O dibaca, misalnya panggilan sistem seperti read () dan pread (). Tulis Panggilan SistemJumlah operasi penulisan I/ O, misalnya panggilan sistem seperti write () dan pwrite (). Bita Yang Sebenarnya DibacaJumlah bita yang proses ini lakukan yang menyebabkan diambil dari lapisan penyimpanan. Dilakukan pada level submit_ bio (), sehingga akurat untuk sistem berkas didukung blok. Ini mungkin tidak memberikan nilai yang masuk akal untuk sistem berkas NFS dan CIFS. Bita Yang Sebenarnya DitulisPercobaan untuk menghitung jumlah bita yang proses ini lakukan yang menyebabkan dikirim ke lapisan penyimpanan. Hal ini dilakukan saat waktu pengotoran halaman. Nomor di dalam tanda kurung menampilkan rasio untuk tiap nilai yang berubah, ditentukan dari melihat selisih di antara nilai sebelumnya dan nilai baru, dan membaginya dengan interval pemutakhiran. Informasi teknis: Data ini diambil dari / proc / * / io dan didokumentasikan lebih lanjut di Documentation/ accounting dan Documentation/ filesystems/ proc. txt di sumber kernel.
Nama Masuk:% 1
Pengguna ini tidak dikenali karena beberapa alasan.
% 1
Nama Masuk:% 1 (uid:% 2)
Nomor Ruangan:% 1
Telepon Kantor:% 1
Pengguna Efektif:% 1
Setuid Pengguna:% 1
Sistem Berkas Pengguna:% 1
Grup:% 1
Grup Efektif:% 1
Setuid Grup:% 1
Sistem Berkas Grup:% 1Short description of a process. PID, name, user
% 1:% 2, dimiliki oleh pengguna% 3
% 1 (gid:% 2)
% 1 (uid:% 2)
% 1/ dtooltip. name, pid
Proses ini sedang diawakutu oleh% 1 (% 2)
Init adalah induk dari semua proses lain dan tak dapat dimatikan.
KThreadd mengelola benang kernel. Proses anak berjalan di dalam kernel, mengontrol akses hard, dll. name column tooltip. first item is the name
% 1 ID Proses:% 2 name column tooltip. first item is the name
% 1 ID Proses:% 2 Induk:% 3 ID Induk:% 4 name column tooltip. first item is the name
% 1 ID Proses:% 2 ID Induk:% 3
Perintah:% 1
Berjalan di:% 1
Proses ini dijalankan dengan perintah berikut:% 1
Berjalan di:% 1
Level baik:% 1 (% 2)
Prioritas penjadwal:% 1
Penjadwal:% 1
Level Baik I/ O:% 1 (% 2)
Kelas I/ O:% 1
Status proses:% 1% 2Penggunaan CPU pengguna:% 3% Penggunaan CPU sistem:% 4%
Jumlah anak:% 1 Penggunaan CPU pengguna total:% 2% Penggunaan CPU sistem total:% 3% Penggunaan CPU total:% 4%
Waktu yang dihabiskan CPU ketika berjalan sebagai pengguna:% 1 detik
Waktu yang dihabiskan CPU ketika berjalan di kernel:% 1 detik
Level baik:% 1 (% 2)
Penggunaan memori:% 1 dari% 2 (% 3%)
Penggunaan memori:% 1
RSS penggunaan memori:% 1 dari% 2 (% 3%)
RSS penggunaan memori:% 1
Sistem anda kelihatannya tidak memiliki informasi ini yang tersedia untuk dibaca.
Penggunaan memori pustaka bersama:% 1 dari% 2 (% 3%)
Penggunaan memori pustaka bersama:% 1
Karakter dibaca:% 1 (% 2 KiB/ d) Karakter ditulis:% 3 (% 4 KiB/ d) Panggilan sistem dibaca:% 5 (% 6 s⁻¹) Panggilan sistem ditulis:% 7 (% 8 s⁻¹) Bita yang sebenarnya dibaca:% 9 (% 10 KiB/ d) Bita yang sebenarnya ditulis:% 11 (% 12 KiB/ d) process heading
Namaprocess heading
Nama Penggunaprocess heading
PIDprocess heading
TTYprocess heading
Kebaikanprocess heading
CPU% process heading
IO Bacaprocess heading
IO Tulisprocess heading
Ukuran Virtualprocess heading
Memoriprocess heading
Memori Bersamaprocess heading
Perintahprocess heading
Judul Jendela
% 1 K
% 1 M
% 1 G
% 1%
Renice Proses