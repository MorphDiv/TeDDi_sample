# language_name_wals:	Finnish
# language_name_glotto:	Finnish
# iso639_3:	fin
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/fi.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

PHP Käsikirja
Edellinen
Seuraava
Jäsentäessään tiedostoa PHP yksinkertaisesti ohittaa kaiken sisällön siihen asti, kunnes se löytää erityisen aloitustagin, joka kertoo jäsentimelle aloittaa koodin PHP-tulkkaus.
Sitten tulkki suorittaa kaiken koodin jonka löytää, aina PHP-lopputagiin asti.
Tämän jälkeen tulkki aloittaa tekstin ohittamisen uudelleen.
Tämä mekanismi antaa mahdollisuuden lisätä PHP-koodia HTML:n sisään: kaikki PHP-tagin ulkopuolella jätetään täysin rauhaan, kun taas kaikki muu tulkataan PHP-koodina.
PHP:ssa on neljä tagiparia, joita voidaan käyttää koodin erottelemiseen.
Näistä kaksi (?php...? ja script language="php "... / script) toimivat aina; muut voidaan ottaa käyttöön tai pois käytöstä php.ini asetustiedostossa.
Vaikka lyhyempimuotoiset ja ASP-tyyliset tagit voivat olla käteviä, niitä tulisi välttää varsinkin jos haluaa koodinsa toimivan asetuksista riippumatta.
Jos aikomuksena on sisällyttää PHP-koodia XML - tai XHTML-dokumenteissa, täytyy käyttää ?php...? muotoa.
PHP:n tukemat tagit ovat:
Esimerkki 6-1.
Tapoja erotella koodi HTML:stä
1.? echo ("tämä on yksinkertaisin SGML-merkintätapa\n");? ?= lauseke?
Tämä on helpompi tapa ilmaista "? echo lauseke?" 2. ?php echo("XHTML - ja XML-dokumenttien kanssa voidaan käyttää seuraavaa menetelmää\n");?
3. script language=" php "echo ("jotkut editorit (kuten FrontPage) eivät pidä tällaisesta merkintätavasta"); / script 4.% echo ("ASP-tagejä voidaan myös vaihtoehtoisesti käyttää");% %= $muuttuja; # Tämä on helpompi tapa ilmaista"% echo... "%
Ensimmäinen vaihtoehto on käytettävissä ainoastaan, jos lyhyet tagit ovat sallittu.
Ne voidaan sallia funktion short_tags() avulla (PHP3 ainoastaan), muuttamalla short_open_tag asetusta PHP:n konfiguraatiotiedostossa, tai kääntämällä PHP --enable-short-tags -parametrillä configure komennon kanssa.
Huomautettakoon, että toisena listattu merkintätapa on yleisesti suositeltu, koska se mahdollistaa PHP:n käytön XML:ää noudattavan koodin, kuten XHTML:n kanssa.
Neljäs vaihtoehto on käytettävissä ainoastaan, jos ASP-tyyliset tagit ovat sallittu konfiguraatiotiedoston asp_tags asetuksella.
Huomaa:
ASP-tyylisten tagien tuki on lisätty versiossa 3.0.4.
Lohkon lopetustagi sisältää heti seuraavana tulevan rivinvaihdoin, mikäli sellainen vain on.
Näin ollen tarvitaan kaksi rivinvaihtoa, jos lopulliseen tulosteeseen halutaan rivinvaihto lopetustagin jälkeen.
Lopetustagi sisältää myös puolipisteen; PHP-lohkon viimeisellä rivillä ei näin ollen tarvitse olla rivin lopettavaa puolipistettä.
PHP mahdollistaa seuraavanlaisten rakenteiden käytön:
Esimerkki 6-2.
Kehittyneempää erottelemista
?php if ($lauseke) {? strong Tämä on tosi / strong ?php} else {? strong Tämä on epätosi. / strong ?php}?
Edellinen
Alkuun
Seuraava
Syntaksi
Ylös
Lausekkeiden erottelu