# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# ISO_6393:	spa
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manual de PHP
Anterior
Siguiente

Parecida a fgets() excepto que fgetcsv() parsea la línea que lee buscando campos en formato CSV y devuelve un array conteniendo los campos leidos.
El delimitador de campo es una coma, a menos que se especifique otro delimitador con el tercer parámetro opcional.
fp debe ser un apuntador válido a un fichero abierto con éxito por fopen(), popen(), o fsockopen()
la longitud debe ser mayor que la línea más larga que pueda encontrarse en le fichero CSV (permitiendo arrastrar caracteres de fin de línea)
fgetcsv() devuelve FALSE en caso de error, incluyendo el fin de fichero.
NOTA:
Una línea en blanco en un fichero CSV se devuelve como un array que contiene un único campo nulo, y esto no será tratado como un error.
Ejemplo 1.
Ejemplo de fgetcsv() - Leer e imprimir el contenido completo de un fichero CSV
$row = 1; $fp = fopen ("test.csv" ,"r"); while ($data = fgetcsv ($fp, 1000, ",")) {$num = count ($data); print" p $num fields in line $row: br "; $row++; for ($c=0; $c $num; $c++) {print $data[$c]." br ";}} fclose ($fp);
Anterior
Inicio
Siguiente

Subir
