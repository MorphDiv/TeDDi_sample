# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# ISO_6393:	spa
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manual de PHP
Anterior
Apéndice C.
Migrando de PHP / FI 2.0 a PHP 3.0
Siguiente
La mayoria de las funciones internas han sido reescritas, asi que devuelven TRUE (verdadero) si hubo éxito, o FALSE (falso) si hubo falla, en oposición a los valores 0 y -1 de PHP / FI 2.0, para idénticas circunstancias.
La nueva respuesta permite mas código lógico, como $fp = fopen( "/ su / fichero") or fail("diablos !");.
Puesto que PHP / FI 2.0 no tiene reglas claras acerca de lo que devuelven las funciones cuando fallan, scripts de este tipo deberán revisarse manualmente despues de usar el conversor de 2.0 a 3.0.
Ejemplo C-9.
Migración desde 2.0:
Valores de retorno, codigo viejo
$fp = fopen( $file, "r"); if ($fp == -1); echo("No se pudo abrir el fichero $file para su lectura br \n"); endif;
Ejemplo C-10.
Migración desde 2.0:
Valores de retorno, codigo nuevo
$fp = @fopen( $file, "r") or print("No se pudo abrir el fichero $file para su lectura br \n");
Anterior
Inicio
Siguiente
Evaluación booleana por corto-circuito
Subir
Otras incompatibilidades