# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# ISO_6393:	spa
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manual de PHP
Anterior
Apéndice C.
Migrando de PHP / FI 2.0 a PHP 3.0
Siguiente
El modulo Apache de 3.0 no soportará versiones de Apache anteriores a la 1.2.
Es requisito Apache 1.2 o posterior.
echo() no soportará las cadenas de formato.
Use en su lugar la función printf().
En PHP / FI 2.0, un efecto colateral en la implementación hacía que $foo[ 0] tenga el mismo efecto que $foo.
Esto ya no es así en PHP 3.0.
La lectura de arreglos con $array[] ya no está soportada
Esto es, no se puede recorrer un arreglo mediante un bucle que ejecute $data = $array[].
Use current() y next() en su lugar.
Tambien, $array1[] = $array2 no agrega los valores de $array2 a $array1, pero agrega $array2 como la última entrada de $array1.
Véase tambien el soporte de arreglos multidimensionales.
"+" ya no funciona como operador de concatenación de cadenas, sino que convierte los argumentos, a números, y realiza una suma numérica.
Utilize "." en su lugar.
Ejemplo C-11.
Migración desde 2.0: concatenando cadenas
echo "1" + "1";
En PHP 2.0 esto mostraría 11, en PHP 3.0 sería 2.
Use en su lugar:
echo "1" ."1";
$a = 1; $b = 1; echo $a + $b;
Esto dá 2 igualmente en PHP 2.0 y 3.0.
$a = 1; $b = 1; echo $a.$b;
Anterior
Inicio
Siguiente
Retorno de valores en funciones verdadero / falso
Subir
El debugger de PHP