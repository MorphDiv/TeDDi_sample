# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# ISO_6393:	spa
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Características avanzadas de Amarok
Accesos rápidos de teclado
& amarok; utiliza los accesos rápidos de forma similar a otras aplicaciones. A continuación se muestra una lista de los accesos rápidos y de sus respectivas acciones. Los accesos rápidos globales pueden configurarse pulsando con el botón derecho en la ventana del reproductor y seleccionando Configurar accesos rápidos globales... Los accesos rápidos de & amarok; pueden configurarse pulsando con el botón derecho sobre la ventana del reproductor y seleccionando Configurar accesos rápidos...
Puede hacer que sus teclas multimedia funcionen como accesos rápidos de & amarok; haciendo de su teclado un centro de control de & amarok;.
Los accesos rápidos globales son:
Combinación de teclas
Acción
Win X
Reproducir
Win C
Pausa
Win V
Parar
Win B
Siguiente pista
Win Z
Pista anterior
Win Tecla + del teclado numérico
Subir el volumen
Win Tecla - del teclado numérico
Bajar el volumen
Win Shift; Tecla + del teclado numérico
Buscar hacia delante
Win Shift; Tecla - del teclado numérico
Buscar hacia detrás
Win A
Añadir medio
Win P
Cambiar lista de reproducción
Win O
Mostrar OSD
Win M
Silenciar volumen
Los accesos rápidos de & amarok; son:
& Ctrl; C
Copiar
& Ctrl; Tecla Entrar del teclado numérico
Ir a la actual
& Ctrl; D
Encolar pistas seleccionadas
& Ctrl; Q
Salir
& Ctrl; Shift; Z
Rehacer
& Ctrl; S
Guardar lista de reproducción
& Ctrl; A
Seleccionar todo
& Ctrl; M
Mostrar barra de menú
& Ctrl; H
Barajar
& Ctrl; Z
Deshacer
Los accesos rápidos del Navegador de la lista de reproducción son:
Espacio
Cargar lista de reproducción
F2
Renombrar lista de reproducción
& Backspace;
Eliminar lista de reproducción
La interfaz DCOP
La interfaz DCOP de Amarok le proporciona una forma sencilla de controlar Amarok con sus propios guiones personalizados.
La interfaz DCOP de Amarok tiene muchas llamadas genéricas que pueden encontrarse en otras aplicaciones de KDE. Esta sección se divide en seis tablas y pretende describir las llamadas DCOP de la colección, del reproductor, de la lista de reproducción y de los guiones. Un ejemplo de la llamada dcop « pausa » podría ser algo parecido a esto:
percnt; dcop amarok player pause
dcop para la colección de amarok
Llamada DCOP
int totalAlbums()
Devuelve el número total de álbumes de la colección.
int totalArtists()
Devuelve el número total de artistas de la colección.
int totalCompilations()
Devuelve el número total de compilaciones de la colección.
int totalGenres()
Devuelve el número total de géneros de la colección.
int totalTracks()
Devuelve el número total de pistas de la colección.
QString query( QString sql)
Consulta la base de datos a través de SQL.
QStringList similarArtists( int artists)
Devuelve artistas similares al de la pista actual. El límite es el valor de int artists.
void migrateFile( QString oldURL, QString newURL)
Mueve un archivo en la colección, manteniendo las estadísticas intactas.
void scanCollection()
Explora la colección.
void scanCollectionChanges()
Explorar la colección para encontrar cambios.
dcop para el navegador contextual de amarok
void showCurrentTrack()
Muestra la pista actual del navegador contextual.
void showLyrics()
Muestra la pestaña de la letra en el navegador contextual.
void showWiki()
Muestra la pestaña wikipedia en el navegador contextual.
dcop para el reproductor de amarok
bool dynamicModeStatus()
Devuelve el estado del modo dinámico.
bool equalizerEnabled()
Devuelve el estado del ecualizador.
bool isPlaying()
Devuelve verdadero si se está reproduciendo algo.
bool randomModeStatus()
Devuelve el estado del modo aleatorio.
bool repeatPlaylistStatus()
Devuelve el estado de repetir lista.
bool repeatTrackStatus()
Devuelve el estado de repetir pista.
int getVolume()
Devuelve el volumen dentro del rango 0-100%.
int sampleRate()
Devuelve la tasa de muestreo de la pista que se está reproduciendo.
int score()
Devuelve la puntuación de la pista que se está reproduciendo.
int status()
Devuelve el estado de la reproducción: 0 - detenido, 1 - parado, 2 - reproduciendo.
int trackCurrentTime()
Devuelve la posición de la pista actual en segundos.
int trackPlayCounter()
Devuelve el contador de reproducción para la pista actual.
int trackTotalTime()
Devuelve la longitud de la pista en segundos.
QString album()
Devuelve el álbum de la pista que se está reproduciendo.
QString artist()
Devuelve el artista de la pista que se está reproduciendo.
QString bitrate()
Devuelve el ratio de bits de la pista que se está reproduciendo (XX kbps).
QString comment()
Devuelve el comentario de la pista que se está reproduciendo.
QString coverImage()
Devuelve el URL de la imagen de la carátula de la pista que se está reproduciendo
QString currentTime()
Devuelve la posición de la pista que se está reproduciendo (formato [h: ]mm: ss).
QString encodedURL()
Devuelve la URL codificada de la pista que se está reproduciendo.
QString engine()
Devuelve el motor de sonido actual.
QString genre()
Devuelve el género de la pista que se está reproduciendo.
QString lyrics()
Devuelve la letra de la pista que se está reproduciendo.
QString lyricsByPath( QString path)
Devuelve la letra de una pista utilizando su ruta.
QString nowPlaying()
El título del medio que se está reproduciendo.
QString path()
Devuelve la ruta sin codificar de la pista que se está reproduciendo.
QString setContextStyle( QString)
Establece el estilo CSS para el navegador contextual.
QString title()
Devuelve el título de la pista que se está reproduciendo.
QString totalTime()
Devuelve la longitud total de la pista que se está reproduciendo (formato [h: ]mm: ss).
QString track()
Devuelve el número de pista.
QString type()
Devuelve el tipo de archivo.
QString year()
Devuelve el año de la pista que se está reproduciendo.
void configEqualizer()
Diálogo de configuración para cambiar el ecualizador.
void enableDynamicMode(bool enable)
Activa o desactiva el modo dinámico.
void enableOSD(bool enable)
Activa o desactiva la pantalla OSD.
void enableRandomMode(bool enable)
Activa o desactiva el modo aleatorio.
void enableRepeatPlaylist(bool enable)
Activa o desactiva la repetición de la lista de reproducción.
void enableRepeatTrack(bool enable)
Activa o desactiva la repetición de la pista.
void mediaDeviceMount()
Establece la orden utilizada para montar un dispositivo de medios.
void mediaDeviceUmount()
Establece la orden utilizada para desmontar un dispositivo de medios.
void mute()
Cambia el modo silencioso.
void next()
Equivalente a pulsar el botón « Siguiente ».
void pause()
Equivalente a pulsar el botón « Pausa ».
void play()
Equivalente a pulsar el botón « Reproducir ».
void playPause()
Cambia el estado de reproducir/ detener (bueno para los usuarios de teclados multimedia)
void prev()
Equivalente a pulsar el botón « Anterior ».
void queueForTransfer( KURL url)
Archivo de cola para transferir dispositivos al medio.
void seek(int s)
Se sitúa en la posición establecida en segundos.
void seekRelative(int s)
Se sitúa en la posición relativa de la pista actual.
void setEqualizer(int, int, int, int, int, int, int, int, int, int, int)
Establece las bandas del ecualizador
void setEqualizerEnabled( bool active)
Cambiar el ecualizador.
void setEqualizerPreset( QString name)
Establece el ecualizador preseleccionado
void setLyricsByPath( QString url, QString lyrics)
Establece la letra de la pista utilizando su ruta.
void setScore( int score)
Establece la puntuación de la pista que se está reproduciendo.
void setScoreByPath( QString url, int score)
Establece la puntuación de la pista utilizando su ruta.
void setVolume(int volume)
Establece el volumen dentro del rango 0-100%.
void showBrowser( QString browser)
Muestra los navegadores en la ventana de la lista de reproducción
void showOSD()
Muestra la OSD en la pantalla.
void stop()
Equivalente a pulsar el botón « Detener ».
void transferDeviceFiles()
Transfiere archivos al dispositivo de medios.
void volumeDown()
Reduce el volumen un paso razonable.
void volumeUp()
Aumenta el volumen un paso razonable.
dcop para la lista de reproducción de amarok
int getActiveIndex()
Devuelve el índice de la pista actualmente activa. -1 sino hay.
int getTotalTrackCount()
Devuelve el número de pistas en la lista de reproducción. 0 sino hay.
QString saveCurrentPlaylist()
Guarda la lista de reproducción actual en current. xml y devuelve su ruta.
void addMedia( KURL)
Añade el medio de audio especificado por la url.
void addMediaList( KURL: :List)
Añade los dispositivos de audio especificados en la url.
void clearPlaylist()
Borra la lista de reproducción.
void playByIndex(int)
Inicia la reproducción de la pista con el índice especificado.
void playMedia( KURL)
void popupMessage( QString)
Muestra un mensaje emergente temporal.
void removeCurrentTrack()
Elimina la pista actual de la lista de reproducción.
void repopulate()
Rellena la lista de reproducción con pistas aleatorias.
void saveM3u( QString path, bool relativePaths)
Guarda la lista de reproducción actual como m3u.
void setStopAfterCurrent( bool)
Activa/ desactiva la característica « Detener después de la pista actual ».
void shortStatusMessage( QString)
Muestra temporalmente un mensaje en la barra de estado.
void shufflePlaylist()
Baraja la lista de reproducción.
void togglePlaylist()
Muestra u oculta la ventana de la lista de reproducción.
dcop para el navegador de la lista de reproducción de amarok
void addPodcast( QString)
Añade la entrada de una emisión de audio (podcast) en el navegador de la lista de reproducción.
void scanPodcasts()
Explorar todas las emisiones de audio para actualizarlas.
void addPlaylist( QString)
Añade una lista de reproducción al navegador de la lista de reproducción.
dcop para los guiones de amarok
bool runScript( QString name)
Inicia el guión con el nombre dado. Devuelve true (verdadero) si funcionó.
bool stopScript( QString name)
Detiene el guión con el nombre dado. Devuelve true (verdadero) si funcionó.
QStringList listRunningScripts()
Devuelve una lista de todos los guiones que se estén ejecutando.
void addCustomMenuItem(QString submenu, QString itemTitle)
Activa y establece el título del elemento de menú personalizado.
void removeCustomMenuItem(QString submenu, QString itemTitle)
Elimina el elemento del menú personalizado.
QString readConfig( QString key)
Devuelve el valor de una entrada de la configuración de Amarok de acuerdo con la clave dada.
Opciones de la línea de órdenes
Amarok soporta el uso de las opciones de la línea de órdenes de Qt y kde estándar. Amarok también tiene sus propias opciones específicas de la aplicación.
Las opciones de Qt y kde:
Opción
--help
Muestra ayuda sobre las opciones.
--help-qt
Muestra ayuda sobre las opciones específicas de Qt.
--help-kde
Muestra opciones específicas de KDE.
--help-all
Muestra todas las opciones.
--author
Muestra información sobre el autor.
-v, --version
Muestra información sobre la versión.
--license
Muestra información sobre la licencia.
Las opciones de Amarok:
Las opciones de & amarok; están diseñadas para utilizarse mientras & amarok; se está ejecutando.
-r, --previous
Va a la pista anterior en la lista de reproducción.
-p, --play
Inicia la reproducción de la lista de reproducción actual.
-s, --stop
Detiene la reproducción.
--pause
Detiene la reproducción.
-f, --next
Va a la siguiente pista en la lista de reproducción.
-a, --append
Añade archivos/ URLs a la lista de reproducción.
-e, --enqueue
Consulte « append ». Disponible por razones de compatibilidad.
--queue
Encola los archivos/ URLs después de la pista que se está reproduciendo.
-m, --toggle-playlist-window
Muestra u oculta la ventana de la lista de reproducción.
--wizard
Inicia el asistente de primera ejecución.
--engine "nombre"
Inicia & amarok; con el motor « nombre ».
Escribir un guión
Los guiones permiten extender & amarok; con facilidad sin cambiar el código base principal. Los guiones son similares a las extensiones, pero en lugar de tener una API de extensiones dedicada utiliza la interfaz DCOP de & amarok; para comunicarse. Éste hace posible la escritura de guiones en la mayor parte de los lenguajes de programación, como Ruby, Python o PHP. No solo puede crear guiones en sus lenguajes clásicos, sino también en lenguajes compilados como C++ o C simple. Además, & amarok; puede notificar ciertos eventos a los guiones y reaccionar de forma acorde. Este sistema de notificación se explicará posteriormente en esta sección.
Interfaces
Es posible escribir guiones simples que no necesiten interacción del usuario, y también es posible crear guiones con GUIs confortables que actúan como pequeñas aplicaciones independientes. Para la programación de GUI se pueden utilizar muchas de las interfaces que proporciona KDE, por ejemplo RubyQt, una biblioteca QT de interfaces para Ruby. Sin embargo, debe tener en cuenta que no todos los usuarios tienen todas las interfaces instaladas. Si decide utilizar una interfaz, pruebe a utilizar una de las más usadas (p. ej. RubyQt o PyQt).
Para provocar alguna reacción cuando falla la ejecución de un guiones por culpa de que falta una dependencia, compruebe si el módulo que desea incluir en su guión existe. Si falta la dependencia, debería capturar el error y mostrar un diálogo con información utilizando la herramienta de la línea de órdenes « kdialog », de forma que el usuario sepa porqué falló la ejecución del guión.
Este ejemplo muestra la captura de una dependencia que falta en Ruby:
begin require 'Korundum 'rescue LoadError error = 'Este guión necesita Korundum (interfaz de KDE para ruby) que se encuentra en kdebindings v3.4.' ` kdialog --sorry '#{error} '` exit end
Comenzando: Los modelos
& amarok; proporciona guiones modelo para varios lenguajes en el directorio scripts/ templates/. Puede utilizar estos guiones como base para los suyos propios, y extenderlo con la funcionalidad que necesite. Verá que la programación es bastante intuitiva. Por ejemplo, si sabe programar un poquito en Python, hacer su propio guión no le tomará mucho tiempo.
Controlar & amarok; con DCOP
Los programas pueden controlar Amarok llamando a algunas funciones DCOP. La forma más sencilla es llamar a la función utilizando la utilidad de la línea de órdenes « dcop », que forma parte de cada distribución de KDE.
Veamos un ejemplo para incrementar el volumen:
dcop amarok player volumeUp
La mayor parte de los lenguajes de guiones permiten ejecutar programas externos, con una función como exec(). De esta forma la utilidad « dcop » puede llamarse fácilmente. Veamos un ejemplo simple en Python:
import os os. system("dcop amarok player volumeDown ")
Notificaciones
& amarok; envía notificaciones a todos los guiones en ejecución escribiendo cadenas en el canal de la entrada estándar stdin. No obstante el guión debería estar escuchando constantemente en stdin, para poder reaccionar de acuerdo con cada uno de los posibles eventos. Los guiones también pueden decidir ignorar cualquier evento que no necesiten.
& amarok; envía las siguientes notificaciones:
configure Indica al guión que muestre el diálogo de configuración. El guión debe manejar el guardado y carga de las opciones de configuración por sí mismo. Cuando se inicia un programa, Amarok asigna la carpeta donde está el directorio de trabajo, siendo ésta el lugar en el que se guardarán los datos.
engineStateChange: empty|idle|paused|playing Asigna un cambio en el estado del motor.
trackChange Asigna el inicio de una nueva pista. El programa puede utilizar las funciones DCOP para pedir más información sobre la pista, p. ej., metadatos y longitud.
volumeChange nuevoVolumen Establece un cambio en el nivel del volumen. El volumen es un entero con un rango de entre 0 y 100.
customMenuClicked: submenú títuloElemento rutas Devuelve las rutas de los archivos seleccionados en la lista de reproducción cuando se pulse el elemento del menú contextual El submenú y el títuloElemento se devuelven para identificar los propósitos en el caso de que el guión estuviera esperando varias notificaciones. Para insertar un elemento en el menú contextual utilice la llamada DCOP « dcop amarok script addCustomMenuItem( submenú títuloElemento) ». Para eliminar un elemento del menú contextual utilice la llamada DCOP « dcop amarok script removeCustomMenuItem( submenú títuloElemento) ».
Terminación del guión
Antes de salir de & amarok;, o cuando se detiene el guión con el Gestor de guiones, & amarok; envía la señal SIGTERM al guión. La señal debe capturarse para hacer un trabajo limpio, permitiendo guardar los datos o la configuración.
Empaquetado
El Gestor de guiones de & amarok; es capaz de instalar paquetes de programas que el usuario haya descargado del servidor web. Los paquetes son simplemente archivos comprimidos. tar, y opcionalmente archivos comprimidos con bzip2 (. bz2). Le recomendamos encarecidamente el uso de un nombre de archivo del estilo miscript. amarokscript. tar. bz2, de forma que el usuario pueda identificar con facilidad el paquete como un guión de Amarok.
& amarok; 1.3 solo aceptará paquetes de guiones con la extensión amarokscript, por tanto, es mejor utilizarlo para comenzar.
El contenido del paquete comprimido debe estar organizado de la siguiente forma:
miscript/ README miscript. py (ejecutable) algunmodulo. py foo. data...
Permisos de los archivos
El guión principal deber tener permisos de ejecución (+x), mientras que los módulos adicionales que cargue el guión no deberían tener permisos de ejecución. Para preservar los permisos del archivo en el archivo comprimido, debería utilizar el parámetro -p:
tar -cf miscript. amarokscript. tar -p miscript
& amarok; no podrá instalar el guión si los permisos no están correctamente establecidos.
Distribución
Cuando finalice el paquete, puede subirlo a www. kde-apps. org, y añadir el enlace a la página wiki de guiones de & amarok;. Para introducir la entrada en kde-apps debería utilizar la categoría Guiones de & amarok;.
Establece la orden utilizada para desmontar un dispositivo de medios.
Win Mayúsculas Tecla + del teclado numérico
Win Mayúsculas Tecla - del teclado numérico
Ctrl C
Ctrl D
Ctrl Q
Ctrl Mayúsculas Z
Ctrl S
Ctrl A
Ctrl M
Ctrl H
Ctrl Z