# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# ISO_6393:	spa
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDE4
# source:	https://object.pouta.csc.fi/OPUS-KDE4/v2/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/KDE4.php
# copyright_long:	http://opus.nlpl.eu/KDE4.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Glosario
En este capitulo encontraremos una explicación de la mayoría de las palabras inusuales que utilizaremos a lo largo del manual.
grados
En geometría, los grados son unidades utilizadas para la medición de ángulos, y representan cada una de las 360 partes iguales en las que puede dividirse la circunferencia. Es decir, un giro completo es un giro de 360 grados. Del mismo modo, con un giro de 180 grados obtenemos una media vuelta. Los comandos izquierda, derecha y dirección consideran que el parámetro ingresado está expresado en grados.
entrada y salida de comandos
A lo largo de este manual, observaremos que no todos los comandos se comportan de la misma manera. Mientras que algunos comandos devuelven valores, otros requieren que se les pasen valores como parámetros. Adicionalmente, otros comandos no devolverán valores ni requerirán parámetros de ingreso.
Veamos algunos ejemplos de comandos que solo aceptarán parámetros de entrada: avanzar 50 colorpluma 255,0,0 escribir "Hola!" Aquí, el comando avanzar toma el valor 50 como parámetro de entrada. Así, avanzar necesita un parámetro numérico para saber cuantos pixeles deberá adelantarse. Del mismo modo, colorpluma toma un color como parámetro de entrada y escribir toma una cadena de texto. Otro tipo de parámetro de entrada esta representado por las variables. Veremos a ejemplo del uso de variables a continuación:
x = 50 escribir x a = "¡Hola!" escribir a
Ahora, veremos ejemplos de comandos que devuelven un valor de salida: x = pregunta "Aquí podemos ingresar lo que se nos ocurra:" r = aleatorio 1,100 Así, el comando pregunta toma una cadena como parámetro de ingreso, devuelve como salida lo que sea que hallamos ingresado y lo guarda en la variable x. Luego, el comando aleatorio también devuelve un valor de salida, que en este caso será un número entre 1 y 100 que almacenará en la variable r. Notemos que en este caso no estamos haciendo nada con los valores contenidos en las variables x y r.
Finalmente, veamos algunos ejemplos de comandos que no requieren parámetros de entrada, ni devuelven valores de salida:
limpiar levantarpluma envolver ocultartortuga
resaltado intuitivo
Esta es una característica de & kturtle; que hará más amena nuestra tarea de programar en LOGO. Con el resaltado intuitivo de sintaxis, el código que vamos generando se colorea automáticamente en función del tipo de código que estamos ingresando. En la lista de abajo, veremos los diferentes colores que puede tomar nuestro código a medida que lo vamos ingresando en el editor de código.
Diferentes tipos de código y su color de resaltado
comandos regulares
rojo oscuro
Los comandos regulares se describen aquí.
controladores de ejecución
negro (negrita)
Los comandos que definen estructuras de control. Veremos saber más acerca de las estructuras de control en este enlace.
comentarios
gris
Cuando una línea de código comience con el carácter #, será interpretado como un comentario y se ignorará durante la ejecución del código. Así, los comentarios nos permiten explicar nuestro código en lenguaje coloquial. Y adicionalmente, los comentarios nos permiten suprimir alguna línea de código temporalmente sin tener que borrarla.
corchetes [,]
verde claro (negrita)
Utilizaremos los corchetes para agrupar porciones de código. Los corchetes son con frecuencia utilizados en combinación con los controladores de ejecución.
El comando aprender
verde claro (negrita)
El comando aprender es utilizado para crear nuevas funciones.
cadenas
rojo
Son cadenas de texto. Siempre deben estar entre comillas dobles (").
números
rojo oscuro
Son números ¿Que más podríamos decir?
Operadores matemáticos
Existen comandos que necesitan un número de pixels como parámetros de entrada. Estos son: avanzar, retroceder, ir, irx, iry, tamañolienzo y grosorpluma.
verde claro (negrita)
Existen comandos que necesitan un número de pixels como parámetros de entrada. Estos son: avanzar, retroceder, ir, irx, iry, tamañolienzo y grosorpluma.
negro (negrita)
Existen dos comandos que necesitan de combinaciones RGB como parámetro de entrada: colorlienzo y colorpluma.
texto regular
negro
pixeles
Básicamente, un pixel es un punto en la pantalla de la computadora. Todas las imágenes que vemos en el monitor, están formadas por pixels. Un pixel es la parte más pequeña que compone una imagen en la computadora.
Existen comandos que necesitan un número de pixels como parámetros de entrada. Estos son: avanzar, retroceder, ir, irx, iry, tamañolienzo y grosorpluma.
Combinaciones RGB (código de colores)
Las combinaciones RGB (en inglés) o RVA si lo castellanizamos, se utilizan para describir colores. La R (del inglés red, representa el rojo), la G (del inglés green, representa al verde), y la B (del inglés blue, representa al azul). Un ejemplo de un combinación RGB es 255,0,0: el primer valor (rojo) es 255 y los otros dos son 0. De modo que esto representa un color rojo fuerte. Cada valor de la combinación RGB debe estar en el rango que va de 0 a 255. He aquí una lista de alguno de los colores más utilizados:
combinaciones RVA (RGB) frecuentemente utilizadas
0,0,0
255,255,255
blanco
255,0,0
150,0,0
0,255,0
verde
0,0,255
azul
0,255,255
azul claro
255,0,255
rosa
255,255,0
amarillo
Existen dos comandos que necesitan de combinaciones RGB como parámetro de entrada: colorlienzo y colorpluma.
figura
Llamaremos figura a la pequeña imagen que se desplaza sobre el área de dibujo. Es decir, nuestra querida tortuga es, en este sentido, una figura.
Nota: en esta versión de & kturtle; la figura puede ser solamente una tortuga. Sin embargo, en futuras versiones de & kturtle; esta previsto que se puede adoptar una figura distinta.
verde oscuro
amarillo oscuro
Son los signos para realizar operaciones matemáticas: +, -, /, (,). Puede leer acerca de ellos aquí.
Signos de interrogación
azul (negrita)
Podemos leer más acerca el uso de signos de interrogación aquí.
Operadores lógicos
Podremos leer más acerca de los operadores lógicos aquí.
envoltura
Con la envoltura hacemos que la tortuga permanezca siempre permanezca dentro del área de dibujo aunque el movimiento ejecutado tienda a llevarla fuera de sus límites. Esto es lo que pasa al estar en el modo de envoltura Entonces, Cuando los comandos dados, lleven a la tortuga más allá de los límites del área de dibujo, el dibujo continuará a partir del lado opuesto de manera que pueda continuar con el dibujo.
La envoltura puede activarse o desactivarse mediante los comandos envolver y desenvolver. Por defecto, al iniciarse & kturtle; la envoltura está activada.
Para encontrar fácilmente la combinación RVA (RGB) correspondiente a un color determinado, podemos utilizar el selector de colores. Para abrir el selector de colores debemos ir a Herramientas Selector de colores.