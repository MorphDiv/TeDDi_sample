# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# ISO_6393:	spa
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manual de PHP
Anterior
Capítulo 18.
Manejo de envío de ficheros
Siguiente
A MAX_FILE_SIZE no se le puede dar un valor mayor que el valor que se haya especificado en la directiva upload_max_filesize.
Por defecto se tiene un límite de 2 MegaBytes.
Si se ha activado el límite de memoria, se deben especificar un valor alto para memory_limit.
En cualquier caso, se debe asegurar un valor suficientemente grande para memory_limit.
Si max_execution_time tiene un valor muy pequeño, la ejecución del script puede exceder este valor.
De esta forma, se debe asegurar un valor suficientemente grande para max_execution_time.
Si post_max_size tiene un valor muy pequeño, los ficheros mas grandes a este valor, no podrán ser enviados.
Por ello, se debe asegurar un valor suficientemente grande para post_max_size.
No verificar que ficheros se estan manipulando puede tener como consecuencia que los usuarios puedan acceder a información sensible en otros directorios.
Cabe señalar que el httpd de CERN parece cortar todo a partir del primer espacio en blanco en el "content-type" de la cabecera mime que obtiene del cliente.
Si este es el caso, con el httpd de CERN no se soporta la funcionalidad de envío de ficheros.
Anterior
Inicio
Siguiente
Manejo de envío de ficheros
Subir
Envío de multiples ficheros