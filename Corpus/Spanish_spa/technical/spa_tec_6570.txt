# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# iso639_3:	spa
# year_composed:	NA
# year_published:	2012
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	Ubuntu
# source:	https://object.pouta.csc.fi/OPUS-Ubuntu/v14.10/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/Ubuntu.php
# copyright_long:	http://opus.nlpl.eu/Ubuntu.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

iconv no admite la conversión de %s a %s
iconv_open
no hay una implementación de iconv, no se puede convertir de %s a %s
el carácter 0x%lx no está en el conjunto básico de caracteres fuente
convirtiendo al conjunto de caracteres de ejecución
el carácter 0x%lx no es unibyte en el conjunto de caracteres de ejecución
El carácter %x puede no ser NFKC
los nombres universales de carácter sólo son válidos en C++ y C99
el significado de '\\%c' es diferente en C tradicional
En _cpp_valid_unc pero no es un NUC
nombre universal de carácter %.*s incompleto
%.*s no es un carácter universal válido
'$' en el identificador o número
el carácter universal %.*s no es válido en un identificador
el carácter universal %.*s no es válido al inicio de un identificador
convirtiendo un NUC al conjunto de caracteres fuente
convirtiendo un NUC al conjunto de caracteres de ejecución
el significado de '\\x' es diferente en C tradicional
se usó \\x sin dígitos hexadecimales a continuación
secuencia de escape hexadecimal fuera de rango
secuencia de escape octal fuera de rango
el significado de '\\a' es diferente en C tradicional
secuencia de escape que no es estándard ISO, '\\%c'
secuencia de escape desconocida: '\\%c'
secuencia de escape desconocida: '\\%s'
convirtiendo una secuencia de escape al conjunto de caracteres de ejecución
constante de carácter demasiado grande para su tipo
constante de carácter con múltiples caracteres
constante de carácter vacía
no se puede convertir %s a %s
elementos extra al final de la directiva #%s
#%s es una extensión de GCC
#%s es una extensión de GCC obsoleta
se sugiere no usar #elif en C tradicional
C tradicional ignora #%s con el # indentado
se sugiere ocultar #%s de C tradicional con un # indentado
imbuir una directiva dentro de los argumentos de una macro no es transportable
la directiva de estilo de línea es una extensión de GCC
directiva de preprocesamiento #%s inválida
"defined" no se puede usar como un nombre de macro
no se puede usar "%s" como un nombre de macro porque es un operador en C++
no se dio un nombre de macro en la directiva #%s
los nombres de macro deben ser identificadores
borrando la definición de "%s"
falta el carácter de terminación >
#%s espera "NOMBRE_ARCHIVO" ó <NOMBRE_ARCHIVO>
nombre de fichero vacío en #%s
#include anidado con demasiada profundidad
#include_next en fichero primario de código fuente
indicador "%s" inválido en la línea de la directiva
fin de fichero inesperado después de #line
"%s" después de #line no es un entero positivo
número de línea fuera de rango
"%s" no es un nombre de fichero válido
"%s" después de # no es un entero positivo
%s
directiva #%s inválida
se registran pragmas en el espacio de nombres "%s" con una expansión de nombre que no coincide
se registra el pragma "%s" con expansión de nombre y sin un espacio de nombres
se registra "%s" como un pragma y como un espacio de nombres de pragma
#pragma %s %s ya está registrado
#pragma %s ya está registrado
se registra un pragma con manejador NULL
#pragma una vez en el fichero principal
directiva #pragma push_macro inválida
directiva #pragma pop_macro inválida
directiva #pragma de GCC envenenada inválida
se envenena la macro existente "%s"
#pragma system_header ignorado fuera del fichero a incluir
no se puede encontrar el fichero fuente %s
el fichero actual es más antiguo que %s
_Pragma lleva una cadena literal entre paréntesis
#else sin #if
#else después de #else
el condicional empezó aquí
#elif sin #if
#elif después de #else
#endif sin #if
falta '(' antes del predicado
falta ')' para completar la respuesta
la respuesta del predicado está vacía
afirmación sin predicado
el predicado debe ser un identificador
"%s" reafirmado
#%s sin terminar
comentario sin terminar
salida estándard
%s: %s
demasiados puntos decimales en el número
las constantes de coma fija son una extensión GCC
dígito "%c" inválido en la constante binaria
dígito "%c" inválido en la constante octal
prefijo "0b" inválido en la constante de coma flotante
no hay dígitos en la constante de coma flotante hexadecimal
uso de una constante de coma flotante hexadecimal C99
el exponente no tiene dígitos
las constantes de coma flotante hexadecimal requieren un exponente
sufijo "%.*s" inválido en la constante de coma flotante
C tradicional rechaza el sufijo "%.*s"
el sufijo para una constante doble es una extensión GCC
sufijo "%.*s" inválido en la constante de coma flotante hexadecimal
las constantes de coma flotante decimal son una extensión GCC
sufijo "%.*s" inválido en la constante entera
uso de una constante entera long long C++0x
uso de una constante entera long long C99
las constantes imaginarias son una extensión GCC
las constantes binarias son una extensión GCC
la constante entera es demasiado grande para su tipo
la constante entera es tan grande que es unsigned
falta ')' después de "defined"
el operador "defined" requiere un identificador
("%s" es un elemento alternativo para "%s" en C++)
este uso de "defined" puede no ser transportable
literal definida por el usuario en una expresión del preprocesador
constante de coma flotante en una expresión del preprocesador
número imaginario en una expresión del preprocesador
"%s" no está definido
las aserciones son una extensión GCC
las aserciones son una extensión obsoleta
falta un operador binario antes del elemento "%s"
el elemento "%s" no es válido en las expresiones del preprocesador
falta una expresión entre '(' y ')'
%s sin expresión
el operador '%s' no tiene operando derecho
el operador '%s' no tiene operando izquierdo
':' sin una '?' precedente
pila desbalanceada en %s
operador '%u' imposible
falta un ')' en la expresión
'?' sin ':' a continuación
desbordamiento entero en expresión del preprocesador
falta un '(' en la expresión
el operando izquierdo de "%s" cambia de signo cuando es promovido
el operando derecho de "%s" cambia de signo cuando es promovido
C tradicional rechaza el operador unario mas
operador coma en operando de #if
división por cero en #if
directorio NULL en find_file
se encontró uno o más ficheros PCH, pero eran inválidos
use -Winvalid-pch para más información
%s es un dispositivo de bloques
%s es demasiado grande
%s es más corto de lo esperado
no hay ruta de inclusión en la cual se pueda buscar %s
Guardias múltiples de include pueden ser útiles para:
cppchar_t debe ser de un tipo unsigned
la aritmética del preprocesador tiene una precisión máxima de %lu bits; el objetivo requiere de %lu bits
la aritmética de CPP debe se al menos tan precisa como un int del objetivo
el char del objetivo tiene menos de 8 bits de ancho
el wchar_t del objetivo es más estrecho que el char del objetivo
el int del objetivo es más estrecho que el char del objetivo
el medio-entero de CPP es más estrecho que el carácter de CPP
CPP no puede manejar constantes de carácter anchas más allá de %lu bits en este objetivo, pero el objetivo requiere %lu bits
caracteres de barra invertida y fin de línea separados por espacio
no hay caractér de barra invertida o fin de línea al final del fichero
se convierte el trigrafo ??%c a %c
se ignora el trigrafo ??%c, use -trigraphs para reconocerlo
"/*" dentro de un comentario
%s en la directiva de preprocesamiento
caracter(es) nulo(s) ignorados
`%.*s' no está en NFKC
`%.*s' no está en NFC
intento de usar "%s" envenenado
__VA_ARGS__ solamente puede aparecer en la expansión de una macro variadic C99
el identificador "%s" es un nombre de operador especial en C++
el delimitador de cadena cruda es más largo que 16 caracteres
carácter inválido '%c' en un delimitador de cadena cruda
cadena cruda sin terminar
caracter(es) nulo(s) preservados en la literal
falta el carácter de terminación %c
los comentarios de estilo C++ no se permiten en ISO C90
(esto se reportará solamente una vez por cada fichero de entrada)
comentario en múltiples líneas
elemento %s impronunciable
la macro "%s" no se utiliza
macro interna "%s" inválida
no se puede determinar la marca de fecha del fichero
no se puede determinar la fecha y la hora
se expande __COUNTER__ dentro de una directiva con -fdirectives-only
cadena literal inválida, se ignora el '\\' final
pegar "%s" y "%s" no da un elemento válido de preprocesamiento
ISO C99 requiere que el resto de los argumentos sea usado
la macro "%s" requiere %u argumentos, pero solo se proporcionan %u
la macro "%s" pasó %u argumentos, pero solamente toma %u
lista de argumentos sin terminar al invocar la macro "%s"
la función de macro "%s" se debe usar con argumentos en C tradicional
al invocar el macro %s argumento %d: los argumentos de macro vacíos están indefinidos en ISO C90 y en ISO C++98
parámetro de macro "%s" duplicado
"%s" podría faltar en la lista de parámetro de macro
los parámetros de macro deben ser separados por comas
falta el nombre del parámetro
los macros variadic anónimos se introdujeron en C99
ISO C no permite macros variadic nombrados
falta ')' en la lista de parámetros de macro
'##' no puede aparece en o al final de una expansión de macro
ISO C99 requiere espacios en blanco después del nombre de macro
faltan espacios en blanco después del nombre de macro
'#' no es seguido por un parámetro de macro
se redefinió "%s"
esta es la ubicación de la definición previa
el argumento de macro "%s" debería ser convertido a cadena en C tradicional
tipo de hash %d inválido en cpp_macro_definition
al escribir el encabezado precompilado
%s: no se usa porque `%.*s' está envenenado
%s: no se usa porque `%.*s' no está definido
%s: no se usa porque `%.*s' está definido como `%s' no como `%.*s'
%s: no se usa porque `%s' está definido
%s: no se usa porque `__COUNTER__' es inválido
al leer el encabezado precompilado
se detectó recursión al expandir la macro "%s"
error de sintaxis en la lista de parámetros de macro