# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# ISO_6393:	spa
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDEdoc
# source:	https://object.pouta.csc.fi/OPUS-KDEdoc/v1/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/KDEdoc.php
# copyright_long:	http://opus.nlpl.eu/KDEdoc.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Herramientas de edición avanzadas
Comentar / descomentar
Los comandos Comentar y Descomentar, disponibles en el menú Herramientas le permiten añadir o eliminar marcas de comentario de la selección, o de la línea actual si no hay ninguna selección.
El formato de los comentarios depende del formato del texto que esté escribiendo.
Las reglas que determinan cómo deben ser los comentarios se establecen en las definiciones de sintaxis, así que si no se utiliza el resaltado de sintaxis, no será posible la realización automática de comentarios.
Algunos formatos definen marcas de comentarios de una sola línea, otros de varias líneas y otros utilizan ambas posibilidades.
Si no están disponibles los comentarios de varias líneas, será imposible comentar una selección cuya última línea no esté incluida por completo.
Si está disponible una marca de comentario de una sola línea, es preferible comentar las líneas individualmente, ya que así se evitan problema de comentarios anidados.
Al eliminar las marcas de comentario, se debe seleccionar el texto no comentado.
Al eliminar marcas de comentario multilínea de una selección, se ignorará cualquier espacio en blanco que quede fuera de las marcas de comentario.
Comando de edición
Es una herramienta muy útil para los usuarios experimentados o avanzados, pero no deje que eso sea un motivo para no probar su potencia.
En este momento están disponibles los siguientes comandos:
time
Este comando escribirá la hora actual según el reloj del sistema, con el formato HH:MM:SS
Para utilizarlo, abra el diálogo de comando de edición y escriba en la casilla de entrada la palabra time
char
Este comando le permite insertar caracteres literales por su identificador numérico, en formato decimal, octal o hexadecimal.
Para utilizarlo lanze el diálogo del comando de edición y teclee char: [número] en la casilla de entrada, después pulse Aceptar.
Ejemplos de char
Entrada: char:234
Salida: ê
Entrada: char:0x1234
Salida: ê
Entrada: char:1232
Salida: ê
s / //[ ig] %s / //[ig]
Este comando ejecuta una operación de búsqueda / sustitución similar a las de sed en la línea actual o en todo el archivo (%s / / /).
Brevemente, se busca en el texto alguna cadena que coincida con el patrón de búsqueda, la expresión regular entre la primera y la segunda barra, y cuando se encuentra una coincidencia, la parte coincidente del texto es sustituida por la expresión contenida entre las barras central y última de la cadena.
Los paréntesis en el patrón de búsquedas crean retroreferencias, es decir, que el comando recuerda qué parte de la coincidencia se encontraba entre los paréntesis; estas cadenas se pueden reutilizar en el patrón de sustitución, refiriendose a ellas como \1 como el primer conjunto de paréntesis, \2 como el segundo y así sucesivamente.
Para hacer una búsqueda literal de (o), debe escapar el carácter utilizando una barra invertida: \(\)
Si coloca una i al final de la expresión, la coincidencia no será sensible a las mayúsculas.
Sustitución de texto en la línea actual
Su buen amigo el ordenador se ha detenido, diciendo que la clase myClass, mencionada en la línea 3902 del archivo fuente no está definida.
¡Vaya por Dios! pensará usted, es que se trataba de MyClass.
Se desplaza a la línea 3902 y en vez de intentar buscar la palabra en el texto, abre el diálogo del comando de edición, introduce s / myclass / MyClass / i, pulsa el botón Aceptar, guarda el archivo y vuelve a compilar esta vez sin ningún error.
Sustitución de texto en todo el archivo
Imagine que tiene un archivo, en el que menciona a Miss Jensen varias veces, cuando resulta que alguien viene y le dice que se acaba de casar con Mr Jones.
Usted querrá, desde luego, sustituir cada aparición de Miss Jensen por Ms Jones.
Lance el diálogo del comando de edición, y teclee en la casilla de entrada: %s / Miss Jensen / Ms Jones /, y una vez que haya pulsado Intro, el trabajo estará hecho.
Un ejemplo más avanzado
Este ejemplo hace uso de retroreferencias así como de una clase de palabras (si no sabe lo que es esto, por favor consulte la documentación citada más adelante).
Suponga que tiene la siguiente línea: void MyClass::DoStringOps( String &foo, String &bar String *p, int &a, int &b)
Pero usted se da cuenta de que ese código no está bien, y decide que quiere utilizar la palabra clave const en todos los argumentos address of, que se caracterizan por tener un operados & delante del nombre del argumento.
También desea simplificar el espacio en blanco, de forma que sólo haya uno entre cada palabra.
Abra el diálogo del comando de edición, e introduzca: s / \s+( \w+)\s+(&) / const \1 \2 / g, después pulse el botón Aceptar.
La g al final de la expresión hace que la expresión regular recompile cada coincidencia para guardar las retroreferencias.
Salida: void MyClass::DoStringOps( const String &foo, const String &bar String *p, const int &a, const int &b)
Misión completada.
Ahora, ¿qué ha ocurrido?
Buen, hemos buscado algún espacio en blanco (\s +) seguido de uno o más caracteres alfabéticos (\w +) seguidos de más espacio en blanco (\s +) seguido del símbolo &, y en el proceso hemos guardado el bloque alfabético y el & para reutilizarlos en la operación de sustitución.
Entonces hemos sustituido la parte coincidente de nuestra línea por un espacio en blanco seguido de const seguido de un espacio en blanco seguido de nuestro bloque alfabético (\1) seguido de un espacio en blanco seguido de nuestro & almacenado (\2)
En algunos casos el bloque alfabético era String, en otros int, así que la clase de caracteres \w y el cuantificador + nos han servido de gran ayuda.
Esto es extremadamente potente, y como las acciones se pueden deshacer varias veces (según se necesite) a través del comando Deshacer, le recomiendo que practique un poco antes de utilizar este comando en ediciones serias si no está familiarizado con las expresiones regulares de sed o perl.