# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# iso639_3:	spa
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manual de PHP
Anterior
Siguiente

Devuelve:
Un array que se corresponde con la fila obtenida, o FALSE si no hay más filas.
pg_fetch_array() es una versión extendida de pg_fetch_row().
Además de almacenar los datos en los índices numericos del array resultante, también almacena los datos usando índices asociativos, empleando para ello el nombre del campo como la llave o índice.
El tercer parámetro opcional result_type en pg_fetch_array() es una constante y puede tomar cualquiera de los siguientes valores:
PGSQL_ASSOC, PGSQL_NUM, y PGSQL_BOTH.
Nota:
Result_type se añadio en PHP 4.0.
Una cosa importante a tener en cuenta es que usar pg_fetch_array() NO es significativamente más lento que usar pg_fetch_row(), y sin embargo el valor añadido que aporta sí lo es.
Para más detalles, ver pg_fetch_row()
Ejemplo 1.

?php $conn = pg_pconnect( "","" ,"" ,"" ,"publisher"); if (!$conn) {echo "An error occured.\n"; exit;} $result = pg_Exec ($conn, "SELECT * FROM authors"); if (!$result) {echo "An error occured.\n"; exit;} $arr = pg_fetch_array ($result, 0); echo $arr[0]. "- array\n"; $arr = pg_fetch_array ($result, 1); echo $arr["author"]." - array\n";?
Anterior
Inicio
Siguiente

Subir
