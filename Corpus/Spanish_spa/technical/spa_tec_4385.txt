# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# ISO_6393:	spa
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manual de PHP
Anterior
Apéndice A.
Historia de PHP y proyectos relacionados
Siguiente
PEAR, el PHP Extension and Application Repository (originalmente, PHP Extension and Add-on Repository) es la versión de clases de creación de PHP, y puede crecer en el futuro para ser una de las vías clave para distribuir tanto PHP como extensiones PHP basados en C entre desarrolladores.
PEAR nació de las discusiones mantenidas en el PHP Developers' Meeting (PDM) transcurrido en Enero de 2000 en Tel Aviv.
Fue creado por Stig S.
Bakken, y lo dedicó a su primogénita, Malin Bakken.
Hasta principios de 2000, PEAR fue creciendo hasta ser un gran y significativo proyecto con un gran número de programadores trabajando en la implementación común, funcionalidad reutilizable para el beneficio de toda la comunidad PHP.
PEAR hoy incluye una gran variedad de clases de infraestructura para acceso a bases de datos, caché de contenido, cálculos matemáticos, comercio electrónico y mucho más.
La Iniciativa para la Garantía de Calidad de PHP se configuró en el verano de 2000 en respuesta a los que criticaban que las versiones de PHP se liberaban sin que fueran comprobadas suficientemente para entornos de producción.
El equipo ahora consiste en un grupo central de desarrolladores con un buen entendimiento del código base de PHP.
Estos desarrolladores gastan mucho tiempo localizando y solucionando problemas con PHP.
Además, hay muchos miembros de otros equipos que testean y prueban estas soluciones usando una gran variedad de plataformas.
PHP-GTK es la solución PHP para escribir las aplicaciones GUI del lado del cliente.
Andrei Zmievski recuerda la planificación y la creación del proceso de PHP-GTK:
Programar GUI siempre ha estado entre mis intereses, y he encontrado que Gtk + es una herramienta muy buena, salvo que programar con ella en C es algo tedioso.
Tras presenciar las implementaciones de PyGtk y GTK-Perl, decidí ver si PHP se podría hacer con la interfaz Gtk+, incluso mínimamente.
En Agosto de 2000 empecé a tener más tiempo libre, con lo que comencé a experimentar.
Mi principal guía fue la implementación PyGtk con características completas bastante buenas y con un buen interfaz orientado a objetos.
James Henstridge, el autor de PyGtk, proveyó mucha ayuda adicional durante esos estados iniciales.
Escribir las interfaces de todas las funciones Gtk + estaba fuera de cuestión, por lo que mantuve la idea de generador de código, similar a cómo PyGtk lo hizo.
El generador de código es un programa PHP que lee un conjunto de ficheros .defs que contienen las clases Gtk+, constantes e información de métodos y genera código C que interactúa PHP con ellos.
Lo que no se puede generar automáticamente puede escribirse a mano en ficheros .overrides.
Trabajar en el generador de código y la infraestructura llevó algo de tiempo, porque pude dedicar poco tiempo a PHP-GTK durante el otoño de 2000.
Después mostré PHP-GTK a Frank Kromann, que se interesó y empezó a ayudarme con el trabajo del generador de código y con la implementación para Win32.
Cuando escribimos el primer programa Hola Mundo y funcionó, fue extremadamente excitante.
Llevó un par de meses más llevar el proyecto a una condición presentable y la versión inicial se liberó el 1 de Marzo de 2001.
La historia rápidamente llegó a SlashDot.
Sintiendo que PHP-GTK podría extenderse, configuré listas de correo separadas y repositorios CVS para ello, así como el sitio web gtk.php.net con la ayuda de Colin Viebrock.
La documentación también tuvo que hacerse y James Moore llegó para ayudar en esto.
Desde su lanzamiento PHP-GTK fue ganando popularidad.
Tenemos nuestro propio equipo de documentación, el manual sigue mejorando, la gente ha comenzado a escribir extensiones para PHP-GTK, y con ello más y mejores aplicaciones.
Anterior
Inicio
Siguiente
Historia de PHP y proyectos relacionados
Subir
Libros sobre PHP