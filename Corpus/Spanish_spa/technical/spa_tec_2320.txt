# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# ISO_6393:	spa
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	KDEdoc
# source:	https://object.pouta.csc.fi/OPUS-KDEdoc/v1/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/KDEdoc.php
# copyright_long:	http://opus.nlpl.eu/KDEdoc.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Guía del programador
Cómo usar Kugar para hacer informes en sus propios programas
Hay varias formas de usar Kugar
Crear un archivo temporal y rellenarlo con datos, organizados de acuerdo a la definición del tipo de documento deKugarData.
Use Kugar directamente en el código de la aplicación.
Cree un plugin para Qt designer, úselo para construir el GUI de la aplicación en el designer y enlácelo con el programa dinámicamente.
Las últimas dos formas son aceptables para desarrolladores de Qt y KDE.
Pero Kugar está diseñado para ser un generador de informes, independientemente de un lenguaje de programación y / o IDE.
Usa el formato XML para describir plantillas de informes y archivos de datos.
Un shell de Kugar (visor de informes) se puede usar para ver e imprimir los informes generados.
Usando el shell de Kugar para visualizar informes
La forma de crear y visualizar (imprimir) informes es:
Cree una plantilla de informe con &kudesigner;
Cree un archivo de datos con valores de columnas para las bandas detalladas del informe.
Lance el shell de Kugar para visualizar e imprimir el informe.
Por ejemplo, haga esto, en llamadas de lengaje de c o c++:
No olvide incluir stdlib.h.
Usando clases de Kugar para el informe
La biblioteca de Kugar incluye dos elementos para que los use.
La clase KReportViewer está diseñada para desarrolladores de KDE.
Admite un sistema de impresión de KDE y localización de UNIX vía llamadas a i18n().
La clase MReportViewer está diseñada para desarrolladores de Qt y proporciona multiplataforma real.
No sólo se puede usar en plataformas UNIX, sino también en Windows y Mac.
Para un ejemplo detallado de cómo se usan las clases de Kugar, vea el directorio / shell en las fuentes de Kugar.
MReportViewer (y KReportViewer también) contiene varios métodos públicos que se pueden usar.
Creando un plugin de Qt designer
Uso del plugin
Código del plugin
El código del plugin consta de tres archivos: