# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# iso639_3:	spa
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Uso de variables
/text/sbasic/shared/01020100.xhp
nombres de variables
variables;tipos y variables
declarando variables
valores;de variables
constantes
arreglos;declaración
definición;constantes
Uso de variables
A continuación se describe el uso básico de variables en $[officename] Basic.
Convenciones de asignación de nombres a variables
debe ser
una letra A-Z o a-z.
Los números también pueden usarse en los nombres de variable, pero los símbolos de puntuación y los caracteres especiales no están permitidos, con excepción del carácter de subrayado ( &quot; _ &quot; ).
En $[officename] Basic no se hace distinción entre mayúsculas/minúsculas en los identificadores de variable.
Los nombres de variable pueden contener espacios, pero en ese caso deben incluirse entre corchetes.
Ejemplos de identificadores de variable:
MiNumero=5
Correcto
MiNumero5=15
Correcto
MiNumero_5=20
Correcto
Mi Numero=20
No es válida, las variables con espacios deben incluirse entre corchetes
[Mi Numero]=12
Correcto, variable con espacios incluida entre corchetes
DéjàVu=25
No es válida, no se permiten caracteres especiales
5MiNumero=12
No es válida, la variable no puede empezar con un número
Numero,Mío=12
No es válida, marcas de puntuación no permitidas
Declaración de variables
Dim
.
Puede declarar más de una variable a la vez separando sus nombres con una coma.
Para definir el tipo de variable, use un signo de declaración de tipo después del nombre o la palabra clave apropiada.
Ejemplos de declaraciones de variable:
DIM a$
Declara la variable &quot; a &quot; como String
DIM a As String
Declara la variable &quot; a &quot; como String
DIM a$, b As Integer
Declara una variable como String y otra como Integer
DIM c As Boolean
Declara c como variable booleana que puede ser TRUE o FALSE
Es muy importante al declarar variables que utilice siempre el carácter de declaración de tipo, aunque se usara en la declaración en lugar de una palabra clave.
Por tanto, las instrucciones siguientes no son válidas:
DIM a$
Declara &quot; a &quot; como String
a= &quot; TestString &quot;
Falta la declaración de tipo: &quot; a$= &quot;
Tenga en cuenta que en cuanto haya declarado una variable como de un tipo concreto ya no puede declararla con el mismo nombre y un tipo distinto.
Forzar declaraciones de variables
Para forzar la declaración de variables, use la orden siguiente:
OPTION EXPLICIT
Option Explicit
tiene que ser la primera línea del módulo, antes del primer SUB.
Normalmente, sólo es necesario declarar explícitamente las matrices.
El resto de variables se declaran según el carácter de declaración de tipo o (si se omite) según el tipo predeterminado
Single
.
Tipos de variable
$[officename] Basic admite cuatro clases de variables:
Numérica
, puede contener valores numéricos.
Algunas variables se utilizan para almacenar números grandes o pequeños y otras para números de coma flotante o fracciones.
Cadena
, contiene cadenas de caracteres.
Lógica
, contiene el valor TRUE (cierto) o FALSE (falso).
Objeto
, puede almacenar objetos de diversos tipos, como tablas y documentos dentro de un documento.
Variables enteras
El rango de las variables enteras va de -32768 a 32767.
Si asigna un valor de coma flotante a una variable entera, los valores decimales se redondean al entero más próximo.
Las variables enteras se calculan rápidamente en los procedimientos y su uso es muy conveniente como variables contador en bucles.
Una variable entera sólo requiere dos bytes de memoria.
El carácter de declaración de tipo es &quot; % &quot; .
Dim Variable%
Dim Variable As Integer
Variables enteras largas
El rango de las variables enteras largas va de -2147483648 a 2147483647.
Si asigna un valor de coma flotante a una variable entera larga, los valores decimales se redondean al entero más próximo.
Las variables enteras largas se calculan rápidamente en los procedimientos y su uso muy conveniente como variables contador en bucles de valor muy grande.
Una variable entera larga requiere cuatro bytes de memoria.
El carácter de declaración de tipo es &quot; & &quot; .
Dim Variable &
Dim Variable as Long
Variables Decimales
Las variables decimales pueden tomar numeros positivos y negativos o el numero cero.
La exactitud esta hasta 29 digitos.
i85284
Puedes usar un signo de suma (+) o resta (-) como prefijo a un numero decimal (con o sin espacio).
Si un numero decimal esta asignado a una variable integral %PRODUCTNAME Basic redondea la cantidad arriba o abajo.
Variables simples
Las variables simples pueden tener valores positivos o negativos desde 3,402823 x 10E38 a 1,401298 x 10E-45.
Las variables simples son de coma flotante, en el que la precisión decimal decrece a medida que la parte no decimal del número aumenta.
Las variables simples son adecuadas para realizar cálculos matemáticos de precisión media.
Los cálculos requieren más tiempo que para las variables enteras, pero son más rápidos que las de tipo doble.
Una variable simple requiere 4 bytes de memoria.
El carácter de declaración de tipo es &quot; ! &quot; .
Dim Variable!
Dim Variable as Single
Variables dobles
Las variables dobles pueden tener valores positivos o negativos desde 1.79769313486232 x 10E38 a 4.94065645841247 x 10E-324.
Las variables dobles son de coma flotante, en el que la precisión decimal decrece a medida que la parte no decimal del número aumenta.
Las variables dobles son adecuadas para cálculos precisos.
Los cálculos requieren más tiempo que las variables simples.
Una variable doble requiere 8 bytes de memoria.
El carácter de declaración de tipo es &quot; # &quot; .
Dim Variable#
Dim Variable As Double
Variables de moneda
Las variables de moneda se almacenan internamente como números de 64 bits (8 bytes) y se muestran como números con cantidad de decimales fija con 15 posiciones no decimales y 4 decimales.
El rango de valores va de -922337203685477,5808 a +922337203685477,5807.
Las variables de moneda se usan para calcular valores de divisas con una precisión elevada.
El carácter de declaración de tipo es &quot; @ &quot; .
Dim Variable@
Dim Variable As Currency
Variables de cadena
Las variables de cadena pueden contener cadenas de compuestas por hasta 65.535 caracteres.
Cada carácter se almacena como el valor Unicode correspondiente.
Las variables de cadena son adecuadas para el procesamiento de texto dentro de programas y para almacenamiento temporal de caracteres no imprimibles de hasta una longitud máxima de 64 Kbytes.
La memoria necesaria para almacenar variables de cadena depende del número de caracteres que ésta contenga.
El carácter de declaración de tipo es &quot; $ &quot; .
Dim Variable$
Dim Variable as String
Variables lógicas
Las variables lógicas o booleanas sólo almacenan uno de estos dos valores:
True (verdadero) o False (falso).
Un número 0 evalúa en FALSE, cualquier otro número evalúa en TRUE.
Dim Variable As Boolean
Variables de fecha
Dateserial
,
Datevalue
,
Timeserial
o
Timevalue
se convierten automáticamente al formato interno.
Las variables de fecha se convierten en números normales mediante las funciones
Día
,
Mes
y
Año
o bien
Hora
,
Minutos
y
Segundo
.
El formato interno permite una comparación de valores de fecha/hora calculando la diferencia entre dos números.
Estas variables sólo pueden declararse con la palabra clave
Date
.
Dim Variable As Date
Valores iniciales de las variables
En cuanto se declara la variable, ésta toma automáticamente el valor &quot; Null &quot; (nulo).
Tenga en cuenta las convenciones siguientes:
Numéricas
se les asigna automáticamente el valor &quot; 0 &quot; en cuanto se declaran.
variables de fecha
se les asigna el valor 0 internamente; que equivale a convertir el valor a &quot; 0 &quot; con la función
Día
,
Mes
,
Año
u
Hora
,
Minuto
,
Segundo
.
variables de cadena
se les asigna una cadena vacía ( &quot; &quot; ) cuando se declaran.
Matrices
$[officename] Basic distingue matrices de una o varias dimensiones, definidas por un tipo de variables especificado.
Las matrices son convenientes para editar listas y tablas en los programas.
Se puede acceder a los elementos individuales de las matrices utilizando un índice numérico.
deben
declararse con la instrucción
Dim
.Hay varias maneras de definir el rango de índices de una matriz:
DIM text$(20)
21 elementos numerados del 0 al 20
DIM text$(5,4)
30 elementos (una matriz de 6 x 5 elementos)
DIM text$(5 to 25)
21 elementos numerados del 5 al 25
DIM text$(-15 to 5)
21 elementos (incluido el 0), numerados del -15 al 5
El rango del índice puede incluir números positivos y negativos.
Constantes
Las constantes tienen un valor fijo.
Sólo se definen una vez en el programa y no pueden volverse a definir más adelante:
CONST NombreConst=Expresión