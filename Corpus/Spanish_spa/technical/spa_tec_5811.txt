# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# ISO_6393:	spa
# year_composed:	NA
# year_published:	2014
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	GNOME
# source:	https://object.pouta.csc.fi/OPUS-GNOME/v1/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/GNOME.php
# copyright_long:	http://opus.nlpl.eu/GNOME.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

@@image: 'figures/validator_report.png'; md5=a21bc11a8fc1f8d7976d7ea8a3dc80d2
3. Complemento validador predeterminado
Comprobar la accesibilidad de una aplicación
Eitan Isaacson
eitan@ascender.com
Peter Parente
pparent@us.ibm.com
Aline Bessa
alibezz@gmail.com
Creative Commons Compartir Igual 3.0
Complemento de validación AT-SPI
El complemento de validación AT-SPI genera un informe con los errores de accesibilidad de una aplicación objetivo. El informe incluye el nivel de gravedad y una breve descripción para cada error.
El complemento de validación AT-SPI genera informes útiles para verificar la accesibilidad de una aplicación objetivo.
Ejecutar el complemento de validación AT-SPI
Para ejecutar el complemento de validación AT-SPI seleccione un elemento en la vista en árbol de la aplicación. El validador generará el informe correspondiente al elemento seleccionado y de todos sus widgets hijos en la jerarquía del árbol.
Después de seleccionar un elemento, elija un esquema de validación en la caja combinada y pulse el botón
El informe generado es interactivo. Por lo tanto, puede hacer una doble pulsación en cualquier error encontrado para comprobar qué aplicación objetivo lo está causando. El widget correspondiente aparecerá seleccionado en la
Si quiere guardar en informe generado en su equipo, simplemente pulse el botón
Para obtener más información sobre un error en el informe generado, asegúrese de que el elemento correspondiente está seleccionado y pulse el botón
5. Complemento de selección rápida
Ubicando el objeto que necesita
Complemento de selección rápida
El complemento de selección rápida no proporciona una interfaz visible coma la de los otros complementos de
El complemento de selección rápida proporciona dos teclas rápidas globales. Pulsar
@@image: 'figures/accerciser_preferences.png'; md5=35df6feb4a5dfc905331b45390783ad5
@@image: 'figures/plugins.png'; md5=aa997acc25c59cf82a788bb8a97f8654
@@image: 'figures/global-hotkeys.png'; md5=e624ecfca646f771d03ea3feed4a5dcb
@@image: 'figures/highlighting.png'; md5=a7eeb359d726fecba85b13b92a41b919
4. Preferenciasnext" xref="event_monitor_plugin
Personalizar las preferencias de
Configurar
Para configurar los complementos, las teclas rápidas y el resaltado, pulse
Preferencias de

Configurar complementos
Después de abrir el diálogo de preferencias, encontrará una lista de complementos disponibles, con sus correspondientes casillas, en la pestaña «Complementos». Para activar o desactivar un complemento, conmute su casilla. Sólo se puede acceder a los complementos activos a través de la interfaz de
Una pulsación con el botón derecho sobre un complemento dado le permite elegir su ubicación: «Panel superior», «Panel inferior» y «Nueva vista». Al seleccionar «Nueva vista» se crea una ventana nueva para el complemento.
Configurar las preferencias de los complementos

Puede omitir el diálogo de preferencias usando arrastrar y soltar para mover un complemento desde una ubicación hasta otra.
Configurar teclas rápidas globales
Algunos elementos en
Configurarlas preferencias de las teclas rápidas globales


Configurar el resaltado de widgets
Algunos elementos de
Configurar las preferencias de resaltado

@@image: 'figures/IPython_plugin.png'; md5=4e25a8b12536302b54f4ea31e2d142c9
2. Complemento IPython
Cuando todo falla
Complemento de la Consola IPython
El complemento de la Consola IPython permite interacción en tiempo real con el elemento seleccionado en la
Asegúrese de que tiene el paquete autónomo de IPython instalado en su sistema. De otra forma, el complemento de la Consola IPython no funcionará correctamente.
Ejecutar el complemento de la consola IPython
Para ejecutar el complemento de la Consola IPython, seleccione uno de los elementos accesibles listados en la vista en árbol de la aplicación; ya sea una aplicación o un widget. En el complemento, el elemento seleccionado corresponderá a la variable «acc».
Pulsar
Investigar elementos seleccionados con el complemento de la consola IPython
El complemento de la consola IPython le permite investigar métodos, constantes y propiedades relativas a un elemento seleccionado en la vista en árbol de la aplicación.
Escribir
@@image: 'figures/accerciser-view.png'; md5=fe4edcab1458ebe903cc46878c53ee64
1. ¿Qué es Accerciser?
Un examinador de accesibilidad interactivo
¿Qué es

De manera predeterminada, la interfaz principal de
Asegúrese de que el soporte de accesibilidad está activado en su escritorio; si no lo está,
Accerciser
Interfaz predeterminada de
Público objetivo de

Arquitectura de complementos de







Más acerca de accesibilidad
La accesibilidad es un valor esencial que debe abarcar todos los aspectos de un entorno de escritorio. Para ayudar a lograrlo en GNOME, se han desarrollado algunas bibliotecas como ATK y AT-SPI. Aunque se crearon en GNOME, estas bibliotecas se usan también en otros entornos de escritorio. Para aprender más sobre bibliotecas de accesibilidad para sistemas GNU/Linux, puede consultar:





@@image: 'figures/interface_viewer_plugin.png'; md5=c83c4113369ff2adc756dfd8614a48ed
2. Complemento Visor de interfaces
Examinar su implementación de accesibilidad
Complemento Visor de interfaces
El complemento «Visor de interfaces» muestra la información y los controles proporcionados por la interfaz AT-SPI presente en cada elemento accesible de la
Examinar un menú con el complemento «Visor de interfaces»
Dado un elemento seleccionado en la vista en árbol de la aplicación, se mostrarán todas sus interfaces AT-SPI como sensitivas en el complemento de «Visor de interfaces». Aquellas no soportadas aparecerán en gris, tales como las interfaces de aplicación de recolección en la figura superior.
Ejecutar el complemento Visor de interfaces
El primer paso para ejecutar el complemento «Visor de interfaces» es seleccionar un elemento en la
Accesible: esta interfaz muestra el contador de elementos hijos seleccionados (número de widgets hijos), descripción, estados, relaciones y atributos.
Acción: esta interfaz muestra todas las acciones que el elemento seleccionado se pueden realizar. Para cada interfaz verá su nombre, como «presionar» o «pulsar», seguido de una descripción y de una asociación de teclas, si hay alguna. si selecciona una acción, el botón «Realizar acción» se volverá sensible. Pulse este botón para ver al elemento realizar la acción seleccionada.
Aplicación: esta interfaz se puede implementar con elementos cuyo rol es «aplicación». Merece la pena señalar que los elementos cuyo rol es «aplicación» no necesariamente implementan esta interfaz. Si el elemento seleccionado la implementa, la interfaz mostrará su ID y, si tiene, su kit de herramientas y su versión.
Componente: esta interfaz muestra la posición absoluta del elemento seleccionado (respecto del sistema de coordenadas del escritorio), posición relativa (respecto del sistema de coordenadas de la ventana), tamaño, tipo de capa, orden MDI-Z (un entero corto que indica el orden de apilamiento del componente en la capa MDI) y alfa (si se usa alfa).
Documento: esta interfaz muestra los atributos de documento del elemento seleccionado, así como la descripción regional, si existe.
Hipertexto: esta interfaz muestra una lista de todos los hiperenlaces de hipertexto de los elementos seleccionados. Para cada hiperenlace la interfaz proporciona su nombre, URI, inicio (el índice en el hipertexto en el que comienza el hiperenlace) y el final (el índice en el hipertexto en el que finaliza el hiperenlace).
Imagen: esta interfaz muestra la descripción del elemento seleccionado (o «sin descripción» si está sin especificar), tamaño, posición (respecto del sistema de coordenadas del escritorio), y configuración regional, si existe.
Selección: esta interfaz muestra todos los elementos hijos seleccionables del elemento seleccionado. Si el elemento seleccionado es una barra de menú con las opciones «Archivo», «Editar», «Ver» y «Ayuda» y todas ellas se pueden seleccionar, entonces se listarán en esta interfaz. Si pulsa sobre una opción listada —«Archivo», por ejemplo— y quiere limpiarla, simplemente pulse el botón «Limpiar» en la lista de abajo.
Contenido secuenciable: esta interfaz muestra el tipo de contenido de los elementos seleccionados y sus URI correspondientes.
Tabla: esta interfaz muestra el título y el resumen del elemento seleccionado, filas (número de filas), columnas (número de columnas), filas seleccionadas (número de filas seleccionadas) y columnas seleccionadas (número de columnas seleccionadas). Para una celda seleccionada, la interfaz muestra la cabecera y extensión de sus filas y columnas.
Texto: esta interfaz muestra el contenido de los elementos de texto del elemento, que pueden ser editables, y sus atributos. Los atributos básicos son el desplazamiento (el número de caracteres que tiene el texto) y su justificación. Para ver los posibles atributos de CSS, pulse en la casilla «incluir predeterminados».
Valor: esta interfaz muestra el valor actual del elemento seleccionado, los valores mínimo y máximo permitidos y el incremento mínimo por el que el valor debe cambiar (o cero si este valor no se puede determinar). El valor actual se puede cambiar manualmente usando un botón incrementable.
@@image: 'figures/accerciser-logo.png'; md5=ccb260de40944187394405ae163757cf
Introducción a
Logo de
Antes de comenzar
Lea la
Inicio
Examinar la accesibilidad de una aplicación
Temas avanzados
3. Escribir complementos nuevos
Ampliar
Escribir complementos para
Extender

Complementos base: estos complementos se derivan de la clase base «Plugin». No proporcionan una interfaz visible, pero pueden proporcionar funcionalidad adicional a
Complementos de consola: estos complementos proporcionan una sencilla consola de entrada en una área de texto en la pestaña de un complemento. No se confunda con el
Complementos visuales: la mayoría de los complementos predeterminados de
Crear un complemento base
Se creará una versión simplificada del
Lo primero, las líneas de importación que se usarán son:
from accerciser.plugin import Plugin
 import gtk
 import pyatspi
Lo siguiente será derivar una clase nueva de la clase base de complementos, y asignar algunos atributos obligatorios de clase:
class FocusSelect(Plugin):
 plugin_name = 'Focus Select'
 plugin_description = 'Allows selecting last focused accessible.'
Ahora se sobreescribirá el método «init», en el que se establecerá una acción de clave global para seleccionar el último elemento accesible con el foco, registrar un «listener» de eventos para el evento «focus», y establecer la variable de instancia
def init(self):
 pyatspi.Registry.registerEventListener(self.accEventFocusChanged, 'focus')
 self.global_hotkeys = [('Inspect last focused accessible',
 self.inspectLastFocused,
 gtk.keysyms.e,
 gtk.gdk.CONTROL_MASK | gtk.gdk.MOD1_MASK)]
 self.last_focused = None
Note que la variable de instancia
En el evento de retorno de llamada de «focus», se asigna la variable de instancia
def accEventFocusChanged(self, event):
 if not self.isMyApp(event.source):
 self.last_focused = event.source
En el retorno de llamada de la acción de la tecla rápida se actualiza el nodo amplio de la aplicación con el último elemento que tuvo el foco, si se guardó:
def inspectLastFocused(self):
 if self.last_focused:
 self.node.update(self.last_focused)
Crear un complemento de consola
Se creará un complemento de consola para mostrar los cambios de foco emitidos por un elemento accesible con un rol de «pulsar botón»; recuerde que es muy fácil comprobar el rol de cualquier elemento en
Las líneas de importaciones necesarias son:
from accerciser.plugin import ConsolePlugin
 import pyatspi
Se añade entonces una definición de clase, con un nombre para el complemento y una descripción:
class PushButtonFocus(ConsolePlugin):
 plugin_name = 'Push Button Focus'
 plugin_description = 'Imprimir evento cuando el pulsador obtiene el foco.'
Se sobreescribe el método «init» añadiendo un registro de «listener»:
def init(self):
 pyatspi.Registry.registerEventListener(self.accEventFocusChanged, 'focus')
En el método de retorno de llamada se imprimen todos los eventos de pulsaciones de botones.
def accEventFocusChanged(self, event):
 if event.source.getRole() == pyatspi.ROLE_PUSH_BUTTON:
 self.appendText(str(event)+'\
')
Crear un complemento de punto de vista
Se creará un complemento de puerto de vista que permite una prueba rápida de la acción de pulsación sobre elementos accesibles que soportan la interfaz AT-SPI Action y tienen una acción llamada «click». Será un botón simple que, una vez pulsado, realiza la acción de pulsación sobre el accesible.
En primer lugar, algunas líneas de importación obligatorias:
import gtk
 from accerciser.plugin import ViewportPlugin
Lo siguiente es una definición de clase, con un nombre y una descripción:
class Clicker(ViewportPlugin):
 plugin_name = 'Clicker'
 plugin_description = 'Test the "click" action in relevant accessibles.'
Se sobreescribirá el método «init» con una construcción de IU y conectando el retorno de la llamada a una señal para el botón. Se usará el contenedor de alineamiento para permitir que el botón esté centrado en la pestaña del complemento, y que no ocupe monstruosamente todo el espacio disponible. Note que la variable de instancia
def init(self):
 alignment = gtk.Alignment(0.5,0.5,0,0)
 self.click_button = gtk.Button('Púlseme')
 alignment.add(self.click_button)
 self.plugin_area.add(alignment)

 self.click_button.connect('clicked', self.onClick)

 self.show_all()
También se ha creado un método de conveniencia que devuelve una lista de las acciones soportadas por el elemento accesible actualmente seleccionado; si no soporta la acción de la interfaz, entonces devuelve una lista vacía:
def accSupportedActions(self):
 try:
 ai = self.node.acc.queryAction()
 except NotImplementedError:
 action_names = []
 else:
 action_names = [ai.getName(i) for i in xrange(ai.nActions)]
 return action_names
Esta clase de complemento base tiene una llamada de método onAccChanged a la que se llama cada vez que el elemento accesible seleccionado de la aplicación objetivo cambia. Se sobreescribirá ajustando el botón para ser sensible sólo cuando el elemento accesible actual tiene la acción «click».
def onAccChanged(self, acc):
 has_click = 'click' in self.accSupportedActions()
 self.click_button.set_sensitive(has_click)
El método del retorno de llamada para el botón pulsado realiza la acción de pulsación en el elemento accesible. Ya que a este retorno de llamada sólo se le puede llamar cuando el botón es sensible, no se debe preocupar acerca de comprobar si el accesible actual tiene la acción «cick».
def onClick(self, button):
 ai = self.node.acc.queryAction()
 action_names = [ai.getName(i) for i in xrange(ai.nActions)]
 ai.doAction(action_names.index('click'))
2. Cómo instalar y configurar
Configurar
Instalar y ejecutar
Compruebe si su distribución tiene
Instalar
Para instalar
Si no usa GNOME 3, puede pasar que la versión 3 o superior de
Después de obtener
cd accerciser
«./autogen.sh #» o «./configure» para la instalación inicial
make
«sudo make install #» o «make install» como root
Si tiene problemas al instalar
Ejecutar
Para iniciar
Después de esto puede usar
@@image: 'figures/event_monitor_plugin.png'; md5=1ee2a1d281deefa5b401244b49ed9654
4. Complemento Monitor de eventos
Monitorizar eventos accesibles cuando ocurren
Complemento Monitor de eventos
El complemento «Monitor de eventos» le permite ver los
El complemento Monitor de eventos le permite ver los eventos AT-SPI y asociarlos con widgets accesibles.
Ejecutar el complemento Monitor de eventos
Cuando abre el complemento del Monitor de eventos, verá una lista de casillas de verificación representando todas las clases diferentes de AT-SPI que el complemento cubre:
documento
foco
ratón
objeto
terminal
ventana
Si selecciona una clase, el complemento monitorizará todos sus tipos de eventos. Las clases se exponen como estructuras en árbol; por ello, puede refinar su selección expandiéndolas y seleccionando solo los tipos de eventos que realmente le importan.
Si quiere monitorizar todos los tipos posibles de eventos AT-SPI, pulse el botón
Seleccionar sólo unos pocos tipos de eventos para monitorizar proporciona una salida más limpia.
Otra forma de refinar la monitorización de eventos es a través del origen del evento. De forma predeterminada la opción
Después de seleccionar los tipos de evento y especificar una opción para la fuente, el complemento de monitorización de eventos comienza automáticamente a monitorizar los eventos AT-SPI, ya que el botón
Para cada evento entrante, el complemento del Monitor de eventos indica la fuente y la aplicación. Activar el enlace para alguno de esos elementos hará que se seleccione en la vista en árbol de la aplicación.
Si quiere guardar la salida generada por el complemento de Monitor de eventos, simplemente pulse el botón
@@image: 'figures/tree_view_accerciser.png'; md5=08296541e21b96951e1f1b4d99ca130b
1. Vista en árbol de la aplicación
Explorar la jerarquía accesible del escritorio
Vista en árbol de la aplicación
La interfaz de
La vista en árbol de la aplicación de
El primer nodo de cada aplicación representada en esta vista de árbol es la aplicación en sí. Cuando expande un nodo puede ver todos sus widgets hijos, lo que permite una vista jerárquica de la interfaz de la aplicación. Para cada nodo,
Tenga en cuenta que los nodos con muchos hijos puede tardar en expandirse.
Marcar elementos en la vista en árbol de la aplicación

Los marcadores a accesibles en
@@image: 'figures/api_browser.png'; md5=47cae67d29c708139b9740d06fd2521e
1. Complemento Examinador API
Verificar interfaces, métodos y propiedades
Complemento Examinador API
Dado un «widget» accesible seleccionado en la
El complemento Examinador API le permite verificar interfaces, métodos y propiedades soportados por el widget accesible objetivo en la aplicación.
Ejecutar el complemento Examinador API
Para ejecutar el complemento Examinador API, seleccione un «widget» accesible en la Vista en árbol de la aplicación. Pulsar dos veces sobre un «widget» lo resalta en la interfaz de la aplicación, de tar forma que puede estar seguro del «widget» que está buscando.
Después de ello, seleccione una de las interfaces del «widget» en la caja combinada. Se listarán, en la columna de la izquierda del complemento, todos los métodos públicos de la interfaz seleccionada. Se listarán, en la columna de la derecha del complemento, todas las propiedades públicas, con sus correspondientes valores.
De manera predeterminada, el complemento «Examinador API» oculta los métodos y las propiedades privadas. Para listarlos, desmarque la casilla
Daniel Mustieles <daniel\.mustieles\@gmail\.com>, 2011
Jorge González <jorgegonz\@svn\.gnome\.org>, 2007-2011
Manual de
2006
2007
2008
IBM Corporation
Proyecto de documentación de GNOME
Eitan
Equipo de Accerciser
Peter
Manual de Accerciser v0.2.0
2007-06-29
Eitan Isaacson
Este manual describe la versión 0.1.5 de Accerciser.
Este manual describe el uso de
Comentarios
Para informar de un fallo, o hacer alguna sugerencia concerniente a la aplicación
Introducción
En esencia,
Puede iniciar
Menú
Elija el elemento del menú
Línea de comandos
Escriba el siguiente comando en una ventana de consola y después pulse
Se mostrará la siguiente ventana cuando inicie
Muestra la ventana principal de
Barra de menú
La barra de menú contiene comandos para gestionar los complementos, gestionar y usar los marcadores, refrescar la vista de árbol accesible y acceder a este sistema de ayuda.
Vista de árbol accesible
La vista de árbol accesible le permite ver todos los accesibles, comenzando por el nivel del escritorio. Seleccionar un accesible lo hace disponible para futuras inspecciones usando los complementos cargados.
Vista derecha de complemento
Esta es una de las dos vistas de complemento predeterminadas. Cuando
Vista inferior de complemento
Puede arrastrar complementos a o desde esta área igual que en la vista derecha de complemento.
Gestión de la vista de complementos

Uso
Puede usar
Seleccione un accesible a través de la ventana de árbol.
Use la vista en árbol para navegar por la jerarquía de objetos accesibles originarios del escritorio. Desplegar un nodo del árbol revela sus hijos inmediatos mientras que plegarlo los oculta. Cada nodo muestra un icono para su aplicación asociada o el rol del widget y, si está disponible, su nombre accesible. La segunda columna lista el número de nodos que se mostrarán si el elemento de despliega.
Uso de los marcadores
Los marcadores se pueden gestionar accediendo al diálogo de edición de marcadores a través de

Este complemento muestra información acerca de los interfaces disponibles para el accesible de vista de árbol seleccionado. Los interfaces no soportados se sombrean. Bajo cada expansor hay disponibles varios instrumentos para ver y controlar un interfaz.
Los interfaces que están soportados por el accesible seleccionado se mostrarán como sensitivos.
Este complemento monitoriza los tipos de eventos seleccionados desde la vista en árbol accesible, desde la aplicación de vista en árbol o de todo el escritorio.
La parte inferior de la ventana del monitor de eventos le permite seleccionar el tipo y la fuente de los eventos.
Presionando
Este complemento es una consola
El examinador API.
Script grabador
El script grabador de
Script grabador
Es script grabador.
Este complemento proporciona combinaciones de teclas globales para permitir una rápida selección de los accesibles a través del IU de la aplicación objetivo. Al pulsar
Validación
Este complemento comprueba los problemas de accesibilidad de las aplicaciones y genera un informe incluyendo la gravedad y la descripción de los problemas. El informe enlaza los errores con la documentación acerca de cómo solucionar los problemas comunes. El complemento es extensible con esquemas de prueba que definen reglas de validación.
Para ejecutar el validador, seleccione un elemento en el árbol de accesibilidad. El complemento comprobará el accesible seleccionado y todos sus descendientes. Después seleccione un esquema que usar para la comprobación. A continuación pulse el botón
La tabla de informe mostrará la gravedad y descripción de todos los errores cuando termine la comprobación. Pulse dos veces sobre una fila de la tabla para mostrar el accesible asociado en el árbol. Con un elemento seleccionado, pulse el botón
Hay algunos elementos en
Disposición de complementos
Hay dos métodos para configurar la disposición de los complementos en
Puede querer evitar el diálogo
Configuración global de teclas rápidas
Algunos elementos en
Eitan Isaacson (
Para informar de un fallo, o hacer alguna sugerencia concerniente a esta aplicación o este manual, siga las indicaciones en este
Se permiten la redistribución y uso en formas binaria y fuentes, con o sin modificación bajo los términos de la licencia BSD.