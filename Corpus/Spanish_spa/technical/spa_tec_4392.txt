# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# ISO_6393:	spa
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manual de PHP
Anterior
Siguiente
Para interpretar un archivo, php símplemente interpreta el texto del archivo hasta que encuentra uno de los carácteres especiales que delimitan el inicio de código PHP.
El intérprete ejecuta entonces todo el código que encuentra, hasta que encuentra una etiqueta de fin de código, que le dice al intérprete que siga ignorando el código siguiente.
Este mecanismo permite embeber código PHP dentro de HTML: todo lo que está fuera de las etiquetas PHP se deja tal como está, mientras que el resto se interpreta como código.
Hay cuatro conjuntos de etiquetas que pueden ser usadas para denotar bloques de código PHP.
De estas cuatro, sólo 2 (?php...? y script language="php "... / script) están siempre disponibles; el resto pueden ser configuradas en el fichero de php.ini para ser o no aceptadas por el intérprete.
Mientras que el formato corto de etiquetas (short-form tags) y el estilo ASP (ASP-style tags) pueden ser convenientes, no son portables como la versión de formato largo de etiquetas.
Además, si se pretende embeber código PHP en XML o XHTML, será obligatorio el uso del formato ?php...? para la compatibilidad con XML.
Las etiquetas soportadas por PHP son:
Ejemplo 6-1.
Formas de escapar de HTML
1. ?php echo( "si quieres servir documentos XHTML o XML, haz como aqu iacute;\n");?
2.? echo ("esta es la m aacute;s simple, una instrucci oacute;n de procesado SGML \n");? ?= expression?
Esto es una abreviatura de "? echo expression?" 3. script language="php "echo ("muchos editores (como FrontPage) no aceptan instrucciones de procesado"); / script 4.% echo ("Opcionalmente, puedes usar las etiquetas ASP");% %= $variable; # Esto es una abreviatura de"% echo... "%
El método primero, ?php...?, es el más conveniente, ya que permite el uso de PHP en código XML como XHTML.
El método segundo no siempre está disponible.
El formato corto de etiquetas está disponible con la función short_tags() (sólo PHP 3), activando el parámetro del fichero de configuración de PHP short_open_tag, o compilando PHP con la opción --enable-short-tags del comando configure.
Aunque esté activa por defecto en php.ini-dist, se desaconseja el uso del formato de etiquetas corto.
El método cuarto sólo está disponible si se han activado las etiquetas ASP en el fichero de configuración: asp_tags.
Nota:
El soporte de etiquetas ASP se añadió en la versión 3.0.4.
Nota:
No se debe usar el formato corto de etiquetas cuando se desarrollen aplicaciones o librerías con intención de redistribuirlas, o cuando se desarrolle para servidores que no están bajo nuestro control, porque puede ser que el formato corto de etiquetas no esté soportado en el servidor.
Para generar código portable y redistribuíble, asegúrate de no usar el formato corto de etiquetas.
La etiqueta de fin de bloque incluirá tras ella la siguiente línea si hay alguna presente.
Además, la etiqueta de fin de bloque lleva implícito el punto y coma; no necesitas por lo tanto añadir el punto y coma final de la última línea del bloque PHP.
PHP permite estructurar bloques como:
Ejemplo 6-2.
Métodos avanzados de escape

Anterior
Inicio
Siguiente
Referencia del Lenguaje
Subir
Separación de instrucciones