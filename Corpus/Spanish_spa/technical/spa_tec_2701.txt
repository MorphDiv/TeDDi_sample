# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# iso639_3:	spa
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manual de PHP
Anterior
Capítulo 12.
Estructuras de Control
Siguiente
PHP4 (PHP3 no) incluye una construcción foreach, tal como perl y algunos otros lenguajes.
Esto simplemente da un modo fácil de iterar sobre arrays.
Hay dos sintaxis; la segunda es una extensión menor, pero útil de la primera:
foreach( expresion_array as $value) sentencia foreach(expresion_array as $key = $value) sentencia
La primera forma recorre el array dado por expresion_array.
En cada iteración, el valor del elemento actual se asigna a $value y el puntero interno del array se avanza en una unidad (así en el siguiente paso, se estará mirando el elemento siguiente).
La segunda manera hace lo mismo, salvo que la clave del elemento actual será asignada a la variable $key en cada iteración.
Nota:
Cuando foreach Cuando foreach comienza su primera ejecución, el puntero interno a la lista (array) se reinicia automáticamente al primer elemento del array.
Esto significa que no se necesita llamar a reset() antes de un bucle foreach.
Nota:
Hay que tener en cuanta que foreach con una copia de la lista (array) especificada y no la lista en si, por ello el puntero de la lista no es modificado como en la construcción each.
Puede haber observado que las siguientes son funcionalidades idénticas:
reset( $arr); while (list (, $value) = each ($arr)) {echo "Valor: $value br \n";} foreach ($arr as $value) {echo "Valor: $value br \n";}
reset( $arr); while (list ($key, $value) = each ($arr)) {echo "Key: $key; Valor: $value br \n";} foreach ($arr as $key = $value) {echo "Key: $key; Valor: $value br \n";}
Algunos ejemplos más para demostrar su uso:
/* foreach ejemplo 1: sólo valor* / $a = array( 1, 2, 3, 17); foreach($a as $v) {print "Valor actual de \$a: $v.\n";} / * foreach ejemplo 2: valor (con clave impresa para ilustrar) * / $a = array(1, 2, 3, 17); $i = 0; / * sólo para propósitos demostrativos * / foreach($a as $v) {print "\$a[$i] = $k.\n";} / * foreach ejemplo 3: clave y valor * / $a = array ("uno "= 1, "dos" = 2, "tres "= 3, "diecisiete" = 17); foreach($a as $k = $v) {print "\$a[$k] = $v.\n";}
Anterior
Inicio
Siguiente

Subir
