# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# ISO_6393:	spa
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Función Format [Ejecución]
/text/sbasic/shared/03120301.xhp
Sun Microsystems, Inc.
converted from old format - fpe
Format;función
Función Format [Ejecución]
Convierte un número en una cadena y después le da formato de acuerdo con las especificaciones indicadas.
Sintaxis:
Format (Número [, Formato As String])
Valor de retorno:
Cadena
Parámetros:
Número:
Expresión numérica que se desee convertir en cadena con formato.
Formato:
Cadena que especifique el código de formato para el número.
Si se omite este parámetro, la función Format actúa como la función
Str
.
Códigos de formato
La lista siguiente describe los códigos que permiten dar formato a un número:
0:
Si
Número
tiene un dígito en la posición del 0 en el código de formato, se muestra aquél, en caso contrario se muestra el valor cero.
Número
tiene menos dígitos que el número de ceros del código de formato (a cualquier lado del decimal), se muestran ceros de relleno al principio o al final.
Si el número tiene más dígitos a la izquierda del separador decimal que la cantidad de ceros que hay en el código de formato, los dígitos adicionales se muestran sin modificarse.
Format
.
#:
Si
Número
contiene un dígito en la posición del comodín # del código de
Format
, el dígito se muestra, en caso contrario no se muestra nada en esa posición.
Este símbolo funciona como 0, excepto porque los ceros de relleno anteriores o posteriores no se muestran si hay más caracteres # en el código de formato que dígitos tiene el número.
Sólo se muestran los dígitos pertinentes del número.
.:
El comodín para decimales determina el número de espacios decimales a izquierda y derecha del separador decimal.
Si el código de formato sólo contiene comodines # a la izquierda de este símbolo, los números menores que 1 empiezan con un separador decimal.
Para que se muestre siempre un cero de relleno con números fraccionarios, use 0 como comodín para el primer dígito de la izquierda del separador decimal.
%:
Multiplica el número por 100 e inserta el signo de porcentaje (%) en la posición en que éste aparece en el código de formato.
E- E+ e- e+ :
Si el código de formato contiene por lo menos un comodín de dígito (0 o #) a la derecha del símbolo E-, E+, e- o e+, al número se le aplica el formato científico o exponencial.
Las letras E o e se insertan entre el número y el exponente.
El número de comodines para dígitos a la derecha del símbolo determina el número de dígitos en el exponente.
Si el exponente es negativo, se muestra un signo menos justo antes de un exponente con E-, E+, e-, e+.
Si el exponente es positivo, sólo se muestra un signo más antes de exponentes con E+ o e+.
El delimitador de miles se muestra si el código de formato contiene el delimitador incluido por los comodines de dígitos (0 o #).
El uso de un punto como separador de miles y decimal depende del valor de configuración regional.
El carácter real que se muestra como separador decimal depende del formato numérico de la configuración del sistema.
Los ejemplos que se muestran aquí asumen que la configuración regional es &quot; US &quot; .
- + $ ( ) espacio :
Los signos más (+), menos (-), dólar ($), espacio o paréntesis que se introducen directamente en el código del formato se muestran como caracteres literales.
Para que se muestren caracteres distintos de los que se listan aquí, es necesario precederlos por una barra oblicua inversa (\) o incluirlos entre comillas ( &quot; &quot; ).
\ :
La barra oblicua inversa muestra el carácter siguiente del código del formato.
Los caracteres del código de formato que tienen un significado especial sólo pueden mostrarse como literales si están precedidos por una barra oblicua inversa.
La propia barra oblicua inversa no puede mostrarse a menos que se introduzca dos veces (\\) en el código de formato.
Los caracteres que deben precederse por una barra oblicua inversa en el código de formato para que se muestren como caracteres literales son: caracteres de formato de hora y fecha (a, c, d, h, m, n, p, q, s, t, w, y, /, :), caracteres de formato numérico (#, 0, %, E, e, coma, punto) y caracteres de formato de cadena (@, & , < , > , !).
También se puede usar los formatos numéricos predefinidos siguientes.
Excepto para &quot; General Number &quot; todos los códigos de formato predefinidos devuelven el número con dos espacios decimales.
Si se usan formatos predefinidos, el nombre del formato debe incluirse entre comillas.
Formatos predefinidos
General Number:
Los números se muestran tal como se han introducido.
Currency:
Inserta un signo de dólar delante del número e incluye los números negativos entre paréntesis.
Fixed:
Muestra al menos un dígito delante del separador decimal.
Standard:
Muestra números con un separador de miles.
Percent:
Multiplica el número por 100 y le añade un signo de porcentaje.
Scientific:
Muestra números en formato científico (por ejemplo, 1,00E+03 para 1000).
Un código de formato puede dividirse en tres secciones que se separan por caracteres de punto y coma.
La primera parte define el formato para valores positivos, la segunda para valores negativos y la tercera para cero.
Si sólo se especifica un código de formato, se aplica a todos los números.
Ejemplo:
Sub EjemploFormat
MsgBox Format(6328.2, &quot; ##,##0.00 &quot; )
REM Utilice siempre el punto como delimitador de decimales al introducir números en el código fuente de Basic.
REM por ejemplo, muestra 6,328.20 en entorno local inglés y 6.328,20 en entorno local alemán
End Sub