# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# iso639_3:	spa
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	PHP
# source:	https://object.pouta.csc.fi/OPUS-PHP/v1/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/PHP.php
# copyright_long:	http://opus.nlpl.eu/PHP.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Manual de PHP
Anterior
Siguiente
Las expresiones regulares se usan en PHP para manipular cadenas complejas.
Las funciones que soportan expresiones regulares son:





Ejemplo 1.
Ejemplos de expresiones regulares
ereg( "abc",$string); / * Devuelve true si "abc "se encuentra en $string. * / ereg("^abc",$string); / * Devuelve true si "abc" se encuentra al comienzo de $string. * / ereg("abc$",$string); / * Devuelve true si "abc "se encuentra al final de $string. * / eregi("(ozilla .[23]|MSIE.3)",$HTTP_USER_AGENT); / * Devuelve true si el navegador cliente es Netscape 2, 3 o MSIE 3. * / ereg("([[:alnum :]]+) ([[:alnum :]]+) ([[:alnum :]]+)", $string,$regs); / * Pone tres palabras separadas por espacios en $regs[1], $regs[2] y $regs[3]. * / $string = ereg_replace("^"," BR ",$string); / * Coloca la etiqueta BR al comienzo de $string. * / $string = ereg_replace("$", "BR ",$string); / * Coloca la etiqueta BR al final de $string. * / $string = ereg_replace("\n" ,"",$string); / * Elimina los caracteres fin-de-l√≠nea de $string. * /
Anterior
Inicio
Siguiente

Subir
