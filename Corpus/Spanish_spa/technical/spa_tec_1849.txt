# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# iso639_3:	spa
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Instrucción Dim [Ejecución]
/text/sbasic/shared/03102100.xhp
Sun Microsystems, Inc.
converted from old format - fpe
Dim;instrucción
matrices;dimensionamiento
dimensionamiento;matrices
Instrucción Dim [Ejecución]
Declara una variable o una matriz.
Si las variables están separadas por comas (por ejemplo, DIM sPar1, sPar2, sPar3 AS STRING), sólo pueden definirse variables variantes.
Use una línea de definición separada para cada variable.
DIM sPar1 AS STRING
DIM sPar2 AS STRING
DIM sPar3 AS STRING
Dim declara variables locales dentro de subrutinas.
Las variables globales se declaran con la instrucción PUBLIC o PRIVATE.
Sintaxis:
[ReDim]Dim NombreVar [(inicio To final)] [As TipoVar][, NombreVar2 [(inicio To final)] [As TipoVar][,...]]
Parámetros:
NombreVar:
Cualquier nombre de variable o de matriz.
Inicio, Final:
Valores numéricos o constantes que definen el número de elementos (NúmeroElementos=(final-inicio)+1) y el rango del índice.
Inicio y Final pueden ser expresiones numéricas si se aplica ReDim a nivel de prodecimiento.
TipoVar:
Palabra clave que declara el tipo de datos de una variable.
Palabra clave:
Tipo de variable
Lógico:
Variable lógica (True, False)
Moneda:
Variable de moneda (Moneda con 4 posiciones decimales)
Fecha:
Variable de fecha
Doble:
Variable de precisión doble y coma flotante (1,79769313486232 x 10E308 - 4,94065645841247 x 10E-324)
Entero:
Variable entera (-32768 - 32767)
Largo:
Variable larga (-2.147.483.648 -2.147.483.647)
Objeto:
Variable de objeto (Nota: esta variable sólo puede definirse a partir de este momento con la instrucción Set).
Simple:
Variable de precisión simple y coma flotante (3,402823 x 10E308 -1,401298 x 10E-45).
Cadena:
Variable de cadena que se compone de un máximo de 64.000 caracteres ASCII.
[Variante]:
Tipo de variable variante (contiene todos los tipos, especificada por definición).
Si no se especifica ninguna palabra clave, las variables se definen automáticamente como de tipo variante, a menos que se use una instrucción desde DefBool a DefVar.
En $[officename] Basic no es necesario declarar variables explícitamente.
Sin embargo, es necesario declarar las matrices antes de poder usarlas.
Puede declarar una variable con la instrucción Dim, usando comas para separar múltiples declaraciones.
Para declarar un tipo de variable, escriba un carácter de declaración de tipo seguido del nombre o use la palabra clave correspondiente.
$[officename] Basic admite matrices de una o varias dimensiones, definidas por un tipo de variable especificado, que resultan útiles si el programa contiene listas o tablas que se desea editar.
La ventaja de las matrices es que es posible acceder a elementos individuales utilizando índices, los cuales pueden formularse como expresiones o variables numéricas.
Las matrices se declaran con la instrucción Dim.
Existen dos métodos para definir el rango de índices:
DIM texto(20) as String REM 21 elementos numerados del 0 al 20
DIM texto(5 to 25) as String REM 21 elementos numerados del 5 al 25
DIM texto(-15 to 5) as String REM 21 elementos (incluido el 0)
REM numerados del -15 al 5
Campos de datos bidimensionales
DIM texto(20,2) as String REM 63 elementos; del 0 al 20 en el nivel 1, de 0 al 20 en el nivel 2 y de 0 al 20 en el nivel 3.
Puede declarar un tipo de matriz como dinámica si una instrucción ReDim define el número de dimensiones en la subrutina o la función que contenga la matriz.
Normalmente las dimensiones de la matriz sólo se pueden definir una vez y posteriormente ya no pueden modificarse.
Dentro de una subrutina las matrices pueden declararse con ReDim.
Las dimensiones sólo pueden definirse con expresiones numéricas.
Ello asegura que los campos no superen la magnitud necesaria.
Ejemplo:
Sub EjemploDim1
Dim sVar As String
Dim iVar As Integer
sVar = &quot; Star Office &quot;
End Sub
Sub EjemploDim2
REM Campo de datos bidimensional
Dim stexto(20,2) as String
Const sDim as String = &quot; Dimensión: &quot;
for i = 0 to 20
for ii = 0 to 2
stexto(i,ii) = str(i) & sDim & str(ii)
next ii
next i
for i = 0 to 20
for ii = 0 to 2
msgbox stexto(i,ii)
next ii
next i
End Sub