# language_name_wals:	Spanish
# language_name_glotto:	Spanish
# ISO_6393:	spa
# year_composed:	NA
# year_published:	NA
# mode:	written
# genre_broad:	technical
# genre_narrow:	NA
# writing_system:	Latn
# special_characters:	NA
# short_description:	OpenOffice
# source:	https://object.pouta.csc.fi/OPUS-OpenOffice/v3/raw/es.zip
# copyright_short:	http://opus.nlpl.eu/OpenOffice.php
# copyright_long:	http://opus.nlpl.eu/OpenOffice.php J. Tiedemann, 2012, Parallel Data, Tools and Interfaces in OPUS. In Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC 2012)
# sample_type:	whole
# comments:	NA

Diseño de consulta
/text/shared/explorer/database/02010100.xhp
vistas;crear vistas de bases de datos (Base)
consultas; crear en vista de diseño (Base)
diseñar; consultas (Base)
vista de diseño; consultas/vistas (Base)
unir;tablas (Base)
tablas de bases de datos; unir para consultas (Base)
consultas; unir tablas (Base)
tablas de bases de datos; relaciones (Base)
relaciones; unir tablas (Base)
consultas; eliminar vínculos de tablas (Base)
criterios de diseño de consultas (Base)
consultas; formular condiciones de filtro (Base)
condiciones de filtro;en consultas (Base)
parámetros; consultas (Base)
consultas; consultas de parámetros (Base)
SQL; consultas (Base)
SQL nativo (Base)
mw added &quot; (Base) &quot; to all entries
Diseñar consulta
Diseño de consulta
permite la creación y edición de consultas de bases de datos.
La mayoría de las bases de datos utilizan consultas para filtrar u ordenar las tablas de bases de datos para que muestren los registros en el equipo.
Las vistas proporcionan las mismas funciones que las consultas, pero en el servidor.
Si la base de datos se encuentra en un servidor que admite vistas, puede utilizar dichas vistas para filtrar los registros del servidor a fin de acelerar el tiempo de visualización.
Crear vista
de la ficha
Tablas
de un documento de base de datos, verá la ventana
Diseño de vista
que es similar a la ventana
Diseño de consulta
que se describe aquí.
Cuando se crea una consulta se conserva la estructura de la ventana de Diseño de consultas, lo cual no sucede cuando se crea una vista.
La vista Diseño
Consultas
de un documento de base de datos y, a continuación, haga clic en
Crear consulta en vista Diseño
.
definen
en el panel inferior de la vista Diseño.
Para definir una consulta, especifique los
nombres de campos
de la base de datos que se deben incluir, así como los
criterios
de visualización de los campos.
Para reorganizar las columnas en el panel inferior de la vista Diseño, arrastre el encabezado a una nueva posición, o seleccione la columna y pulse las teclas
Ctrl
Ctrl
+ tecla de cursor.
iconos
de las barras
Diseño de consulta
y
Diseño
.
Si desea probar una consulta, haga doble clic en el nombre de la consulta en el documento de base de datos.
El resultado de la consulta se muestra en una tabla similar a la vista de origen de datos.
Nota: la tabla que se muestra es temporal.
Teclas de la vista Diseño de consulta
Tecla
Función
F4
Vista previa
F5
Ejecutar consulta
F7
Agregar tabla o consulta
Seleccionar tablas
Agregar tablas
para crear una consulta nueva
.
Se abrirá un diálogo en el que deberá seleccionar la tabla en la que se basará la consulta.
Haga doble clic en los campos para agregarlos a la consulta.
Arrastre y coloque para definir relaciones.
Durante el diseño de una consulta no es posible modificar las tablas seleccionadas.
Borrar tablas
Borrar
borrará la tabla de la vista de diseño.
Otra opción es pulsar la tecla (Supr).
Desplazar tablas y modificar su tamaño
Las tablas y su tamaño pueden definirse a voluntad.
Para desplazar una tabla se pulsa con el ratón el margen superior y se lleva a la posición deseada.
Para aumentar o disminuir el tamaño de presentación, arrastre el borde hacia una de las esquinas.
Relaciones entre tablas
Las relaciones de datos que pueden haber entre un nombre de campo de una tabla y uno de otra tabla pueden utilizarse para las consultas.
Si, por ejemplo, dispone de una hoja de cálculo de artículos identificados mediante un número de artículo y una hoja de cálculo de clientes en la que se registran todos los artículos pedidos por un cliente mediante el número de artículo correspondiente, entonces existe una relación entre los campos de datos &quot; número de artículo &quot; .
Si desea crear una consulta que devuelva todos los artículos pedidos por un cliente, deberá recuperar datos de dos hojas de cálculo.
Para ello deberá indicar a $[officename] cuál es la relación entre los datos contenidos en ambas hojas.
Para hacerlo, pulse un campo de datos de una tabla (p. ej. el campo de datos &quot; Referencia &quot; de la tabla de clientes) y, con la tecla del ratón pulsada, arrástrelo al campo de datos de la otra tabla ( &quot; Referencia &quot; de la tabla de artículos).
Cuando suelte el botón del ratón, se muestra una línea que vincula los dos campos en las dos ventanas.
La condición de que el contenido de los dos campos de datos debe ser idéntico se introduce en la consulta SQL resultante.
Sólo se puede crear una consulta basada en varias hojas relacionadas si se utiliza $[officename] como interfaz para una base de datos relacional.
En una consulta no es posible acceder a tablas de bases de datos distintas.
Las consultas de varias tablas sólo pueden crearse dentro de una misma base de datos.
Definir el tipo de vínculo
Insertar - Relación nueva
, se puede especificar el tipo de vínculo en el diálogo
Relaciones
.
Edita Propiedades de Conexión .
Como alternativa, presione Tabulador hasta que la línea se seleccione, luego presione MAYUSCULA+F10 para mostrar el menú contextual donde debe seleccionar
Editar
.
Algunas bases de datos solo soportan un subconjunto de posibles tipos de conexión.
Eliminar relaciones
Para eliminar los vínculos entre dos tablas, seleccione con el ratón la línea de vínculo y pulse la tecla (Supr).
Campos usados
en el diálogo
Relaciones
.
O puede pulsar el tabulador hasta que el vector de conexión quede destacado y luego pulsar Mayús+F10 para abrir el menú contextual y seleccionar la orden
Borrar
.
Definir una consulta
Seleccione condiciones para definir la consulta.
Cada columna de la tabla de diseño acepta un campo de datos para la consulta.
Las condiciones de una fila se vinculan con una expresión lógica Y.
Definir campo de datos
Seleccione en primer lugar todos los nombres de campo de las tablas que desee agregar a la consulta.
Para ello utilice la técnica de arrastrar y soltar o haga una doble pulsación en los nombres de campo de la ventana de la tabla.
Mediante arrastrar y soltar, utilice el ratón para arrastrar un nombre de campo de la ventana de la tabla al área inferior de la ventana de diseño de consulta.
Al hacerlo puede decidir en qué columna desea agregar el campo.
Seleccione un nombre de campo haciendo una doble pulsación en él.
Se agregará a la siguiente columna libre.
Eliminar nombres de campos
Eliminar
del menú contextual de la columna.
Guardar consulta
Guardar
de la barra Estándar.
Un diálogo solicita la asignación de un nombre para la consulta.
Si la base de datos admite esquemas, también se puede especificar un esquema.
Esquema
Escriba el nombre del esquema que se ha asignado a la consulta o vista de tabla.
Nombre de la consulta / vista de tabla
Escriba el nombre de la vista de tabla o consulta.
Filtrado de datos
Para filtrar los datos de la consulta, establezca las preferencias deseadas en el área inferior de la vista Diseño.
Dispone de las siguientes líneas:
Campo
Escriba el nombre del campo de datos al que hace referencia en la consulta.
Los parámetros de las filas inferiores hacen referencia a este campo.
Si activa una celda pulsando en ella con el ratón verá un botón de flecha que le permitirá seleccionar un campo.
La opción &quot; Nombre de tabla.* &quot; selecciona todos los campos de datos y los criterios son válidos para todos los campos de la tabla.
Alias
Especifica un alias.
Este alias se mostrará en la consulta en lugar del nombre de campo.
De esta forma se pueden emplear etiquetas de columna definidas por el usuario.
Por ejemplo, si el campo de datos se denomina NºRef. y desea que en la consulta aparezca NúmRef., escriba NúmRef. como alias.
En SQL los alias se definen como se muestra a continuación:
SELECT column AS alias FROM table.
Por ejemplo:
SELECT &quot; Ref. &quot; AS Referencia FROM &quot; Artículos &quot;
Tabla
Aquí se muestra la tabla de base de datos correspondiente al campo de datos seleccionado.
Si activa una celda haciendo clic en ella, se muestra una flecha que permite seleccionar otra tabla de la consulta actual.
Ordenar
Si presiona la celda, puede elegir entre las opciones de ordenamiento: ascendente, descendente y sin ordenamiento.
Los campos de texto se ordenarán alfabéticamente, los campos numéricos en orden númerico.
Para la mayoría de las bases de datos, el administrador puede definir las opciones de ordenamiento.
Visible
Visible
para un campo de datos, dicho campo se ve en la consulta
.
Si sólo se emplea un campo de datos para formular una condición, no es necesario que se muestre.
Criterios
criterios
de filtro del contenido del campo de datos.
o
Introduzca en cada fila un criterio adicional para el filtrado.
Los diferentes criterios de una columna se vinculan por una relación del tipo O.
Por otra parte, es posible introducir una fila para funciones mediante el menú contextual de los títulos de fila en el área inferior del diseño de consulta:
Funciones
Seleccione una función para ejecutarse en la consulta.
Las funciones que se puedan ejecutar dependen de la base de datos.
Función
incluye las siguientes opciones:
Opción
SQL
Efecto
Sin función
No se ejecuta ninguna función
Promedio
AVG
Calcula la media aritmética de un campo.
Count
COUNT
Determina el número de registros en la tabla.
Los campos vacíos pueden contarse (a) o no (b).
a) COUNT(*):
Si introduce un asterisco como argumento se calculan todos los registros de datos de la tabla.
b) COUNT(column):
Si introduce un campo de datos como argumento, sólo se calculan los campos cuyos campos de datos contienen un valor.
Los valores cero (campos vacíos) no se tienen en cuenta.
Maximum
MAX
Calcula el valor máximo de un campo.
Mínimo
MIN
Calcula el valor mínimo de un campo.
Sum
SUM
Calcula la suma de valores de los campos correspondientes.
Agrupar
GROUP BY
Agrupa los datos de la consulta según el campo seleccionado.
Las funciones se ejecutan según los grupos especificados.
En SQL, esta opción corresponde a la cláusula GROUP BY.
Si se agrega un criterio, esta entrada aparece en SQL HAVING.
También se pueden introducir llamadas a funciones directamente en una expresión SQL.
La sintaxis es:
SELECT FUNCTION(column) FROM table.
En SQL la función para sumar, por ejemplo, se presenta del modo siguiente:
SELECT SUM( &quot; Precios &quot; ) FROM &quot; Artículos &quot; .
Agrupar
, las funciones anteriores se conocen como funciones de Agregado.
Estas funciones permiten el cálculo de de datos para obtener resultados en forma resumida.
Además son posibles funciones que no aparecen en la cuadro de lista.
Estas dependen en el sistema de base de datos usado y el controlador utilizado por Base.
Campo
.
Alias
.
En la instrucción SQL la activación de la función se presenta con la forma siguiente:
SELECT FUNCTION() AS alias FROM table
Ejemplo:
SELECT COUNT(*) AS cantidad FROM &quot; Artículos &quot;
Al ejecutar una función no es posible añadir más columnas a la consulta, a menos que a dichas columnas se les aplique la función Agrupar.
Ejemplos
En el siguiente ejemplo se realiza una consulta en dos tablas: una tabla &quot; Artículos &quot; con el campo &quot; Referencia &quot; y otra tabla, &quot; Proveedores &quot; , con el campo &quot; nombre_proveedor &quot; .
Además, ambas tablas disponen de un campo de datos común llamado &quot; num_proveedor &quot; .
Para crear una consulta que contenga todos los proveedores que suministran más de tres artículos, es necesario seguir los pasos siguientes:
Introducir las tablas &quot; Artículos &quot; y &quot; Proveedores &quot; en el diseño de la consulta.
Relacionar los campos &quot; num_proveedor &quot; de ambas tablas, excepto si ya se ha establecido una relación entre ellas.
Función
mediante el menú contextual y seleccionar la cantidad de la función.
Introducir > 3 como criterio y ocultar el campo visible.
Haga clic dos veces en el campo &quot; nombre_proveedor &quot; de la tabla &quot; Proveedores &quot; y seleccionar la función Agrupar.
Ejecute la consulta.
Si en la tabla &quot; Artículo &quot; existe el campo &quot; Precio &quot; (precio unitario de un artículo) y &quot; Num_proveedor &quot; (proveedor del artículo), el precio medio que aplica un proveedor se calcula con la siguiente consulta:
Insertar la tabla &quot; Artículos &quot; en Diseñar consulta.
Pulsar dos veces en el campo &quot; Precio &quot; y en el campo &quot; Num_proveedor &quot; .
Función
y seleccionar la función Promedio en el campo &quot; Precio &quot; .
Opcionalmente se puede introducir el alias &quot; Promedio &quot; en la fila (sin comillas).
Seleccionar Agrupar en el campo &quot; Num_proveedor &quot; .
Ejecute la consulta.
Existen los comandos de menú y símbolos siguientes:
Funciones
Muestra u oculta una fila para seleccionar funciones.
Nombre de tabla
Muestra u oculta la fila del nombre de la tabla.
Nombre del Alias
Muestra u oculta la fila del alias.
Valores unívocos
Aplica a la consulta únicamente valores inequívocos.
Se refiere a los registros que contienen datos que aparecen varias veces en los campos seleccionados.
Si se ha seleccionado la opción
Valores inequívocos
sólo podrá ver un registro que cumpla los criterios de la consulta (DISTINCT).
En caso contrario, podrá ver todos los registros correspondientes a los criterios de la consulta (ALL).
Valores inequívocos
para especificar en la consulta que el nombre &quot; Pérez &quot; aparezca una sola vez.
Valores inequívocos
hace que la consulta utilice los campos &quot; apellido &quot; y &quot; ciudad &quot; y devuelva como resultado &quot; Pérez de Madrid &quot; una vez y &quot; Pérez de Barcelona &quot; una vez.
En SQL, esta orden corresponde al predicado DISTINCT.
Formular condiciones de filtro
Dispone de diversos operadores y órdenes para formular condiciones de filtro.
Aparte de los operadores de relación, SQL dispone de órdenes específicas para consultar el contenido de campos de base de datos.
Si utiliza dichas órdenes en la sintaxis de $[officename], $[officename] las convertirá automáticamente a la sintaxis correspondiente de SQL.
También puede introducir la orden SQL directamente.
En las tablas siguientes se ofrece un resumen de los operadores y órdenes:
Operador
Significado
La condición se cumple si...
=
equal to
... el contenido del campo es idéntico a la expresión introducida.
=
; al introducir un valor sin operador, se adopta el operador
=
.
< >
not equal to
... el contenido del campo no se corresponde con la expresión introducida.
>
greater than
... el contenido del campo es mayor que la expresión introducida.
<
less than
... el contenido del campo es menor que la expresión introducida.
> =
greater than or equal to
... el contenido del campo es idéntico o mayor que la expresión introducida.
< =
less than or equal to
... el contenido del campo es menor o igual que la expresión introducida.
Comando de $[officename]
Comando SQL
Significado
La condición se cumple si...
IS EMPTY
IS NULL
es nulo
... el campo de datos está vacío.
En los campos Sí/No con tres estados, este comando solicita el estado indefinido (ni Sí, ni No).
IS NOT EMPTY
IS NOT NULL
is not empty
... el campo de datos no está vacío.
LIKE
(placeholder * para un número cualquiera de caracteres
placeholder ? para exactamente un carácter)
LIKE
marcadores de posición en consultas SQL
(% placeholder para cualquier número de caracteres
Placeholder _ para un carácter exactamente)
is an element of
... el campo de datos contiene la expresión introducida.
Los comodines (*) indican si la expresión x se encuentra al inicio (x*), al final (*x) o dentro del contenido del campo (*x*).
En las consultas SQL utilice % como comodín SQL y en la superficie de $[officename] puede utilizar el comodín habitual (*) del sistema de archivos.
Los comodines * o % sustituyen un número cualquiera de caracteres.
En la superficie de $[officename] se emplea como comodín para representar exactamente un solo carácter el signo de interrogación (?) y en las consultas SQL, el guión de subrayado (_).
NOT LIKE
NOT LIKE
Is not an element of
... el campo de datos no contiene la expresión introducida.
BETWEEN x AND y
BETWEEN x AND y
comprendido en el intervalo [x,y]
... el campo de datos contiene un valor comprendido entre x y y.
NOT BETWEEN x AND y
NOT BETWEEN x AND y
no comprendido en el intervalo [x,y]
... el campo de datos contiene un valor no comprendido entre x y y.
IN (a; b; c...)
Recuerde que el punto y coma sirve de separador en todas las listas de valores
IN (a, b, c...)
contains a, b, c...
... el campo de datos contiene una de las expresiones introducidas a, b, c,...
Se pueden introducir muchas expresiones; el resultado de la consulta se obtiene con un operador O.
Las expresiones a, b, c... pueden ser tanto cifras como caracteres
NOT IN (a; b; c...)
NOT IN (a, b, c...)
does not contain a, b, c...
... el campo de datos no contiene una de las expresiones introducidas a, b, c,...
= TRUE
= TRUE
tiene el valor True
... el campo de datos tiene el valor Verdadero.
= FALSE
= FALSE
tiene el valor False
... el campo de datos tiene el valor False.
Ejemplos
='Ms.'
muestra los campos de datos con el contenido &quot; Ms. &quot;
LIKE 'g?ve'
devuelve los nombres de los campos que contienen tanto &quot; dime &quot; como &quot; dame &quot; .
LIKE 'S*'
muestra los campos de datos con contenidos como &quot; Sun &quot; .
BETWEEN 10 AND 20
muestra los campos de datos con contenidos comprendidos entre los valores 10 y 20.
(Puede tratarse tanto de campos de texto y como de cifras.)
IN (1; 3; 5; 7)
muestra los campos de datos con los valores 1, 3, 5, 7.
Si, por ejemplo, el campo de datos contiene una referencia, se puede definir una consulta que muestre el artículo en cuestión con el número introducido.
NOT IN ('Perez')
muestra los campos de datos que no contienen &quot; Pérez &quot; .
campos de fecha
se representan como #Date# para identificarlos claramente como fechas.
La condición de fecha se reproducirá en la expresión SQL resultante de la siguiente forma, compatible con ODBC:
Date
{D'AAAA-MM-DD'}
Date time
{D'AAAA-MM-DD HH:MM:SS'}
Time
{D'HH:MM:SS'}
secuencias Escape
de ODBC y JDBC ya conocidas:
Date
{d 'AAAA-MM-DD'}
Time
{t 'HH:MI:SS[.SS]'} - [ ] optional
DateTime
{ts 'YYYY-MM-DD HH:MI:SS[.SS]'} - [ ] optional
Ejemplo: select {d '1999-12-31'} from world.years
Like
Secuencia de escape:
{escape 'escape-character'}
Por ejemplo: select * from Articulo where Nom_articulo like 'The *%' {escape '*'}
Este ejemplo proporciona todas las entradas en las que el nombre del artículo comienza con 'The *'.
También es posible buscar caracteres, que de lo contrario se interpretan como comodines, por ejemplo *, ?, _, % o el punto.
Outer Join
Secuencia de escape:
{oj outer-join}
Por ejemplo: select articulo.* from {oj articulo LEFT OUTER JOIN pedidos ON referencia=pedidos.ANR}
Consultas en campos de texto
Para consultar el contenido de un cuadro de texto simplemente hay que definir la expresión entre comillas.
No se diferencia entre mayúsculas y las minúsculas.
Consultas en campos de fechas
También para filtrar una fecha es preciso definir la expresión entre comillas simples.
Se pueden utilizar los formatos siguientes:
AAAA-MM-DD HH:MM:SS y AAAA/MM/DD HH:MM:SS así como AAAA.MM.DD HH:MM:SS
Consulta de campos Sí/No
Para filtrar los campos Si/No de tablas dBase, use la siguiente sintaxis:
Condición
Criterio de consulta
Ejemplo
Yes
en tablas dBASE: no es igual a cualquier valor dado
=1 proporciona todos los registros de datos en los que el campo Sí/No contiene el criterio &quot; Sí &quot; o &quot; activado &quot; (casilla señalada).
No
.
=0 proporciona todos los registros de datos en los que el campo Sí/No contiene el criterio &quot; No &quot; o &quot; desactivado &quot; (casilla no señalada).
Null
IS NULL
IS NULL muestra todos los registros de datos en los que el campo Sí/No no contiene ni el criterio Sí ni el criterio No (casilla en gris).
La sintaxis depende del sistema de base de datos utilizado.
Debe tener en cuenta que los campos Sí/no se pueden definir de forma distinta (únicamente 2 estados en lugar de 3).
Consultas de parámetros
Para crear una consulta con parámetros variables deberá escribir la variable entre corchetes (=[x]).
Otra posibilidad es utilizar un signo igual seguido de dos puntos (=:x).
Cuando se ejecute la consulta, el programa mostrará un diálogo solicitando la expresión a la que se debe asignar la variable x.
Si consulta varios parámetros al mismo tiempo, el diálogo contendrá un listado con todos los parámetros y una línea de entrada junto a cada uno de ellos.
Escriba los valores, preferiblemente de arriba abajo, y pulse la tecla Intro después de cada línea.
No es posible efectuar consultas paramétricas con comodines (*, _) o caracteres especiales (por ejemplo, ?).
Si formula una consulta paramétrica y la guarda con las variables, podrá crear más tarde una consulta en la que dichas variables se sustituyan por las expresiones deseadas.
En el momento de abrir la consulta, $[officename] solicita dichas variables mediante un diálogo.
Entrada de parámetros
Entrada de parámetro
solicita las variables definidas en la consulta.
Escriba un valor para cada una de las variables de la consulta y confírmelo haciendo clic en
Aceptar
.
subformularios
, ya que éstos utilizan exclusivamente consultas en las cuales los valores resultantes se leen internamente a partir de una variable.
En la instrucción SQL una consulta de parámetros se muestra del modo siguiente:
select * from 'direcciones' where 'nombre' = :placeholder
Modo SQL
SQL son las siglas de &quot; Structured Query Language &quot; y es un lenguaje que define las instrucciones para consultar, actualizar y administrar bases de datos relacionales.
Activar o desactivar la vista Diseño
para cambiar la vista SQL, se pueden ver los comandos correspondientes a una consulta creada con anterioridad.
La consulta se puede formular directamente en código SQL.
Sin embargo, debe tenerse en cuenta que la sintaxis especial depende del sistema de base de datos que se utilice.
Diseño de consulta
.
Estas consultas deben ejecutarse en el modo SQL nativo.
Ejecutar directamente la orden SQL
en la vista SQL podrá formular una consulta no procesada por $[officename].